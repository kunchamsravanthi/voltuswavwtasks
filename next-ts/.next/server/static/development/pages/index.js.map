{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/next/dist/build/entries.js","webpack:///./node_modules/next/dist/build/is-writeable.js","webpack:///./node_modules/next/dist/build/output/index.js","webpack:///./node_modules/next/dist/build/output/log.js","webpack:///./node_modules/next/dist/build/output/store.js","webpack:///./node_modules/next/dist/build/webpack-config.js","webpack:///./node_modules/next/dist/build/webpack/plugins sync","webpack:///./node_modules/next/dist/build/webpack/plugins/all-modules-identified-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/build-manifest-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/chunk-graph-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/chunk-names-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/dll-import.js","webpack:///./node_modules/next/dist/build/webpack/plugins/hashed-chunk-ids-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/next-drop-client-page-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/next-esm-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/nextjs-require-cache-hot-reloader.js","webpack:///./node_modules/next/dist/build/webpack/plugins/nextjs-ssr-import.js","webpack:///./node_modules/next/dist/build/webpack/plugins/nextjs-ssr-module-cache.js","webpack:///./node_modules/next/dist/build/webpack/plugins/pages-manifest-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/react-loadable-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/serverless-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/shared-runtime-plugin.js","webpack:///./node_modules/next/dist/build/webpack/plugins/terser-webpack-plugin/src sync","webpack:///./node_modules/next/dist/build/webpack/plugins/terser-webpack-plugin/src/TaskRunner.js","webpack:///./node_modules/next/dist/build/webpack/plugins/terser-webpack-plugin/src/index.js","webpack:///./node_modules/next/dist/build/webpack/plugins/terser-webpack-plugin/src/minify.js","webpack:///./node_modules/next/dist/build/webpack/plugins/terser-webpack-plugin/src/worker.js","webpack:///./node_modules/next/dist/build/webpack/plugins/unlink-removed-pages-plugin.js","webpack:///./node_modules/next/dist/client/dev/error-overlay/format-webpack-messages.js","webpack:///./node_modules/next/dist/compiled/resolve/index.js","webpack:///./node_modules/next/dist/compiled/text-table/index.js","webpack:///./node_modules/next/dist/compiled/unistore/unistore.js","webpack:///./node_modules/next/dist/lib/constants.js","webpack:///./node_modules/next/dist/lib/file-exists.js","webpack:///./node_modules/next/dist/lib/recursive-delete.js","webpack:///./node_modules/next/dist/lib/recursive-readdir.js","webpack:///./node_modules/next/dist/lib/verifyTypeScriptSetup.js","webpack:///./node_modules/next/dist/server sync","webpack:///./node_modules/next/dist/server/error-debug.js","webpack:///./node_modules/next/dist/server/hot-reloader.js","webpack:///./node_modules/next/dist/server/lib/error-overlay-middleware.js","webpack:///./node_modules/next/dist/server/lib/find-page-file.js","webpack:///./node_modules/next/dist/server/next-dev-server.js","webpack:///./node_modules/next/dist/server/next.js","webpack:///./node_modules/next/dist/server/on-demand-entry-handler.js","webpack:///./node_modules/node-libs-browser/mock sync ^\\.\\/.*$","webpack:///./node_modules/node-libs-browser/mock/buffer.js","webpack:///./node_modules/node-libs-browser/mock/console.js","webpack:///./node_modules/node-libs-browser/mock/dns.js","webpack:///./node_modules/node-libs-browser/mock/net.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/node-libs-browser/mock/punycode.js","webpack:///./node_modules/node-libs-browser/mock/tls.js","webpack:///./node_modules/node-libs-browser/mock/tty.js","webpack:///./node_modules/string-hash/index.js","webpack:///(webpack)-dev-middleware/index.js","webpack:///(webpack)-dev-middleware/lib/DevMiddlewareError.js","webpack:///(webpack)-dev-middleware/lib/context.js","webpack:///(webpack)-dev-middleware/lib/fs.js","webpack:///(webpack)-dev-middleware/lib/middleware.js","webpack:///(webpack)-dev-middleware/lib/reporter.js","webpack:///(webpack)-dev-middleware/lib/util.js","webpack:///(webpack)-hot-middleware/helpers.js","webpack:///(webpack)-hot-middleware/middleware.js","webpack:///(webpack)-log/src/index.js","webpack:///(webpack)-log/src/loglevel/LogLevel.js","webpack:///(webpack)-log/src/loglevel/MethodFactory.js","webpack:///(webpack)-log/src/loglevel/PrefixFactory.js","webpack:///(webpack)-log/src/loglevel/index.js","webpack:///(webpack)-sources/lib/CachedSource.js","webpack:///(webpack)-sources/lib/ConcatSource.js","webpack:///(webpack)-sources/lib/LineToLineMappedSource.js","webpack:///(webpack)-sources/lib/OriginalSource.js","webpack:///(webpack)-sources/lib/PrefixSource.js","webpack:///(webpack)-sources/lib/RawSource.js","webpack:///(webpack)-sources/lib/ReplaceSource.js","webpack:///(webpack)-sources/lib/Source.js","webpack:///(webpack)-sources/lib/SourceAndMapMixin.js","webpack:///(webpack)-sources/lib/SourceMapSource.js","webpack:///(webpack)-sources/lib/index.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/system.js","webpack:///(webpack)/lib/APIPlugin.js","webpack:///(webpack)/lib/AbstractMethodError.js","webpack:///(webpack)/lib/AmdMainTemplatePlugin.js","webpack:///(webpack)/lib/AsyncDependenciesBlock.js","webpack:///(webpack)/lib/AsyncDependencyToInitialChunkError.js","webpack:///(webpack)/lib/AutomaticPrefetchPlugin.js","webpack:///(webpack)/lib/BannerPlugin.js","webpack:///(webpack)/lib/BasicEvaluatedExpression.js","webpack:///(webpack)/lib/CachePlugin.js","webpack:///(webpack)/lib/CaseSensitiveModulesWarning.js","webpack:///(webpack)/lib/Chunk.js","webpack:///(webpack)/lib/ChunkGroup.js","webpack:///(webpack)/lib/ChunkRenderError.js","webpack:///(webpack)/lib/ChunkTemplate.js","webpack:///(webpack)/lib/CommentCompilationWarning.js","webpack:///(webpack)/lib/CommonJsStuffPlugin.js","webpack:///(webpack)/lib/CompatibilityPlugin.js","webpack:///(webpack)/lib/Compilation.js","webpack:///(webpack)/lib/Compiler.js","webpack:///(webpack)/lib/ConcurrentCompilationError.js","webpack:///(webpack)/lib/ConstPlugin.js","webpack:///(webpack)/lib/ContextExclusionPlugin.js","webpack:///(webpack)/lib/ContextModule.js","webpack:///(webpack)/lib/ContextModuleFactory.js","webpack:///(webpack)/lib/ContextReplacementPlugin.js","webpack:///(webpack)/lib/DefinePlugin.js","webpack:///(webpack)/lib/DelegatedModule.js","webpack:///(webpack)/lib/DelegatedModuleFactoryPlugin.js","webpack:///(webpack)/lib/DependenciesBlock.js","webpack:///(webpack)/lib/DependenciesBlockVariable.js","webpack:///(webpack)/lib/Dependency.js","webpack:///(webpack)/lib/DllEntryPlugin.js","webpack:///(webpack)/lib/DllModule.js","webpack:///(webpack)/lib/DllModuleFactory.js","webpack:///(webpack)/lib/DllPlugin.js","webpack:///(webpack)/lib/DllReferencePlugin.js","webpack:///(webpack)/lib/DynamicEntryPlugin.js","webpack:///(webpack)/lib/EntryModuleNotFoundError.js","webpack:///(webpack)/lib/EntryOptionPlugin.js","webpack:///(webpack)/lib/Entrypoint.js","webpack:///(webpack)/lib/EnvironmentPlugin.js","webpack:///(webpack)/lib/ErrorHelpers.js","webpack:///(webpack)/lib/EvalDevToolModulePlugin.js","webpack:///(webpack)/lib/EvalDevToolModuleTemplatePlugin.js","webpack:///(webpack)/lib/EvalSourceMapDevToolModuleTemplatePlugin.js","webpack:///(webpack)/lib/EvalSourceMapDevToolPlugin.js","webpack:///(webpack)/lib/ExportPropertyMainTemplatePlugin.js","webpack:///(webpack)/lib/ExtendedAPIPlugin.js","webpack:///(webpack)/lib/ExternalModule.js","webpack:///(webpack)/lib/ExternalModuleFactoryPlugin.js","webpack:///(webpack)/lib/ExternalsPlugin.js","webpack:///(webpack)/lib/FlagDependencyExportsPlugin.js","webpack:///(webpack)/lib/FlagDependencyUsagePlugin.js","webpack:///(webpack)/lib/FlagInitialModulesAsUsedPlugin.js","webpack:///(webpack)/lib/FunctionModulePlugin.js","webpack:///(webpack)/lib/FunctionModuleTemplatePlugin.js","webpack:///(webpack)/lib/Generator.js","webpack:///(webpack)/lib/GraphHelpers.js","webpack:///(webpack)/lib/HarmonyLinkingError.js","webpack:///(webpack)/lib/HashedModuleIdsPlugin.js","webpack:///(webpack)/lib/HotModuleReplacement.runtime.js","webpack:///(webpack)/lib/HotModuleReplacementPlugin.js","webpack:///(webpack)/lib/HotUpdateChunk.js","webpack:///(webpack)/lib/HotUpdateChunkTemplate.js","webpack:///(webpack)/lib/IgnorePlugin.js","webpack:///(webpack)/lib/JavascriptGenerator.js","webpack:///(webpack)/lib/JavascriptModulesPlugin.js","webpack:///(webpack)/lib/JsonGenerator.js","webpack:///(webpack)/lib/JsonModulesPlugin.js","webpack:///(webpack)/lib/JsonParser.js","webpack:///(webpack)/lib/LibManifestPlugin.js","webpack:///(webpack)/lib/LibraryTemplatePlugin.js","webpack:///(webpack)/lib/LoaderOptionsPlugin.js","webpack:///(webpack)/lib/LoaderTargetPlugin.js","webpack:///(webpack)/lib/MainTemplate.js","webpack:///(webpack)/lib/MemoryOutputFileSystem.js","webpack:///(webpack)/lib/Module.js","webpack:///(webpack)/lib/ModuleBuildError.js","webpack:///(webpack)/lib/ModuleDependencyError.js","webpack:///(webpack)/lib/ModuleDependencyWarning.js","webpack:///(webpack)/lib/ModuleError.js","webpack:///(webpack)/lib/ModuleFilenameHelpers.js","webpack:///(webpack)/lib/ModuleNotFoundError.js","webpack:///(webpack)/lib/ModuleParseError.js","webpack:///(webpack)/lib/ModuleReason.js","webpack:///(webpack)/lib/ModuleTemplate.js","webpack:///(webpack)/lib/ModuleWarning.js","webpack:///(webpack)/lib/MultiCompiler.js","webpack:///(webpack)/lib/MultiEntryPlugin.js","webpack:///(webpack)/lib/MultiModule.js","webpack:///(webpack)/lib/MultiModuleFactory.js","webpack:///(webpack)/lib/MultiStats.js","webpack:///(webpack)/lib/MultiWatching.js","webpack:///(webpack)/lib/NamedChunksPlugin.js","webpack:///(webpack)/lib/NamedModulesPlugin.js","webpack:///(webpack)/lib/NoEmitOnErrorsPlugin.js","webpack:///(webpack)/lib/NoModeWarning.js","webpack:///(webpack)/lib/NodeStuffPlugin.js","webpack:///(webpack)/lib/NormalModule.js","webpack:///(webpack)/lib/NormalModuleFactory.js","webpack:///(webpack)/lib/NormalModuleReplacementPlugin.js","webpack:///(webpack)/lib/NullFactory.js","webpack:///(webpack)/lib/OptionsApply.js","webpack:///(webpack)/lib/OptionsDefaulter.js","webpack:///(webpack)/lib/Parser.js","webpack:///(webpack)/lib/ParserHelpers.js","webpack:///(webpack)/lib/PrefetchPlugin.js","webpack:///(webpack)/lib/ProgressPlugin.js","webpack:///(webpack)/lib/ProvidePlugin.js","webpack:///(webpack)/lib/RawModule.js","webpack:///(webpack)/lib/RecordIdsPlugin.js","webpack:///(webpack)/lib/RemovedPluginError.js","webpack:///(webpack)/lib/RequestShortener.js","webpack:///(webpack)/lib/RequireJsStuffPlugin.js","webpack:///(webpack)/lib/ResolverFactory.js","webpack:///(webpack)/lib/RuleSet.js","webpack:///(webpack)/lib/RuntimeTemplate.js","webpack:///(webpack)/lib/SetVarMainTemplatePlugin.js","webpack:///(webpack)/lib/SingleEntryPlugin.js","webpack:///(webpack)/lib/SizeFormatHelpers.js","webpack:///(webpack)/lib/SourceMapDevToolModuleOptionsPlugin.js","webpack:///(webpack)/lib/SourceMapDevToolPlugin.js","webpack:///(webpack)/lib/Stats.js","webpack:///(webpack)/lib/SystemMainTemplatePlugin.js","webpack:///(webpack)/lib/Template.js","webpack:///(webpack)/lib/TemplatedPathPlugin.js","webpack:///(webpack)/lib/UmdMainTemplatePlugin.js","webpack:///(webpack)/lib/UnsupportedFeatureWarning.js","webpack:///(webpack)/lib/UseStrictPlugin.js","webpack:///(webpack)/lib/WarnCaseSensitiveModulesPlugin.js","webpack:///(webpack)/lib/WarnNoModeSetPlugin.js","webpack:///(webpack)/lib/WatchIgnorePlugin.js","webpack:///(webpack)/lib/Watching.js","webpack:///(webpack)/lib/WebpackError.js","webpack:///(webpack)/lib/WebpackOptionsApply.js","webpack:///(webpack)/lib/WebpackOptionsDefaulter.js","webpack:///(webpack)/lib/WebpackOptionsValidationError.js","webpack:///(webpack)/lib/buildChunkGraph.js","webpack:///(webpack)/lib/compareLocations.js","webpack:///(webpack)/lib/debug/ProfilingPlugin.js","webpack:///(webpack)/lib/dependencies/AMDDefineDependency.js","webpack:///(webpack)/lib/dependencies/AMDDefineDependencyParserPlugin.js","webpack:///(webpack)/lib/dependencies/AMDPlugin.js","webpack:///(webpack)/lib/dependencies/AMDRequireArrayDependency.js","webpack:///(webpack)/lib/dependencies/AMDRequireContextDependency.js","webpack:///(webpack)/lib/dependencies/AMDRequireDependenciesBlock.js","webpack:///(webpack)/lib/dependencies/AMDRequireDependenciesBlockParserPlugin.js","webpack:///(webpack)/lib/dependencies/AMDRequireDependency.js","webpack:///(webpack)/lib/dependencies/AMDRequireItemDependency.js","webpack:///(webpack)/lib/dependencies/CommonJsPlugin.js","webpack:///(webpack)/lib/dependencies/CommonJsRequireContextDependency.js","webpack:///(webpack)/lib/dependencies/CommonJsRequireDependency.js","webpack:///(webpack)/lib/dependencies/CommonJsRequireDependencyParserPlugin.js","webpack:///(webpack)/lib/dependencies/ConstDependency.js","webpack:///(webpack)/lib/dependencies/ContextDependency.js","webpack:///(webpack)/lib/dependencies/ContextDependencyHelpers.js","webpack:///(webpack)/lib/dependencies/ContextDependencyTemplateAsId.js","webpack:///(webpack)/lib/dependencies/ContextDependencyTemplateAsRequireCall.js","webpack:///(webpack)/lib/dependencies/ContextElementDependency.js","webpack:///(webpack)/lib/dependencies/CriticalDependencyWarning.js","webpack:///(webpack)/lib/dependencies/DelegatedExportsDependency.js","webpack:///(webpack)/lib/dependencies/DelegatedSourceDependency.js","webpack:///(webpack)/lib/dependencies/DependencyReference.js","webpack:///(webpack)/lib/dependencies/DllEntryDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyAcceptDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyAcceptImportDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyCompatibilityDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyDetectionParserPlugin.js","webpack:///(webpack)/lib/dependencies/HarmonyExportDependencyParserPlugin.js","webpack:///(webpack)/lib/dependencies/HarmonyExportExpressionDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyExportHeaderDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyExportImportedSpecifierDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyExportSpecifierDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyImportDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyImportDependencyParserPlugin.js","webpack:///(webpack)/lib/dependencies/HarmonyImportSideEffectDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyImportSpecifierDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyInitDependency.js","webpack:///(webpack)/lib/dependencies/HarmonyModulesPlugin.js","webpack:///(webpack)/lib/dependencies/HarmonyTopLevelThisParserPlugin.js","webpack:///(webpack)/lib/dependencies/ImportContextDependency.js","webpack:///(webpack)/lib/dependencies/ImportDependenciesBlock.js","webpack:///(webpack)/lib/dependencies/ImportDependency.js","webpack:///(webpack)/lib/dependencies/ImportEagerDependency.js","webpack:///(webpack)/lib/dependencies/ImportParserPlugin.js","webpack:///(webpack)/lib/dependencies/ImportPlugin.js","webpack:///(webpack)/lib/dependencies/ImportWeakDependency.js","webpack:///(webpack)/lib/dependencies/JsonExportsDependency.js","webpack:///(webpack)/lib/dependencies/LoaderDependency.js","webpack:///(webpack)/lib/dependencies/LoaderPlugin.js","webpack:///(webpack)/lib/dependencies/LocalModule.js","webpack:///(webpack)/lib/dependencies/LocalModuleDependency.js","webpack:///(webpack)/lib/dependencies/LocalModulesHelpers.js","webpack:///(webpack)/lib/dependencies/ModuleDependency.js","webpack:///(webpack)/lib/dependencies/ModuleDependencyTemplateAsId.js","webpack:///(webpack)/lib/dependencies/ModuleDependencyTemplateAsRequireId.js","webpack:///(webpack)/lib/dependencies/ModuleHotAcceptDependency.js","webpack:///(webpack)/lib/dependencies/ModuleHotDeclineDependency.js","webpack:///(webpack)/lib/dependencies/MultiEntryDependency.js","webpack:///(webpack)/lib/dependencies/NullDependency.js","webpack:///(webpack)/lib/dependencies/PrefetchDependency.js","webpack:///(webpack)/lib/dependencies/RequireContextDependency.js","webpack:///(webpack)/lib/dependencies/RequireContextDependencyParserPlugin.js","webpack:///(webpack)/lib/dependencies/RequireContextPlugin.js","webpack:///(webpack)/lib/dependencies/RequireEnsureDependenciesBlock.js","webpack:///(webpack)/lib/dependencies/RequireEnsureDependenciesBlockParserPlugin.js","webpack:///(webpack)/lib/dependencies/RequireEnsureDependency.js","webpack:///(webpack)/lib/dependencies/RequireEnsureItemDependency.js","webpack:///(webpack)/lib/dependencies/RequireEnsurePlugin.js","webpack:///(webpack)/lib/dependencies/RequireHeaderDependency.js","webpack:///(webpack)/lib/dependencies/RequireIncludeDependency.js","webpack:///(webpack)/lib/dependencies/RequireIncludeDependencyParserPlugin.js","webpack:///(webpack)/lib/dependencies/RequireIncludePlugin.js","webpack:///(webpack)/lib/dependencies/RequireResolveContextDependency.js","webpack:///(webpack)/lib/dependencies/RequireResolveDependency.js","webpack:///(webpack)/lib/dependencies/RequireResolveDependencyParserPlugin.js","webpack:///(webpack)/lib/dependencies/RequireResolveHeaderDependency.js","webpack:///(webpack)/lib/dependencies/SingleEntryDependency.js","webpack:///(webpack)/lib/dependencies/SystemPlugin.js","webpack:///(webpack)/lib/dependencies/UnsupportedDependency.js","webpack:///(webpack)/lib/dependencies/WebAssemblyExportImportedDependency.js","webpack:///(webpack)/lib/dependencies/WebAssemblyImportDependency.js","webpack:///(webpack)/lib/dependencies/WebpackMissingModule.js","webpack:///(webpack)/lib/dependencies/getFunctionExpression.js","webpack:///(webpack)/lib/formatLocation.js","webpack:///(webpack)/lib/logging/Logger.js","webpack:///(webpack)/lib/logging/createConsoleLogger.js","webpack:///(webpack)/lib/node sync ^\\.\\/.*$","webpack:///(webpack)/lib/node/NodeChunkTemplatePlugin.js","webpack:///(webpack)/lib/node/NodeEnvironmentPlugin.js","webpack:///(webpack)/lib/node/NodeHotUpdateChunkTemplatePlugin.js","webpack:///(webpack)/lib/node/NodeMainTemplate.runtime.js","webpack:///(webpack)/lib/node/NodeMainTemplateAsync.runtime.js","webpack:///(webpack)/lib/node/NodeMainTemplatePlugin.js","webpack:///(webpack)/lib/node/NodeOutputFileSystem.js","webpack:///(webpack)/lib/node/NodeSourcePlugin.js","webpack:///(webpack)/lib/node/NodeTargetPlugin.js","webpack:///(webpack)/lib/node/NodeTemplatePlugin.js","webpack:///(webpack)/lib/node/NodeWatchFileSystem.js","webpack:///(webpack)/lib/node/ReadFileCompileWasmTemplatePlugin.js","webpack:///(webpack)/lib/optimize/AggressiveMergingPlugin.js","webpack:///(webpack)/lib/optimize/AggressiveSplittingPlugin.js","webpack:///(webpack)/lib/optimize/ChunkModuleIdRangePlugin.js","webpack:///(webpack)/lib/optimize/ConcatenatedModule.js","webpack:///(webpack)/lib/optimize/EnsureChunkConditionsPlugin.js","webpack:///(webpack)/lib/optimize/FlagIncludedChunksPlugin.js","webpack:///(webpack)/lib/optimize/LimitChunkCountPlugin.js","webpack:///(webpack)/lib/optimize/MergeDuplicateChunksPlugin.js","webpack:///(webpack)/lib/optimize/MinChunkSizePlugin.js","webpack:///(webpack)/lib/optimize/MinMaxSizeWarning.js","webpack:///(webpack)/lib/optimize/ModuleConcatenationPlugin.js","webpack:///(webpack)/lib/optimize/NaturalChunkOrderPlugin.js","webpack:///(webpack)/lib/optimize/OccurrenceChunkOrderPlugin.js","webpack:///(webpack)/lib/optimize/OccurrenceModuleOrderPlugin.js","webpack:///(webpack)/lib/optimize/OccurrenceOrderPlugin.js","webpack:///(webpack)/lib/optimize/RemoveEmptyChunksPlugin.js","webpack:///(webpack)/lib/optimize/RemoveParentModulesPlugin.js","webpack:///(webpack)/lib/optimize/RuntimeChunkPlugin.js","webpack:///(webpack)/lib/optimize/SideEffectsFlagPlugin.js","webpack:///(webpack)/lib/optimize/SplitChunksPlugin.js","webpack:///(webpack)/lib/performance/AssetsOverSizeLimitWarning.js","webpack:///(webpack)/lib/performance/EntrypointsOverSizeLimitWarning.js","webpack:///(webpack)/lib/performance/NoAsyncChunksWarning.js","webpack:///(webpack)/lib/performance/SizeLimitsPlugin.js","webpack:///(webpack)/lib/util/Queue.js","webpack:///(webpack)/lib/util/Semaphore.js","webpack:///(webpack)/lib/util/SetHelpers.js","webpack:///(webpack)/lib/util/SortableSet.js","webpack:///(webpack)/lib/util/StackedSetMap.js","webpack:///(webpack)/lib/util/cleverMerge.js","webpack:///(webpack)/lib/util/createHash.js","webpack:///(webpack)/lib/util/deterministicGrouping.js","webpack:///(webpack)/lib/util/identifier.js","webpack:///(webpack)/lib/util/objectToMap.js","webpack:///(webpack)/lib/validateSchema.js","webpack:///(webpack)/lib/wasm/UnsupportedWebAssemblyFeatureError.js","webpack:///(webpack)/lib/wasm/WasmFinalizeExportsPlugin.js","webpack:///(webpack)/lib/wasm/WasmMainTemplatePlugin.js","webpack:///(webpack)/lib/wasm/WebAssemblyGenerator.js","webpack:///(webpack)/lib/wasm/WebAssemblyInInitialChunkError.js","webpack:///(webpack)/lib/wasm/WebAssemblyJavascriptGenerator.js","webpack:///(webpack)/lib/wasm/WebAssemblyModulesPlugin.js","webpack:///(webpack)/lib/wasm/WebAssemblyParser.js","webpack:///(webpack)/lib/wasm/WebAssemblyUtils.js","webpack:///(webpack)/lib/web/FetchCompileWasmTemplatePlugin.js","webpack:///(webpack)/lib/web/JsonpChunkTemplatePlugin.js","webpack:///(webpack)/lib/web/JsonpExportMainTemplatePlugin.js","webpack:///(webpack)/lib/web/JsonpHotUpdateChunkTemplatePlugin.js","webpack:///(webpack)/lib/web/JsonpMainTemplate.runtime.js","webpack:///(webpack)/lib/web/JsonpMainTemplatePlugin.js","webpack:///(webpack)/lib/web/JsonpTemplatePlugin.js","webpack:///(webpack)/lib/webpack.js","webpack:///(webpack)/lib/webworker/WebWorkerChunkTemplatePlugin.js","webpack:///(webpack)/lib/webworker/WebWorkerHotUpdateChunkTemplatePlugin.js","webpack:///(webpack)/lib/webworker/WebWorkerMainTemplate.runtime.js","webpack:///(webpack)/lib/webworker/WebWorkerMainTemplatePlugin.js","webpack:///(webpack)/lib/webworker/WebWorkerTemplatePlugin.js","webpack:///(webpack)/schemas/ajv.absolutePath.js","webpack:///./pages/index.js","webpack:///external \"@webassemblyjs/ast\"","webpack:///external \"@webassemblyjs/helper-module-context\"","webpack:///external \"@webassemblyjs/wasm-edit\"","webpack:///external \"@webassemblyjs/wasm-parser\"","webpack:///external \"acorn\"","webpack:///external \"ajv\"","webpack:///external \"ajv-keywords\"","webpack:///external \"amphtml-validator\"","webpack:///external \"ansi-colors\"","webpack:///external \"async-sema\"","webpack:///external \"autodll-webpack-plugin\"","webpack:///external \"chalk\"","webpack:///external \"chrome-trace-event\"","webpack:///external \"crypto\"","webpack:///external \"enhanced-resolve\"","webpack:///external \"enhanced-resolve/lib/AliasPlugin\"","webpack:///external \"enhanced-resolve/lib/CachedInputFileSystem\"","webpack:///external \"enhanced-resolve/lib/NodeJsInputFileSystem\"","webpack:///external \"eslint-scope\"","webpack:///external \"events\"","webpack:///external \"fork-ts-checker-webpack-plugin\"","webpack:///external \"fork-ts-checker-webpack-plugin/lib/formatter/codeframeFormatter\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"inspector\"","webpack:///external \"json-parse-better-errors\"","webpack:///external \"launch-editor\"","webpack:///external \"loader-runner\"","webpack:///external \"memory-fs\"","webpack:///external \"micromatch\"","webpack:///external \"mime\"","webpack:///external \"mkdirp\"","webpack:///external \"module\"","webpack:///external \"neo-async\"","webpack:///external \"next-server\"","webpack:///external \"next-server/constants\"","webpack:///external \"next-server/dist/lib/router/utils\"","webpack:///external \"next-server/dist/server/next-server\"","webpack:///external \"next-server/dist/server/normalize-page-path\"","webpack:///external \"next-server/dist/server/require\"","webpack:///external \"next-server/dist/server/router\"","webpack:///external \"next-server/head\"","webpack:///external \"node-libs-browser\"","webpack:///external \"node-libs-browser/mock/empty\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"querystring\"","webpack:///external \"range-parser\"","webpack:///external \"react\"","webpack:///external \"schema-utils\"","webpack:///external \"serialize-javascript\"","webpack:///external \"source-list-map\"","webpack:///external \"source-map\"","webpack:///external \"strip-ansi\"","webpack:///external \"tapable\"","webpack:///external \"terser\"","webpack:///external \"terser-webpack-plugin\"","webpack:///external \"typescript\"","webpack:///external \"url\"","webpack:///external \"util\"","webpack:///external \"uuid/v4\"","webpack:///external \"vm\"","webpack:///external \"watchpack\"","webpack:///external \"worker-farm\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\"use strict\";exports.__esModule=true;exports.createPagesMapping=createPagesMapping;exports.createEntrypoints=createEntrypoints;var _path=require(\"path\");var _querystring=require(\"querystring\");var _constants=require(\"../lib/constants\");function createPagesMapping(pagePaths,extensions){const pages=pagePaths.reduce((result,pagePath)=>{let page=`${pagePath.replace(new RegExp(`\\\\.+(${extensions.join('|')})$`),'').replace(/\\\\/g,'/')}`.replace(/\\/index$/,'');page=page==='/index'?'/':page;result[page===''?'/':page]=(0,_path.join)(_constants.PAGES_DIR_ALIAS,pagePath).replace(/\\\\/g,'/');return result;},{});pages['/_app']=pages['/_app']||'next/dist/pages/_app';pages['/_error']=pages['/_error']||'next/dist/pages/_error';pages['/_document']=pages['/_document']||'next/dist/pages/_document';return pages;}function createEntrypoints(pages,target,buildId,dynamicBuildId,config){const client={};const server={};const defaultServerlessOptions={absoluteAppPath:pages['/_app'],absoluteDocumentPath:pages['/_document'],absoluteErrorPath:pages['/_error'],distDir:_constants.DOT_NEXT_ALIAS,assetPrefix:config.assetPrefix,generateEtags:config.generateEtags,ampBindInitData:config.experimental.ampBindInitData,canonicalBase:config.canonicalBase,dynamicBuildId};Object.keys(pages).forEach(page=>{const absolutePagePath=pages[page];const bundleFile=page==='/'?'/index.js':`${page}.js`;const isApiRoute=page.match(_constants.API_ROUTE);const bundlePath=(0,_path.join)('static',buildId,'pages',bundleFile);if(isApiRoute&&target==='serverless'){const serverlessLoaderOptions={page,absolutePagePath,...defaultServerlessOptions};server[(0,_path.join)('pages',bundleFile)]=`next-serverless-loader?${(0,_querystring.stringify)(serverlessLoaderOptions)}!`;}else if(isApiRoute||target==='server'){server[bundlePath]=[absolutePagePath];}else if(target==='serverless'&&page!=='/_app'&&page!=='/_document'){const serverlessLoaderOptions={page,absolutePagePath,...defaultServerlessOptions};server[(0,_path.join)('pages',bundleFile)]=`next-serverless-loader?${(0,_querystring.stringify)(serverlessLoaderOptions)}!`;}if(page==='/_document'){return;}if(!isApiRoute){client[bundlePath]=`next-client-pages-loader?${(0,_querystring.stringify)({page,absolutePagePath})}!`;}});return{client,server};}","\"use strict\";exports.__esModule=true;exports.isWriteable=isWriteable;var _fs=_interopRequireDefault(require(\"fs\"));var _util=require(\"util\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const access=(0,_util.promisify)(_fs.default.access);async function isWriteable(directory){try{await access(directory,(_fs.default.constants||_fs.default).W_OK);return true;}catch(err){return false;}}","\"use strict\";exports.__esModule=true;exports.startedDevelopmentServer=startedDevelopmentServer;exports.formatAmpMessages=formatAmpMessages;exports.ampValidation=ampValidation;exports.watchCompilers=watchCompilers;var _chalk=_interopRequireDefault(require(\"chalk\"));var _textTable=_interopRequireDefault(require(\"next/dist/compiled/text-table\"));var _unistore=_interopRequireDefault(require(\"next/dist/compiled/unistore\"));var _stripAnsi=_interopRequireDefault(require(\"strip-ansi\"));var _formatWebpackMessages=_interopRequireDefault(require(\"../../client/dev/error-overlay/format-webpack-messages\"));var _store=require(\"./store\");var _forkTsCheckerWebpackPlugin=_interopRequireDefault(require(\"fork-ts-checker-webpack-plugin\"));var _codeframeFormatter=require(\"fork-ts-checker-webpack-plugin/lib/formatter/codeframeFormatter\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function startedDevelopmentServer(appUrl){_store.store.setState({appUrl});}let previousClient=null;let previousServer=null;var WebpackStatusPhase;(function(WebpackStatusPhase){WebpackStatusPhase[WebpackStatusPhase[\"COMPILING\"]=1]=\"COMPILING\";WebpackStatusPhase[WebpackStatusPhase[\"COMPILED_WITH_ERRORS\"]=2]=\"COMPILED_WITH_ERRORS\";WebpackStatusPhase[WebpackStatusPhase[\"TYPE_CHECKING\"]=3]=\"TYPE_CHECKING\";WebpackStatusPhase[WebpackStatusPhase[\"COMPILED_WITH_WARNINGS\"]=4]=\"COMPILED_WITH_WARNINGS\";WebpackStatusPhase[WebpackStatusPhase[\"COMPILED\"]=5]=\"COMPILED\";})(WebpackStatusPhase||(WebpackStatusPhase={}));function getWebpackStatusPhase(status){if(status.loading){return WebpackStatusPhase.COMPILING;}if(status.errors){return WebpackStatusPhase.COMPILED_WITH_ERRORS;}if(status.typeChecking){return WebpackStatusPhase.TYPE_CHECKING;}if(status.warnings){return WebpackStatusPhase.COMPILED_WITH_WARNINGS;}return WebpackStatusPhase.COMPILED;}function formatAmpMessages(amp){let output=_chalk.default.bold('Amp Validation')+'\\n\\n';let messages=[];const chalkError=_chalk.default.red('error');function ampError(page,error){messages.push([page,chalkError,error.message,error.specUrl||'']);}const chalkWarn=_chalk.default.yellow('warn');function ampWarn(page,warn){messages.push([page,chalkWarn,warn.message,warn.specUrl||'']);}for(const page in amp){const{errors,warnings}=amp[page];if(errors.length){ampError(page,errors[0]);for(let index=1;index<errors.length;++index){ampError('',errors[index]);}}if(warnings.length){ampWarn(errors.length?'':page,warnings[0]);for(let index=1;index<warnings.length;++index){ampWarn('',warnings[index]);}}messages.push(['','','','']);}output+=(0,_textTable.default)(messages,{align:['l','l','l','l'],stringLength(str){return(0,_stripAnsi.default)(str).length;}});return output;}const buildStore=(0,_unistore.default)();buildStore.subscribe(state=>{const{amp,client,server}=state;const[{status}]=[{status:client,phase:getWebpackStatusPhase(client)},{status:server,phase:getWebpackStatusPhase(server)}].sort((a,b)=>a.phase.valueOf()-b.phase.valueOf());const{bootstrap:bootstrapping,appUrl}=_store.store.getState();if(bootstrapping&&status.loading){return;}let partialState={bootstrap:false,appUrl:appUrl};if(status.loading){_store.store.setState({...partialState,loading:true},true);}else{let{errors,warnings,typeChecking}=status;if(errors==null){if(typeChecking){_store.store.setState({...partialState,loading:false,typeChecking:true,errors,warnings},true);return;}if(Object.keys(amp).length>0){warnings=(warnings||[]).concat(formatAmpMessages(amp));}}_store.store.setState({...partialState,loading:false,typeChecking:false,errors,warnings},true);}});function ampValidation(page,errors,warnings){const{amp}=buildStore.getState();if(!(errors.length||warnings.length)){buildStore.setState({amp:Object.keys(amp).filter(k=>k!==page).sort().reduce((a,c)=>(a[c]=amp[c],a),{})});return;}const newAmp={...amp,[page]:{errors,warnings}};buildStore.setState({amp:Object.keys(newAmp).sort().reduce((a,c)=>(a[c]=newAmp[c],a),{})});}function watchCompilers(client,server,enableTypeCheckingOnClient,onTypeChecked){if(previousClient===client&&previousServer===server){return;}buildStore.setState({client:{loading:true},server:{loading:true}});function tapCompiler(key,compiler,hasTypeChecking,onEvent){let tsMessagesPromise;let tsMessagesResolver;compiler.hooks.invalid.tap(`NextJsInvalid-${key}`,()=>{tsMessagesPromise=undefined;onEvent({loading:true});});if(hasTypeChecking){const typescriptFormatter=(0,_codeframeFormatter.createCodeframeFormatter)({});compiler.hooks.beforeCompile.tap(`NextJs-${key}-StartTypeCheck`,()=>{tsMessagesPromise=new Promise(resolve=>{tsMessagesResolver=msgs=>resolve(msgs);});});_forkTsCheckerWebpackPlugin.default.getCompilerHooks(compiler).receive.tap(`NextJs-${key}-afterTypeScriptCheck`,(diagnostics,lints)=>{const allMsgs=[...diagnostics,...lints];const format=message=>typescriptFormatter(message,true);const errors=allMsgs.filter(msg=>msg.severity==='error').map(format);const warnings=allMsgs.filter(msg=>msg.severity==='warning').map(format);tsMessagesResolver({errors:errors.length?errors:null,warnings:warnings.length?warnings:null});});}compiler.hooks.done.tap(`NextJsDone-${key}`,stats=>{buildStore.setState({amp:{}});const{errors,warnings}=(0,_formatWebpackMessages.default)(stats.toJson({all:false,warnings:true,errors:true}));const hasErrors=errors&&errors.length;const hasWarnings=warnings&&warnings.length;onEvent({loading:false,typeChecking:hasTypeChecking,errors:hasErrors?errors:null,warnings:hasWarnings?warnings:null});const typePromise=tsMessagesPromise;if(!hasErrors&&typePromise){typePromise.then(typeMessages=>{if(typePromise!==tsMessagesPromise){// a new compilation started so we don't care about this\nreturn;}stats.compilation.errors.push(...(typeMessages.errors||[]));stats.compilation.warnings.push(...(typeMessages.warnings||[]));onTypeChecked({errors:stats.compilation.errors.length?stats.compilation.errors:null,warnings:stats.compilation.warnings.length?stats.compilation.warnings:null});onEvent({loading:false,typeChecking:false,errors:typeMessages.errors,warnings:hasWarnings?[...warnings,...(typeMessages.warnings||[])]:typeMessages.warnings});});}});}tapCompiler('client',client,enableTypeCheckingOnClient,status=>buildStore.setState({client:status}));tapCompiler('server',server,false,status=>buildStore.setState({server:status}));previousClient=client;previousServer=server;}","\"use strict\";exports.__esModule=true;exports.wait=wait;exports.error=error;exports.warn=warn;exports.ready=ready;exports.info=info;exports.event=event;var _chalk=_interopRequireDefault(require(\"chalk\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const prefixes={wait:_chalk.default`[ {cyan wait} ] `,error:_chalk.default`[ {red error} ]`,warn:_chalk.default`[ {yellow warn} ] `,ready:_chalk.default`[ {green ready} ]`,info:_chalk.default`[ {cyan {dim info}} ] `,event:_chalk.default`[ {magenta event} ]`};function wait(...message){console.log(prefixes.wait,...message);}function error(...message){console.log(prefixes.error,...message);}function warn(...message){console.log(prefixes.warn,...message);}function ready(...message){console.log(prefixes.ready,...message);}function info(...message){console.log(prefixes.info,...message);}function event(...message){console.log(prefixes.event,...message);}","\"use strict\";exports.__esModule=true;exports.store=void 0;var _unistore=_interopRequireDefault(require(\"next/dist/compiled/unistore\"));var _stripAnsi=_interopRequireDefault(require(\"strip-ansi\"));var Log=_interopRequireWildcard(require(\"./log\"));function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const store=(0,_unistore.default)({appUrl:null,bootstrap:true});exports.store=store;let lastStore={};function hasStoreChanged(nextStore){if([...new Set([...Object.keys(lastStore),...Object.keys(nextStore)])].every(key=>Object.is(lastStore[key],nextStore[key]))){return false;}lastStore=nextStore;return true;}store.subscribe(state=>{if(!hasStoreChanged(state)){return;}if(state.bootstrap){Log.wait('starting the development server ...');if(state.appUrl){Log.info(`waiting on ${state.appUrl} ...`);}return;}if(state.loading){Log.wait('compiling ...');return;}if(state.errors){Log.error(state.errors[0]);const cleanError=(0,_stripAnsi.default)(state.errors[0]);if(cleanError.indexOf('SyntaxError')>-1){const matches=cleanError.match(/\\[.*\\]=/);if(matches){for(const match of matches){const prop=(match.split(']').shift()||'').substr(1);console.log(`AMP bind syntax [${prop}]='' is not supported in JSX, use 'data-amp-bind-${prop}' instead. https://err.sh/zeit/next.js/amp-bind-jsx-alt`);}return;}}return;}if(state.warnings){Log.warn(state.warnings.join('\\n\\n'));if(state.appUrl){Log.info(`ready on ${state.appUrl}`);}return;}if(state.typeChecking){Log.info('bundled successfully, waiting for typecheck results ...');return;}Log.ready('compiled successfully'+(state.appUrl?` - ready on ${state.appUrl}`:''));});","\"use strict\";exports.__esModule=true;exports.default=getBaseWebpackConfig;var _forkTsCheckerWebpackPlugin=_interopRequireDefault(require(\"fork-ts-checker-webpack-plugin\"));var _constants=require(\"next-server/constants\");var _index=_interopRequireDefault(require(\"next/dist/compiled/resolve/index.js\"));var _path=_interopRequireDefault(require(\"path\"));var _webpack=_interopRequireDefault(require(\"webpack\"));var _constants2=require(\"../lib/constants\");var _fileExists=require(\"../lib/file-exists\");var _allModulesIdentifiedPlugin=require(\"./webpack/plugins/all-modules-identified-plugin\");var _buildManifestPlugin=_interopRequireDefault(require(\"./webpack/plugins/build-manifest-plugin\"));var _chunkGraphPlugin=require(\"./webpack/plugins/chunk-graph-plugin\");var _chunkNamesPlugin=_interopRequireDefault(require(\"./webpack/plugins/chunk-names-plugin\"));var _dllImport=require(\"./webpack/plugins/dll-import\");var _hashedChunkIdsPlugin=require(\"./webpack/plugins/hashed-chunk-ids-plugin\");var _nextDropClientPagePlugin=require(\"./webpack/plugins/next-drop-client-page-plugin\");var _nextjsSsrImport=_interopRequireDefault(require(\"./webpack/plugins/nextjs-ssr-import\"));var _nextjsSsrModuleCache=_interopRequireDefault(require(\"./webpack/plugins/nextjs-ssr-module-cache\"));var _pagesManifestPlugin=_interopRequireDefault(require(\"./webpack/plugins/pages-manifest-plugin\"));var _reactLoadablePlugin=require(\"./webpack/plugins/react-loadable-plugin\");var _serverlessPlugin=require(\"./webpack/plugins/serverless-plugin\");var _sharedRuntimePlugin=require(\"./webpack/plugins/shared-runtime-plugin\");var _index2=require(\"./webpack/plugins/terser-webpack-plugin/src/index\");var _nextEsmPlugin=_interopRequireDefault(require(\"./webpack/plugins/next-esm-plugin\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}async function getBaseWebpackConfig(dir,{dev=false,isServer=false,buildId,config,target='server',entrypoints,selectivePageBuilding=false}){const distDir=_path.default.join(dir,config.distDir);const defaultLoaders={babel:{loader:'next-babel-loader',options:{isServer,distDir,cwd:dir,cache:!selectivePageBuilding,asyncToPromises:config.experimental.asyncToPromises}},// Backwards compat\nhotSelfAccept:{loader:'noop-loader'}// Support for NODE_PATH\n};const nodePathList=(process.env.NODE_PATH||'').split(process.platform==='win32'?';':':').filter(p=>!!p);const outputDir=target==='serverless'?'serverless':_constants.SERVER_DIRECTORY;const outputPath=_path.default.join(distDir,isServer?outputDir:'');const totalPages=Object.keys(entrypoints).length;const clientEntries=!isServer?{// Backwards compatibility\n'main.js':[],[_constants.CLIENT_STATIC_FILES_RUNTIME_MAIN]:`.${_path.default.sep}`+_path.default.relative(dir,_path.default.join(_constants2.NEXT_PROJECT_ROOT_DIST_CLIENT,dev?`next-dev.js`:'next.js'))}:undefined;let typeScriptPath;try{typeScriptPath=_index.default.sync('typescript',{basedir:dir});}catch(_){}const tsConfigPath=_path.default.join(dir,'tsconfig.json');const useTypeScript=Boolean(typeScriptPath&&(await(0,_fileExists.fileExists)(tsConfigPath)));const resolveConfig={// Disable .mjs for node_modules bundling\nextensions:isServer?[...(useTypeScript?['.tsx','.ts']:[]),'.js','.mjs','.jsx','.json','.wasm']:[...(useTypeScript?['.tsx','.ts']:[]),'.mjs','.js','.jsx','.json','.wasm'],modules:['node_modules',...nodePathList],alias:{// These aliases make sure the wrapper module is not included in the bundles\n// Which makes bundles slightly smaller, but also skips parsing a module that we know will result in this alias\n'next/head':'next-server/dist/lib/head.js','next/router':'next/dist/client/router.js','next/config':'next-server/dist/lib/runtime-config.js','next/dynamic':'next-server/dist/lib/dynamic.js',next:_constants2.NEXT_PROJECT_ROOT,[_constants2.PAGES_DIR_ALIAS]:_path.default.join(dir,'pages'),[_constants2.DOT_NEXT_ALIAS]:distDir},mainFields:isServer?['main','module']:['browser','module','main']};const webpackMode=dev?'development':'production';const terserPluginConfig={parallel:true,sourceMap:false,cache:!selectivePageBuilding,cpus:config.experimental.cpus,distDir:distDir};const terserOptions={parse:{ecma:8},compress:{ecma:5,warnings:false,// The following two options are known to break valid JavaScript code\ncomparisons:false,inline:2// https://github.com/zeit/next.js/issues/7178#issuecomment-493048965\n},mangle:{safari10:true},output:{ecma:5,safari10:true,comments:false,// Fixes usage of Emoji and certain Regex\nascii_only:true}};const devtool=dev?'cheap-module-source-map':false;// Contains various versions of the Webpack SplitChunksPlugin used in different build types\nconst splitChunksConfigs={dev:{cacheGroups:{default:false,vendors:false}},selective:{cacheGroups:{default:false,vendors:false,react:{name:'commons',chunks:'all',test:/[\\\\/]node_modules[\\\\/](react|react-dom|scheduler)[\\\\/]/}}},prod:{chunks:'all',cacheGroups:{default:false,vendors:false,commons:{name:'commons',chunks:'all',minChunks:totalPages>2?totalPages*0.5:2},react:{name:'commons',chunks:'all',test:/[\\\\/]node_modules[\\\\/](react|react-dom|scheduler)[\\\\/]/}}}// Select appropriate SplitChunksPlugin config for this build\n};let splitChunksConfig;if(dev){splitChunksConfig=splitChunksConfigs.dev;}else if(selectivePageBuilding){splitChunksConfig=splitChunksConfigs.selective;}else{splitChunksConfig=splitChunksConfigs.prod;}const crossOrigin=!config.crossOrigin&&config.experimental.modern?'anonymous':config.crossOrigin;let webpackConfig={devtool,mode:webpackMode,name:isServer?'server':'client',target:isServer?'node':'web',externals:!isServer?undefined:target!=='serverless'?[(context,request,callback)=>{const notExternalModules=['next/app','next/document','next/link','next/error','string-hash','next/constants'];if(notExternalModules.indexOf(request)!==-1){return callback();}(0,_index.default)(request,{basedir:dir,preserveSymlinks:true},(err,res)=>{if(err){return callback();}if(!res){return callback();}// Default pages have to be transpiled\nif(res.match(/next[/\\\\]dist[/\\\\]/)||res.match(/node_modules[/\\\\]@babel[/\\\\]runtime[/\\\\]/)||res.match(/node_modules[/\\\\]@babel[/\\\\]runtime-corejs2[/\\\\]/)){return callback();}// Webpack itself has to be compiled because it doesn't always use module relative paths\nif(res.match(/node_modules[/\\\\]webpack/)||res.match(/node_modules[/\\\\]css-loader/)){return callback();}if(res.match(/node_modules[/\\\\].*\\.js$/)){return callback(undefined,`commonjs ${request}`);}callback();});}]:[// When the serverless target is used all node_modules will be compiled into the output bundles\n// So that the serverless bundles have 0 runtime dependencies\n'amp-toolbox-optimizer',// except this one\n(context,request,callback)=>{if(request==='react-ssr-prepass'&&!config.experimental.ampBindInitData){// if it's the Next.js' require mark it as external\n// since it's not used\nif(context.replace(/\\\\/g,'/').includes('next-server/dist/server')){return callback(undefined,`commonjs ${request}`);}}return callback();}],optimization:Object.assign({checkWasmTypes:false,nodeEnv:false},isServer?{splitChunks:false,minimize:false}:{runtimeChunk:selectivePageBuilding?false:{name:_constants.CLIENT_STATIC_FILES_RUNTIME_WEBPACK},splitChunks:splitChunksConfig,minimize:!dev,minimizer:!dev?[new _index2.TerserPlugin({...terserPluginConfig,terserOptions:{...terserOptions,// Disable compress when using terser loader\n...(selectivePageBuilding||config.experimental.terserLoader?{compress:false}:undefined)}})]:undefined},selectivePageBuilding?{providedExports:false,usedExports:false,concatenateModules:false}:undefined),recordsPath:selectivePageBuilding?undefined:_path.default.join(outputPath,'records.json'),context:dir,// Kept as function to be backwards compatible\nentry:async()=>{return{...(clientEntries?clientEntries:{}),...entrypoints};},output:{path:outputPath,filename:({chunk})=>{// Use `[name]-[contenthash].js` in production\nif(!dev&&(chunk.name===_constants.CLIENT_STATIC_FILES_RUNTIME_MAIN||chunk.name===_constants.CLIENT_STATIC_FILES_RUNTIME_WEBPACK)){return chunk.name.replace(/\\.js$/,'-[contenthash].js');}return'[name]';},libraryTarget:isServer?'commonjs2':'var',hotUpdateChunkFilename:'static/webpack/[id].[hash].hot-update.js',hotUpdateMainFilename:'static/webpack/[hash].hot-update.json',// This saves chunks with the name given via `import()`\nchunkFilename:isServer?`${dev?'[name]':'[name].[contenthash]'}.js`:`static/chunks/${dev?'[name]':'[name].[contenthash]'}.js`,strictModuleExceptionHandling:true,crossOriginLoading:crossOrigin,futureEmitAssets:!dev,webassemblyModuleFilename:'static/wasm/[modulehash].wasm'},performance:false,resolve:resolveConfig,resolveLoader:{modules:[_path.default.join(__dirname,'webpack','loaders'),// The loaders Next.js provides\n'node_modules',...nodePathList]},// @ts-ignore this is filtered\nmodule:{strictExportPresence:true,rules:[(selectivePageBuilding||config.experimental.terserLoader)&&!isServer&&{test:/\\.(js|mjs|jsx)$/,exclude:/\\.min\\.(js|mjs|jsx)$/,use:{loader:'next-minify-loader',options:{terserOptions:{...terserOptions,mangle:false}}}},config.experimental.ampBindInitData&&!isServer&&{test:/\\.(tsx|ts|js|mjs|jsx)$/,include:[_path.default.join(dir,'data')],use:'next-data-loader'},{test:/\\.(tsx|ts|js|mjs|jsx)$/,include:[dir,/next-server[\\\\/]dist[\\\\/]lib/,/next[\\\\/]dist[\\\\/]client/,/next[\\\\/]dist[\\\\/]pages/,/[\\\\/](strip-ansi|ansi-regex)[\\\\/]/],exclude:path=>{if(/next-server[\\\\/]dist[\\\\/]lib/.test(path)||/next[\\\\/]dist[\\\\/]client/.test(path)||/next[\\\\/]dist[\\\\/]pages/.test(path)||/[\\\\/](strip-ansi|ansi-regex)[\\\\/]/.test(path)){return false;}return /node_modules/.test(path);},use:defaultLoaders.babel}].filter(Boolean)},plugins:[// This plugin makes sure `output.filename` is used for entry chunks\nnew _chunkNamesPlugin.default(),new _webpack.default.DefinePlugin({...Object.keys(config.env).reduce((acc,key)=>{if(/^(?:NODE_.+)|^(?:__.+)$/i.test(key)){throw new Error(`The key \"${key}\" under \"env\" in next.config.js is not allowed. https://err.sh/zeit/next.js/env-key-not-allowed`);}return{...acc,[`process.env.${key}`]:JSON.stringify(config.env[key])};},{}),'process.env.NODE_ENV':JSON.stringify(webpackMode),'process.crossOrigin':JSON.stringify(crossOrigin),'process.browser':JSON.stringify(!isServer),// This is used in client/dev-error-overlay/hot-dev-client.js to replace the dist directory\n...(dev&&!isServer?{'process.env.__NEXT_DIST_DIR':JSON.stringify(distDir)}:{}),'process.env.__NEXT_EXPORT_TRAILING_SLASH':JSON.stringify(config.exportTrailingSlash),'process.env.__NEXT_MODERN_BUILD':config.experimental.modern&&!dev,...(isServer?{// Allow browser-only code to be eliminated\n'typeof window':JSON.stringify('undefined'),// Fix bad-actors in the npm ecosystem (e.g. `node-formidable`)\n// This is typically found in unmaintained modules from the\n// pre-webpack era (common in server-side code)\n'global.GENTLY':JSON.stringify(false)}:{// Allow server-only code to be eliminated\n'typeof window':JSON.stringify('object')})}),!isServer&&new _reactLoadablePlugin.ReactLoadablePlugin({filename:_constants.REACT_LOADABLE_MANIFEST}),!isServer&&new _nextDropClientPagePlugin.DropClientPage(),new _chunkGraphPlugin.ChunkGraphPlugin(buildId,{dir,distDir,isServer}),...(dev?(()=>{// Even though require.cache is server only we have to clear assets from both compilations\n// This is because the client compilation generates the build manifest that's used on the server side\nconst{NextJsRequireCacheHotReloader}=require('./webpack/plugins/nextjs-require-cache-hot-reloader');const{UnlinkRemovedPagesPlugin}=require('./webpack/plugins/unlink-removed-pages-plugin');const devPlugins=[new UnlinkRemovedPagesPlugin(),new _webpack.default.NoEmitOnErrorsPlugin(),new NextJsRequireCacheHotReloader()];if(!isServer){const AutoDllPlugin=(0,_dllImport.importAutoDllPlugin)({distDir});devPlugins.push(new AutoDllPlugin({filename:'[name]_[hash].js',path:'./static/development/dll',context:dir,entry:{dll:['react','react-dom']},config:{devtool,mode:webpackMode,resolve:resolveConfig}}));devPlugins.push(new _webpack.default.HotModuleReplacementPlugin());}return devPlugins;})():[]),!dev&&new _webpack.default.HashedModuleIdsPlugin(),// This must come after HashedModuleIdsPlugin (it sets any modules that\n// were missed by HashedModuleIdsPlugin)\n!dev&&selectivePageBuilding&&new _allModulesIdentifiedPlugin.AllModulesIdentifiedPlugin(dir),// This sets chunk ids to be hashed versions of their names to reduce\n// bundle churn\n!dev&&selectivePageBuilding&&new _hashedChunkIdsPlugin.HashedChunkIdsPlugin(buildId),// On the client we want to share the same runtime cache\n!isServer&&selectivePageBuilding&&new _sharedRuntimePlugin.SharedRuntimePlugin(),!dev&&new _webpack.default.IgnorePlugin({checkResource:resource=>{return /react-is/.test(resource);},checkContext:context=>{return /next-server[\\\\/]dist[\\\\/]/.test(context)||/next[\\\\/]dist[\\\\/]/.test(context);}}),target==='serverless'&&(isServer||selectivePageBuilding)&&new _serverlessPlugin.ServerlessPlugin(buildId,{isServer}),isServer&&new _pagesManifestPlugin.default(target==='serverless'),target!=='serverless'&&isServer&&new _nextjsSsrModuleCache.default({outputPath}),isServer&&new _nextjsSsrImport.default(),!isServer&&new _buildManifestPlugin.default(),config.experimental.profiling&&new _webpack.default.debug.ProfilingPlugin({outputPath:_path.default.join(distDir,`profile-events-${isServer?'server':'client'}.json`)}),!isServer&&useTypeScript&&new _forkTsCheckerWebpackPlugin.default({typescript:typeScriptPath,async:dev,useTypescriptIncrementalApi:true,checkSyntacticErrors:true,tsconfig:tsConfigPath,reportFiles:['**','!**/__tests__/**','!**/?(*.)(spec|test).*'],compilerOptions:{isolatedModules:true,noEmit:true},silent:true,formatter:'codeframe'}),config.experimental.modern&&!isServer&&!dev&&new _nextEsmPlugin.default({filename:getFileName=>(...args)=>{const name=typeof getFileName==='function'?getFileName(...args):getFileName;return name.includes('.js')?name.replace(/\\.js$/,'.module.js'):args[0].chunk.name.replace(/\\.js$/,'.module.js');},chunkFilename:inputChunkName=>inputChunkName.replace(/\\.js$/,'.module.js')})].filter(Boolean)};if(typeof config.webpack==='function'){webpackConfig=config.webpack(webpackConfig,{dir,dev,isServer,buildId,config,defaultLoaders,totalPages,webpack:_webpack.default});// @ts-ignore: Property 'then' does not exist on type 'Configuration'\nif(typeof webpackConfig.then==='function'){console.warn('> Promise returned in next config. https://err.sh/zeit/next.js/promise-in-next-config.md');}}// check if using @zeit/next-typescript and show warning\nif(isServer&&webpackConfig.module&&Array.isArray(webpackConfig.module.rules)){let foundTsRule=false;webpackConfig.module.rules=webpackConfig.module.rules.filter(rule=>{if(!(rule.test instanceof RegExp))return true;if('noop.ts'.match(rule.test)&&!'noop.js'.match(rule.test)){// remove if it matches @zeit/next-typescript\nfoundTsRule=rule.use===defaultLoaders.babel;return!foundTsRule;}return true;});if(foundTsRule){console.warn('\\n@zeit/next-typescript is no longer needed since Next.js has built-in support for TypeScript now. Please remove it from your next.config.js\\n');}}// Backwards compat for `main.js` entry key\nconst originalEntry=webpackConfig.entry;if(typeof originalEntry!=='undefined'){webpackConfig.entry=async()=>{const entry=typeof originalEntry==='function'?await originalEntry():originalEntry;// Server compilation doesn't have main.js\nif(clientEntries&&entry['main.js']&&entry['main.js'].length>0){const originalFile=clientEntries[_constants.CLIENT_STATIC_FILES_RUNTIME_MAIN];entry[_constants.CLIENT_STATIC_FILES_RUNTIME_MAIN]=[...entry['main.js'],originalFile];}delete entry['main.js'];return entry;};}if(!dev){// @ts-ignore entry is always a function\nwebpackConfig.entry=await webpackConfig.entry();}return webpackConfig;}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/next/dist/build/webpack/plugins sync recursive\";","\"use strict\";exports.__esModule=true;exports.AllModulesIdentifiedPlugin=void 0;var _crypto=require(\"crypto\");var _path=_interopRequireDefault(require(\"path\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**\n * From escape-string-regexp: https://github.com/sindresorhus/escape-string-regexp\n * brought here to reduce the bundle size\n * MIT License\n * Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n */const matchOperatorsRe=/[|\\\\{}()[\\]^$+*?.-]/g;const escapeRegex=str=>{if(typeof str!=='string'){throw new TypeError('Expected a string');}return str.replace(matchOperatorsRe,'\\\\$&');};function getRawModuleIdentifier(m,dir){// webpack impl:\n// new RawModule(\n//   \"/* (ignored) */\",\n//   `ignored ${context} ${request}`,\n//   `${request} (ignored)`\n// )\nlet request=m.readableIdentifierStr.replace(/ \\(ignored\\)$/,'');let context=m.identifierStr.match(new RegExp(`^ignored (.*) ${escapeRegex(request)}$`)).pop();if(_path.default.isAbsolute(request)){request=_path.default.relative(dir,request);}if(_path.default.isAbsolute(context)){context=_path.default.relative(dir,context);}return`${context}::${request}`;}function getMultiModuleIdentifier(m){const mods=m.dependencies.map(d=>d.module);if(mods.some(d=>!Boolean(d))){throw new Error('Cannot handle a MultiModule with moduleless dependencies');}const ids=mods.map(m=>m.id);if(ids.some(i=>!Boolean(i))){throw new Error('Cannot handle a MultiModule dependency without a module id');}return ids.sort().join('::');}class AllModulesIdentifiedPlugin{constructor(dir){this.dir=void 0;this.dir=dir;}apply(compiler){compiler.hooks.compilation.tap('AllModulesIdentifiedPlugin',compilation=>{compilation.hooks.beforeModuleIds.tap('AllModulesIdentifiedPlugin',modules=>{;modules.forEach(m=>{if(m.id!=null){return;}let identifier;if(m.constructor&&m.constructor.name==='RawModule'){identifier=getRawModuleIdentifier(m,this.dir);}else if(m.constructor&&m.constructor.name==='MultiModule'){identifier=getMultiModuleIdentifier(m);}else{throw new Error(`Do not know how to handle module: ${m.name}, ${m.identifier&&m.identifier()}, ${m.type}, ${m.constructor&&m.constructor.name}`);}// This hashing algorithm is consistent with how the rest of\n// webpack does it (n.b. HashedModuleIdsPlugin)\nm.id=(0,_crypto.createHash)('md4').update(identifier).digest('hex').substr(0,4);});});});}}exports.AllModulesIdentifiedPlugin=AllModulesIdentifiedPlugin;","\"use strict\";exports.__esModule=true;exports.default=void 0;var _webpackSources=require(\"webpack-sources\");var _constants=require(\"next-server/constants\");// This plugin creates a build-manifest.json for all assets that are being output\n// It has a mapping of \"entry\" filename to real filename. Because the real filename can be hashed in production\nclass BuildManifestPlugin{apply(compiler){compiler.hooks.emit.tapAsync('NextJsBuildManifest',(compilation,callback)=>{const{chunks}=compilation;const assetMap={devFiles:[],pages:{}};const mainJsChunk=chunks.find(c=>c.name===_constants.CLIENT_STATIC_FILES_RUNTIME_MAIN);const mainJsFiles=mainJsChunk&&mainJsChunk.files.length>0?mainJsChunk.files.filter(file=>/\\.js$/.test(file)):[];for(const filePath of Object.keys(compilation.assets)){const path=filePath.replace(/\\\\/g,'/');if(/^static\\/development\\/dll\\//.test(path)){assetMap.devFiles.push(path);}}// compilation.entrypoints is a Map object, so iterating over it 0 is the key and 1 is the value\nfor(const[,entrypoint]of compilation.entrypoints.entries()){const result=_constants.ROUTE_NAME_REGEX.exec(entrypoint.name);if(!result){continue;}const pagePath=result[1];if(!pagePath){continue;}const filesForEntry=[];for(const chunk of entrypoint.chunks){// If there's no name or no files\nif(!chunk.name||!chunk.files){continue;}for(const file of chunk.files){if(/\\.map$/.test(file)||/\\.hot-update\\.js$/.test(file)){continue;}// Only `.js` and `.css` files are added for now. In the future we can also handle other file types.\nif(!/\\.js$/.test(file)&&!/\\.css$/.test(file)){continue;}// The page bundles are manually added to _document.js as they need extra properties\nif(_constants.IS_BUNDLED_PAGE_REGEX.exec(file)){continue;}filesForEntry.push(file.replace(/\\\\/g,'/'));}}assetMap.pages[`/${pagePath.replace(/\\\\/g,'/')}`]=[...filesForEntry,...mainJsFiles];}if(typeof assetMap.pages['/index']!=='undefined'){assetMap.pages['/']=assetMap.pages['/index'];}assetMap.pages=Object.keys(assetMap.pages).sort()// eslint-disable-next-line\n.reduce((a,c)=>(a[c]=assetMap.pages[c],a),{});compilation.assets[_constants.BUILD_MANIFEST]=new _webpackSources.RawSource(JSON.stringify(assetMap,null,2));callback();});}}exports.default=BuildManifestPlugin;","\"use strict\";exports.__esModule=true;exports.getPageChunks=getPageChunks;exports.exportManifest=exportManifest;exports.ChunkGraphPlugin=void 0;var _crypto=require(\"crypto\");var _fs=_interopRequireDefault(require(\"fs\"));var _constants=require(\"next-server/constants\");var _os=require(\"os\");var _path=_interopRequireDefault(require(\"path\"));var _querystring=require(\"querystring\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const manifest={sharedFiles:[],pages:{},pageChunks:{},chunks:{}};const pageModules={};function getPageChunks(page){if(!manifest.pages[page]&&!pageModules[page]){return;}const external=new Set();// from node_modules\nconst internal=new Set()// from project\n;[...(manifest.pages[page]||[]),...(pageModules[page]||[])].map(mod=>{mod=mod.replace(/\\\\/g,'/');if(mod.match(/(next-server|next)\\//)){return null;}if(mod.includes('node_modules/')){if(mod.match(/node_modules\\/(@babel|core-js|styled-jsx|string-hash|object-assign|process|react|react-dom|scheduler|regenerator-runtime|webpack|node-libs-browser)\\//)){return null;}mod=mod.split('node_modules/')[1].split('/')[0];if(external.has(mod)){return null;}external.add(mod);return mod;}// don't include the page itself\nif(mod.includes(`pages${page==='/'?'/index':page}`)){return null;}// is local e.g. ../components/Layout\nif(internal.has(mod)){return null;}internal.add(mod);return mod;});return{external,internal};}function exportManifest({dir,fileName,selectivePageBuildingCacheIdentifier}){const finalManifest={...manifest,hashes:{}};const allFiles=new Set(manifest.sharedFiles);for(const page of Object.keys(finalManifest.pages)){finalManifest.pages[page].forEach(f=>allFiles.add(f));}finalManifest.hashes=[...allFiles].sort().reduce((acc,cur)=>Object.assign(acc,_fs.default.existsSync(_path.default.join(dir,cur))?{[cur]:(0,_crypto.createHash)('sha1').update(selectivePageBuildingCacheIdentifier).update(_fs.default.readFileSync(_path.default.join(dir,cur))).digest('hex')}:undefined),{});const json=JSON.stringify(finalManifest,null,2)+_os.EOL;_fs.default.writeFileSync(fileName,json);}function getFiles(dir,modules){if(!(modules&&modules.length)){return[];}function getFileByIdentifier(id){if(id.startsWith('external ')||id.startsWith('multi ')){return null;}let n;if((n=id.lastIndexOf('!'))!==-1){id=id.substring(n+1);}if(id&&!_path.default.isAbsolute(id)){id=_path.default.resolve(dir,id);}return id;}return modules.reduce((acc,val)=>val.modules?acc.concat(getFiles(dir,val.modules)):(acc.push(getFileByIdentifier(typeof val.identifier==='function'?val.identifier():val.identifier)),acc),[]).filter(Boolean);}class ChunkGraphPlugin{constructor(buildId,{dir,distDir,isServer}){this.buildId=void 0;this.dir=void 0;this.distDir=void 0;this.isServer=void 0;this.buildId=buildId;this.dir=dir;this.distDir=distDir;this.isServer=isServer;}apply(compiler){const{dir}=this;compiler.hooks.emit.tap('ChunkGraphPlugin',compilation=>{const sharedFiles=[];const sharedChunks=[];const pages={};const pageChunks={};compilation.chunks.forEach(chunk=>{if(!chunk.hasEntryModule()){return;}const chunkModules=new Map();const queue=new Set(chunk.groupsIterable);const chunksProcessed=new Set();const involvedChunks=new Set();for(const chunkGroup of queue){for(const chunk of chunkGroup.chunks){chunk.files.forEach(file=>involvedChunks.add(file));if(!chunksProcessed.has(chunk)){chunksProcessed.add(chunk);for(const m of chunk.modulesIterable){chunkModules.set(m.id,m);}}}for(const child of chunkGroup.childrenIterable){queue.add(child);}}const modules=[...chunkModules.values()];const nodeModules=[];const files=getFiles(dir,modules)// we don't care about node_modules (yet) because we invalidate the\n// entirety of flying shuttle on package changes\n.filter(val=>{// store them for build tree stats though\nconst isModule=val.includes('node_modules');if(isModule)nodeModules.push(val);return!isModule;})// build artifacts shouldn't be considered, so we ensure all paths\n// are outside of this directory\n.filter(val=>_path.default.relative(this.distDir,val).startsWith('..'))// convert from absolute path to be portable across operating systems\n// and directories\n.map(f=>_path.default.relative(dir,f));let pageName;if(chunk.entryModule&&chunk.entryModule.loaders){const entryLoader=chunk.entryModule.loaders.find(({loader,options})=>loader&&loader.match(/next-(\\w+-)+loader/)&&options);if(entryLoader){const{page}=(0,_querystring.parse)(entryLoader.options);if(typeof page==='string'&&page){pageName=page;}}}if(pageName){if(pageName==='/_app'||pageName==='/_error'||pageName==='/_document'){sharedFiles.push(...files);sharedChunks.push(...involvedChunks);}else{pages[pageName]=files;pageChunks[pageName]=[...involvedChunks];}pageModules[pageName]=nodeModules;}else{if(chunk.name===_constants.CLIENT_STATIC_FILES_RUNTIME_MAIN){sharedFiles.push(...files);sharedChunks.push(...involvedChunks);}else{manifest.chunks[chunk.name]=[...new Set([...(manifest.chunks[chunk.name]||[]),...files])].sort();}}});const getLambdaChunk=name=>name.includes(this.buildId)?name.replace(new RegExp(`${this.buildId}[\\\\/\\\\\\\\]`),'client/').replace(/[.]js$/,`.${this.buildId}.js`):name;manifest.sharedFiles=[...new Set([...(manifest.sharedFiles||[]),...sharedFiles])].sort();for(const page in pages){manifest.pages[page]=[...new Set([...(manifest.pages[page]||[]),...pages[page]])].sort();// There's no chunks to save from serverless bundles\nif(!this.isServer){manifest.pageChunks[page]=[...new Set([...(manifest.pageChunks[page]||[]),...pageChunks[page],...pageChunks[page].map(getLambdaChunk),...sharedChunks,...sharedChunks.map(getLambdaChunk)])].sort();}}});}}exports.ChunkGraphPlugin=ChunkGraphPlugin;","\"use strict\";exports.__esModule=true;exports.default=void 0;// This plugin mirrors webpack 3 `filename` and `chunkfilename` behavior\n// This fixes https://github.com/webpack/webpack/issues/6598\n// This plugin is based on https://github.com/researchgate/webpack/commit/2f28947fa0c63ccbb18f39c0098bd791a2c37090\nclass ChunkNamesPlugin{apply(compiler){compiler.hooks.compilation.tap('NextJsChunkNamesPlugin',compilation=>{compilation.chunkTemplate.hooks.renderManifest.intercept({register(tapInfo){if(tapInfo.name==='JavascriptModulesPlugin'){const originalMethod=tapInfo.fn;tapInfo.fn=(result,options)=>{let filenameTemplate;const chunk=options.chunk;const outputOptions=options.outputOptions;if(chunk.filenameTemplate){filenameTemplate=chunk.filenameTemplate;}else if(chunk.hasEntryModule()){filenameTemplate=outputOptions.filename;}else{filenameTemplate=outputOptions.chunkFilename;}options.chunk.filenameTemplate=filenameTemplate;return originalMethod(result,options);};}return tapInfo;}});});}}exports.default=ChunkNamesPlugin;","\"use strict\";exports.__esModule=true;exports.importAutoDllPlugin=importAutoDllPlugin;var _path=_interopRequireDefault(require(\"path\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function importAutoDllPlugin({distDir}){const autodllPaths=_path.default.join(_path.default.dirname(require.resolve('autodll-webpack-plugin')),'paths.js');require(autodllPaths);const autodllCachePath=_path.default.resolve(_path.default.join(distDir,'cache','autodll-webpack-plugin'));require.cache[autodllPaths]=Object.assign({},require.cache[autodllPaths],{exports:Object.assign({},require.cache[autodllPaths].exports,{cacheDir:autodllCachePath,getManifestPath:hash=>bundleName=>_path.default.resolve(autodllCachePath,hash,`${bundleName}.manifest.json`)})});const AutoDllPlugin=require('autodll-webpack-plugin');return AutoDllPlugin;}","\"use strict\";exports.__esModule=true;exports.HashedChunkIdsPlugin=void 0;var _crypto=require(\"crypto\");class HashedChunkIdsPlugin{constructor(buildId){this.buildId=void 0;this.buildId=buildId;}apply(compiler){compiler.hooks.compilation.tap('HashedChunkIdsPlugin',compilation=>{compilation.hooks.beforeChunkIds.tap('HashedChunkIdsPlugin',chunks=>{for(const chunk of chunks){if(chunk.id===null&&chunk.name){const id=chunk.name.replace(this.buildId,'');chunk.id=(0,_crypto.createHash)('md4').update(id).digest('hex').substr(0,4);continue;}const ids=[...chunk.modulesIterable].map(m=>m.id).sort();const h=(0,_crypto.createHash)('md4');ids.forEach(id=>h.update(id));chunk.id=h.digest('hex').substr(0,4);}});});}}exports.HashedChunkIdsPlugin=HashedChunkIdsPlugin;","\"use strict\";exports.__esModule=true;exports.DropClientPage=void 0;var _path=require(\"path\");// Prevents outputting client pages when they are not needed\nclass DropClientPage{constructor(){this.ampPages=new Set();}apply(compiler){compiler.hooks.emit.tap('DropClientPage',compilation=>{Object.keys(compilation.assets).forEach(assetKey=>{const asset=compilation.assets[assetKey];if(asset&&asset._value&&asset._value.includes('__NEXT_DROP_CLIENT_FILE__')){const cleanAssetKey=assetKey.replace(/\\\\/g,'/');const page='/'+cleanAssetKey.split('pages/')[1];const pageNoExt=page.split((0,_path.extname)(page))[0];delete compilation.assets[assetKey];// Detect being re-ran through a child compiler and don't re-mark the\n// page as AMP\nif(!pageNoExt.endsWith('.module')){this.ampPages.add(pageNoExt.replace(/\\/index$/,'')||'/');}}});});}}exports.DropClientPage=DropClientPage;","\"use strict\";exports.__esModule=true;exports.default=void 0;/**\n * MIT License\n *\n * Copyright (c) 2018 Prateek Bhatnagar\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */ /**\n * Webpack plugin for NextJs that runs a child compiler to generate a second (modern) JS bundle\n *\n * @author: Janicklas Ralph (https://github.com/janickals-ralph)\n *\n * Original source from which this was built upon - https://github.com/prateekbh/babel-esm-plugin\n */const SingleEntryPlugin=require('webpack/lib/SingleEntryPlugin');const MultiEntryPlugin=require('webpack/lib/MultiEntryPlugin');const JsonpTemplatePlugin=require('webpack/lib/web/JsonpTemplatePlugin');const SplitChunksPlugin=require('webpack/lib/optimize/SplitChunksPlugin');const RuntimeChunkPlugin=require('webpack/lib/optimize/RuntimeChunkPlugin');const PLUGIN_NAME='NextEsmPlugin';class NextEsmPlugin{constructor(options){this.options=void 0;this.options=Object.assign({excludedPlugins:[PLUGIN_NAME],additionalPlugins:[]},options);}apply(compiler){compiler.hooks.make.tapAsync(PLUGIN_NAME,(compilation,callback)=>{this.runBuild(compiler,compilation).then(callback);});}getBabelLoader(rules){for(let rule of rules){if(!rule.use)continue;if(Array.isArray(rule.use)){return rule.use.find(r=>r.loader&&r.loader.includes('next-babel-loader'));}const ruleUse=rule.use;const ruleLoader=rule.loader;if(ruleUse.loader&&ruleUse.loader.includes('next-babel-loader')||ruleLoader&&ruleLoader.includes('next-babel-loader')){return ruleUse||rule;}}}updateOptions(childCompiler){if(!childCompiler.options.module){throw new Error('Webpack.options.module not found!');}let babelLoader=this.getBabelLoader(childCompiler.options.module.rules);if(!babelLoader){throw new Error('Babel-loader config not found!');}babelLoader.options=Object.assign({},babelLoader.options,{isModern:true});}updateAssets(compilation,childCompilation){compilation.assets=Object.assign(childCompilation.assets,compilation.assets);compilation.namedChunkGroups=Object.assign(childCompilation.namedChunkGroups,compilation.namedChunkGroups);const childChunkFileMap=childCompilation.chunks.reduce((chunkMap,chunk)=>{chunkMap[chunk.name]=chunk.files;return chunkMap;},{});compilation.chunks.forEach(chunk=>{const childChunkFiles=childChunkFileMap[chunk.name];if(childChunkFiles){chunk.files.push(...childChunkFiles.filter(v=>!chunk.files.includes(v)));}});}async runBuild(compiler,compilation){const outputOptions={...compiler.options.output};if(typeof this.options.filename==='function'){outputOptions.filename=this.options.filename(outputOptions.filename);}else{outputOptions.filename=this.options.filename;}if(typeof this.options.chunkFilename==='function'){outputOptions.chunkFilename=this.options.chunkFilename(outputOptions.chunkFilename);}else{outputOptions.chunkFilename=this.options.chunkFilename;}let plugins=(compiler.options.plugins||[]).filter(c=>!this.options.excludedPlugins.includes(c.constructor.name));// Add the additionalPlugins\nplugins=plugins.concat(this.options.additionalPlugins);/**\n     * We are deliberatly not passing plugins in createChildCompiler.\n     * All webpack does with plugins is to call `apply` method on them\n     * with the childCompiler.\n     * But by then we haven't given childCompiler a fileSystem or other options\n     * which a few plugins might expect while execution the apply method.\n     * We do call the `apply` method of all plugins by ourselves later in the code\n     */const childCompiler=compilation.createChildCompiler(PLUGIN_NAME,outputOptions);childCompiler.context=compiler.context;childCompiler.inputFileSystem=compiler.inputFileSystem;childCompiler.outputFileSystem=compiler.outputFileSystem;// Call the `apply` method of all plugins by ourselves.\nif(Array.isArray(plugins)){for(const plugin of plugins){plugin.apply(childCompiler);}}let compilerEntries=compiler.options.entry;if(typeof compilerEntries==='function'){compilerEntries=await compilerEntries();}if(typeof compilerEntries==='string'){compilerEntries={index:compilerEntries};}Object.keys(compilerEntries).forEach(entry=>{const entryFiles=compilerEntries[entry];if(Array.isArray(entryFiles)){new MultiEntryPlugin(compiler.context,entryFiles,entry).apply(childCompiler);}else{new SingleEntryPlugin(compiler.context,entryFiles,entry).apply(childCompiler);}});// Convert entry chunk to entry file\nnew JsonpTemplatePlugin().apply(childCompiler);const optimization=compiler.options.optimization;if(optimization){if(optimization.splitChunks){new SplitChunksPlugin(Object.assign({},optimization.splitChunks)).apply(childCompiler);}if(optimization.runtimeChunk){new RuntimeChunkPlugin(Object.assign({},optimization.runtimeChunk)).apply(childCompiler);}}compilation.hooks.additionalAssets.tapAsync(PLUGIN_NAME,childProcessDone=>{this.updateOptions(childCompiler);childCompiler.runAsChild((err,entries,childCompilation)=>{if(err){return childProcessDone(err);}if(childCompilation.errors.length>0){return childProcessDone(childCompilation.errors[0]);}this.updateAssets(compilation,childCompilation);childProcessDone();});});}}exports.default=NextEsmPlugin;","\"use strict\";exports.__esModule=true;exports.NextJsRequireCacheHotReloader=void 0;var _fs=require(\"fs\");function deleteCache(path){try{delete require.cache[(0,_fs.realpathSync)(path)];}catch(e){if(e.code!=='ENOENT')throw e;}finally{delete require.cache[path];}}// This plugin flushes require.cache after emitting the files. Providing 'hot reloading' of server files.\nclass NextJsRequireCacheHotReloader{constructor(){this.prevAssets=null;}apply(compiler){compiler.hooks.afterEmit.tapAsync('NextJsRequireCacheHotReloader',(compilation,callback)=>{const{assets}=compilation;if(this.prevAssets){for(const f of Object.keys(assets)){deleteCache(assets[f].existsAt);}for(const f of Object.keys(this.prevAssets)){if(!assets[f]){deleteCache(this.prevAssets[f].existsAt);}}}this.prevAssets=assets;callback();});}}exports.NextJsRequireCacheHotReloader=NextJsRequireCacheHotReloader;","\"use strict\";exports.__esModule=true;exports.default=void 0;var _path=require(\"path\");// This plugin modifies the require-ensure code generated by Webpack\n// to work with Next.js SSR\nclass NextJsSsrImportPlugin{apply(compiler){compiler.hooks.compilation.tap('NextJsSSRImport',compilation=>{compilation.mainTemplate.hooks.requireEnsure.tap('NextJsSSRImport',(code,chunk)=>{// Update to load chunks from our custom chunks directory\nconst outputPath=(0,_path.resolve)('/');const pagePath=(0,_path.join)('/',(0,_path.dirname)(chunk.name));const relativePathToBaseDir=(0,_path.relative)(pagePath,outputPath);// Make sure even in windows, the path looks like in unix\n// Node.js require system will convert it accordingly\nconst relativePathToBaseDirNormalized=relativePathToBaseDir.replace(/\\\\/g,'/');return code.replace('require(\"./\"',`require(\"${relativePathToBaseDirNormalized}/\"`).replace('readFile(join(__dirname',`readFile(join(__dirname, \"${relativePathToBaseDirNormalized}\"`);});});}}exports.default=NextJsSsrImportPlugin;","\"use strict\";exports.__esModule=true;exports.default=void 0;var _webpack=_interopRequireDefault(require(\"webpack\"));var _webpackSources=require(\"webpack-sources\");var _path=require(\"path\");var _constants=require(\"next-server/constants\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const SSR_MODULE_CACHE_FILENAME='ssr-module-cache.js';// By default webpack keeps initialized modules per-module.\n// This means that if you have 2 entrypoints loaded into the same app\n// they will *not* share the same instance\n// This creates many issues when developers / libraries rely on the singleton pattern\n// As this pattern assumes every module will have 1 instance\n// This plugin overrides webpack's code generation step to replace `installedModules`\n// The replacement is a require for a file that's also generated here that only exports an empty object\n// Because of Node.js's single instance modules this makes webpack share all initialized instances\n// Do note that this module is only geared towards the `node` compilation target.\n// For the client side compilation we use `runtimeChunk: 'single'`\nclass NextJsSsrImportPlugin{constructor(options){this.options=void 0;this.options=options;}apply(compiler){const{outputPath}=this.options;compiler.hooks.emit.tapAsync('NextJsSSRModuleCache',(compilation,callback)=>{compilation.assets[SSR_MODULE_CACHE_FILENAME]=new _webpackSources.RawSource(`\n      /* This cache is used by webpack for instantiated modules */\n      module.exports = {}\n      `);callback();});compiler.hooks.compilation.tap('NextJsSSRModuleCache',compilation=>{compilation.mainTemplate.hooks.localVars.intercept({register(tapInfo){if(tapInfo.name==='MainTemplate'){const originalFn=tapInfo.fn;tapInfo.fn=(source,chunk)=>{// If the chunk is not part of the pages directory we have to keep the original behavior,\n// otherwise webpack will error out when the file is used before the compilation finishes\n// this is the case with mini-css-extract-plugin\nif(!_constants.IS_BUNDLED_PAGE_REGEX.exec(chunk.name)){return originalFn(source,chunk);}const pagePath=(0,_path.join)(outputPath,(0,_path.dirname)(chunk.name));let relativePathToBaseDir=(0,_path.relative)(pagePath,(0,_path.join)(outputPath,SSR_MODULE_CACHE_FILENAME));// Make sure even in windows, the path looks like in unix\n// Node.js require system will convert it accordingly\nconst relativePathToBaseDirNormalized=relativePathToBaseDir.replace(/\\\\/g,'/');return _webpack.default.Template.asString([source,'// The module cache',`var installedModules = require('${relativePathToBaseDirNormalized}');`]);};}return tapInfo;}});});}}exports.default=NextJsSsrImportPlugin;","\"use strict\";exports.__esModule=true;exports.default=void 0;var _webpackSources=require(\"webpack-sources\");var _constants=require(\"next-server/constants\");// This plugin creates a pages-manifest.json from page entrypoints.\n// This is used for mapping paths like `/` to `.next/server/static/<buildid>/pages/index.js` when doing SSR\n// It's also used by next export to provide defaultPathMap\nclass PagesManifestPlugin{constructor(serverless){this.serverless=void 0;this.serverless=serverless;}apply(compiler){compiler.hooks.emit.tap('NextJsPagesManifest',compilation=>{const{chunks}=compilation;const pages={};for(const chunk of chunks){const result=(this.serverless?_constants.SERVERLESS_ROUTE_NAME_REGEX:_constants.ROUTE_NAME_REGEX).exec(chunk.name);if(!result){continue;}const pagePath=result[1];if(!pagePath){continue;}// Write filename, replace any backslashes in path (on windows) with forwardslashes for cross-platform consistency.\npages[`/${pagePath.replace(/\\\\/g,'/')}`]=chunk.name.replace(/\\\\/g,'/');}if(typeof pages['/index']!=='undefined'){pages['/']=pages['/index'];}compilation.assets[_constants.PAGES_MANIFEST]=new _webpackSources.RawSource(JSON.stringify(pages));});}}exports.default=PagesManifestPlugin;","\"use strict\";exports.__esModule=true;exports.ReactLoadablePlugin=void 0;var _url=_interopRequireDefault(require(\"url\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**\nCOPYRIGHT (c) 2017-present James Kyle <me@thejameskyle.com>\n MIT License\n Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n The above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWAR\n*/ // Implementation of this PR: https://github.com/jamiebuilds/react-loadable/pull/132\n// Modified to strip out unneeded results for Next's specific use case\nfunction buildManifest(compiler,compilation){let context=compiler.options.context;let manifest={};compilation.chunkGroups.forEach(chunkGroup=>{if(chunkGroup.isInitial()){return;}chunkGroup.origins.forEach(chunkGroupOrigin=>{const{request}=chunkGroupOrigin;chunkGroup.chunks.forEach(chunk=>{chunk.files.forEach(file=>{if(!file.match(/\\.js$/)||!file.match(/^static\\/chunks\\//)){return;}let publicPath=_url.default.resolve(compilation.outputOptions.publicPath||'',file);for(const module of chunk.modulesIterable){let id=module.id;let name=typeof module.libIdent==='function'?module.libIdent({context}):null;if(!manifest[request]){manifest[request]=[];}// Avoid duplicate files\nif(manifest[request].some(item=>item.id===id&&item.file===file)){continue;}manifest[request].push({id,name,file,publicPath});}});});});});manifest=Object.keys(manifest).sort().reduce((a,c)=>(a[c]=manifest[c],a),{});return manifest;}class ReactLoadablePlugin{constructor(opts){this.filename=void 0;this.filename=opts.filename;}apply(compiler){compiler.hooks.emit.tapAsync('ReactLoadableManifest',(compilation,callback)=>{const manifest=buildManifest(compiler,compilation);var json=JSON.stringify(manifest,null,2);compilation.assets[this.filename]={source(){return json;},size(){return json.length;}};callback();});}}exports.ReactLoadablePlugin=ReactLoadablePlugin;","\"use strict\";exports.__esModule=true;exports.ServerlessPlugin=void 0;var _GraphHelpers=require(\"webpack/lib/GraphHelpers\");/**\n * Makes sure there are no dynamic chunks when the target is serverless\n * The dynamic chunks are integrated back into their parent chunk\n * This is to make sure there is a single render bundle instead of that bundle importing dynamic chunks\n */const NEXT_REPLACE_BUILD_ID='__NEXT_REPLACE__BUILD_ID__';function replaceInBuffer(buffer,from,to){const target=Buffer.from(from,'utf8');const replacement=Buffer.from(to,'utf8');function bufferTee(source){const index=source.indexOf(target);if(index===-1){// Escape recursion loop\nreturn source;}const b1=source.slice(0,index);const b2=source.slice(index+target.length);const nextBuffer=bufferTee(b2);return Buffer.concat([b1,replacement,nextBuffer],index+replacement.length+nextBuffer.length);}return bufferTee(buffer);}function interceptFileWrites(compiler,contentFn){compiler.outputFileSystem=new Proxy(compiler.outputFileSystem,{get(target,propKey){const orig=target[propKey];if(propKey!=='writeFile'){return orig;}return function(targetPath,content,...args){return orig.call(target,targetPath,contentFn(content),...args);};}});}class ServerlessPlugin{constructor(buildId,{isServer=false}={}){this.buildId=void 0;this.isServer=void 0;this.buildId=buildId;this.isServer=isServer;}apply(compiler){if(this.isServer){interceptFileWrites(compiler,content=>replaceInBuffer(content,NEXT_REPLACE_BUILD_ID,this.buildId));compiler.hooks.compilation.tap('ServerlessPlugin',compilation=>{compilation.hooks.optimizeChunksBasic.tap('ServerlessPlugin',chunks=>{chunks.forEach(chunk=>{// If chunk is not an entry point skip them\nif(chunk.hasEntryModule()){const dynamicChunks=chunk.getAllAsyncChunks();if(dynamicChunks.size!==0){for(const dynamicChunk of dynamicChunks){for(const module of dynamicChunk.modulesIterable){(0,_GraphHelpers.connectChunkAndModule)(chunk,module);}}}}});});});}else{compiler.hooks.emit.tap('ServerlessPlugin',compilation=>{const assetNames=Object.keys(compilation.assets).filter(f=>f.includes(this.buildId));for(const name of assetNames){compilation.assets[name.replace(new RegExp(`${this.buildId}[\\\\/\\\\\\\\]`),'client/').replace(/[.]js$/,`.${this.buildId}.js`)]=compilation.assets[name];}});}}}exports.ServerlessPlugin=ServerlessPlugin;","\"use strict\";exports.__esModule=true;exports.SharedRuntimePlugin=void 0;class SharedRuntimePlugin{apply(compiler){const installedModules=['// The module cache','var installedModules = {};'].join('\\n');const nextInstalledModules=['// The Next.js shared module cache','var installedModules = window.__next_installed_modules__ || (window.__next_installed_modules__ = {});'].join('\\n');compiler.hooks.compilation.tap('SharedRuntimePlugin',compilation=>{;compilation.mainTemplate.hooks.localVars.intercept({register:tapInfo=>{if(!(tapInfo.name==='MainTemplate'&&tapInfo.type==='sync')){return tapInfo;}const{fn}=tapInfo;return{...tapInfo,fn:function(){const ret=fn.apply(this,arguments);return typeof ret==='string'?ret.replace(installedModules,nextInstalledModules):ret;}};}});});}}exports.SharedRuntimePlugin=SharedRuntimePlugin;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/next/dist/build/webpack/plugins/terser-webpack-plugin/src sync recursive\";","\"use strict\";exports.__esModule=true;exports.default=void 0;var _path=require(\"path\");var _minify=_interopRequireDefault(require(\"./minify\"));var _util=require(\"util\");var _workerFarm=_interopRequireDefault(require(\"worker-farm\"));var _fs=require(\"fs\");var _serializeJavascript=_interopRequireDefault(require(\"serialize-javascript\"));var _asyncSema=require(\"async-sema\");var _mkdirp=_interopRequireDefault(require(\"mkdirp\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const worker=require.resolve('./worker');const writeFileP=(0,_util.promisify)(_fs.writeFile);const readFileP=(0,_util.promisify)(_fs.readFile);class TaskRunner{constructor({distDir,cpus,cache}){if(cache){_mkdirp.default.sync(this.cacheDir=(0,_path.join)(distDir,'cache','next-minifier'));}// In some cases cpus() returns undefined\n// https://github.com/nodejs/node/issues/19022\nthis.maxConcurrentWorkers=cpus;this.sema=new _asyncSema.Sema(cpus*3);}run(tasks,callback){/* istanbul ignore if */if(!tasks.length){callback(null,[]);return;}if(this.maxConcurrentWorkers>1){const workerOptions=process.platform==='win32'?{maxConcurrentWorkers:this.maxConcurrentWorkers,maxConcurrentCallsPerWorker:1}:{maxConcurrentWorkers:this.maxConcurrentWorkers};this.workers=(0,_workerFarm.default)(workerOptions,worker);this.boundWorkers=(options,cb)=>{try{this.workers((0,_serializeJavascript.default)(options),cb);}catch(error){// worker-farm can fail with ENOMEM or something else\ncb(error);}};}else{this.boundWorkers=(options,cb)=>{try{cb(null,(0,_minify.default)(options));}catch(error){cb(error);}};}let toRun=tasks.length;const results=[];const step=(index,data)=>{this.sema.release();toRun-=1;results[index]=data;if(!toRun){callback(null,results);}};tasks.forEach((task,index)=>{const cachePath=this.cacheDir&&(0,_path.join)(this.cacheDir,task.cacheKey);const enqueue=()=>{this.boundWorkers(task,(error,data)=>{const result=error?{error}:data;const done=()=>step(index,result);if(this.cacheDir&&!result.error){writeFileP(cachePath,JSON.stringify(data),'utf8').then(done).catch(done);}else{done();}});};this.sema.acquire().then(()=>{if(this.cacheDir){readFileP(cachePath,'utf8').then(data=>step(index,JSON.parse(data))).catch(()=>enqueue());}else{enqueue();}});});}exit(){if(this.workers){_workerFarm.default.end(this.workers);}}}exports.default=TaskRunner;","\"use strict\";exports.__esModule=true;exports.TerserPlugin=void 0;var _stringHash=_interopRequireDefault(require(\"string-hash\"));var _sourceMap=require(\"source-map\");var _webpackSources=require(\"webpack-sources\");var _webpack=require(\"webpack\");var _TaskRunner=_interopRequireDefault(require(\"./TaskRunner\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* eslint-disable\n  no-param-reassign\n*/const warningRegex=/\\[.+:([0-9]+),([0-9]+)\\]/;const JS_REGEX=/\\.m?js$/;class TerserPlugin{constructor(options={}){const{terserOptions={},warningsFilter=()=>true,sourceMap=false,cache=false,cpus,distDir}=options;this.cpus=cpus;this.distDir=distDir;this.options={warningsFilter,sourceMap,cache,terserOptions};}static isSourceMap(input){// All required options for `new SourceMapConsumer(...options)`\n// https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\nreturn Boolean(input&&input.version&&input.sources&&Array.isArray(input.sources)&&typeof input.mappings==='string');}static buildSourceMap(inputSourceMap){if(!inputSourceMap||!TerserPlugin.isSourceMap(inputSourceMap)){return null;}return new _sourceMap.SourceMapConsumer(inputSourceMap);}static buildError(err,file,sourceMap,requestShortener){// Handling error which should have line, col, filename and message\nif(err.line){const original=sourceMap&&sourceMap.originalPositionFor({line:err.line,column:err.col});if(original&&original.source&&requestShortener){return new Error(`${file} from Terser\\n${err.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${err.line},${err.col}]`);}return new Error(`${file} from Terser\\n${err.message} [${file}:${err.line},${err.col}]`);}else if(err.stack){return new Error(`${file} from Terser\\n${err.stack}`);}return new Error(`${file} from Terser\\n${err.message}`);}static buildWarning(warning,file,sourceMap,requestShortener,warningsFilter){let warningMessage=warning;let locationMessage='';let source=null;if(sourceMap){const match=warningRegex.exec(warning);if(match){const line=+match[1];const column=+match[2];const original=sourceMap.originalPositionFor({line,column});if(original&&original.source&&original.source!==file&&requestShortener){;({source}=original);warningMessage=`${warningMessage.replace(warningRegex,'')}`;locationMessage=`[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;}}}if(warningsFilter&&!warningsFilter(warning,source)){return null;}return`Terser Plugin: ${warningMessage}${locationMessage}`;}apply(compiler){const optimizeFn=(compilation,chunks,callback)=>{const taskRunner=new _TaskRunner.default({distDir:this.distDir,cpus:this.cpus,cache:this.options.cache});const processedAssets=new WeakSet();const tasks=[];Array.from(chunks).reduce((acc,chunk)=>acc.concat(chunk.files||[]),[]).concat(compilation.additionalChunkAssets||[]).filter(file=>JS_REGEX.test(file)).forEach(file=>{let inputSourceMap;const asset=compilation.assets[file];if(processedAssets.has(asset)){return;}try{let input;if(this.options.sourceMap&&asset.sourceAndMap){const{source,map}=asset.sourceAndMap();input=source;if(TerserPlugin.isSourceMap(map)){inputSourceMap=map;}else{inputSourceMap=map;compilation.warnings.push(new Error(`${file} contains invalid source map`));}}else{input=asset.source();inputSourceMap=null;}const task={file,input,inputSourceMap,terserOptions:this.options.terserOptions};if(this.options.cache){// increment 'a' to invalidate previous caches from different options\ntask.cacheKey='a'+(0,_stringHash.default)(input);if(this.options.sourceMap)task.cacheKey+='s';}tasks.push(task);}catch(error){compilation.errors.push(TerserPlugin.buildError(error,file,TerserPlugin.buildSourceMap(inputSourceMap),new _webpack.RequestShortener(compiler.context)));}});taskRunner.run(tasks,(tasksError,results)=>{if(tasksError){compilation.errors.push(tasksError);return;}results.forEach((data,index)=>{const{file,input,inputSourceMap}=tasks[index];const{error,map,code,warnings}=data;let sourceMap=null;if(error||warnings&&warnings.length>0){sourceMap=TerserPlugin.buildSourceMap(inputSourceMap);}// Handling results\n// Error case: add errors, and go to next file\nif(error){compilation.errors.push(TerserPlugin.buildError(error,file,sourceMap,new _webpack.RequestShortener(compiler.context)));return;}let outputSource;if(map){outputSource=new _webpackSources.SourceMapSource(code,file,JSON.parse(map),input,inputSourceMap);}else{outputSource=new _webpackSources.RawSource(code);}// Updating assets\nprocessedAssets.add(compilation.assets[file]=outputSource);// Handling warnings\nif(warnings&&warnings.length>0){warnings.forEach(warning=>{const builtWarning=TerserPlugin.buildWarning(warning,file,sourceMap,new _webpack.RequestShortener(compiler.context),this.options.warningsFilter);if(builtWarning){compilation.warnings.push(builtWarning);}});}});taskRunner.exit();callback();});};const plugin={name:this.constructor.name};compiler.hooks.compilation.tap(plugin,compilation=>{if(this.options.sourceMap){compilation.hooks.buildModule.tap(plugin,moduleArg=>{// to get detailed location info about errors\nmoduleArg.useSourceMap=true;});}const{mainTemplate,chunkTemplate}=compilation;// Regenerate `contenthash` for minified assets\nfor(const template of[mainTemplate,chunkTemplate]){template.hooks.hashForChunk.tap(plugin,hash=>{// Terser version\n// Has to be updated when options change too\nhash.update('3.17.0');return hash;});}compilation.hooks.optimizeChunkAssets.tapAsync(plugin,optimizeFn.bind(this,compilation));});}}exports.TerserPlugin=TerserPlugin;","\"use strict\";exports.__esModule=true;exports.default=void 0;var _terser=require(\"terser\");/* eslint-disable\n  arrow-body-style\n*/const buildTerserOptions=({ecma,warnings,parse={},compress={},mangle,module,output,toplevel,ie8,/* eslint-disable camelcase */keep_classnames,keep_fnames,/* eslint-enable camelcase */safari10}={})=>({ecma,warnings,parse:{...parse},compress:typeof compress==='boolean'?compress:{...compress},// eslint-disable-next-line no-nested-ternary\nmangle:mangle==null?true:typeof mangle==='boolean'?mangle:{...mangle},output:{shebang:true,comments:false,beautify:false,semicolons:true,...output},module,toplevel,ie8,keep_classnames,keep_fnames,safari10});const minify=options=>{const{file,input,inputSourceMap}=options;// Copy terser options\nconst terserOptions=buildTerserOptions(options.terserOptions);// Add source map data\nif(inputSourceMap){terserOptions.sourceMap={content:inputSourceMap};}const{error,map,code,warnings}=(0,_terser.minify)({[file]:input},terserOptions);return{error,map,code,warnings};};var _default=minify;exports.default=_default;","\"use strict\";var _minify=_interopRequireDefault(require(\"./minify\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}module.exports=(options,callback)=>{try{// 'use strict' => this === undefined (Clean Scope)\n// Safer for possible security issues, albeit not critical at all here\n// eslint-disable-next-line no-new-func, no-param-reassign\noptions=new Function('exports','require','module','__filename','__dirname',`'use strict'\\nreturn ${options}`)(exports,require,module,__filename,__dirname);callback(null,(0,_minify.default)(options));}catch(errors){callback(errors);}};","\"use strict\";exports.__esModule=true;exports.UnlinkRemovedPagesPlugin=void 0;var _path=require(\"path\");var _util=require(\"util\");var _fs=_interopRequireDefault(require(\"fs\"));var _constants=require(\"next-server/constants\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const unlink=(0,_util.promisify)(_fs.default.unlink);// Makes sure removed pages are removed from `.next` in development\nclass UnlinkRemovedPagesPlugin{constructor(){this.prevAssets=void 0;this.prevAssets={};}apply(compiler){compiler.hooks.afterEmit.tapAsync('NextJsUnlinkRemovedPages',(compilation,callback)=>{const removed=Object.keys(this.prevAssets).filter(a=>_constants.IS_BUNDLED_PAGE_REGEX.test(a)&&!compilation.assets[a]);this.prevAssets=compilation.assets;Promise.all(removed.map(async f=>{const path=(0,_path.join)(compiler.outputPath,f);try{await unlink(path);}catch(err){if(err.code==='ENOENT')return;throw err;}})).then(()=>callback(),callback);});}}exports.UnlinkRemovedPagesPlugin=UnlinkRemovedPagesPlugin;","/**\nMIT License\n\nCopyright (c) 2015-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/ // This file is based on https://github.com/facebook/create-react-app/blob/7b1a32be6ec9f99a6c9a3c66813f3ac09c4736b9/packages/react-dev-utils/formatWebpackMessages.js\n// It's been edited to remove chalk and CRA-specific logic\n'use strict';const friendlySyntaxErrorLabel='Syntax error:';function isLikelyASyntaxError(message){return message.indexOf(friendlySyntaxErrorLabel)!==-1;}// Cleans up webpack error messages.\n// eslint-disable-next-line no-unused-vars\nfunction formatMessage(message,isError){let lines=message.split('\\n');// Strip Webpack-added headers off errors/warnings\n// https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\nlines=lines.filter(line=>!/Module [A-z ]+\\(from/.test(line));// Transform parsing error into syntax error\n// TODO: move this to our ESLint formatter?\nlines=lines.map(line=>{const parsingError=/Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line);if(!parsingError){return line;}const[,errorLine,errorColumn,errorMessage]=parsingError;return friendlySyntaxErrorLabel+\" \"+errorMessage+\" (\"+errorLine+\":\"+errorColumn+\")\";});message=lines.join('\\n');// Smoosh syntax errors (commonly found in CSS)\nmessage=message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g,friendlySyntaxErrorLabel+\" $3 ($1:$2)\\n\");// Remove columns from ESLint formatter output (we added these for more\n// accurate syntax errors)\nmessage=message.replace(/Line (\\d+):\\d+:/g,'Line $1:');// Clean up export errors\nmessage=message.replace(/^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\"Attempted import error: '$1' is not exported from '$2'.\");message=message.replace(/^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\"Attempted import error: '$2' does not contain a default export (imported as '$1').\");message=message.replace(/^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\"Attempted import error: '$1' is not exported from '$3' (imported as '$2').\");lines=message.split('\\n');// Remove leading newline\nif(lines.length>2&&lines[1].trim()===''){lines.splice(1,1);}// Clean up file name\nlines[0]=lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/,'$1');// Cleans up verbose \"module not found\" messages for files and packages.\nif(lines[1]&&lines[1].indexOf('Module not found: ')===0){lines=[lines[0],lines[1].replace('Error: ','').replace('Module not found: Cannot find file:','Cannot find file:')];}message=lines.join('\\n');// Internal stacks are generally useless so we strip them... with the\n// exception of stacks containing `webpack:` because they're normally\n// from user code generated by Webpack. For more information see\n// https://github.com/facebook/create-react-app/pull/1050\nmessage=message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm,'');// at ... ...:x:y\nmessage=message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm,'');// at <anonymous>\nlines=message.split('\\n');// Remove duplicated newlines\nlines=lines.filter((line,index,arr)=>index===0||line.trim()!==''||line.trim()!==arr[index-1].trim());// Reassemble the message\nmessage=lines.join('\\n');return message.trim();}function formatWebpackMessages(json){const formattedErrors=json.errors.map(function(message){return formatMessage(message,true);});const formattedWarnings=json.warnings.map(function(message){return formatMessage(message,false);});const result={errors:formattedErrors,warnings:formattedWarnings};if(result.errors.some(isLikelyASyntaxError)){// If there are any syntax errors, show just them.\nresult.errors=result.errors.filter(isLikelyASyntaxError);}return result;}module.exports=formatWebpackMessages;","module.exports =\n/******/ (function(modules, runtime) { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/\n/******/ \t// the startup function\n/******/ \tfunction startup() {\n/******/ \t\t// Load entry module and return exports\n/******/ \t\treturn __webpack_require__(502);\n/******/ \t};\n/******/\n/******/ \t// run startup\n/******/ \treturn startup();\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 46:\n/***/ (function(module) {\n\nmodule.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n\n\n/***/ }),\n\n/***/ 66:\n/***/ (function(module) {\n\nmodule.exports = require(\"fs\");\n\n/***/ }),\n\n/***/ 148:\n/***/ (function(module) {\n\nmodule.exports = {\"assert\":true,\"async_hooks\":\">= 8\",\"buffer_ieee754\":\"< 0.9.7\",\"buffer\":true,\"child_process\":true,\"cluster\":true,\"console\":true,\"constants\":true,\"crypto\":true,\"_debugger\":\"< 8\",\"dgram\":true,\"dns\":true,\"domain\":true,\"events\":true,\"freelist\":\"< 6\",\"fs\":true,\"fs/promises\":\">= 10 && < 10.1\",\"_http_agent\":\">= 0.11.1\",\"_http_client\":\">= 0.11.1\",\"_http_common\":\">= 0.11.1\",\"_http_incoming\":\">= 0.11.1\",\"_http_outgoing\":\">= 0.11.1\",\"_http_server\":\">= 0.11.1\",\"http\":true,\"http2\":\">= 8.8\",\"https\":true,\"inspector\":\">= 8.0.0\",\"_linklist\":\"< 8\",\"module\":true,\"net\":true,\"node-inspect/lib/_inspect\":\">= 7.6.0 && < 12\",\"node-inspect/lib/internal/inspect_client\":\">= 7.6.0 && < 12\",\"node-inspect/lib/internal/inspect_repl\":\">= 7.6.0 && < 12\",\"os\":true,\"path\":true,\"perf_hooks\":\">= 8.5\",\"process\":\">= 1\",\"punycode\":true,\"querystring\":true,\"readline\":true,\"repl\":true,\"smalloc\":\">= 0.11.5 && < 3\",\"_stream_duplex\":\">= 0.9.4\",\"_stream_transform\":\">= 0.9.4\",\"_stream_wrap\":\">= 1.4.1\",\"_stream_passthrough\":\">= 0.9.4\",\"_stream_readable\":\">= 0.9.4\",\"_stream_writable\":\">= 0.9.4\",\"stream\":true,\"string_decoder\":true,\"sys\":true,\"timers\":true,\"_tls_common\":\">= 0.11.13\",\"_tls_legacy\":\">= 0.11.3 && < 10\",\"_tls_wrap\":\">= 0.11.3\",\"tls\":true,\"trace_events\":\">= 10\",\"tty\":true,\"url\":true,\"util\":true,\"v8/tools/arguments\":\">= 10 && < 12\",\"v8/tools/codemap\":[\">= 4.4.0 && < 5\",\">= 5.2.0 && < 12\"],\"v8/tools/consarray\":[\">= 4.4.0 && < 5\",\">= 5.2.0 && < 12\"],\"v8/tools/csvparser\":[\">= 4.4.0 && < 5\",\">= 5.2.0 && < 12\"],\"v8/tools/logreader\":[\">= 4.4.0 && < 5\",\">= 5.2.0 && < 12\"],\"v8/tools/profile_view\":[\">= 4.4.0 && < 5\",\">= 5.2.0 && < 12\"],\"v8/tools/splaytree\":[\">= 4.4.0 && < 5\",\">= 5.2.0 && < 12\"],\"v8\":\">= 1\",\"vm\":true,\"worker_threads\":\">= 11.7\",\"zlib\":true};\n\n/***/ }),\n\n/***/ 247:\n/***/ (function(module, __unusedexports, __webpack_require__) {\n\nvar core = __webpack_require__(860);\nvar fs = __webpack_require__(66);\nvar path = __webpack_require__(589);\nvar caller = __webpack_require__(380);\nvar nodeModulesPaths = __webpack_require__(315);\nvar normalizeOptions = __webpack_require__(46);\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n\n    var extensions = opts.extensions || ['.js'];\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    if (opts.preserveSymlinks === false) {\n        fs.realpath(absoluteStart, function (realPathErr, realStart) {\n            if (realPathErr && realPathErr.code !== 'ENOENT') cb(err);\n            else init(realPathErr ? absoluteStart : realStart);\n        });\n    } else {\n        init(absoluteStart);\n    }\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) cb(null, n, pkg);\n            else if (core[x]) return cb(null, x);\n            else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) cb(null, d, pkg);\n            else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        var pkgfile = path.join(dir, 'package.json');\n        isFile(pkgfile, function (err, ex) {\n            // on err, ex is false\n            if (!ex) return loadpkg(path.dirname(dir), cb);\n\n            readFile(pkgfile, function (err, body) {\n                if (err) cb(err);\n                try { var pkg = JSON.parse(body); } catch (jsonErr) {}\n\n                if (pkg && opts.packageFilter) {\n                    pkg = opts.packageFilter(pkg, pkgfile);\n                }\n                cb(null, pkg, dir);\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        var pkgfile = path.join(x, 'package.json');\n        isFile(pkgfile, function (err, ex) {\n            if (err) return cb(err);\n            if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n            readFile(pkgfile, function (err, body) {\n                if (err) return cb(err);\n                try {\n                    var pkg = JSON.parse(body);\n                } catch (jsonErr) {}\n\n                if (opts.packageFilter) {\n                    pkg = opts.packageFilter(pkg, pkgfile);\n                }\n\n                if (pkg.main) {\n                    if (typeof pkg.main !== 'string') {\n                        var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                        mainError.code = 'INVALID_PACKAGE_MAIN';\n                        return cb(mainError);\n                    }\n                    if (pkg.main === '.' || pkg.main === './') {\n                        pkg.main = 'index';\n                    }\n                    loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                        if (err) return cb(err);\n                        if (m) return cb(null, m, pkg);\n                        if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                        var dir = path.resolve(x, pkg.main);\n                        loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                            if (err) return cb(err);\n                            if (n) return cb(null, n, pkg);\n                            loadAsFile(path.join(x, 'index'), pkg, cb);\n                        });\n                    });\n                    return;\n                }\n\n                loadAsFile(path.join(x, '/index'), pkg, cb);\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(dir, isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            var file = path.join(dir, x);\n            loadAsFile(file, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(path.join(dir, x), opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        processDirs(cb, nodeModulesPaths(start, opts, x));\n    }\n};\n\n\n/***/ }),\n\n/***/ 315:\n/***/ (function(module, __unusedexports, __webpack_require__) {\n\nvar path = __webpack_require__(589);\nvar parse = path.parse || __webpack_require__(767);\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.join(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n\n\n/***/ }),\n\n/***/ 380:\n/***/ (function(module) {\n\nmodule.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core = __webpack_require__(860);\nvar async = __webpack_require__(247);\nasync.core = core;\nasync.isCore = function isCore(x) { return core[x]; };\nasync.sync = __webpack_require__(550);\n\nexports = async;\nmodule.exports = async;\n\n\n/***/ }),\n\n/***/ 550:\n/***/ (function(module, __unusedexports, __webpack_require__) {\n\nvar core = __webpack_require__(860);\nvar fs = __webpack_require__(66);\nvar path = __webpack_require__(589);\nvar caller = __webpack_require__(380);\nvar nodeModulesPaths = __webpack_require__(315);\nvar normalizeOptions = __webpack_require__(46);\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isFile() || stat.isFIFO();\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isDirectory();\n};\n\nmodule.exports = function (x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n\n    var extensions = opts.extensions || ['.js'];\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    if (opts.preserveSymlinks === false) {\n        try {\n            absoluteStart = fs.realpathSync(absoluteStart);\n        } catch (realPathErr) {\n            if (realPathErr.code !== 'ENOENT') {\n                throw realPathErr;\n            }\n        }\n    }\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return m;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return n;\n    }\n\n    if (core[x]) return x;\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(dir, 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var body = readFileSync(pkgfile);\n\n        try {\n            var pkg = JSON.parse(body);\n        } catch (jsonErr) {}\n\n        if (pkg && opts.packageFilter) {\n            pkg = opts.packageFilter(pkg, dir);\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(x, '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var body = readFileSync(pkgfile, 'UTF8');\n                var pkg = JSON.parse(body);\n            } catch (e) {}\n\n            if (opts.packageFilter) {\n                pkg = opts.packageFilter(pkg, x);\n            }\n\n            if (pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var dirs = nodeModulesPaths(start, opts, x);\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(dir)) {\n                var m = loadAsFileSync(path.join(dir, '/', x));\n                if (m) return m;\n                var n = loadAsDirectorySync(path.join(dir, '/', x));\n                if (n) return n;\n            }\n        }\n    }\n};\n\n\n/***/ }),\n\n/***/ 589:\n/***/ (function(module) {\n\nmodule.exports = require(\"path\");\n\n/***/ }),\n\n/***/ 767:\n/***/ (function(module) {\n\n\"use strict\";\n\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into three parts: [*, device, slash,\n// tail] windows-only\nvar splitDeviceRe =\n    /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\n// Regex to split the tail part of the above into [*, dir, basename, ext]\nvar splitTailRe =\n    /^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;\n\nvar win32 = {};\n\n// Function to split a filename into [root, dir, basename, ext]\nfunction win32SplitPath(filename) {\n  // Separate device+slash from tail\n  var result = splitDeviceRe.exec(filename),\n      device = (result[1] || '') + (result[2] || ''),\n      tail = result[3] || '';\n  // Split the tail into dir, basename and extension\n  var result2 = splitTailRe.exec(tail),\n      dir = result2[1],\n      basename = result2[2],\n      ext = result2[3];\n  return [device, dir, basename, ext];\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 4) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[0],\n    dir: allParts[0] + allParts[1].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[3],\n    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\n  };\n};\n\n\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 4) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  allParts[1] = allParts[1] || '';\n  allParts[2] = allParts[2] || '';\n  allParts[3] = allParts[3] || '';\n\n  return {\n    root: allParts[0],\n    dir: allParts[0] + allParts[1].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[3],\n    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n\n\n/***/ }),\n\n/***/ 860:\n/***/ (function(module, __unusedexports, __webpack_require__) {\n\nvar current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = Number(current[i] || 0);\n        var ver = Number(versionParts[i] || 0);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        } else {\n            return false;\n        }\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = __webpack_require__(148);\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n\n\n/***/ })\n\n/******/ });","module.exports =\n/******/ (function(modules, runtime) { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/\n/******/ \t// the startup function\n/******/ \tfunction startup() {\n/******/ \t\t// Load entry module and return exports\n/******/ \t\treturn __webpack_require__(260);\n/******/ \t};\n/******/\n/******/ \t// run startup\n/******/ \treturn startup();\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 260:\n/***/ (function(module) {\n\nmodule.exports = function (rows_, opts) {\n    if (!opts) opts = {};\n    var hsep = opts.hsep === undefined ? '  ' : opts.hsep;\n    var align = opts.align || [];\n    var stringLength = opts.stringLength\n        || function (s) { return String(s).length; }\n    ;\n    \n    var dotsizes = reduce(rows_, function (acc, row) {\n        forEach(row, function (c, ix) {\n            var n = dotindex(c);\n            if (!acc[ix] || n > acc[ix]) acc[ix] = n;\n        });\n        return acc;\n    }, []);\n    \n    var rows = map(rows_, function (row) {\n        return map(row, function (c_, ix) {\n            var c = String(c_);\n            if (align[ix] === '.') {\n                var index = dotindex(c);\n                var size = dotsizes[ix] + (/\\./.test(c) ? 1 : 2)\n                    - (stringLength(c) - index)\n                ;\n                return c + Array(size).join(' ');\n            }\n            else return c;\n        });\n    });\n    \n    var sizes = reduce(rows, function (acc, row) {\n        forEach(row, function (c, ix) {\n            var n = stringLength(c);\n            if (!acc[ix] || n > acc[ix]) acc[ix] = n;\n        });\n        return acc;\n    }, []);\n    \n    return map(rows, function (row) {\n        return map(row, function (c, ix) {\n            var n = (sizes[ix] - stringLength(c)) || 0;\n            var s = Array(Math.max(n + 1, 1)).join(' ');\n            if (align[ix] === 'r' || align[ix] === '.') {\n                return s + c;\n            }\n            if (align[ix] === 'c') {\n                return Array(Math.ceil(n / 2 + 1)).join(' ')\n                    + c + Array(Math.floor(n / 2 + 1)).join(' ')\n                ;\n            }\n            \n            return c + s;\n        }).join(hsep).replace(/\\s+$/, '');\n    }).join('\\n');\n};\n\nfunction dotindex (c) {\n    var m = /\\.[^.]*$/.exec(c);\n    return m ? m.index + 1 : c.length;\n}\n\nfunction reduce (xs, f, init) {\n    if (xs.reduce) return xs.reduce(f, init);\n    var i = 0;\n    var acc = arguments.length >= 3 ? init : xs[i++];\n    for (; i < xs.length; i++) {\n        f(acc, xs[i], i);\n    }\n    return acc;\n}\n\nfunction forEach (xs, f) {\n    if (xs.forEach) return xs.forEach(f);\n    for (var i = 0; i < xs.length; i++) {\n        f.call(xs, xs[i], i);\n    }\n}\n\nfunction map (xs, f) {\n    if (xs.map) return xs.map(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        res.push(f.call(xs, xs[i], i));\n    }\n    return res;\n}\n\n\n/***/ })\n\n/******/ });","module.exports =\n/******/ (function(modules, runtime) { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/\n/******/ \t// the startup function\n/******/ \tfunction startup() {\n/******/ \t\t// Load entry module and return exports\n/******/ \t\treturn __webpack_require__(98);\n/******/ \t};\n/******/\n/******/ \t// run startup\n/******/ \treturn startup();\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 98:\n/***/ (function(module) {\n\nfunction n(n,t){for(var r in t)n[r]=t[r];return n}module.exports=function(t){var r=[];function u(n){for(var t=[],u=0;u<r.length;u++)r[u]===n?n=null:t.push(r[u]);r=t}function e(u,e,o){t=e?u:n(n({},t),u);for(var i=r,f=0;f<i.length;f++)i[f](t,o)}return t=t||{},{action:function(n){function r(t){e(t,!1,n)}return function(){for(var u=arguments,e=[t],o=0;o<arguments.length;o++)e.push(u[o]);var i=n.apply(this,e);if(null!=i)return i.then?i.then(r):r(i)}},setState:e,subscribe:function(n){return r.push(n),function(){u(n)}},unsubscribe:u,getState:function(){return t}}};\n//# sourceMappingURL=unistore.js.map\n\n\n/***/ })\n\n/******/ });","\"use strict\";exports.__esModule=true;exports.DOT_NEXT_ALIAS=exports.PAGES_DIR_ALIAS=exports.API_ROUTE=exports.NEXT_PROJECT_ROOT_DIST_SERVER=exports.NEXT_PROJECT_ROOT_DIST_CLIENT=exports.DEFAULT_PAGES_DIR=exports.NEXT_PROJECT_ROOT_NODE_MODULES=exports.NEXT_PROJECT_ROOT_DIST=exports.NEXT_PROJECT_ROOT=void 0;var _path=require(\"path\");const NEXT_PROJECT_ROOT=(0,_path.join)(__dirname,'..','..');exports.NEXT_PROJECT_ROOT=NEXT_PROJECT_ROOT;const NEXT_PROJECT_ROOT_DIST=(0,_path.join)(NEXT_PROJECT_ROOT,'dist');exports.NEXT_PROJECT_ROOT_DIST=NEXT_PROJECT_ROOT_DIST;const NEXT_PROJECT_ROOT_NODE_MODULES=(0,_path.join)(NEXT_PROJECT_ROOT,'node_modules');exports.NEXT_PROJECT_ROOT_NODE_MODULES=NEXT_PROJECT_ROOT_NODE_MODULES;const DEFAULT_PAGES_DIR=(0,_path.join)(NEXT_PROJECT_ROOT_DIST,'pages');exports.DEFAULT_PAGES_DIR=DEFAULT_PAGES_DIR;const NEXT_PROJECT_ROOT_DIST_CLIENT=(0,_path.join)(NEXT_PROJECT_ROOT_DIST,'client');exports.NEXT_PROJECT_ROOT_DIST_CLIENT=NEXT_PROJECT_ROOT_DIST_CLIENT;const NEXT_PROJECT_ROOT_DIST_SERVER=(0,_path.join)(NEXT_PROJECT_ROOT_DIST,'server');// Regex for API routes\nexports.NEXT_PROJECT_ROOT_DIST_SERVER=NEXT_PROJECT_ROOT_DIST_SERVER;const API_ROUTE=/^\\/api(?:\\/|$)/;// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexports.API_ROUTE=API_ROUTE;const PAGES_DIR_ALIAS='private-next-pages';exports.PAGES_DIR_ALIAS=PAGES_DIR_ALIAS;const DOT_NEXT_ALIAS='private-dot-next';exports.DOT_NEXT_ALIAS=DOT_NEXT_ALIAS;","\"use strict\";exports.__esModule=true;exports.fileExists=fileExists;var _fs=_interopRequireDefault(require(\"fs\"));var _util=require(\"util\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const access=(0,_util.promisify)(_fs.default.access);async function fileExists(fileName){try{await access(fileName,_fs.default.constants.F_OK);return true;}catch(err){if(err.code==='ENOENT'){return false;}throw err;}}","\"use strict\";exports.__esModule=true;exports.recursiveDelete=recursiveDelete;var _fs=_interopRequireDefault(require(\"fs\"));var _path=require(\"path\");var _util=require(\"util\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const readdir=(0,_util.promisify)(_fs.default.readdir);const stat=(0,_util.promisify)(_fs.default.stat);const rmdir=(0,_util.promisify)(_fs.default.rmdir);const unlink=(0,_util.promisify)(_fs.default.unlink);const sleep=(0,_util.promisify)(setTimeout);const unlinkFile=async(p,t=1)=>{try{await unlink(p);}catch(e){if((e.code==='EBUSY'||e.code==='ENOTEMPTY'||e.code==='EPERM'||e.code==='EMFILE')&&t<3){await sleep(t*100);return unlinkFile(p,t++);}if(e.code==='ENOENT'){return;}throw e;}};/**\n * Recursively delete directory contents\n * @param  {string} dir Directory to delete the contents of\n * @param  {RegExp} [filter] Filter for the relative file path\n * @param  {boolean} [ensure] Ensures that parameter dir exists, this is not passed recursively\n * @param  {string} [previousPath] Ensures that parameter dir exists, this is not passed recursively\n * @returns Promise void\n */async function recursiveDelete(dir,filter,previousPath='',ensure){let result;try{result=await readdir(dir);}catch(e){if(e.code==='ENOENT'&&!ensure){return;}throw e;}await Promise.all(result.map(async part=>{const absolutePath=(0,_path.join)(dir,part);const pathStat=await stat(absolutePath).catch(e=>{if(e.code!=='ENOENT')throw e;});if(!pathStat){return;}if(pathStat.isDirectory()){const pp=(0,_path.join)(previousPath,part);await recursiveDelete(absolutePath,filter,pp);if(!filter||filter.test(pp)){return rmdir(absolutePath);}return;}if(!filter||filter.test((0,_path.join)(previousPath,part))){return unlinkFile(absolutePath);}}));}","\"use strict\";exports.__esModule=true;exports.recursiveReadDir=recursiveReadDir;var _fs=_interopRequireDefault(require(\"fs\"));var _path=require(\"path\");var _util=require(\"util\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const readdir=(0,_util.promisify)(_fs.default.readdir);const stat=(0,_util.promisify)(_fs.default.stat);/**\n * Recursively read directory\n * @param  {string} dir Directory to read\n * @param  {RegExp} filter Filter for the file name, only the name part is considered, not the full path\n * @param  {string[]=[]} arr This doesn't have to be provided, it's used for the recursion\n * @param  {string=dir`} rootDir Used to replace the initial path, only the relative path is left, it's faster than path.relative.\n * @returns Promise array holding all relative paths\n */async function recursiveReadDir(dir,filter,ignore,arr=[],rootDir=dir){const result=await readdir(dir);await Promise.all(result.map(async part=>{const absolutePath=(0,_path.join)(dir,part);if(ignore&&ignore.test(part))return;const pathStat=await stat(absolutePath);if(pathStat.isDirectory()){await recursiveReadDir(absolutePath,filter,ignore,arr,rootDir);return;}if(!filter.test(part)){return;}arr.push(absolutePath.replace(rootDir,''));}));return arr.sort();}","\"use strict\";exports.__esModule=true;exports.verifyTypeScriptSetup=verifyTypeScriptSetup;var _fs=_interopRequireDefault(require(\"fs\"));var _os=_interopRequireDefault(require(\"os\"));var _path=_interopRequireDefault(require(\"path\"));var _chalk=_interopRequireDefault(require(\"chalk\"));var _util=require(\"util\");var _recursiveReaddir=require(\"./recursive-readdir\");var _fileExists=require(\"./file-exists\");var _index=_interopRequireDefault(require(\"next/dist/compiled/resolve/index.js\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}const writeFile=(0,_util.promisify)(_fs.default.writeFile);function writeJson(fileName,object){return writeFile(fileName,JSON.stringify(object,null,2).replace(/\\n/g,_os.default.EOL)+_os.default.EOL);}async function hasTypeScript(dir){const typescriptFiles=await(0,_recursiveReaddir.recursiveReadDir)(dir,/.*\\.(ts|tsx)$/,/(node_modules|.*\\.d\\.ts)/);return typescriptFiles.length>0;}async function checkDependencies({dir,isYarn}){const requiredPackages=[{file:'typescript',pkg:'typescript'},{file:'@types/react/index.d.ts',pkg:'@types/react'},{file:'@types/node/index.d.ts',pkg:'@types/node'}];const missingPackages=requiredPackages.filter(p=>{try{_index.default.sync(p.file,{basedir:dir});}catch(_){return true;}});if(missingPackages.length<1){return;}const packagesHuman=missingPackages.map((p,index,{length})=>(index>0?index===length-1?length>2?', and ':' and ':', ':'')+p.pkg).join('');const packagesCli=missingPackages.map(p=>p.pkg).join(' ');console.error(_chalk.default.bold.red(`It looks like you're trying to use TypeScript but do not have the required package(s) installed.`));console.error();console.error(_chalk.default.bold(`Please install ${_chalk.default.bold(packagesHuman)} by running:`));console.error();console.error(`\\t${_chalk.default.bold.cyan((isYarn?'yarn add --dev':'npm install --save-dev')+' '+packagesCli)}`);console.error();console.error(_chalk.default.bold('If you are not trying to use TypeScript, please remove the '+_chalk.default.cyan('tsconfig.json')+' file from your package root (and any TypeScript files).'));console.error();process.exit(1);}async function verifyTypeScriptSetup(dir){const tsConfigPath=_path.default.join(dir,'tsconfig.json');const yarnLockFile=_path.default.join(dir,'yarn.lock');const hasTsConfig=await(0,_fileExists.fileExists)(tsConfigPath);const isYarn=await(0,_fileExists.fileExists)(yarnLockFile);const hasTypeScriptFiles=await hasTypeScript(dir);let firstTimeSetup=!hasTsConfig&&hasTypeScriptFiles;if(!(hasTsConfig||hasTypeScriptFiles)){return;}await checkDependencies({dir,isYarn});const ts=await Promise.resolve().then(()=>_interopRequireWildcard(require('typescript')));const compilerOptions={// These are suggested values and will be set when not present in the\n// tsconfig.json\n// 'parsedValue' matches the output value from ts.parseJsonConfigFileContent()\ntarget:{parsedValue:ts.ScriptTarget.ES5,suggested:'es5'},lib:{suggested:['dom','dom.iterable','esnext']},allowJs:{suggested:true},skipLibCheck:{suggested:true},strict:{suggested:false},forceConsistentCasingInFileNames:{suggested:true},noEmit:{suggested:true},// These values are required and cannot be changed by the user\n// Keep this in sync with the webpack config\nesModuleInterop:{value:true,reason:'requirement for babel'},module:{parsedValue:ts.ModuleKind.ESNext,value:'esnext',reason:'for dynamic import() support'},moduleResolution:{parsedValue:ts.ModuleResolutionKind.NodeJs,value:'node',reason:'to match webpack resolution'},resolveJsonModule:{value:true},isolatedModules:{value:true,reason:'requirement for babel'},jsx:{parsedValue:ts.JsxEmit.Preserve,value:'preserve'}};const formatDiagnosticHost={getCanonicalFileName:fileName=>fileName,getCurrentDirectory:ts.sys.getCurrentDirectory,getNewLine:()=>_os.default.EOL};if(firstTimeSetup){console.log(_chalk.default.yellow(`We detected TypeScript in your project and created a ${_chalk.default.bold('tsconfig.json')} file for you.`));console.log();await writeJson(tsConfigPath,{});}const messages=[];let appTsConfig;let parsedTsConfig;let parsedCompilerOptions;try{const{config:readTsConfig,error}=ts.readConfigFile(tsConfigPath,ts.sys.readFile);if(error){throw new Error(ts.formatDiagnostic(error,formatDiagnosticHost));}appTsConfig=readTsConfig;// Get TS to parse and resolve any \"extends\"\n// Calling this function also mutates the tsconfig, adding in \"include\" and\n// \"exclude\", but the compilerOptions remain untouched\nparsedTsConfig=JSON.parse(JSON.stringify(readTsConfig));const result=ts.parseJsonConfigFileContent(parsedTsConfig,ts.sys,_path.default.dirname(tsConfigPath));if(result.errors&&result.errors.length){throw new Error(ts.formatDiagnostic(result.errors[0],formatDiagnosticHost));}parsedCompilerOptions=result.options;}catch(e){if(e&&e.name==='SyntaxError'){console.error(_chalk.default.red.bold('Could not parse',_chalk.default.cyan('tsconfig.json')+'.','Please make sure it contains syntactically correct JSON.'));}console.info(e&&e.message?`${e.message}`:'');process.exit(1);return;}if(appTsConfig.compilerOptions==null){appTsConfig.compilerOptions={};firstTimeSetup=true;}for(const option of Object.keys(compilerOptions)){const{parsedValue,value,suggested,reason}=compilerOptions[option];const valueToCheck=parsedValue===undefined?value:parsedValue;const coloredOption=_chalk.default.cyan('compilerOptions.'+option);if(suggested!=null){if(parsedCompilerOptions[option]===undefined){appTsConfig.compilerOptions[option]=suggested;messages.push(`${coloredOption} to be ${_chalk.default.bold('suggested')} value: ${_chalk.default.cyan.bold(suggested)} (this can be changed)`);}}else if(parsedCompilerOptions[option]!==valueToCheck){appTsConfig.compilerOptions[option]=value;messages.push(`${coloredOption} ${_chalk.default.bold(valueToCheck==null?'must not':'must')} be ${valueToCheck==null?'set':_chalk.default.cyan.bold(value)}`+(reason!=null?` (${reason})`:''));}}// tsconfig will have the merged \"include\" and \"exclude\" by this point\nif(parsedTsConfig.exclude==null){appTsConfig.exclude=['node_modules'];}if(parsedTsConfig.include==null){appTsConfig.include=['next-env.d.ts','**/*.ts','**/*.tsx'];}if(messages.length>0){if(firstTimeSetup){console.info(_chalk.default.bold('Your',_chalk.default.cyan('tsconfig.json'),'has been populated with default values.'));console.info();}else{console.warn(_chalk.default.bold('The following changes are being made to your',_chalk.default.cyan('tsconfig.json'),'file:'));messages.forEach(message=>{console.warn('  - '+message);});console.warn();}await writeJson(tsConfigPath,appTsConfig);}// Reference `next` types\nconst appTypeDeclarations=_path.default.join(dir,'next-env.d.ts');if(!_fs.default.existsSync(appTypeDeclarations)){_fs.default.writeFileSync(appTypeDeclarations,'/// <reference types=\"next\" />'+_os.default.EOL+'/// <reference types=\"next/types/global\" />'+_os.default.EOL);}}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/next/dist/server sync recursive\";","\"use strict\";exports.__esModule=true;exports.default=ErrorDebug;exports.styles=void 0;var _react=_interopRequireDefault(require(\"react\"));var _head=_interopRequireDefault(require(\"next-server/head\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// This component is only rendered on the server side.\nfunction ErrorDebug({error,info}){return _react.default.createElement(\"div\",{style:styles.errorDebug},_react.default.createElement(_head.default,null,_react.default.createElement(\"meta\",{name:\"viewport\",content:\"width=device-width, initial-scale=1.0\"})),_react.default.createElement(StackTrace,{error:error,info:info}));}const StackTrace=({error:{name,message,stack},info})=>_react.default.createElement(\"div\",null,_react.default.createElement(\"div\",{style:styles.heading},message||name),_react.default.createElement(\"pre\",{style:styles.stack},stack),info&&_react.default.createElement(\"pre\",{style:styles.stack},info.componentStack));const styles={errorDebug:{background:'#ffffff',boxSizing:'border-box',overflow:'auto',padding:'24px',position:'fixed',left:0,right:0,top:0,bottom:0,zIndex:9999,color:'#000000'},stack:{fontFamily:'\"SF Mono\", \"Roboto Mono\", \"Fira Mono\", consolas, menlo-regular, monospace',fontSize:'13px',lineHeight:'18px',color:'#777',margin:0,whiteSpace:'pre-wrap',wordWrap:'break-word',marginTop:'16px'},heading:{fontFamily:'-apple-system, system-ui, BlinkMacSystemFont, Roboto, \"Segoe UI\", \"Fira Sans\", Avenir, \"Helvetica Neue\", \"Lucida Grande\", sans-serif',fontSize:'20px',fontWeight:'400',lineHeight:'28px',color:'#000000',marginBottom:'0px',marginTop:'0px'}};exports.styles=styles;","\"use strict\";exports.__esModule=true;exports.renderScriptError=renderScriptError;exports.default=void 0;var _path=require(\"path\");var _webpackDevMiddleware=_interopRequireDefault(require(\"webpack-dev-middleware\"));var _webpackHotMiddleware=_interopRequireDefault(require(\"webpack-hot-middleware\"));var _errorOverlayMiddleware=_interopRequireDefault(require(\"./lib/error-overlay-middleware\"));var _onDemandEntryHandler=_interopRequireWildcard(require(\"./on-demand-entry-handler\"));var _webpack=_interopRequireDefault(require(\"webpack\"));var _webpackConfig=_interopRequireDefault(require(\"../build/webpack-config\"));var _constants=require(\"next-server/constants\");var _constants2=require(\"../lib/constants\");var _router=require(\"next-server/dist/server/router\");var _entries=require(\"../build/entries\");var _output=require(\"../build/output\");var _findPageFile=require(\"./lib/find-page-file\");var _recursiveDelete=require(\"../lib/recursive-delete\");var _fileExists=require(\"../lib/file-exists\");var _util=require(\"util\");var _fs=_interopRequireDefault(require(\"fs\"));function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const access=(0,_util.promisify)(_fs.default.access);const readFile=(0,_util.promisify)(_fs.default.readFile);async function renderScriptError(res,error){// Asks CDNs and others to not to cache the errored page\nres.setHeader('Cache-Control','no-cache, no-store, max-age=0, must-revalidate');if(error.code==='ENOENT'||error.message==='INVALID_BUILD_ID'){res.statusCode=404;res.end('404 - Not Found');return;}console.error(error.stack);res.statusCode=500;res.end('500 - Internal Error');}function addCorsSupport(req,res){if(!req.headers.origin){return{preflight:false};}res.setHeader('Access-Control-Allow-Origin',req.headers.origin);res.setHeader('Access-Control-Allow-Methods','OPTIONS, GET');// Based on https://github.com/primus/access-control/blob/4cf1bc0e54b086c91e6aa44fb14966fa5ef7549c/index.js#L158\nif(req.headers['access-control-request-headers']){res.setHeader('Access-Control-Allow-Headers',req.headers['access-control-request-headers']);}if(req.method==='OPTIONS'){res.writeHead(200);res.end();return{preflight:true};}return{preflight:false};}const matchNextPageBundleRequest=(0,_router.route)('/_next/static/:buildId/pages/:path*.js(.map)?');// Recursively look up the issuer till it ends up at the root\nfunction findEntryModule(issuer){if(issuer.issuer){return findEntryModule(issuer.issuer);}return issuer;}function erroredPages(compilation,options={enhanceName:name=>name}){const failedPages={};for(const error of compilation.errors){if(!error.origin){continue;}const entryModule=findEntryModule(error.origin);const{name}=entryModule;if(!name){continue;}// Only pages have to be reloaded\nif(!_constants.IS_BUNDLED_PAGE_REGEX.test(name)){continue;}const enhancedName=options.enhanceName(name);if(!failedPages[enhancedName]){failedPages[enhancedName]=[];}failedPages[enhancedName].push(error);}return failedPages;}class HotReloader{constructor(dir,{config,buildId}={}){this.send=(action,...args)=>{this.webpackHotMiddleware.publish({action,data:args});};this.buildId=buildId;this.dir=dir;this.middlewares=[];this.webpackDevMiddleware=null;this.webpackHotMiddleware=null;this.initialized=false;this.stats=null;this.serverPrevDocumentHash=null;this.config=config;}async run(req,res,parsedUrl){// Usually CORS support is not needed for the hot-reloader (this is dev only feature)\n// With when the app runs for multi-zones support behind a proxy,\n// the current page is trying to access this URL via assetPrefix.\n// That's when the CORS support is needed.\nconst{preflight}=addCorsSupport(req,res);if(preflight){return;}// When a request comes in that is a page bundle, e.g. /_next/static/<buildid>/pages/index.js\n// we have to compile the page using on-demand-entries, this middleware will handle doing that\n// by adding the page to on-demand-entries, waiting till it's done\n// and then the bundle will be served like usual by the actual route in server/index.js\nconst handlePageBundleRequest=async(res,parsedUrl)=>{const{pathname}=parsedUrl;const params=matchNextPageBundleRequest(pathname);if(!params){return{};}if(params.buildId!==this.buildId){return;}const page=`/${params.path.join('/')}`;if(page==='/_error'||_constants.BLOCKED_PAGES.indexOf(page)===-1){try{await this.ensurePage(page);}catch(error){await renderScriptError(res,error);return{finished:true};}const bundlePath=(0,_path.join)(this.dir,this.config.distDir,'static/development/pages',page+'.js');// make sure to 404 for AMP bundles in case they weren't removed\ntry{await access(bundlePath);const data=await readFile(bundlePath,'utf8');if(data.includes('__NEXT_DROP_CLIENT_FILE__')){res.statusCode=404;res.end();return{finished:true};}}catch(_){}const errors=await this.getCompilationErrors(page);if(errors.length>0){await renderScriptError(res,errors[0]);return{finished:true};}}return{};};const{finished}=await handlePageBundleRequest(res,parsedUrl);for(const fn of this.middlewares){await new Promise((resolve,reject)=>{fn(req,res,err=>{if(err)return reject(err);resolve();});});}return{finished};}async clean(){return(0,_recursiveDelete.recursiveDelete)((0,_path.join)(this.dir,this.config.distDir));}async getWebpackConfig(){const pagesDir=(0,_path.join)(this.dir,'pages');const pagePaths=await Promise.all([(0,_findPageFile.findPageFile)(pagesDir,'/_app',this.config.pageExtensions),(0,_findPageFile.findPageFile)(pagesDir,'/_document',this.config.pageExtensions)]);const pages=(0,_entries.createPagesMapping)(pagePaths.filter(i=>i!==null),this.config.pageExtensions);const entrypoints=(0,_entries.createEntrypoints)(pages,'server',this.buildId,false,this.config);let additionalClientEntrypoints={};additionalClientEntrypoints[_constants.CLIENT_STATIC_FILES_RUNTIME_AMP]=`.${_path.sep}`+(0,_path.relative)(this.dir,(0,_path.join)(_constants2.NEXT_PROJECT_ROOT_DIST_CLIENT,'dev','amp-dev'));return Promise.all([(0,_webpackConfig.default)(this.dir,{dev:true,isServer:false,config:this.config,buildId:this.buildId,entrypoints:{...entrypoints.client,...additionalClientEntrypoints}}),(0,_webpackConfig.default)(this.dir,{dev:true,isServer:true,config:this.config,buildId:this.buildId,entrypoints:entrypoints.server})]);}async start(){await this.clean();const configs=await this.getWebpackConfig();const multiCompiler=(0,_webpack.default)(configs);const buildTools=await this.prepareBuildTools(multiCompiler);this.assignBuildTools(buildTools);this.stats=(await this.waitUntilValid()).stats[0];}async stop(webpackDevMiddleware){const middleware=webpackDevMiddleware||this.webpackDevMiddleware;if(middleware){return new Promise((resolve,reject)=>{middleware.close(err=>{if(err)return reject(err);resolve();});});}}async reload(){this.stats=null;await this.clean();const configs=await this.getWebpackConfig();const compiler=(0,_webpack.default)(configs);const buildTools=await this.prepareBuildTools(compiler);this.stats=await this.waitUntilValid(buildTools.webpackDevMiddleware);const oldWebpackDevMiddleware=this.webpackDevMiddleware;this.assignBuildTools(buildTools);await this.stop(oldWebpackDevMiddleware);}assignBuildTools({webpackDevMiddleware,webpackHotMiddleware,onDemandEntries}){this.webpackDevMiddleware=webpackDevMiddleware;this.webpackHotMiddleware=webpackHotMiddleware;this.onDemandEntries=onDemandEntries;this.middlewares=[webpackDevMiddleware,// must come before hotMiddleware\nonDemandEntries.middleware(),webpackHotMiddleware,(0,_errorOverlayMiddleware.default)({dir:this.dir})];}async prepareBuildTools(multiCompiler){const tsConfigPath=(0,_path.join)(this.dir,'tsconfig.json');const useTypeScript=await(0,_fileExists.fileExists)(tsConfigPath);(0,_output.watchCompilers)(multiCompiler.compilers[0],multiCompiler.compilers[1],useTypeScript,({errors,warnings})=>this.send('typeChecked',{errors,warnings}));// This plugin watches for changes to _document.js and notifies the client side that it should reload the page\nmultiCompiler.compilers[1].hooks.done.tap('NextjsHotReloaderForServer',stats=>{if(!this.initialized){return;}const{compilation}=stats;// We only watch `_document` for changes on the server compilation\n// the rest of the files will be triggered by the client compilation\nconst documentChunk=compilation.chunks.find(c=>c.name===(0,_path.normalize)(`static/${this.buildId}/pages/_document.js`));// If the document chunk can't be found we do nothing\nif(!documentChunk){console.warn('_document.js chunk not found');return;}// Initial value\nif(this.serverPrevDocumentHash===null){this.serverPrevDocumentHash=documentChunk.hash;return;}// If _document.js didn't change we don't trigger a reload\nif(documentChunk.hash===this.serverPrevDocumentHash){return;}// Notify reload to reload the page, as _document.js was changed (different hash)\nthis.send('reloadPage');this.serverPrevDocumentHash=documentChunk.hash;});multiCompiler.compilers[0].hooks.done.tap('NextjsHotReloaderForClient',stats=>{const{compilation}=stats;const chunkNames=new Set(compilation.chunks.map(c=>c.name).filter(name=>_constants.IS_BUNDLED_PAGE_REGEX.test(name)));if(this.initialized){// detect chunks which have to be replaced with a new template\n// e.g, pages/index.js <-> pages/_error.js\nconst addedPages=diff(chunkNames,this.prevChunkNames);const removedPages=diff(this.prevChunkNames,chunkNames);if(addedPages.size>0){for(const addedPage of addedPages){let page='/'+_constants.ROUTE_NAME_REGEX.exec(addedPage)[1].replace(/\\\\/g,'/');page=page==='/index'?'/':page;this.send('addedPage',page);}}if(removedPages.size>0){for(const removedPage of removedPages){let page='/'+_constants.ROUTE_NAME_REGEX.exec(removedPage)[1].replace(/\\\\/g,'/');page=page==='/index'?'/':page;this.send('removedPage',page);}}}this.initialized=true;this.stats=stats;this.prevChunkNames=chunkNames;});// We don’t watch .git/ .next/ and node_modules for changes\nconst ignored=[/[\\\\/]\\.git[\\\\/]/,/[\\\\/]\\.next[\\\\/]/,/[\\\\/]node_modules[\\\\/]/];let webpackDevMiddlewareConfig={publicPath:`/_next/static/webpack`,noInfo:true,logLevel:'silent',watchOptions:{ignored},writeToDisk:true};if(this.config.webpackDevMiddleware){console.log(`> Using \"webpackDevMiddleware\" config function defined in ${this.config.configOrigin}.`);webpackDevMiddlewareConfig=this.config.webpackDevMiddleware(webpackDevMiddlewareConfig);}const webpackDevMiddleware=(0,_webpackDevMiddleware.default)(multiCompiler,webpackDevMiddlewareConfig);const webpackHotMiddleware=(0,_webpackHotMiddleware.default)(multiCompiler.compilers[0],{path:'/_next/webpack-hmr',log:false,heartbeat:2500});const onDemandEntries=(0,_onDemandEntryHandler.default)(webpackDevMiddleware,multiCompiler,{dir:this.dir,buildId:this.buildId,distDir:this.config.distDir,reload:this.reload.bind(this),pageExtensions:this.config.pageExtensions,publicRuntimeConfig:this.config.publicRuntimeConfig,serverRuntimeConfig:this.config.serverRuntimeConfig,...this.config.onDemandEntries});return{webpackDevMiddleware,webpackHotMiddleware,onDemandEntries};}waitUntilValid(webpackDevMiddleware){const middleware=webpackDevMiddleware||this.webpackDevMiddleware;return new Promise(resolve=>{middleware.waitUntilValid(resolve);});}async getCompilationErrors(page){const normalizedPage=(0,_onDemandEntryHandler.normalizePage)(page);// When we are reloading, we need to wait until it's reloaded properly.\nawait this.onDemandEntries.waitUntilReloaded();if(this.stats.hasErrors()){const{compilation}=this.stats;const failedPages=erroredPages(compilation,{enhanceName(name){return'/'+_constants.ROUTE_NAME_REGEX.exec(name)[1];}});// If there is an error related to the requesting page we display it instead of the first error\nif(failedPages[normalizedPage]&&failedPages[normalizedPage].length>0){return failedPages[normalizedPage];}// If none were found we still have to show the other errors\nreturn this.stats.compilation.errors;}return[];}async ensurePage(page){// Make sure we don't re-build or dispose prebuilt pages\nif(page!=='/_error'&&_constants.BLOCKED_PAGES.indexOf(page)!==-1){return;}return this.onDemandEntries.ensurePage(page);}}exports.default=HotReloader;function diff(a,b){return new Set([...a].filter(v=>!b.has(v)));}","\"use strict\";exports.__esModule=true;exports.default=errorOverlayMiddleware;var _url=_interopRequireDefault(require(\"url\"));var _launchEditor=_interopRequireDefault(require(\"launch-editor\"));var _fs=_interopRequireDefault(require(\"fs\"));var _path=_interopRequireDefault(require(\"path\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function errorOverlayMiddleware(options){return(req,res,next)=>{if(req.url.startsWith('/_next/development/open-stack-frame-in-editor')){const query=_url.default.parse(req.url,true).query;const lineNumber=parseInt(query.lineNumber,10)||1;const colNumber=parseInt(query.colNumber,10)||1;let resolvedFileName=query.fileName;if(!_fs.default.existsSync(resolvedFileName)){resolvedFileName=_path.default.join(options.dir,resolvedFileName);}(0,_launchEditor.default)(`${resolvedFileName}:${lineNumber}:${colNumber}`);res.end();}else{next();}};}","\"use strict\";exports.__esModule=true;exports.findPageFile=findPageFile;var _path=require(\"path\");var _isWriteable=require(\"../../build/is-writeable\");async function findPageFile(rootDir,normalizedPagePath,pageExtensions){for(const extension of pageExtensions){const relativePagePath=`${normalizedPagePath}.${extension}`;const pagePath=(0,_path.join)(rootDir,relativePagePath);if(await(0,_isWriteable.isWriteable)(pagePath)){return relativePagePath;}const relativePagePathWithIndex=(0,_path.join)(normalizedPagePath,`index.${extension}`);const pagePathWithIndex=(0,_path.join)(rootDir,relativePagePathWithIndex);if(await(0,_isWriteable.isWriteable)(pagePathWithIndex)){return relativePagePathWithIndex;}}return null;}","\"use strict\";exports.__esModule=true;exports.default=void 0;var _nextServer=_interopRequireDefault(require(\"next-server/dist/server/next-server\"));var _path=require(\"path\");var _hotReloader=_interopRequireDefault(require(\"./hot-reloader\"));var _router=require(\"next-server/dist/server/router\");var _constants=require(\"next-server/constants\");var _errorDebug=_interopRequireDefault(require(\"./error-debug\"));var _amphtmlValidator=_interopRequireDefault(require(\"amphtml-validator\"));var _index=require(\"../build/output/index\");var Log=_interopRequireWildcard(require(\"../build/output/log\"));var _verifyTypeScriptSetup=require(\"../lib/verifyTypeScriptSetup\");var _watchpack=_interopRequireDefault(require(\"watchpack\"));var _fs=_interopRequireDefault(require(\"fs\"));var _utils=require(\"next-server/dist/lib/router/utils\");var _react=_interopRequireDefault(require(\"react\"));function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}if(typeof _react.default.Suspense==='undefined'){throw new Error(`The version of React you are using is lower than the minimum required version needed for Next.js. Please upgrade \"react\" and \"react-dom\": \"npm install --save react react-dom\" https://err.sh/zeit/next.js/invalid-react-version`);}class DevServer extends _nextServer.default{constructor(options){super(options);this.renderOpts.dev=true;this.renderOpts.ErrorDebug=_errorDebug.default;this.devReady=new Promise(resolve=>{this.setDevReady=resolve;});this.renderOpts.ampValidator=(html,pathname)=>{return _amphtmlValidator.default.getInstance().then(validator=>{const result=validator.validateString(html);(0,_index.ampValidation)(pathname,result.errors.filter(e=>e.severity==='ERROR').filter(e=>this._filterAmpDevelopmentScript(html,e)),result.errors.filter(e=>e.severity!=='ERROR'));});};}currentPhase(){return _constants.PHASE_DEVELOPMENT_SERVER;}readBuildId(){return'development';}async addExportPathMapRoutes(){// Makes `next export` exportPathMap work in development mode.\n// So that the user doesn't have to define a custom server reading the exportPathMap\nif(this.nextConfig.exportPathMap){console.log('Defining routes from exportPathMap');const exportPathMap=await this.nextConfig.exportPathMap({},{dev:true,dir:this.dir,outDir:null,distDir:this.distDir,buildId:this.buildId});// In development we can't give a default path mapping\nfor(const path in exportPathMap){const{page,query={}}=exportPathMap[path];// We use unshift so that we're sure the routes is defined before Next's default routes\nthis.router.add({match:(0,_router.route)(path),fn:async(req,res,params,parsedUrl)=>{const{query:urlQuery}=parsedUrl;Object.keys(urlQuery).filter(key=>query[key]===undefined).forEach(key=>console.warn(`Url '${path}' defines a query parameter '${key}' that is missing in exportPathMap`));const mergedQuery={...urlQuery,...query};await this.render(req,res,page,mergedQuery,parsedUrl);}});}}}async startWatcher(){if(this.webpackWatcher){return;}let resolved=false;return new Promise(resolve=>{const pagesDir=(0,_path.join)(this.dir,'pages');// Watchpack doesn't emit an event for an empty directory\n_fs.default.readdir(pagesDir,(_,files)=>{if(files&&files.length){return;}if(!resolved){resolve();resolved=true;}});let wp=this.webpackWatcher=new _watchpack.default();wp.watch([],[pagesDir],0);wp.on('aggregated',()=>{const dynamicRoutedPages=[];const knownFiles=wp.getTimeInfoEntries();for(const[fileName,{accuracy}]of knownFiles){if(accuracy===undefined){continue;}let pageName='/'+(0,_path.relative)(pagesDir,fileName).replace(/\\\\+/g,'/');const pageExt=(0,_path.extname)(pageName);pageName=pageName.slice(0,-pageExt.length);pageName=pageName.replace(/\\/index$/,'')||'/';if(!(0,_utils.isDynamicRoute)(pageName)){continue;}dynamicRoutedPages.push(pageName);}this.dynamicRoutes=(0,_utils.getSortedRoutes)(dynamicRoutedPages).map(page=>({page,match:(0,_utils.getRouteMatcher)((0,_utils.getRouteRegex)(page))}));if(!resolved){resolve();resolved=true;}});});}async stopWatcher(){if(!this.webpackWatcher){return;}this.webpackWatcher.close();this.webpackWatcher=null;}async prepare(){await(0,_verifyTypeScriptSetup.verifyTypeScriptSetup)(this.dir);this.hotReloader=new _hotReloader.default(this.dir,{config:this.nextConfig,buildId:this.buildId});await super.prepare();await this.addExportPathMapRoutes();await this.hotReloader.start();await this.startWatcher();this.setDevReady();}async close(){await this.stopWatcher();if(this.hotReloader){await this.hotReloader.stop();}}async run(req,res,parsedUrl){await this.devReady;const{finished}=await this.hotReloader.run(req,res,parsedUrl);if(finished){return;}return super.run(req,res,parsedUrl);}generateRoutes(){const routes=super.generateRoutes();// In development we expose all compiled files for react-error-overlay's line show feature\n// We use unshift so that we're sure the routes is defined before Next's default routes\nroutes.unshift({match:(0,_router.route)('/_next/development/:path*'),fn:async(req,res,params)=>{const p=(0,_path.join)(this.distDir,...(params.path||[]));await this.serveStatic(req,res,p);}});return routes;}// In development public files are not added to the router but handled as a fallback instead\ngeneratePublicRoutes(){return[];}// In development dynamic routes cannot be known ahead of time\ngetDynamicRoutes(){return[];}_filterAmpDevelopmentScript(html,event){if(event.code!=='DISALLOWED_SCRIPT_TAG'){return true;}const snippetChunks=html.split('\\n');let snippet;if(!(snippet=html.split('\\n')[event.line-1])||!(snippet=snippet.substring(event.col))){return true;}snippet=snippet+snippetChunks.slice(event.line).join('\\n');snippet=snippet.substring(0,snippet.indexOf('</script>'));return!snippet.includes('data-amp-development-mode-only');}/**\n   * Check if resolver function is build or request new build for this function\n   * @param {string} pathname\n   */async resolveApiRequest(pathname){try{await this.hotReloader.ensurePage(pathname);}catch(err){// API route dosn't exist => return 404\nif(err.code==='ENOENT'){return null;}}const resolvedPath=await super.resolveApiRequest(pathname);return resolvedPath;}async renderToHTML(req,res,pathname,query,options={}){const compilationErr=await this.getCompilationError(pathname);if(compilationErr){res.statusCode=500;return this.renderErrorToHTML(compilationErr,req,res,pathname,query);}// In dev mode we use on demand entries to compile the page before rendering\ntry{await this.hotReloader.ensurePage(pathname).catch(err=>{if(err.code!=='ENOENT'){return Promise.reject(err);}for(const dynamicRoute of this.dynamicRoutes){const params=dynamicRoute.match(pathname);if(!params){continue;}return this.hotReloader.ensurePage(dynamicRoute.page).then(()=>{pathname=dynamicRoute.page;query=Object.assign({},query,params);});}return Promise.reject(err);});}catch(err){if(err.code==='ENOENT'){if(this.nextConfig.experimental.publicDirectory){// Try to send a public file and let servePublic handle the request from here\nawait this.servePublic(req,res,pathname);return null;}else{res.statusCode=404;return this.renderErrorToHTML(null,req,res,pathname,query);}}if(!this.quiet)console.error(err);}const html=await super.renderToHTML(req,res,pathname,query,options);return html;}async renderErrorToHTML(err,req,res,pathname,query){await this.hotReloader.ensurePage('/_error');const compilationErr=await this.getCompilationError(pathname);if(compilationErr){res.statusCode=500;return super.renderErrorToHTML(compilationErr,req,res,pathname,query);}if(!err&&res.statusCode===500){err=new Error('An undefined error was thrown sometime during render... '+'See https://err.sh/zeit/next.js/threw-undefined');}try{const out=await super.renderErrorToHTML(err,req,res,pathname,query);return out;}catch(err2){if(!this.quiet)Log.error(err2);res.statusCode=500;return super.renderErrorToHTML(err2,req,res,pathname,query);}}sendHTML(req,res,html){// In dev, we should not cache pages for any reason.\nres.setHeader('Cache-Control','no-store, must-revalidate');return super.sendHTML(req,res,html);}setImmutableAssetCacheControl(res){res.setHeader('Cache-Control','no-store, must-revalidate');}servePublic(req,res,path){const p=(0,_path.join)(this.publicDir,path);return this.serveStatic(req,res,p);}async getCompilationError(page){const errors=await this.hotReloader.getCompilationErrors(page);if(errors.length===0)return;// Return the very first error we found.\nreturn errors[0];}}exports.default=DevServer;","\"use strict\";// This file is used for when users run `require('next')`\nmodule.exports=options=>{if(options.dev){const Server=require('./next-dev-server').default;return new Server(options);}const next=require('next-server');return next(options);};","\"use strict\";exports.__esModule=true;exports.default=onDemandEntryHandler;exports.normalizePage=normalizePage;var _DynamicEntryPlugin=_interopRequireDefault(require(\"webpack/lib/DynamicEntryPlugin\"));var _events=require(\"events\");var _path=require(\"path\");var _url=require(\"url\");var _require=require(\"next-server/dist/server/require\");var _normalizePagePath=require(\"next-server/dist/server/normalize-page-path\");var _constants=require(\"next-server/constants\");var _querystring=require(\"querystring\");var _findPageFile=require(\"./lib/find-page-file\");var _isWriteable=require(\"../build/is-writeable\");var Log=_interopRequireWildcard(require(\"../build/output/log\"));var _constants2=require(\"../lib/constants\");function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const ADDED=Symbol('added');const BUILDING=Symbol('building');const BUILT=Symbol('built');// Based on https://github.com/webpack/webpack/blob/master/lib/DynamicEntryPlugin.js#L29-L37\nfunction addEntry(compilation,context,name,entry){return new Promise((resolve,reject)=>{const dep=_DynamicEntryPlugin.default.createDependency(entry,name);compilation.addEntry(context,dep,name,err=>{if(err)return reject(err);resolve();});});}function onDemandEntryHandler(devMiddleware,multiCompiler,{buildId,dir,distDir,reload,pageExtensions,maxInactiveAge,pagesBufferLength,publicRuntimeConfig,serverRuntimeConfig}){const pagesDir=(0,_path.join)(dir,'pages');const{compilers}=multiCompiler;const invalidator=new Invalidator(devMiddleware,multiCompiler);let entries={};let lastAccessPages=[''];let doneCallbacks=new _events.EventEmitter();let reloading=false;let stopped=false;let reloadCallbacks=new _events.EventEmitter();let lastEntry=null;for(const compiler of compilers){compiler.hooks.make.tapPromise('NextJsOnDemandEntries',compilation=>{invalidator.startBuilding();const allEntries=Object.keys(entries).map(async page=>{if(compiler.name==='client'&&page.match(_constants2.API_ROUTE)){return;}const{name,absolutePagePath}=entries[page];const pageExists=await(0,_isWriteable.isWriteable)(absolutePagePath);if(!pageExists){Log.event('page was removed',page);delete entries[page];return;}entries[page].status=BUILDING;return addEntry(compilation,compiler.context,name,[compiler.name==='client'?`next-client-pages-loader?${(0,_querystring.stringify)({page,absolutePagePath})}!`:absolutePagePath]);});return Promise.all(allEntries).catch(err=>console.error(err));});}function findHardFailedPages(errors){return errors.filter(e=>{// Make sure to only pick errors which marked with missing modules\nconst hasNoModuleFoundError=/ENOENT/.test(e.message)||/Module not found/.test(e.message);if(!hasNoModuleFoundError)return false;// The page itself is missing. So this is a failed page.\nif(_constants.IS_BUNDLED_PAGE_REGEX.test(e.module.name))return true;// No dependencies means this is a top level page.\n// So this is a failed page.\nreturn e.module.dependencies.length===0;}).map(e=>e.module.chunks).reduce((a,b)=>[...a,...b],[]).map(c=>{const pageName=_constants.ROUTE_NAME_REGEX.exec(c.name)[1];return normalizePage(`/${pageName}`);});}function getPagePathsFromEntrypoints(entrypoints){const pagePaths=[];for(const[,entrypoint]of entrypoints.entries()){const result=_constants.ROUTE_NAME_REGEX.exec(entrypoint.name);if(!result){continue;}const pagePath=result[1];if(!pagePath){continue;}pagePaths.push(pagePath);}return pagePaths;}multiCompiler.hooks.done.tap('NextJsOnDemandEntries',multiStats=>{const[clientStats,serverStats]=multiStats.stats;const hardFailedPages=[...new Set([...findHardFailedPages(clientStats.compilation.errors),...findHardFailedPages(serverStats.compilation.errors)])];const pagePaths=new Set([...getPagePathsFromEntrypoints(clientStats.compilation.entrypoints),...getPagePathsFromEntrypoints(serverStats.compilation.entrypoints)]);// compilation.entrypoints is a Map object, so iterating over it 0 is the key and 1 is the value\nfor(const pagePath of pagePaths){const page=normalizePage('/'+pagePath);const entry=entries[page];if(!entry){continue;}if(entry.status!==BUILDING){continue;}entry.status=BUILT;entry.lastActiveTime=Date.now();doneCallbacks.emit(page);}invalidator.doneBuilding();if(hardFailedPages.length>0&&!reloading){console.log(`> Reloading webpack due to inconsistant state of pages(s): ${hardFailedPages.join(', ')}`);reloading=true;reload().then(()=>{console.log('> Webpack reloaded.');reloadCallbacks.emit('done');stop();}).catch(err=>{console.error(`> Webpack reloading failed: ${err.message}`);console.error(err.stack);process.exit(1);});}});const disposeHandler=setInterval(function(){if(stopped)return;disposeInactiveEntries(devMiddleware,entries,lastAccessPages,maxInactiveAge);},5000);disposeHandler.unref();function stop(){clearInterval(disposeHandler);stopped=true;doneCallbacks=null;reloadCallbacks=null;}function handlePing(pg){const page=normalizePage(pg);const entryInfo=entries[page];let toSend;// If there's no entry, it may have been invalidated and needs to be re-built.\nif(!entryInfo){if(page!==lastEntry){Log.event(`client pings, but there's no entry for page: ${page}`);}lastEntry=page;return{invalid:true};}// 404 is an on demand entry but when a new page is added we have to refresh the page\nif(page==='/_error'){toSend={invalid:true};}else{toSend={success:true};}// We don't need to maintain active state of anything other than BUILT entries\nif(entryInfo.status!==BUILT)return;// If there's an entryInfo\nif(!lastAccessPages.includes(page)){lastAccessPages.unshift(page);// Maintain the buffer max length\nif(lastAccessPages.length>pagesBufferLength){lastAccessPages.pop();}}entryInfo.lastActiveTime=Date.now();return toSend;}return{waitUntilReloaded(){if(!reloading)return Promise.resolve(true);return new Promise(resolve=>{reloadCallbacks.once('done',function(){resolve();});});},async ensurePage(page){await this.waitUntilReloaded();let normalizedPagePath;try{normalizedPagePath=(0,_normalizePagePath.normalizePagePath)(page);}catch(err){console.error(err);throw(0,_require.pageNotFoundError)(normalizedPagePath);}let pagePath=await(0,_findPageFile.findPageFile)(pagesDir,normalizedPagePath,pageExtensions);// Default the /_error route to the Next.js provided default page\nif(page==='/_error'&&pagePath===null){pagePath='next/dist/pages/_error';}if(pagePath===null){throw(0,_require.pageNotFoundError)(normalizedPagePath);}let pageUrl=`/${pagePath.replace(new RegExp(`\\\\.+(?:${pageExtensions.join('|')})$`),'').replace(/\\\\/g,'/')}`.replace(/\\/index$/,'');pageUrl=pageUrl===''?'/':pageUrl;const bundleFile=pageUrl==='/'?'/index.js':`${pageUrl}.js`;const name=(0,_path.join)('static',buildId,'pages',bundleFile);const absolutePagePath=pagePath.startsWith('next/dist/pages')?require.resolve(pagePath):(0,_path.join)(pagesDir,pagePath);page=_path.posix.normalize(pageUrl);return new Promise((resolve,reject)=>{// Makes sure the page that is being kept in on-demand-entries matches the webpack output\nconst normalizedPage=normalizePage(page);const entryInfo=entries[normalizedPage];if(entryInfo){if(entryInfo.status===BUILT){resolve();return;}if(entryInfo.status===BUILDING){doneCallbacks.once(normalizedPage,handleCallback);return;}}Log.event(`build page: ${normalizedPage}`);entries[normalizedPage]={name,absolutePagePath,status:ADDED};doneCallbacks.once(normalizedPage,handleCallback);invalidator.invalidate();function handleCallback(err){if(err)return reject(err);resolve();}});},middleware(){return(req,res,next)=>{if(stopped){// If this handler is stopped, we need to reload the user's browser.\n// So the user could connect to the actually running handler.\nres.statusCode=302;res.setHeader('Location',req.url);res.end('302');}else if(reloading){// Webpack config is reloading. So, we need to wait until it's done and\n// reload user's browser.\n// So the user could connect to the new handler and webpack setup.\nthis.waitUntilReloaded().then(()=>{res.statusCode=302;res.setHeader('Location',req.url);res.end('302');});}else{if(!/^\\/_next\\/webpack-hmr/.test(req.url))return next();const{query}=(0,_url.parse)(req.url,true);const page=query.page;if(!page)return next();const runPing=()=>{const data=handlePing(query.page);if(!data)return;res.write('data: '+JSON.stringify(data)+'\\n\\n');};const pingInterval=setInterval(()=>runPing(),5000);req.on('close',()=>{clearInterval(pingInterval);});// Do initial ping right after EventSource is finished being set up\nsetImmediate(()=>runPing());next();}};}};}function disposeInactiveEntries(devMiddleware,entries,lastAccessPages,maxInactiveAge){const disposingPages=[];Object.keys(entries).forEach(page=>{const{lastActiveTime,status}=entries[page];// This means this entry is currently building or just added\n// We don't need to dispose those entries.\nif(status!==BUILT)return;// We should not build the last accessed page even we didn't get any pings\n// Sometimes, it's possible our XHR ping to wait before completing other requests.\n// In that case, we should not dispose the current viewing page\nif(lastAccessPages.includes(page))return;if(Date.now()-lastActiveTime>maxInactiveAge){disposingPages.push(page);}});if(disposingPages.length>0){disposingPages.forEach(page=>{delete entries[page];});Log.event(`disposing inactive page(s): ${disposingPages.join(', ')}`);devMiddleware.invalidate();}}// /index and / is the same. So, we need to identify both pages as the same.\n// This also applies to sub pages as well.\nfunction normalizePage(page){const unixPagePath=page.replace(/\\\\/g,'/');if(unixPagePath==='/index'||unixPagePath==='/'){return'/';}return unixPagePath.replace(/\\/index$/,'');}// Make sure only one invalidation happens at a time\n// Otherwise, webpack hash gets changed and it'll force the client to reload.\nclass Invalidator{constructor(devMiddleware,multiCompiler){this.multiCompiler=multiCompiler;this.devMiddleware=devMiddleware;// contains an array of types of compilers currently building\nthis.building=false;this.rebuildAgain=false;}invalidate(){// If there's a current build is processing, we won't abort it by invalidating.\n// (If aborted, it'll cause a client side hard reload)\n// But let it to invalidate just after the completion.\n// So, it can re-build the queued pages at once.\nif(this.building){this.rebuildAgain=true;return;}this.building=true;// Work around a bug in webpack, calling `invalidate` on Watching.js\n// doesn't trigger the invalid call used to keep track of the `.done` hook on multiCompiler\nfor(const compiler of this.multiCompiler.compilers){compiler.hooks.invalid.call();}this.devMiddleware.invalidate();}startBuilding(){this.building=true;}doneBuilding(){this.building=false;if(this.rebuildAgain){this.rebuildAgain=false;this.invalidate();}}}","var map = {\n\t\"./buffer\": \"./node_modules/node-libs-browser/mock/buffer.js\",\n\t\"./buffer.js\": \"./node_modules/node-libs-browser/mock/buffer.js\",\n\t\"./console\": \"./node_modules/node-libs-browser/mock/console.js\",\n\t\"./console.js\": \"./node_modules/node-libs-browser/mock/console.js\",\n\t\"./dns\": \"./node_modules/node-libs-browser/mock/dns.js\",\n\t\"./dns.js\": \"./node_modules/node-libs-browser/mock/dns.js\",\n\t\"./empty\": \"./node_modules/node-libs-browser/mock/empty.js\",\n\t\"./empty.js\": \"./node_modules/node-libs-browser/mock/empty.js\",\n\t\"./net\": \"./node_modules/node-libs-browser/mock/net.js\",\n\t\"./net.js\": \"./node_modules/node-libs-browser/mock/net.js\",\n\t\"./process\": \"./node_modules/node-libs-browser/mock/process.js\",\n\t\"./process.js\": \"./node_modules/node-libs-browser/mock/process.js\",\n\t\"./punycode\": \"./node_modules/node-libs-browser/mock/punycode.js\",\n\t\"./punycode.js\": \"./node_modules/node-libs-browser/mock/punycode.js\",\n\t\"./tls\": \"./node_modules/node-libs-browser/mock/tls.js\",\n\t\"./tls.js\": \"./node_modules/node-libs-browser/mock/tls.js\",\n\t\"./tty\": \"./node_modules/node-libs-browser/mock/tty.js\",\n\t\"./tty.js\": \"./node_modules/node-libs-browser/mock/tty.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/node-libs-browser/mock sync recursive ^\\\\.\\\\/.*$\";","function Buffer() {\n\tthrow new Error(\"Buffer is not included.\");\n}\nBuffer.isBuffer = function() {\n  return false;\n};\n\nexports.INSPECT_MAX_BYTES = 50;\nexports.SlowBuffer = Buffer;\nexports.Buffer = Buffer;\n","var console;\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = window.console = {}\n}\nmodule.exports = console;\nfor(var name in {log:1, info:1, error:1, warn:1, dir:1, trace:1, assert:1, time:1, timeEnd: 1})\n\tif(!console[name])\n\t\tconsole[name] = function() {};\n","exports.lookup = exports.resolve4 =\nexports.resolve6 = exports.resolveCname =\nexports.resolveMx = exports.resolveNs =\nexports.resolveTxt = exports.resolveSrv =\nexports.resolveNaptr = exports.reverse =\nexports.resolve =\nfunction () {\n  if (!arguments.length) return;\n\n  var callback = arguments[arguments.length - 1];\n  if (callback && typeof callback === 'function') {\n    callback(null, '0.0.0.0')\n  }\n}\n\n","exports.createServer =\nexports.createConnection =\nexports.connect =\nfunction () {};\n\nexports.isIP =\nexports.isIPv4 =\nexports.isIPv6 =\nfunction () { return true };\n\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","exports.ucs2 = {};\nexports.encode = exports.decode =\nexports.ucs2.encode = exports.ucs2.decode =\nexports.toUnicode = exports.toASCII =\nfunction (s) { return s };\nexports.version = \"0.0.0\";","// todo\n","exports.isatty = function () {};\nexports.setRawMode = function () {};\n","\"use strict\";\n\nfunction hash(str) {\n  var hash = 5381,\n      i    = str.length;\n\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n}\n\nmodule.exports = hash;\n","'use strict';\n\nconst mime = require('mime');\n\nconst createContext = require('./lib/context');\nconst middleware = require('./lib/middleware');\nconst reporter = require('./lib/reporter');\nconst { setFs, toDisk } = require('./lib/fs');\nconst { getFilenameFromUrl, noop, ready } = require('./lib/util');\n\nconst defaults = {\n  logLevel: 'info',\n  logTime: false,\n  logger: null,\n  mimeTypes: null,\n  reporter,\n  stats: {\n    colors: true,\n    context: process.cwd(),\n  },\n  watchOptions: {\n    aggregateTimeout: 200,\n  },\n  writeToDisk: false,\n};\n\nmodule.exports = function wdm(compiler, opts) {\n  const options = Object.assign({}, defaults, opts);\n\n  if (options.lazy) {\n    if (typeof options.filename === 'string') {\n      const filename = options.filename\n        .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&') // eslint-disable-line no-useless-escape\n        .replace(/\\\\\\[[a-z]+\\\\\\]/gi, '.+');\n\n      options.filename = new RegExp(`^[/]{0,1}${filename}$`);\n    }\n  }\n\n  // defining custom MIME type\n  if (options.mimeTypes) {\n    const typeMap = options.mimeTypes.typeMap || options.mimeTypes;\n    const force = !!options.mimeTypes.force;\n    mime.define(typeMap, force);\n  }\n\n  const context = createContext(compiler, options);\n\n  // start watching\n  if (!options.lazy) {\n    context.watching = compiler.watch(options.watchOptions, (err) => {\n      if (err) {\n        context.log.error(err.stack || err);\n        if (err.details) {\n          context.log.error(err.details);\n        }\n      }\n    });\n  } else {\n    context.state = true;\n  }\n\n  if (options.writeToDisk) {\n    toDisk(context);\n  }\n\n  setFs(context, compiler);\n\n  return Object.assign(middleware(context), {\n    close(callback) {\n      // eslint-disable-next-line no-param-reassign\n      callback = callback || noop;\n\n      if (context.watching) {\n        context.watching.close(callback);\n      } else {\n        callback();\n      }\n    },\n\n    context,\n\n    fileSystem: context.fs,\n\n    getFilenameFromUrl: getFilenameFromUrl.bind(\n      this,\n      context.options.publicPath,\n      context.compiler\n    ),\n\n    invalidate(callback) {\n      // eslint-disable-next-line no-param-reassign\n      callback = callback || noop;\n\n      if (context.watching) {\n        ready(context, callback, {});\n        context.watching.invalidate();\n      } else {\n        callback();\n      }\n    },\n\n    waitUntilValid(callback) {\n      // eslint-disable-next-line no-param-reassign\n      callback = callback || noop;\n\n      ready(context, callback, {});\n    },\n  });\n};\n","'use strict';\n\nmodule.exports = class DevMiddlewareError extends Error {};\n","'use strict';\n\nconst weblog = require('webpack-log');\n\nmodule.exports = function ctx(compiler, options) {\n  const context = {\n    state: false,\n    webpackStats: null,\n    callbacks: [],\n    options,\n    compiler,\n    watching: null,\n    forceRebuild: false,\n  };\n\n  if (options.logger) {\n    context.log = options.logger;\n  } else {\n    context.log = weblog({\n      level: options.logLevel || 'info',\n      name: 'wdm',\n      timestamp: options.logTime,\n    });\n  }\n\n  const { log } = context;\n\n  function done(stats) {\n    // We are now on valid state\n    context.state = true;\n    context.webpackStats = stats;\n\n    // Do the stuff in nextTick, because bundle may be invalidated\n    // if a change happened while compiling\n    process.nextTick(() => {\n      // check if still in valid state\n      if (!context.state) {\n        return;\n      }\n\n      // print webpack output\n      context.options.reporter(context.options, {\n        log,\n        state: true,\n        stats,\n      });\n\n      // execute callback that are delayed\n      const cbs = context.callbacks;\n      context.callbacks = [];\n      cbs.forEach((cb) => {\n        cb(stats);\n      });\n    });\n\n    // In lazy mode, we may issue another rebuild\n    if (context.forceRebuild) {\n      context.forceRebuild = false;\n      rebuild();\n    }\n  }\n\n  function invalid(callback) {\n    if (context.state) {\n      context.options.reporter(context.options, {\n        log,\n        state: false,\n      });\n    }\n\n    // We are now in invalid state\n    context.state = false;\n    if (typeof callback === 'function') {\n      callback();\n    }\n  }\n\n  function rebuild() {\n    if (context.state) {\n      context.state = false;\n      context.compiler.run((err) => {\n        if (err) {\n          log.error(err.stack || err);\n          if (err.details) {\n            log.error(err.details);\n          }\n        }\n      });\n    } else {\n      context.forceRebuild = true;\n    }\n  }\n\n  context.rebuild = rebuild;\n  context.compiler.hooks.invalid.tap('WebpackDevMiddleware', invalid);\n  context.compiler.hooks.run.tap('WebpackDevMiddleware', invalid);\n  context.compiler.hooks.done.tap('WebpackDevMiddleware', done);\n  context.compiler.hooks.watchRun.tap(\n    'WebpackDevMiddleware',\n    (comp, callback) => {\n      invalid(callback);\n    }\n  );\n\n  return context;\n};\n","'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nconst MemoryFileSystem = require('memory-fs');\nconst { colors } = require('webpack-log');\nconst NodeOutputFileSystem = require('webpack/lib/node/NodeOutputFileSystem');\n\nconst DevMiddlewareError = require('./DevMiddlewareError');\n\nconst { mkdirp } = new NodeOutputFileSystem();\n\nmodule.exports = {\n  toDisk(context) {\n    const compilers = context.compiler.compilers || [context.compiler];\n    for (const compiler of compilers) {\n      compiler.hooks.afterEmit.tap('WebpackDevMiddleware', (compilation) => {\n        const { assets } = compilation;\n        const { log } = context;\n        const { writeToDisk: filter } = context.options;\n        let { outputPath } = compiler;\n\n        if (outputPath === '/') {\n          outputPath = compiler.context;\n        }\n\n        for (const assetPath of Object.keys(assets)) {\n          let targetFile = assetPath;\n\n          const queryStringIdx = targetFile.indexOf('?');\n\n          if (queryStringIdx >= 0) {\n            targetFile = targetFile.substr(0, queryStringIdx);\n          }\n\n          const targetPath = path.isAbsolute(targetFile)\n            ? targetFile\n            : path.join(outputPath, targetFile);\n          const allowWrite =\n            filter && typeof filter === 'function' ? filter(targetPath) : true;\n\n          if (allowWrite) {\n            const asset = assets[assetPath];\n            let content = asset.source();\n\n            if (!Buffer.isBuffer(content)) {\n              // TODO need remove in next major release\n              if (Array.isArray(content)) {\n                content = content.join('\\n');\n              }\n\n              content = Buffer.from(content, 'utf8');\n            }\n\n            mkdirp.sync(path.dirname(targetPath));\n\n            try {\n              fs.writeFileSync(targetPath, content, 'utf-8');\n\n              log.debug(\n                colors.cyan(\n                  `Asset written to disk: ${path.relative(\n                    process.cwd(),\n                    targetPath\n                  )}`\n                )\n              );\n            } catch (e) {\n              log.error(`Unable to write asset to disk:\\n${e}`);\n            }\n          }\n        }\n      });\n    }\n  },\n\n  setFs(context, compiler) {\n    if (\n      typeof compiler.outputPath === 'string' &&\n      !path.posix.isAbsolute(compiler.outputPath) &&\n      !path.win32.isAbsolute(compiler.outputPath)\n    ) {\n      throw new DevMiddlewareError(\n        '`output.path` needs to be an absolute path or `/`.'\n      );\n    }\n\n    let fileSystem;\n\n    // store our files in memory\n    const isConfiguredFs = context.options.fs;\n    const isMemoryFs =\n      !isConfiguredFs &&\n      !compiler.compilers &&\n      compiler.outputFileSystem instanceof MemoryFileSystem;\n\n    if (isConfiguredFs) {\n      // eslint-disable-next-line no-shadow\n      const { fs } = context.options;\n\n      if (typeof fs.join !== 'function') {\n        // very shallow check\n        throw new Error(\n          'Invalid options: options.fs.join() method is expected'\n        );\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      compiler.outputFileSystem = fs;\n      fileSystem = fs;\n    } else if (isMemoryFs) {\n      fileSystem = compiler.outputFileSystem;\n    } else {\n      fileSystem = new MemoryFileSystem();\n\n      // eslint-disable-next-line no-param-reassign\n      compiler.outputFileSystem = fileSystem;\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    context.fs = fileSystem;\n  },\n};\n","'use strict';\n\nconst path = require('path');\n\nconst mime = require('mime');\n\nconst DevMiddlewareError = require('./DevMiddlewareError');\nconst {\n  getFilenameFromUrl,\n  handleRangeHeaders,\n  handleRequest,\n  ready,\n} = require('./util');\n\n// Do not add a charset to the Content-Type header of these file types\n// otherwise the client will fail to render them correctly.\nconst NonCharsetFileTypes = /\\.(wasm|usdz)$/;\n\nmodule.exports = function wrapper(context) {\n  return function middleware(req, res, next) {\n    // fixes #282. credit @cexoso. in certain edge situations res.locals is\n    // undefined.\n    // eslint-disable-next-line no-param-reassign\n    res.locals = res.locals || {};\n\n    function goNext() {\n      if (!context.options.serverSideRender) {\n        return next();\n      }\n\n      return new Promise((resolve) => {\n        ready(\n          context,\n          () => {\n            // eslint-disable-next-line no-param-reassign\n            res.locals.webpackStats = context.webpackStats;\n            // eslint-disable-next-line no-param-reassign\n            res.locals.fs = context.fs;\n\n            resolve(next());\n          },\n          req\n        );\n      });\n    }\n\n    const acceptedMethods = context.options.methods || ['GET', 'HEAD'];\n\n    if (acceptedMethods.indexOf(req.method) === -1) {\n      return goNext();\n    }\n\n    let filename = getFilenameFromUrl(\n      context.options.publicPath,\n      context.compiler,\n      req.url\n    );\n\n    if (filename === false) {\n      return goNext();\n    }\n\n    return new Promise((resolve) => {\n      handleRequest(context, filename, processRequest, req);\n      // eslint-disable-next-line consistent-return\n      function processRequest() {\n        try {\n          let stat = context.fs.statSync(filename);\n\n          if (!stat.isFile()) {\n            if (stat.isDirectory()) {\n              let { index } = context.options;\n\n              // eslint-disable-next-line no-undefined\n              if (index === undefined || index === true) {\n                index = 'index.html';\n              } else if (!index) {\n                throw new DevMiddlewareError('next');\n              }\n\n              filename = path.posix.join(filename, index);\n              stat = context.fs.statSync(filename);\n\n              if (!stat.isFile()) {\n                throw new DevMiddlewareError('next');\n              }\n            } else {\n              throw new DevMiddlewareError('next');\n            }\n          }\n        } catch (e) {\n          return resolve(goNext());\n        }\n\n        // server content\n        let content = context.fs.readFileSync(filename);\n\n        content = handleRangeHeaders(content, req, res);\n\n        let contentType = mime.getType(filename) || '';\n\n        if (!NonCharsetFileTypes.test(filename)) {\n          contentType += '; charset=UTF-8';\n        }\n\n        if (!res.getHeader || !res.getHeader('Content-Type')) {\n          res.setHeader('Content-Type', contentType);\n        }\n\n        res.setHeader('Content-Length', content.length);\n\n        const { headers } = context.options;\n\n        if (headers) {\n          for (const name in headers) {\n            if ({}.hasOwnProperty.call(headers, name)) {\n              res.setHeader(name, context.options.headers[name]);\n            }\n          }\n        }\n\n        // Express automatically sets the statusCode to 200, but not all servers do (Koa).\n        // eslint-disable-next-line no-param-reassign\n        res.statusCode = res.statusCode || 200;\n\n        if (res.send) {\n          res.send(content);\n        } else {\n          res.end(content);\n        }\n\n        resolve();\n      }\n    });\n  };\n};\n","'use strict';\n\nmodule.exports = function reporter(middlewareOptions, options) {\n  const { log, state, stats } = options;\n\n  if (state) {\n    const displayStats = middlewareOptions.stats !== false;\n\n    if (displayStats) {\n      if (stats.hasErrors()) {\n        log.error(stats.toString(middlewareOptions.stats));\n      } else if (stats.hasWarnings()) {\n        log.warn(stats.toString(middlewareOptions.stats));\n      } else {\n        log.info(stats.toString(middlewareOptions.stats));\n      }\n    }\n\n    let message = 'Compiled successfully.';\n\n    if (stats.hasErrors()) {\n      message = 'Failed to compile.';\n    } else if (stats.hasWarnings()) {\n      message = 'Compiled with warnings.';\n    }\n    log.info(message);\n  } else {\n    log.info('Compiling...');\n  }\n};\n","'use strict';\n\nconst path = require('path');\nconst { parse } = require('url');\nconst querystring = require('querystring');\n\nconst parseRange = require('range-parser');\n\nconst HASH_REGEXP = /[0-9a-f]{10,}/;\n\n// support for multi-compiler configuration\n// see: https://github.com/webpack/webpack-dev-server/issues/641\nfunction getPaths(publicPath, compiler, url) {\n  const compilers = compiler && compiler.compilers;\n  if (Array.isArray(compilers)) {\n    let compilerPublicPath;\n\n    // the path portion of compilerPublicPath\n    let compilerPublicPathBase;\n\n    for (let i = 0; i < compilers.length; i++) {\n      compilerPublicPath =\n        compilers[i].options &&\n        compilers[i].options.output &&\n        compilers[i].options.output.publicPath;\n\n      if (compilerPublicPath) {\n        if (compilerPublicPath.indexOf('/') === 0) {\n          compilerPublicPathBase = compilerPublicPath;\n        } else {\n          // handle the case where compilerPublicPath is a URL with hostname\n          compilerPublicPathBase = parse(compilerPublicPath).pathname;\n        }\n\n        // check the url vs the path part of the compilerPublicPath\n        if (url.indexOf(compilerPublicPathBase) === 0) {\n          return {\n            publicPath: compilerPublicPath,\n            outputPath: compilers[i].outputPath,\n          };\n        }\n      }\n    }\n  }\n  return {\n    publicPath,\n    outputPath: compiler.outputPath,\n  };\n}\n\n// eslint-disable-next-line consistent-return\nfunction ready(context, fn, req) {\n  if (context.state) {\n    return fn(context.webpackStats);\n  }\n\n  context.log.info(`wait until bundle finished: ${req.url || fn.name}`);\n  context.callbacks.push(fn);\n}\n\nmodule.exports = {\n  getFilenameFromUrl(pubPath, compiler, url) {\n    const { outputPath, publicPath } = getPaths(pubPath, compiler, url);\n    // localPrefix is the folder our bundle should be in\n    const localPrefix = parse(publicPath || '/', false, true);\n    const urlObject = parse(url);\n    let filename;\n\n    // publicPath has the hostname that is not the same as request url's, should fail\n    if (\n      localPrefix.hostname !== null &&\n      urlObject.hostname !== null &&\n      localPrefix.hostname !== urlObject.hostname\n    ) {\n      return false;\n    }\n\n    // publicPath is not in url, so it should fail\n    if (\n      publicPath &&\n      localPrefix.hostname === urlObject.hostname &&\n      url.indexOf(publicPath) !== 0\n    ) {\n      return false;\n    }\n\n    // strip localPrefix from the start of url\n    if (urlObject.pathname.indexOf(localPrefix.pathname) === 0) {\n      filename = urlObject.pathname.substr(localPrefix.pathname.length);\n    }\n\n    if (\n      !urlObject.hostname &&\n      localPrefix.hostname &&\n      url.indexOf(localPrefix.path) !== 0\n    ) {\n      return false;\n    }\n\n    let uri = outputPath;\n\n    /* istanbul ignore if */\n    if (process.platform === 'win32') {\n      // Path Handling for Microsoft Windows\n      if (filename) {\n        uri = path.posix.join(outputPath || '', querystring.unescape(filename));\n\n        if (!path.win32.isAbsolute(uri)) {\n          uri = `/${uri}`;\n        }\n      }\n\n      return uri;\n    }\n\n    // Path Handling for all other operating systems\n    if (filename) {\n      uri = path.posix.join(outputPath || '', filename);\n\n      if (!path.posix.isAbsolute(uri)) {\n        uri = `/${uri}`;\n      }\n    }\n\n    // if no matches, use outputPath as filename\n    return querystring.unescape(uri);\n  },\n\n  handleRangeHeaders(content, req, res) {\n    // assumes express API. For other servers, need to add logic to access\n    // alternative header APIs\n    res.setHeader('Accept-Ranges', 'bytes');\n\n    if (req.headers.range) {\n      const ranges = parseRange(content.length, req.headers.range);\n\n      // unsatisfiable\n      if (ranges === -1) {\n        res.setHeader('Content-Range', `bytes */${content.length}`);\n        // eslint-disable-next-line no-param-reassign\n        res.statusCode = 416;\n      }\n\n      // valid (syntactically invalid/multiple ranges are treated as a\n      // regular response)\n      if (ranges !== -2 && ranges.length === 1) {\n        const { length } = content;\n\n        // Content-Range\n        // eslint-disable-next-line no-param-reassign\n        res.statusCode = 206;\n        res.setHeader(\n          'Content-Range',\n          `bytes ${ranges[0].start}-${ranges[0].end}/${length}`\n        );\n\n        // eslint-disable-next-line no-param-reassign\n        content = content.slice(ranges[0].start, ranges[0].end + 1);\n      }\n    }\n\n    return content;\n  },\n\n  handleRequest(context, filename, processRequest, req) {\n    // in lazy mode, rebuild on bundle request\n    if (\n      context.options.lazy &&\n      (!context.options.filename || context.options.filename.test(filename))\n    ) {\n      context.rebuild();\n    }\n\n    if (HASH_REGEXP.test(filename)) {\n      try {\n        if (context.fs.statSync(filename).isFile()) {\n          processRequest();\n          return;\n        }\n      } catch (e) {\n        // eslint-disable-line\n      }\n    }\n\n    ready(context, processRequest, req);\n  },\n\n  noop: () => {},\n\n  ready,\n};\n","var parse = require('url').parse;\n\nexports.pathMatch = function(url, path) {\n  try {\n    return parse(url).pathname === path;\n  } catch (e) {\n    return false;\n  }\n};\n","module.exports = webpackHotMiddleware;\n\nvar helpers = require('./helpers');\nvar pathMatch = helpers.pathMatch;\n\nfunction webpackHotMiddleware(compiler, opts) {\n  opts = opts || {};\n  opts.log =\n    typeof opts.log == 'undefined' ? console.log.bind(console) : opts.log;\n  opts.path = opts.path || '/__webpack_hmr';\n  opts.heartbeat = opts.heartbeat || 10 * 1000;\n\n  var eventStream = createEventStream(opts.heartbeat);\n  var latestStats = null;\n  var closed = false;\n\n  if (compiler.hooks) {\n    compiler.hooks.invalid.tap('webpack-hot-middleware', onInvalid);\n    compiler.hooks.done.tap('webpack-hot-middleware', onDone);\n  } else {\n    compiler.plugin('invalid', onInvalid);\n    compiler.plugin('done', onDone);\n  }\n  function onInvalid() {\n    if (closed) return;\n    latestStats = null;\n    if (opts.log) opts.log('webpack building...');\n    eventStream.publish({ action: 'building' });\n  }\n  function onDone(statsResult) {\n    if (closed) return;\n    // Keep hold of latest stats so they can be propagated to new clients\n    latestStats = statsResult;\n    publishStats('built', latestStats, eventStream, opts.log);\n  }\n  var middleware = function(req, res, next) {\n    if (closed) return next();\n    if (!pathMatch(req.url, opts.path)) return next();\n    eventStream.handler(req, res);\n    if (latestStats) {\n      // Explicitly not passing in `log` fn as we don't want to log again on\n      // the server\n      publishStats('sync', latestStats, eventStream);\n    }\n  };\n  middleware.publish = function(payload) {\n    if (closed) return;\n    eventStream.publish(payload);\n  };\n  middleware.close = function() {\n    if (closed) return;\n    // Can't remove compiler plugins, so we just set a flag and noop if closed\n    // https://github.com/webpack/tapable/issues/32#issuecomment-350644466\n    closed = true;\n    eventStream.close();\n    eventStream = null;\n  };\n  return middleware;\n}\n\nfunction createEventStream(heartbeat) {\n  var clientId = 0;\n  var clients = {};\n  function everyClient(fn) {\n    Object.keys(clients).forEach(function(id) {\n      fn(clients[id]);\n    });\n  }\n  var interval = setInterval(function heartbeatTick() {\n    everyClient(function(client) {\n      client.write('data: \\uD83D\\uDC93\\n\\n');\n    });\n  }, heartbeat).unref();\n  return {\n    close: function() {\n      clearInterval(interval);\n      everyClient(function(client) {\n        if (!client.finished) client.end();\n      });\n      clients = {};\n    },\n    handler: function(req, res) {\n      var headers = {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'text/event-stream;charset=utf-8',\n        'Cache-Control': 'no-cache, no-transform',\n        // While behind nginx, event stream should not be buffered:\n        // http://nginx.org/docs/http/ngx_http_proxy_module.html#proxy_buffering\n        'X-Accel-Buffering': 'no',\n      };\n\n      var isHttp1 = !(parseInt(req.httpVersion) >= 2);\n      if (isHttp1) {\n        req.socket.setKeepAlive(true);\n        Object.assign(headers, {\n          Connection: 'keep-alive',\n        });\n      }\n\n      res.writeHead(200, headers);\n      res.write('\\n');\n      var id = clientId++;\n      clients[id] = res;\n      req.on('close', function() {\n        if (!res.finished) res.end();\n        delete clients[id];\n      });\n    },\n    publish: function(payload) {\n      everyClient(function(client) {\n        client.write('data: ' + JSON.stringify(payload) + '\\n\\n');\n      });\n    },\n  };\n}\n\nfunction publishStats(action, statsResult, eventStream, log) {\n  var stats = statsResult.toJson({\n    all: false,\n    cached: true,\n    children: true,\n    modules: true,\n    timings: true,\n    hash: true,\n  });\n  // For multi-compiler, stats will be an object with a 'children' array of stats\n  var bundles = extractBundles(stats);\n  bundles.forEach(function(stats) {\n    var name = stats.name || '';\n\n    // Fallback to compilation name in case of 1 bundle (if it exists)\n    if (bundles.length === 1 && !name && statsResult.compilation) {\n      name = statsResult.compilation.name || '';\n    }\n\n    if (log) {\n      log(\n        'webpack built ' +\n          (name ? name + ' ' : '') +\n          stats.hash +\n          ' in ' +\n          stats.time +\n          'ms'\n      );\n    }\n    eventStream.publish({\n      name: name,\n      action: action,\n      time: stats.time,\n      hash: stats.hash,\n      warnings: stats.warnings || [],\n      errors: stats.errors || [],\n      modules: buildModuleMap(stats.modules),\n    });\n  });\n}\n\nfunction extractBundles(stats) {\n  // Stats has modules, single bundle\n  if (stats.modules) return [stats];\n\n  // Stats has children, multiple bundles\n  if (stats.children && stats.children.length) return stats.children;\n\n  // Not sure, assume single\n  return [stats];\n}\n\nfunction buildModuleMap(modules) {\n  var map = {};\n  modules.forEach(function(module) {\n    map[module.id] = module.name;\n  });\n  return map;\n}\n","'use strict';\n\n/* global window: true */\n/* eslint-disable\n  no-shadow,\n  no-param-reassign,\n  space-before-function-paren\n*/\nconst uuid = require('uuid/v4');\nconst colors = require('ansi-colors');\nconst loglevel = require('./loglevel');\n\nconst symbols = {\n  trace: colors.grey('₸'),\n  debug: colors.cyan('➤'),\n  info: colors.blue(colors.symbols.info),\n  warn: colors.yellow(colors.symbols.warning),\n  error: colors.red(colors.symbols.cross)\n};\n\nconst defaults = {\n  name: '<unknown>',\n  level: 'info',\n  unique: true\n};\n\nconst prefix = {\n  level (options) {\n    return symbols[options.level];\n  },\n  template: `{{level}} ${colors.gray('｢{{name}}｣')}: `\n};\n\nfunction log (options) {\n  const opts = Object.assign({}, defaults, options);\n  const { id } = options;\n\n  opts.prefix = Object.assign({}, prefix, options.prefix);\n  delete opts.id;\n\n  Object.defineProperty(opts, 'id', {\n    get() {\n      if (!id) {\n        return this.name + (opts.unique ? `-${uuid()}` : '');\n      }\n\n      return id;\n    }\n  });\n\n  if (opts.timestamp) {\n    opts.prefix.template = `[{{time}}] ${opts.prefix.template}`;\n  }\n\n  const log = loglevel.getLogger(opts);\n\n  if (!Object.prototype.hasOwnProperty.call(log, 'id')) {\n    Object.defineProperty(log, 'id', {\n      get() {\n        return opts.id;\n      }\n    });\n  }\n\n  return log;\n}\n\nmodule.exports = log;\n// NOTE: this is exported so that consumers of webpack-log can use the same\n// version of ansi-colors to decorate log messages without incurring additional\n// dependency overhead\nmodule.exports.colors = colors;\n// NOTE: This is an undocumented function solely for the purpose of tests.\n// Do not use this method in production code. Using in production code\n// may result in strange behavior.\nmodule.exports.delLogger = function delLogger(name) {\n  delete loglevel.loggers[name];\n};\n\nmodule.exports.factories = loglevel.factories;\n","'use strict';\n\n/* global window: true */\n/* eslint-disable\n  multiline-ternary,\n  no-param-reassign\n*/\nconst PrefixFactory = require('./PrefixFactory');\nconst MethodFactory = require('./MethodFactory');\n\nconst defaults = {\n  name: +new Date(),\n  level: 'warn',\n  prefix: null,\n  factory: null\n};\n\nclass LogLevel {\n  constructor(options) {\n    // implement for some _very_ loose type checking. avoids getting into a\n    // circular require between MethodFactory and LogLevel\n    this.type = 'LogLevel';\n    this.options = Object.assign({}, defaults, options);\n    this.methodFactory = options.factory;\n\n    if (!this.methodFactory) {\n      const factory = options.prefix\n        ? new PrefixFactory(this, options.prefix)\n        : new MethodFactory(this);\n\n      this.methodFactory = factory;\n    }\n\n    if (!this.methodFactory.logger) {\n      this.methodFactory.logger = this;\n    }\n\n    this.name = options.name || '<unknown>';\n    // this.level is a setter, do this after setting up the factory\n    this.level = this.options.level;\n  }\n\n  get factory() {\n    return this.methodFactory;\n  }\n\n  set factory(factory) {\n    factory.logger = this;\n\n    this.methodFactory = factory;\n    this.methodFactory.replaceMethods(this.level);\n  }\n\n  enable() {\n    this.level = this.levels.TRACE;\n  }\n\n  disable() {\n    this.level = this.levels.SILENT;\n  }\n\n  get level() {\n    return this.currentLevel;\n  }\n\n  set level(logLevel) {\n    const level = this.methodFactory.distillLevel(logLevel);\n\n    if (level == null) {\n      throw new Error(\n        `loglevel: setLevel() called with invalid level: ${logLevel}`\n      );\n    }\n\n    this.currentLevel = level;\n    this.methodFactory.replaceMethods(level);\n\n    if (typeof console === 'undefined' && level < this.levels.SILENT) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'loglevel: console is undefined. The log will produce no output'\n      );\n    }\n  }\n\n  get levels() { // eslint-disable-line class-methods-use-this\n    return this.methodFactory.levels;\n  }\n}\n\nmodule.exports = LogLevel;\n","'use strict';\n\n/* eslint-disable\n  arrow-parens,\n  multiline-ternary,\n  consistent-return,\n  no-param-reassign,\n  prefer-destructuring\n*/\nconst noop = () => {};\n\nconst levels = Symbol('levels');\nconst instance = Symbol('instance');\n\nclass MethodFactory {\n  constructor(logger) {\n    this[levels] = {\n      TRACE: 0,\n      DEBUG: 1,\n      INFO: 2,\n      WARN: 3,\n      ERROR: 4,\n      SILENT: 5\n    };\n\n    this[instance] = logger;\n  }\n\n  set logger(logger) {\n    this[instance] = logger;\n  }\n\n  get logger() {\n    return this[instance];\n  }\n\n  get levels() {\n    return this[levels];\n  }\n\n  get methods() {\n    return Object.keys(this.levels)\n      .map((key) => key.toLowerCase())\n      .filter((key) => key !== 'silent');\n  }\n\n  distillLevel(level) {\n    let result = level;\n\n    if (\n      typeof result === 'string' &&\n      typeof this.levels[result.toUpperCase()] !== 'undefined'\n    ) {\n      result = this.levels[result.toUpperCase()];\n    }\n\n    if (this.levelValid(result)) {\n      return result;\n    }\n  }\n\n  levelValid(level) {\n    if (\n      typeof level === 'number' && level >= 0 &&\n      level <= this.levels.SILENT\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Build the best logging method possible for this env\n   * Wherever possible we want to bind, not wrap, to preserve stack traces.\n   * Since we're targeting modern browsers, there's no need to wait for the\n   * console to become available.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  make(method) {\n    if (method === 'debug') {\n      method = 'log';\n    }\n\n    /* eslint-disable no-console */\n    if (typeof console[method] !== 'undefined') {\n      return this.bindMethod(console, method);\n    } else if (typeof console.log !== 'undefined') {\n      return this.bindMethod(console, 'log');\n    }\n\n    /* eslint-enable no-console */\n    return noop;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  bindMethod(obj, name) {\n    const method = obj[name];\n\n    if (typeof method.bind === 'function') {\n      return method.bind(obj);\n    }\n\n    try {\n      return Function.prototype.bind.call(method, obj);\n    } catch (err) {\n      // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n      return function result() {\n        // eslint-disable-next-line prefer-rest-params\n        return Function.prototype.apply.apply(method, [obj, arguments]);\n      };\n    }\n  }\n\n  replaceMethods(logLevel) {\n    const level = this.distillLevel(logLevel);\n\n    if (level == null) {\n      throw new Error(\n        `loglevel: replaceMethods() called with invalid level: ${logLevel}`\n      );\n    }\n\n    if (!this.logger || this.logger.type !== 'LogLevel') {\n      throw new TypeError(\n        'loglevel: Logger is undefined or invalid. Please specify a valid Logger instance.'\n      );\n    }\n\n    this.methods.forEach((method) => {\n      this.logger[method] = (this.levels[method.toUpperCase()] < level)\n        ? noop\n        : this.make(method);\n    });\n\n    // Define log.log as an alias for log.debug\n    this.logger.log = this.logger.debug;\n  }\n}\n\nmodule.exports = MethodFactory;\n","'use strict';\n\n/* eslint-disable\n  no-param-reassign,\n  space-before-function-paren\n*/\nconst MethodFactory = require('./MethodFactory');\n\nconst defaults = {\n  name (options) {\n    return options.logger.name;\n  },\n  time () {\n    return new Date().toTimeString().split(' ')[0];\n  },\n  level (options) {\n    return `[${options.level}]`;\n  },\n  template: '{{time}} {{level}} '\n};\n\nclass PrefixFactory extends MethodFactory {\n  constructor(logger, options) {\n    super(logger);\n\n    this.options = Object.assign({}, defaults, options);\n  }\n\n  interpolate(level) {\n    return this.options.template.replace(/{{([^{}]*)}}/g, (stache, prop) => {\n      const fn = this.options[prop];\n\n      if (fn) {\n        return fn({ level, logger: this.logger });\n      }\n\n      return stache;\n    });\n  }\n\n  make(method) {\n    const og = super.make(method);\n\n    return (...args) => {\n      const [first] = args;\n\n      const output = this.interpolate(method);\n\n      if (typeof first === 'string') {\n        args[0] = output + first;\n      } else {\n        args.unshift(output);\n      }\n\n      og(...args);\n    };\n  }\n}\n\nmodule.exports = PrefixFactory;\n","'use strict';\n\n/* global window: true */\n/* eslint-disable\n  no-shadow,\n  no-param-reassign,\n  space-before-function-paren\n*/\nconst LogLevel = require('./LogLevel');\nconst MethodFactory = require('./MethodFactory');\nconst PrefixFactory = require('./PrefixFactory');\n\nconst defaultLogger = new LogLevel({ name: 'default' });\nconst cache = { default: defaultLogger };\n\n// Grab the current global log variable in case of overwrite\nconst existing = (typeof window !== 'undefined') ? window.log : null;\n\nconst loglevel = Object.assign(defaultLogger, {\n  get factories() {\n    return {\n      MethodFactory,\n      PrefixFactory\n    };\n  },\n  get loggers() {\n    return cache;\n  },\n  getLogger(options) {\n    if (typeof options === 'string') {\n      options = { name: options };\n    }\n\n    if (!options.id) {\n      options.id = options.name;\n    }\n\n    const { name, id } = options;\n    const defaults = { level: defaultLogger.level };\n\n    if (typeof name !== 'string' || !name || !name.length) {\n      throw new TypeError('You must supply a name when creating a logger');\n    }\n\n    let logger = cache[id];\n\n    if (!logger) {\n      logger = new LogLevel(Object.assign({}, defaults, options));\n\n      cache[id] = logger;\n    }\n\n    return logger;\n  },\n  noConflict() {\n    if (typeof window !== 'undefined' && window.log === defaultLogger) {\n      window.log = existing;\n    }\n\n    return defaultLogger;\n  }\n});\n\nmodule.exports = loglevel;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nclass CachedSource extends Source {\n\tconstructor(source) {\n\t\tsuper();\n\t\tthis._source = source;\n\t\tthis._cachedSource = undefined;\n\t\tthis._cachedSize = undefined;\n\t\tthis._cachedMaps = {};\n\n\t\tif(source.node) this.node = function(options) {\n\t\t\treturn this._source.node(options);\n\t\t};\n\n\t\tif(source.listMap) this.listMap = function(options) {\n\t\t\treturn this._source.listMap(options);\n\t\t};\n\t}\n\n\tsource() {\n\t\tif(typeof this._cachedSource !== \"undefined\") return this._cachedSource;\n\t\treturn this._cachedSource = this._source.source();\n\t}\n\n\tsize() {\n\t\tif(typeof this._cachedSize !== \"undefined\") return this._cachedSize;\n\t\tif(typeof this._cachedSource !== \"undefined\")\n\t\t\treturn this._cachedSize = this._cachedSource.length;\n\t\treturn this._cachedSize = this._source.size();\n\t}\n\n\tsourceAndMap(options) {\n\t\tconst key = JSON.stringify(options);\n\t\tif(typeof this._cachedSource !== \"undefined\" && key in this._cachedMaps)\n\t\t\treturn {\n\t\t\t\tsource: this._cachedSource,\n\t\t\t\tmap: this._cachedMaps[key]\n\t\t\t};\n\t\telse if(typeof this._cachedSource !== \"undefined\") {\n\t\t\treturn {\n\t\t\t\tsource: this._cachedSource,\n\t\t\t\tmap: this._cachedMaps[key] = this._source.map(options)\n\t\t\t};\n\t\t} else if(key in this._cachedMaps) {\n\t\t\treturn {\n\t\t\t\tsource: this._cachedSource = this._source.source(),\n\t\t\t\tmap: this._cachedMaps[key]\n\t\t\t};\n\t\t}\n\t\tconst result = this._source.sourceAndMap(options);\n\t\tthis._cachedSource = result.source;\n\t\tthis._cachedMaps[key] = result.map;\n\t\treturn {\n\t\t\tsource: this._cachedSource,\n\t\t\tmap: this._cachedMaps[key]\n\t\t};\n\t}\n\n\tmap(options) {\n\t\tif(!options) options = {};\n\t\tconst key = JSON.stringify(options);\n\t\tif(key in this._cachedMaps)\n\t\t\treturn this._cachedMaps[key];\n\t\treturn this._cachedMaps[key] = this._source.map();\n\t}\n\n\tupdateHash(hash) {\n\t\tthis._source.updateHash(hash);\n\t}\n}\n\nmodule.exports = CachedSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SourceNode = require(\"source-map\").SourceNode;\nconst SourceListMap = require(\"source-list-map\").SourceListMap;\nconst Source = require(\"./Source\");\n\nclass ConcatSource extends Source {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.children = [];\n\t\tfor(var i = 0; i < arguments.length; i++) {\n\t\t\tvar item = arguments[i];\n\t\t\tif(item instanceof ConcatSource) {\n\t\t\t\tvar children = item.children;\n\t\t\t\tfor(var j = 0; j < children.length; j++)\n\t\t\t\t\tthis.children.push(children[j]);\n\t\t\t} else {\n\t\t\t\tthis.children.push(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(item) {\n\t\tif(item instanceof ConcatSource) {\n\t\t\tvar children = item.children;\n\t\t\tfor(var j = 0; j < children.length; j++)\n\t\t\t\tthis.children.push(children[j]);\n\t\t} else {\n\t\t\tthis.children.push(item);\n\t\t}\n\t}\n\n\tsource() {\n\t\tlet source = \"\";\n\t\tconst children = this.children;\n\t\tfor(let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tsource += typeof child === \"string\" ? child : child.source();\n\t\t}\n\t\treturn source;\n\t}\n\n\tsize() {\n\t\tlet size = 0;\n\t\tconst children = this.children;\n\t\tfor(let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tsize += typeof child === \"string\" ? child.length : child.size();\n\t\t}\n\t\treturn size;\n\t}\n\n\tnode(options) {\n\t\tconst node = new SourceNode(null, null, null, this.children.map(function(item) {\n\t\t\treturn typeof item === \"string\" ? item : item.node(options);\n\t\t}));\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\tconst map = new SourceListMap();\n\t\tvar children = this.children;\n\t\tfor(var i = 0; i < children.length; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif(typeof item === \"string\")\n\t\t\t\tmap.add(item);\n\t\t\telse\n\t\t\t\tmap.add(item.listMap(options));\n\t\t}\n\t\treturn map;\n\t}\n\n\tupdateHash(hash) {\n\t\tvar children = this.children;\n\t\tfor(var i = 0; i < children.length; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif(typeof item === \"string\")\n\t\t\t\thash.update(item);\n\t\t\telse\n\t\t\t\titem.updateHash(hash);\n\t\t}\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(ConcatSource.prototype);\n\nmodule.exports = ConcatSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar Source = require(\"./Source\");\n\nclass LineToLineMappedSource extends Source {\n\tconstructor(value, name, originalSource) {\n\t\tsuper();\n\t\tthis._value = value;\n\t\tthis._name = name;\n\t\tthis._originalSource = originalSource;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tnode(options) {\n\t\tvar value = this._value;\n\t\tvar name = this._name;\n\t\tvar lines = value.split(\"\\n\");\n\t\tvar node = new SourceNode(null, null, null,\n\t\t\tlines.map(function(line, idx) {\n\t\t\t\treturn new SourceNode(idx + 1, 0, name, (line + (idx != lines.length - 1 ? \"\\n\" : \"\")));\n\t\t\t})\n\t\t);\n\t\tnode.setSourceContent(name, this._originalSource);\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\treturn new SourceListMap(this._value, this._name, this._originalSource)\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t\thash.update(this._originalSource);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\n\nmodule.exports = LineToLineMappedSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar Source = require(\"./Source\");\n\nvar SPLIT_REGEX = /(?!$)[^\\n\\r;{}]*[\\n\\r;{}]*/g;\n\nfunction _splitCode(code) {\n\treturn code.match(SPLIT_REGEX) || [];\n}\n\nclass OriginalSource extends Source {\n\tconstructor(value, name) {\n\t\tsuper();\n\t\tthis._value = value;\n\t\tthis._name = name;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tnode(options) {\n\t\toptions = options || {};\n\t\tvar sourceMap = this._sourceMap;\n\t\tvar value = this._value;\n\t\tvar name = this._name;\n\t\tvar lines = value.split(\"\\n\");\n\t\tvar node = new SourceNode(null, null, null,\n\t\t\tlines.map(function(line, idx) {\n\t\t\t\tvar pos = 0;\n\t\t\t\tif(options.columns === false) {\n\t\t\t\t\tvar content = line + (idx != lines.length - 1 ? \"\\n\" : \"\");\n\t\t\t\t\treturn new SourceNode(idx + 1, 0, name, content);\n\t\t\t\t}\n\t\t\t\treturn new SourceNode(null, null, null,\n\t\t\t\t\t_splitCode(line + (idx != lines.length - 1 ? \"\\n\" : \"\")).map(function(item) {\n\t\t\t\t\t\tif(/^\\s*$/.test(item)) {\n\t\t\t\t\t\t\tpos += item.length;\n\t\t\t\t\t\t\treturn item;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar res = new SourceNode(idx + 1, pos, name, item);\n\t\t\t\t\t\tpos += item.length;\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t\tnode.setSourceContent(name, value);\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\treturn new SourceListMap(this._value, this._name, this._value)\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(OriginalSource.prototype);\n\nmodule.exports = OriginalSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar Source = require(\"./Source\");\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar REPLACE_REGEX = /\\n(?=.|\\s)/g;\n\nfunction cloneAndPrefix(node, prefix, append) {\n\tif(typeof node === \"string\") {\n\t\tvar result = node.replace(REPLACE_REGEX, \"\\n\" + prefix);\n\t\tif(append.length > 0) result = append.pop() + result;\n\t\tif(/\\n$/.test(node)) append.push(prefix);\n\t\treturn result;\n\t} else {\n\t\tvar newNode = new SourceNode(\n\t\t\tnode.line,\n\t\t\tnode.column,\n\t\t\tnode.source,\n\t\t\tnode.children.map(function(node) {\n\t\t\t\treturn cloneAndPrefix(node, prefix, append);\n\t\t\t}),\n\t\t\tnode.name\n\t\t);\n\t\tnewNode.sourceContents = node.sourceContents;\n\t\treturn newNode;\n\t}\n};\n\nclass PrefixSource extends Source {\n\tconstructor(prefix, source) {\n\t\tsuper();\n\t\tthis._source = source;\n\t\tthis._prefix = prefix;\n\t}\n\n\tsource() {\n\t\tvar node = typeof this._source === \"string\" ? this._source : this._source.source();\n\t\tvar prefix = this._prefix;\n\t\treturn prefix + node.replace(REPLACE_REGEX, \"\\n\" + prefix);\n\t}\n\n\tnode(options) {\n\t\tvar node = this._source.node(options);\n\t\tvar append = [this._prefix];\n\t\treturn new SourceNode(null, null, null, [\n\t\t\tcloneAndPrefix(node, this._prefix, append)\n\t\t]);\n\t}\n\n\tlistMap(options) {\n\t\tvar prefix = this._prefix;\n\t\tvar map = this._source.listMap(options);\n\t\treturn map.mapGeneratedCode(function(code) {\n\t\t\treturn prefix + code.replace(REPLACE_REGEX, \"\\n\" + prefix);\n\t\t});\n\t}\n\n\tupdateHash(hash) {\n\t\tif(typeof this._source === \"string\")\n\t\t\thash.update(this._source);\n\t\telse\n\t\t\tthis._source.updateHash(hash);\n\t\tif(typeof this._prefix === \"string\")\n\t\t\thash.update(this._prefix);\n\t\telse\n\t\t\tthis._prefix.updateHash(hash);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(PrefixSource.prototype);\n\nmodule.exports = PrefixSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar Source = require(\"./Source\");\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\n\nclass RawSource extends Source {\n\tconstructor(value) {\n\t\tsuper();\n\t\tthis._value = value;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tmap(options) {\n\t\treturn null;\n\t}\n\n\tnode(options) {\n\t\treturn new SourceNode(null, null, null, this._value);\n\t}\n\n\tlistMap(options) {\n\t\treturn new SourceListMap(this._value);\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t}\n}\n\nmodule.exports = RawSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar Source = require(\"./Source\");\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\n\nclass Replacement {\n\tconstructor(start, end, content, insertIndex, name) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.content = content;\n\t\tthis.insertIndex = insertIndex;\n\t\tthis.name = name;\n\t}\n}\n\nclass ReplaceSource extends Source {\n\tconstructor(source, name) {\n\t\tsuper();\n\t\tthis._source = source;\n\t\tthis._name = name;\n\t\t/** @type {Replacement[]} */\n\t\tthis.replacements = [];\n\t}\n\n\treplace(start, end, newValue, name) {\n\t\tif(typeof newValue !== \"string\")\n\t\t\tthrow new Error(\"insertion must be a string, but is a \" + typeof newValue);\n\t\tthis.replacements.push(new Replacement(start, end, newValue, this.replacements.length, name));\n\t}\n\n\tinsert(pos, newValue, name) {\n\t\tif(typeof newValue !== \"string\")\n\t\t\tthrow new Error(\"insertion must be a string, but is a \" + typeof newValue + \": \" + newValue);\n\t\tthis.replacements.push(new Replacement(pos, pos - 1, newValue, this.replacements.length, name));\n\t}\n\n\tsource(options) {\n\t\treturn this._replaceString(this._source.source());\n\t}\n\n\toriginal() {\n\t\treturn this._source;\n\t}\n\n\t_sortReplacements() {\n\t\tthis.replacements.sort(function(a, b) {\n\t\t\tvar diff = b.end - a.end;\n\t\t\tif(diff !== 0)\n\t\t\t\treturn diff;\n\t\t\tdiff = b.start - a.start;\n\t\t\tif(diff !== 0)\n\t\t\t\treturn diff;\n\t\t\treturn b.insertIndex - a.insertIndex;\n\t\t});\n\t}\n\n\t_replaceString(str) {\n\t\tif(typeof str !== \"string\")\n\t\t\tthrow new Error(\"str must be a string, but is a \" + typeof str + \": \" + str);\n\t\tthis._sortReplacements();\n\t\tvar result = [str];\n\t\tthis.replacements.forEach(function(repl) {\n\t\t\tvar remSource = result.pop();\n\t\t\tvar splitted1 = this._splitString(remSource, Math.floor(repl.end + 1));\n\t\t\tvar splitted2 = this._splitString(splitted1[0], Math.floor(repl.start));\n\t\t\tresult.push(splitted1[1], repl.content, splitted2[0]);\n\t\t}, this);\n\n\t\t// write out result array in reverse order\n\t\tlet resultStr = \"\";\n\t\tfor(let i = result.length - 1; i >= 0; --i) {\n\t\t\tresultStr += result[i];\n\t\t}\n\t\treturn resultStr;\n\t}\n\n\tnode(options) {\n\t\tvar node = this._source.node(options);\n\t\tif(this.replacements.length === 0) {\n\t\t\treturn node;\n\t\t}\n\t\tthis._sortReplacements();\n\t\tvar replace = new ReplacementEnumerator(this.replacements);\n\t\tvar output = [];\n\t\tvar position = 0;\n\t\tvar sources = Object.create(null);\n\t\tvar sourcesInLines = Object.create(null);\n\n\t\t// We build a new list of SourceNodes in \"output\"\n\t\t// from the original mapping data\n\n\t\tvar result = new SourceNode();\n\n\t\t// We need to add source contents manually\n\t\t// because \"walk\" will not handle it\n\t\tnode.walkSourceContents(function(sourceFile, sourceContent) {\n\t\t\tresult.setSourceContent(sourceFile, sourceContent);\n\t\t\tsources[\"$\" + sourceFile] = sourceContent;\n\t\t});\n\n\t\tvar replaceInStringNode = this._replaceInStringNode.bind(this, output, replace, function getOriginalSource(mapping) {\n\t\t\tvar key = \"$\" + mapping.source;\n\t\t\tvar lines = sourcesInLines[key];\n\t\t\tif(!lines) {\n\t\t\t\tvar source = sources[key];\n\t\t\t\tif(!source) return null;\n\t\t\t\tlines = source.split(\"\\n\").map(function(line) {\n\t\t\t\t\treturn line + \"\\n\";\n\t\t\t\t});\n\t\t\t\tsourcesInLines[key] = lines;\n\t\t\t}\n\t\t\t// line is 1-based\n\t\t\tif(mapping.line > lines.length) return null;\n\t\t\tvar line = lines[mapping.line - 1];\n\t\t\treturn line.substr(mapping.column);\n\t\t});\n\n\t\tnode.walk(function(chunk, mapping) {\n\t\t\tposition = replaceInStringNode(chunk, position, mapping);\n\t\t});\n\n\t\t// If any replacements occur after the end of the original file, then we append them\n\t\t// directly to the end of the output\n\t\tvar remaining = replace.footer();\n\t\tif(remaining) {\n\t\t\toutput.push(remaining);\n\t\t}\n\n\t\tresult.add(output);\n\n\t\treturn result;\n\t}\n\n\tlistMap(options) {\n\t\tthis._sortReplacements();\n\t\tvar map = this._source.listMap(options);\n\t\tvar currentIndex = 0;\n\t\tvar replacements = this.replacements;\n\t\tvar idxReplacement = replacements.length - 1;\n\t\tvar removeChars = 0;\n\t\tmap = map.mapGeneratedCode(function(str) {\n\t\t\tvar newCurrentIndex = currentIndex + str.length;\n\t\t\tif(removeChars > str.length) {\n\t\t\t\tremoveChars -= str.length;\n\t\t\t\tstr = \"\";\n\t\t\t} else {\n\t\t\t\tif(removeChars > 0) {\n\t\t\t\t\tstr = str.substr(removeChars);\n\t\t\t\t\tcurrentIndex += removeChars;\n\t\t\t\t\tremoveChars = 0;\n\t\t\t\t}\n\t\t\t\tvar finalStr = \"\";\n\t\t\t\twhile(idxReplacement >= 0 && replacements[idxReplacement].start < newCurrentIndex) {\n\t\t\t\t\tvar repl = replacements[idxReplacement];\n\t\t\t\t\tvar start = Math.floor(repl.start);\n\t\t\t\t\tvar end = Math.floor(repl.end + 1);\n\t\t\t\t\tvar before = str.substr(0, Math.max(0, start - currentIndex));\n\t\t\t\t\tif(end <= newCurrentIndex) {\n\t\t\t\t\t\tvar after = str.substr(Math.max(0, end - currentIndex));\n\t\t\t\t\t\tfinalStr += before + repl.content;\n\t\t\t\t\t\tstr = after;\n\t\t\t\t\t\tcurrentIndex = Math.max(currentIndex, end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfinalStr += before + repl.content;\n\t\t\t\t\t\tstr = \"\";\n\t\t\t\t\t\tremoveChars = end - newCurrentIndex;\n\t\t\t\t\t}\n\t\t\t\t\tidxReplacement--;\n\t\t\t\t}\n\t\t\t\tstr = finalStr + str;\n\t\t\t}\n\t\t\tcurrentIndex = newCurrentIndex;\n\t\t\treturn str;\n\t\t});\n\t\tvar extraCode = \"\";\n\t\twhile(idxReplacement >= 0) {\n\t\t\textraCode += replacements[idxReplacement].content;\n\t\t\tidxReplacement--;\n\t\t}\n\t\tif(extraCode) {\n\t\t\tmap.add(extraCode);\n\t\t}\n\t\treturn map;\n\t}\n\n\t_splitString(str, position) {\n\t\treturn position <= 0 ? [\"\", str] : [str.substr(0, position), str.substr(position)];\n\t}\n\n\t_replaceInStringNode(output, replace, getOriginalSource, node, position, mapping) {\n\t\tvar original = undefined;\n\n\t\tdo {\n\t\t\tvar splitPosition = replace.position - position;\n\t\t\t// If multiple replaces occur in the same location then the splitPosition may be\n\t\t\t// before the current position for the subsequent splits. Ensure it is >= 0\n\t\t\tif(splitPosition < 0) {\n\t\t\t\tsplitPosition = 0;\n\t\t\t}\n\t\t\tif(splitPosition >= node.length || replace.done) {\n\t\t\t\tif(replace.emit) {\n\t\t\t\t\tvar nodeEnd = new SourceNode(\n\t\t\t\t\t\tmapping.line,\n\t\t\t\t\t\tmapping.column,\n\t\t\t\t\t\tmapping.source,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tmapping.name\n\t\t\t\t\t);\n\t\t\t\t\toutput.push(nodeEnd);\n\t\t\t\t}\n\t\t\t\treturn position + node.length;\n\t\t\t}\n\n\t\t\tvar originalColumn = mapping.column;\n\n\t\t\t// Try to figure out if generated code matches original code of this segement\n\t\t\t// If this is the case we assume that it's allowed to move mapping.column\n\t\t\t// Because getOriginalSource can be expensive we only do it when neccessary\n\n\t\t\tvar nodePart;\n\t\t\tif(splitPosition > 0) {\n\t\t\t\tnodePart = node.slice(0, splitPosition);\n\t\t\t\tif(original === undefined) {\n\t\t\t\t\toriginal = getOriginalSource(mapping);\n\t\t\t\t}\n\t\t\t\tif(original && original.length >= splitPosition && original.startsWith(nodePart)) {\n\t\t\t\t\tmapping.column += splitPosition;\n\t\t\t\t\toriginal = original.substr(splitPosition);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar emit = replace.next();\n\t\t\tif(!emit) {\n\t\t\t\t// Stop emitting when we have found the beginning of the string to replace.\n\t\t\t\t// Emit the part of the string before splitPosition\n\t\t\t\tif(splitPosition > 0) {\n\t\t\t\t\tvar nodeStart = new SourceNode(\n\t\t\t\t\t\tmapping.line,\n\t\t\t\t\t\toriginalColumn,\n\t\t\t\t\t\tmapping.source,\n\t\t\t\t\t\tnodePart,\n\t\t\t\t\t\tmapping.name\n\t\t\t\t\t);\n\t\t\t\t\toutput.push(nodeStart);\n\t\t\t\t}\n\n\t\t\t\t// Emit the replacement value\n\t\t\t\tif(replace.value) {\n\t\t\t\t\toutput.push(new SourceNode(\n\t\t\t\t\t\tmapping.line,\n\t\t\t\t\t\tmapping.column,\n\t\t\t\t\t\tmapping.source,\n\t\t\t\t\t\treplace.value,\n\t\t\t\t\t\tmapping.name || replace.name\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Recurse with remainder of the string as there may be multiple replaces within a single node\n\t\t\tnode = node.substr(splitPosition);\n\t\t\tposition += splitPosition;\n\t\t} while (true);\n\t}\n}\n\nclass ReplacementEnumerator {\n\t/**\n\t * @param {Replacement[]} replacements list of replacements\n\t */\n\tconstructor(replacements) {\n\t\tthis.replacements = replacements || [];\n\t\tthis.index = this.replacements.length;\n\t\tthis.done = false;\n\t\tthis.emit = false;\n\t\t// Set initial start position\n\t\tthis.next();\n\t}\n\n\tnext() {\n\t\tif(this.done)\n\t\t\treturn true;\n\t\tif(this.emit) {\n\t\t\t// Start point found. stop emitting. set position to find end\n\t\t\tvar repl = this.replacements[this.index];\n\t\t\tvar end = Math.floor(repl.end + 1);\n\t\t\tthis.position = end;\n\t\t\tthis.value = repl.content;\n\t\t\tthis.name = repl.name;\n\t\t} else {\n\t\t\t// End point found. start emitting. set position to find next start\n\t\t\tthis.index--;\n\t\t\tif(this.index < 0) {\n\t\t\t\tthis.done = true;\n\t\t\t} else {\n\t\t\t\tvar nextRepl = this.replacements[this.index];\n\t\t\t\tvar start = Math.floor(nextRepl.start);\n\t\t\t\tthis.position = start;\n\t\t\t}\n\t\t}\n\t\tif(this.position < 0)\n\t\t\tthis.position = 0;\n\t\tthis.emit = !this.emit;\n\t\treturn this.emit;\n\t}\n\n\tfooter() {\n\t\tif(!this.done && !this.emit)\n\t\t\tthis.next(); // If we finished _replaceInNode mid emit we advance to next entry\n\t\tif(this.done) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\tvar resultStr = \"\";\n\t\t\tfor(var i = this.index; i >= 0; i--) {\n\t\t\t\tvar repl = this.replacements[i];\n\t\t\t\t// this doesn't need to handle repl.name, because in SourceMaps generated code\n\t\t\t\t// without pointer to original source can't have a name\n\t\t\t\tresultStr += repl.content;\n\t\t\t}\n\t\t\treturn resultStr;\n\t\t}\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(ReplaceSource.prototype);\n\nmodule.exports = ReplaceSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\n\nclass Source {\n\n\tsource() {\n\t\tthrow new Error(\"Abstract\");\n\t}\n\n\tsize() {\n\t\treturn this.source().length;\n\t}\n\n\tmap(options) {\n\t\treturn null;\n\t}\n\n\tsourceAndMap(options) {\n\t\treturn {\n\t\t\tsource: this.source(),\n\t\t\tmap: this.map()\n\t\t};\n\t}\n\n\tnode() {\n\t\tthrow new Error(\"Abstract\");\n\t}\n\n\tlistNode() {\n\t\tthrow new Error(\"Abstract\");\n\t}\n\n\tupdateHash(hash) {\n\t\tvar source = this.source();\n\t\thash.update(source || \"\");\n\t}\n}\n\nmodule.exports = Source;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = function mixinSourceAndMap(proto) {\n\tproto.map = function(options) {\n\t\toptions = options || {};\n\t\tif(options.columns === false) {\n\t\t\treturn this.listMap(options).toStringWithSourceMap({\n\t\t\t\tfile: \"x\"\n\t\t\t}).map;\n\t\t}\n\n\t\treturn this.node(options).toStringWithSourceMap({\n\t\t\tfile: \"x\"\n\t\t}).map.toJSON();\n\t};\n\n\tproto.sourceAndMap = function(options) {\n\t\toptions = options || {};\n\t\tif(options.columns === false) {\n\t\t\t//console.log(this.listMap(options).debugInfo());\n\t\t\treturn this.listMap(options).toStringWithSourceMap({\n\t\t\t\tfile: \"x\"\n\t\t\t});\n\t\t}\n\n\t\tvar res = this.node(options).toStringWithSourceMap({\n\t\t\tfile: \"x\"\n\t\t});\n\t\treturn {\n\t\t\tsource: res.code,\n\t\t\tmap: res.map.toJSON()\n\t\t};\n\t};\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceMapGenerator = require(\"source-map\").SourceMapGenerator;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\nvar Source = require(\"./Source\");\n\nclass SourceMapSource extends Source {\n\tconstructor(value, name, sourceMap, originalSource, innerSourceMap) {\n\t\tsuper();\n\t\tthis._value = value;\n\t\tthis._name = name;\n\t\tthis._sourceMap = sourceMap;\n\t\tthis._originalSource = originalSource;\n\t\tthis._innerSourceMap = innerSourceMap;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tnode(options) {\n\t\tvar innerSourceMap = this._innerSourceMap;\n\t\tvar sourceMap = this._sourceMap;\n\t\tif(innerSourceMap) {\n\t\t\tsourceMap = SourceMapGenerator.fromSourceMap(new SourceMapConsumer(sourceMap));\n\t\t\tif(this._originalSource)\n\t\t\t\tsourceMap.setSourceContent(this._name, this._originalSource);\n\t\t\tinnerSourceMap = new SourceMapConsumer(innerSourceMap);\n\t\t\tsourceMap.applySourceMap(innerSourceMap, this._name);\n\t\t\tsourceMap = sourceMap.toJSON();\n\t\t}\n\t\treturn SourceNode.fromStringWithSourceMap(this._value, new SourceMapConsumer(sourceMap));\n\t}\n\n\tlistMap(options) {\n\t\toptions = options || {};\n\t\tif(options.module === false)\n\t\t\treturn new SourceListMap(this._value, this._name, this._value);\n\t\treturn fromStringWithSourceMap(this._value, typeof this._sourceMap === \"string\" ? JSON.parse(this._sourceMap) : this._sourceMap);\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t\tif(this._originalSource)\n\t\t\thash.update(this._originalSource);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(SourceMapSource.prototype);\n\nmodule.exports = SourceMapSource;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nexports.Source = require(\"./Source\");\n\nexports.RawSource = require(\"./RawSource\");\nexports.OriginalSource = require(\"./OriginalSource\");\nexports.SourceMapSource = require(\"./SourceMapSource\");\nexports.LineToLineMappedSource = require(\"./LineToLineMappedSource\");\n\nexports.CachedSource = require(\"./CachedSource\");\nexports.ConcatSource = require(\"./ConcatSource\");\nexports.ReplaceSource = require(\"./ReplaceSource\");\nexports.PrefixSource = require(\"./PrefixSource\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Provide a \"System\" global.\nmodule.exports = {\n\t// Make sure import is only used as \"System.import\"\n\timport: function() {\n\t\tthrow new Error(\"System.import cannot be used indirectly\");\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nconst NullFactory = require(\"./NullFactory\");\n\n/* eslint-disable camelcase */\nconst REPLACEMENTS = {\n\t__webpack_require__: \"__webpack_require__\",\n\t__webpack_public_path__: \"__webpack_require__.p\",\n\t__webpack_modules__: \"__webpack_require__.m\",\n\t__webpack_chunk_load__: \"__webpack_require__.e\",\n\t__non_webpack_require__: \"require\",\n\t__webpack_nonce__: \"__webpack_require__.nc\",\n\t\"require.onError\": \"__webpack_require__.oe\"\n};\nconst NO_WEBPACK_REQUIRE = {\n\t__non_webpack_require__: true\n};\nconst REPLACEMENT_TYPES = {\n\t__webpack_public_path__: \"string\",\n\t__webpack_require__: \"function\",\n\t__webpack_modules__: \"object\",\n\t__webpack_chunk_load__: \"function\",\n\t__webpack_nonce__: \"string\"\n};\n/* eslint-enable camelcase */\n\nclass APIPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"APIPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"APIPlugin\",\n\t\t\t\t\t\t\t\tNO_WEBPACK_REQUIRE[key]\n\t\t\t\t\t\t\t\t\t? ParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: ParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tconst type = REPLACEMENT_TYPES[key];\n\t\t\t\t\t\tif (type) {\n\t\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t\t.tap(\"APIPlugin\", ParserHelpers.evaluateToString(type));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = APIPlugin;\n","\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\nconst CURRENT_METHOD_REGEXP = /at ([a-zA-Z0-9_.]*)/;\n\n/**\n * @param {string=} method method name\n * @returns {string} message\n */\nfunction createMessage(method) {\n\treturn `Abstract method${method ? \" \" + method : \"\"}. Must be overridden.`;\n}\n\n/**\n * @constructor\n */\nfunction Message() {\n\tthis.stack = undefined;\n\tError.captureStackTrace(this);\n\t/** @type {RegExpMatchArray} */\n\tconst match = this.stack.split(\"\\n\")[3].match(CURRENT_METHOD_REGEXP);\n\n\tthis.message = match && match[1] ? createMessage(match[1]) : createMessage();\n}\n\n/**\n * Error for abstract method\n * @example\n * class FooClass {\n *     abstractMethod() {\n *         throw new AbstractMethodError(); // error message: Abstract method FooClass.abstractMethod. Must be overriden.\n *     }\n * }\n *\n */\nclass AbstractMethodError extends WebpackError {\n\tconstructor() {\n\t\tsuper(new Message().message);\n\t\tthis.name = \"AbstractMethodError\";\n\t}\n}\n\nmodule.exports = AbstractMethodError;\n","/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @typedef {Object} AmdMainTemplatePluginOptions\n * @param {string=} name the library name\n * @property {boolean=} requireAsWrapper\n */\n\nclass AmdMainTemplatePlugin {\n\t/**\n\t * @param {AmdMainTemplatePluginOptions} options the plugin options\n\t */\n\tconstructor(options) {\n\t\tif (!options || typeof options === \"string\") {\n\t\t\tthis.name = options;\n\t\t\tthis.requireAsWrapper = false;\n\t\t} else {\n\t\t\tthis.name = options.name;\n\t\t\tthis.requireAsWrapper = options.requireAsWrapper;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation instance\n\t * @returns {void}\n\t */\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst externals = chunk.getModules().filter(m => m.external);\n\t\t\tconst externalsDepsArray = JSON.stringify(\n\t\t\t\texternals.map(m =>\n\t\t\t\t\ttypeof m.request === \"object\" ? m.request.amd : m.request\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst externalsArguments = externals\n\t\t\t\t.map(\n\t\t\t\t\tm => `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${m.id}`)}__`\n\t\t\t\t)\n\t\t\t\t.join(\", \");\n\n\t\t\tif (this.requireAsWrapper) {\n\t\t\t\treturn new ConcatSource(\n\t\t\t\t\t`require(${externalsDepsArray}, function(${externalsArguments}) { return `,\n\t\t\t\t\tsource,\n\t\t\t\t\t\"});\"\n\t\t\t\t);\n\t\t\t} else if (this.name) {\n\t\t\t\tconst name = mainTemplate.getAssetPath(this.name, {\n\t\t\t\t\thash,\n\t\t\t\t\tchunk\n\t\t\t\t});\n\n\t\t\t\treturn new ConcatSource(\n\t\t\t\t\t`define(${JSON.stringify(\n\t\t\t\t\t\tname\n\t\t\t\t\t)}, ${externalsDepsArray}, function(${externalsArguments}) { return `,\n\t\t\t\t\tsource,\n\t\t\t\t\t\"});\"\n\t\t\t\t);\n\t\t\t} else if (externalsArguments) {\n\t\t\t\treturn new ConcatSource(\n\t\t\t\t\t`define(${externalsDepsArray}, function(${externalsArguments}) { return `,\n\t\t\t\t\tsource,\n\t\t\t\t\t\"});\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn new ConcatSource(\"define(function() { return \", source, \"});\");\n\t\t\t}\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"AmdMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\"AmdMainTemplatePlugin\", paths => {\n\t\t\tif (this.name) {\n\t\t\t\tpaths.push(this.name);\n\t\t\t}\n\t\t\treturn paths;\n\t\t});\n\n\t\tmainTemplate.hooks.hash.tap(\"AmdMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"exports amd\");\n\t\t\tif (this.name) {\n\t\t\t\thash.update(this.name);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = AmdMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependenciesBlock = require(\"./DependenciesBlock\");\n\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n/** @typedef {TODO} GroupOptions */\n\nmodule.exports = class AsyncDependenciesBlock extends DependenciesBlock {\n\t/**\n\t * @param {GroupOptions} groupOptions options for the group\n\t * @param {Module} module the Module object\n\t * @param {DependencyLocation=} loc the line of code\n\t * @param {TODO=} request the request\n\t */\n\tconstructor(groupOptions, module, loc, request) {\n\t\tsuper();\n\t\tif (typeof groupOptions === \"string\") {\n\t\t\tgroupOptions = { name: groupOptions };\n\t\t} else if (!groupOptions) {\n\t\t\tgroupOptions = { name: undefined };\n\t\t}\n\t\tthis.groupOptions = groupOptions;\n\t\t/** @type {ChunkGroup=} */\n\t\tthis.chunkGroup = undefined;\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\t\tthis.request = request;\n\t\t/** @type {DependenciesBlock} */\n\t\tthis.parent = undefined;\n\t}\n\n\t/**\n\t * @returns {string} The name of the chunk\n\t */\n\tget chunkName() {\n\t\treturn this.groupOptions.name;\n\t}\n\n\t/**\n\t * @param {string} value The new chunk name\n\t * @returns {void}\n\t */\n\tset chunkName(value) {\n\t\tthis.groupOptions.name = value;\n\t}\n\n\t/**\n\t * @returns {never} this throws and should never be called\n\t */\n\tget chunks() {\n\t\tthrow new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n\t}\n\n\t/**\n\t * @param {never} value setter value\n\t * @returns {never} this is going to throw therefore we should throw type\n\t * assertions by returning never\n\t */\n\tset chunks(value) {\n\t\tthrow new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track block changes, from \"crypto\" module\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(JSON.stringify(this.groupOptions));\n\t\thash.update(\n\t\t\t(this.chunkGroup &&\n\t\t\t\tthis.chunkGroup.chunks\n\t\t\t\t\t.map(chunk => {\n\t\t\t\t\t\treturn chunk.id !== null ? chunk.id : \"\";\n\t\t\t\t\t})\n\t\t\t\t\t.join(\",\")) ||\n\t\t\t\t\"\"\n\t\t);\n\t\tsuper.updateHash(hash);\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tdisconnect() {\n\t\tthis.chunkGroup = undefined;\n\t\tsuper.disconnect();\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tunseal() {\n\t\tthis.chunkGroup = undefined;\n\t\tsuper.unseal();\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tsortItems() {\n\t\tsuper.sortItems();\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n\nclass AsyncDependencyToInitialChunkError extends WebpackError {\n\t/**\n\t * Creates an instance of AsyncDependencyToInitialChunkError.\n\t * @param {string} chunkName Name of Chunk\n\t * @param {Module} module module tied to dependency\n\t * @param {TODO} loc location of dependency\n\t */\n\tconstructor(chunkName, module, loc) {\n\t\tsuper(\n\t\t\t`It's not allowed to load an initial chunk on demand. The chunk name \"${chunkName}\" is already used by an entrypoint.`\n\t\t);\n\n\t\tthis.name = \"AsyncDependencyToInitialChunkError\";\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = AsyncDependencyToInitialChunkError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\nconst NormalModule = require(\"./NormalModule\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass AutomaticPrefetchPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"AutomaticPrefetchPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tPrefetchDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tlet lastModules = null;\n\t\tcompiler.hooks.afterCompile.tap(\"AutomaticPrefetchPlugin\", compilation => {\n\t\t\tlastModules = compilation.modules\n\t\t\t\t.filter(m => m instanceof NormalModule)\n\t\t\t\t.map((/** @type {NormalModule} */ m) => ({\n\t\t\t\t\tcontext: m.context,\n\t\t\t\t\trequest: m.request\n\t\t\t\t}));\n\t\t});\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"AutomaticPrefetchPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tif (!lastModules) return callback();\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tlastModules,\n\t\t\t\t\t(m, callback) => {\n\t\t\t\t\t\tcompilation.prefetch(\n\t\t\t\t\t\t\tm.context || compiler.context,\n\t\t\t\t\t\t\tnew PrefetchDependency(m.request),\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = AutomaticPrefetchPlugin;\n","/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst Template = require(\"./Template\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/BannerPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/BannerPlugin\").BannerPluginArgument} BannerPluginArgument */\n/** @typedef {import(\"../declarations/plugins/BannerPlugin\").BannerPluginOptions} BannerPluginOptions */\n\nconst wrapComment = str => {\n\tif (!str.includes(\"\\n\")) {\n\t\treturn Template.toComment(str);\n\t}\n\treturn `/*!\\n * ${str\n\t\t.replace(/\\*\\//g, \"* /\")\n\t\t.split(\"\\n\")\n\t\t.join(\"\\n * \")}\\n */`;\n};\n\nclass BannerPlugin {\n\t/**\n\t * @param {BannerPluginArgument} options options object\n\t */\n\tconstructor(options) {\n\t\tif (arguments.length > 1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"BannerPlugin only takes one argument (pass an options object)\"\n\t\t\t);\n\t\t}\n\n\t\tvalidateOptions(schema, options, \"Banner Plugin\");\n\n\t\tif (typeof options === \"string\" || typeof options === \"function\") {\n\t\t\toptions = {\n\t\t\t\tbanner: options\n\t\t\t};\n\t\t}\n\n\t\t/** @type {BannerPluginOptions} */\n\t\tthis.options = options;\n\n\t\tconst bannerOption = options.banner;\n\t\tif (typeof bannerOption === \"function\") {\n\t\t\tconst getBanner = bannerOption;\n\t\t\tthis.banner = this.options.raw\n\t\t\t\t? getBanner\n\t\t\t\t: data => wrapComment(getBanner(data));\n\t\t} else {\n\t\t\tconst banner = this.options.raw\n\t\t\t\t? bannerOption\n\t\t\t\t: wrapComment(bannerOption);\n\t\t\tthis.banner = () => banner;\n\t\t}\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst banner = this.banner;\n\t\tconst matchObject = ModuleFilenameHelpers.matchObject.bind(\n\t\t\tundefined,\n\t\t\toptions\n\t\t);\n\n\t\tcompiler.hooks.compilation.tap(\"BannerPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunkAssets.tap(\"BannerPlugin\", chunks => {\n\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\tif (options.entryOnly && !chunk.canBeInitial()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const file of chunk.files) {\n\t\t\t\t\t\tif (!matchObject(file)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet basename;\n\t\t\t\t\t\tlet query = \"\";\n\t\t\t\t\t\tlet filename = file;\n\t\t\t\t\t\tconst hash = compilation.hash;\n\t\t\t\t\t\tconst querySplit = filename.indexOf(\"?\");\n\n\t\t\t\t\t\tif (querySplit >= 0) {\n\t\t\t\t\t\t\tquery = filename.substr(querySplit);\n\t\t\t\t\t\t\tfilename = filename.substr(0, querySplit);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst lastSlashIndex = filename.lastIndexOf(\"/\");\n\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tbasename = filename;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbasename = filename.substr(lastSlashIndex + 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\tbasename,\n\t\t\t\t\t\t\tquery\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst comment = compilation.getPath(banner(data), data);\n\n\t\t\t\t\t\tcompilation.assets[file] = new ConcatSource(\n\t\t\t\t\t\t\tcomment,\n\t\t\t\t\t\t\t\"\\n\",\n\t\t\t\t\t\t\tcompilation.assets[file]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = BannerPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst TypeUnknown = 0;\nconst TypeNull = 1;\nconst TypeString = 2;\nconst TypeNumber = 3;\nconst TypeBoolean = 4;\nconst TypeRegExp = 5;\nconst TypeConditional = 6;\nconst TypeArray = 7;\nconst TypeConstArray = 8;\nconst TypeIdentifier = 9;\nconst TypeWrapped = 10;\nconst TypeTemplateString = 11;\n\nclass BasicEvaluatedExpression {\n\tconstructor() {\n\t\tthis.type = TypeUnknown;\n\t\tthis.range = null;\n\t\tthis.falsy = false;\n\t\tthis.truthy = false;\n\t\tthis.bool = null;\n\t\tthis.number = null;\n\t\tthis.regExp = null;\n\t\tthis.string = null;\n\t\tthis.quasis = null;\n\t\tthis.parts = null;\n\t\tthis.array = null;\n\t\tthis.items = null;\n\t\tthis.options = null;\n\t\tthis.prefix = null;\n\t\tthis.postfix = null;\n\t\tthis.wrappedInnerExpressions = null;\n\t\tthis.expression = null;\n\t}\n\n\tisNull() {\n\t\treturn this.type === TypeNull;\n\t}\n\n\tisString() {\n\t\treturn this.type === TypeString;\n\t}\n\n\tisNumber() {\n\t\treturn this.type === TypeNumber;\n\t}\n\n\tisBoolean() {\n\t\treturn this.type === TypeBoolean;\n\t}\n\n\tisRegExp() {\n\t\treturn this.type === TypeRegExp;\n\t}\n\n\tisConditional() {\n\t\treturn this.type === TypeConditional;\n\t}\n\n\tisArray() {\n\t\treturn this.type === TypeArray;\n\t}\n\n\tisConstArray() {\n\t\treturn this.type === TypeConstArray;\n\t}\n\n\tisIdentifier() {\n\t\treturn this.type === TypeIdentifier;\n\t}\n\n\tisWrapped() {\n\t\treturn this.type === TypeWrapped;\n\t}\n\n\tisTemplateString() {\n\t\treturn this.type === TypeTemplateString;\n\t}\n\n\tisTruthy() {\n\t\treturn this.truthy;\n\t}\n\n\tisFalsy() {\n\t\treturn this.falsy;\n\t}\n\n\tasBool() {\n\t\tif (this.truthy) return true;\n\t\tif (this.falsy) return false;\n\t\tif (this.isBoolean()) return this.bool;\n\t\tif (this.isNull()) return false;\n\t\tif (this.isString()) return this.string !== \"\";\n\t\tif (this.isNumber()) return this.number !== 0;\n\t\tif (this.isRegExp()) return true;\n\t\tif (this.isArray()) return true;\n\t\tif (this.isConstArray()) return true;\n\t\tif (this.isWrapped()) {\n\t\t\treturn (this.prefix && this.prefix.asBool()) ||\n\t\t\t\t(this.postfix && this.postfix.asBool())\n\t\t\t\t? true\n\t\t\t\t: undefined;\n\t\t}\n\t\tif (this.isTemplateString()) {\n\t\t\tconst str = this.asString();\n\t\t\tif (typeof str === \"string\") return str !== \"\";\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasString() {\n\t\tif (this.isBoolean()) return `${this.bool}`;\n\t\tif (this.isNull()) return \"null\";\n\t\tif (this.isString()) return this.string;\n\t\tif (this.isNumber()) return `${this.number}`;\n\t\tif (this.isRegExp()) return `${this.regExp}`;\n\t\tif (this.isArray()) {\n\t\t\tlet array = [];\n\t\t\tfor (const item of this.items) {\n\t\t\t\tconst itemStr = item.asString();\n\t\t\t\tif (itemStr === undefined) return undefined;\n\t\t\t\tarray.push(itemStr);\n\t\t\t}\n\t\t\treturn `${array}`;\n\t\t}\n\t\tif (this.isConstArray()) return `${this.array}`;\n\t\tif (this.isTemplateString()) {\n\t\t\tlet str = \"\";\n\t\t\tfor (const part of this.parts) {\n\t\t\t\tconst partStr = part.asString();\n\t\t\t\tif (partStr === undefined) return undefined;\n\t\t\t\tstr += partStr;\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetString(string) {\n\t\tthis.type = TypeString;\n\t\tthis.string = string;\n\t\treturn this;\n\t}\n\n\tsetNull() {\n\t\tthis.type = TypeNull;\n\t\treturn this;\n\t}\n\n\tsetNumber(number) {\n\t\tthis.type = TypeNumber;\n\t\tthis.number = number;\n\t\treturn this;\n\t}\n\n\tsetBoolean(bool) {\n\t\tthis.type = TypeBoolean;\n\t\tthis.bool = bool;\n\t\treturn this;\n\t}\n\n\tsetRegExp(regExp) {\n\t\tthis.type = TypeRegExp;\n\t\tthis.regExp = regExp;\n\t\treturn this;\n\t}\n\n\tsetIdentifier(identifier) {\n\t\tthis.type = TypeIdentifier;\n\t\tthis.identifier = identifier;\n\t\treturn this;\n\t}\n\n\tsetWrapped(prefix, postfix, innerExpressions) {\n\t\tthis.type = TypeWrapped;\n\t\tthis.prefix = prefix;\n\t\tthis.postfix = postfix;\n\t\tthis.wrappedInnerExpressions = innerExpressions;\n\t\treturn this;\n\t}\n\n\tsetOptions(options) {\n\t\tthis.type = TypeConditional;\n\t\tthis.options = options;\n\t\treturn this;\n\t}\n\n\taddOptions(options) {\n\t\tif (!this.options) {\n\t\t\tthis.type = TypeConditional;\n\t\t\tthis.options = [];\n\t\t}\n\t\tfor (const item of options) {\n\t\t\tthis.options.push(item);\n\t\t}\n\t\treturn this;\n\t}\n\n\tsetItems(items) {\n\t\tthis.type = TypeArray;\n\t\tthis.items = items;\n\t\treturn this;\n\t}\n\n\tsetArray(array) {\n\t\tthis.type = TypeConstArray;\n\t\tthis.array = array;\n\t\treturn this;\n\t}\n\n\tsetTemplateString(quasis, parts, kind) {\n\t\tthis.type = TypeTemplateString;\n\t\tthis.quasis = quasis;\n\t\tthis.parts = parts;\n\t\tthis.templateStringKind = kind;\n\t\treturn this;\n\t}\n\n\tsetTruthy() {\n\t\tthis.falsy = false;\n\t\tthis.truthy = true;\n\t\treturn this;\n\t}\n\n\tsetFalsy() {\n\t\tthis.falsy = true;\n\t\tthis.truthy = false;\n\t\treturn this;\n\t}\n\n\tsetRange(range) {\n\t\tthis.range = range;\n\t\treturn this;\n\t}\n\n\tsetExpression(expression) {\n\t\tthis.expression = expression;\n\t\treturn this;\n\t}\n}\n\nmodule.exports = BasicEvaluatedExpression;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\nclass CachePlugin {\n\tconstructor(cache) {\n\t\tthis.cache = cache || {};\n\t\tthis.FS_ACCURACY = 2000;\n\t}\n\n\tapply(compiler) {\n\t\tif (Array.isArray(compiler.compilers)) {\n\t\t\tcompiler.compilers.forEach((c, idx) => {\n\t\t\t\tnew CachePlugin((this.cache[idx] = this.cache[idx] || {})).apply(c);\n\t\t\t});\n\t\t} else {\n\t\t\tconst registerCacheToCompiler = (compiler, cache) => {\n\t\t\t\tcompiler.hooks.thisCompilation.tap(\"CachePlugin\", compilation => {\n\t\t\t\t\tcompilation.cache = cache;\n\t\t\t\t\tcompilation.hooks.childCompiler.tap(\n\t\t\t\t\t\t\"CachePlugin\",\n\t\t\t\t\t\t(childCompiler, compilerName, compilerIndex) => {\n\t\t\t\t\t\t\tif (cache) {\n\t\t\t\t\t\t\t\tlet childCache;\n\t\t\t\t\t\t\t\tif (!cache.children) {\n\t\t\t\t\t\t\t\t\tcache.children = {};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!cache.children[compilerName]) {\n\t\t\t\t\t\t\t\t\tcache.children[compilerName] = [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (cache.children[compilerName][compilerIndex]) {\n\t\t\t\t\t\t\t\t\tchildCache = cache.children[compilerName][compilerIndex];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcache.children[compilerName].push((childCache = {}));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tregisterCacheToCompiler(childCompiler, childCache);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t};\n\t\t\tregisterCacheToCompiler(compiler, this.cache);\n\t\t\tcompiler.hooks.watchRun.tap(\"CachePlugin\", () => {\n\t\t\t\tthis.watching = true;\n\t\t\t});\n\t\t\tcompiler.hooks.run.tapAsync(\"CachePlugin\", (compiler, callback) => {\n\t\t\t\tif (!compiler._lastCompilationFileDependencies) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tconst fs = compiler.inputFileSystem;\n\t\t\t\tconst fileTs = (compiler.fileTimestamps = new Map());\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tcompiler._lastCompilationFileDependencies,\n\t\t\t\t\t(file, callback) => {\n\t\t\t\t\t\tfs.stat(file, (err, stat) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tif (err.code === \"ENOENT\") return callback();\n\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stat.mtime) this.applyMtime(+stat.mtime);\n\n\t\t\t\t\t\t\tfileTs.set(file, +stat.mtime || Infinity);\n\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tfor (const [file, ts] of fileTs) {\n\t\t\t\t\t\t\tfileTs.set(file, ts + this.FS_ACCURACY);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\tcompiler.hooks.afterCompile.tap(\"CachePlugin\", compilation => {\n\t\t\t\tcompilation.compiler._lastCompilationFileDependencies =\n\t\t\t\t\tcompilation.fileDependencies;\n\t\t\t\tcompilation.compiler._lastCompilationContextDependencies =\n\t\t\t\t\tcompilation.contextDependencies;\n\t\t\t});\n\t\t}\n\t}\n\n\t/* istanbul ignore next */\n\tapplyMtime(mtime) {\n\t\tif (this.FS_ACCURACY > 1 && mtime % 2 !== 0) this.FS_ACCURACY = 1;\n\t\telse if (this.FS_ACCURACY > 10 && mtime % 20 !== 0) this.FS_ACCURACY = 10;\n\t\telse if (this.FS_ACCURACY > 100 && mtime % 200 !== 0)\n\t\t\tthis.FS_ACCURACY = 100;\n\t\telse if (this.FS_ACCURACY > 1000 && mtime % 2000 !== 0)\n\t\t\tthis.FS_ACCURACY = 1000;\n\t}\n}\nmodule.exports = CachePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @param {Module[]} modules the modules to be sorted\n * @returns {Module[]} sorted version of original modules\n */\nconst sortModules = modules => {\n\treturn modules.slice().sort((a, b) => {\n\t\tconst aIdent = a.identifier();\n\t\tconst bIdent = b.identifier();\n\t\t/* istanbul ignore next */\n\t\tif (aIdent < bIdent) return -1;\n\t\t/* istanbul ignore next */\n\t\tif (aIdent > bIdent) return 1;\n\t\t/* istanbul ignore next */\n\t\treturn 0;\n\t});\n};\n\n/**\n * @param {Module[]} modules each module from throw\n * @returns {string} each message from provided moduels\n */\nconst createModulesListMessage = modules => {\n\treturn modules\n\t\t.map(m => {\n\t\t\tlet message = `* ${m.identifier()}`;\n\t\t\tconst validReasons = m.reasons.filter(reason => reason.module);\n\n\t\t\tif (validReasons.length > 0) {\n\t\t\t\tmessage += `\\n    Used by ${validReasons.length} module(s), i. e.`;\n\t\t\t\tmessage += `\\n    ${validReasons[0].module.identifier()}`;\n\t\t\t}\n\t\t\treturn message;\n\t\t})\n\t\t.join(\"\\n\");\n};\n\nclass CaseSensitiveModulesWarning extends WebpackError {\n\t/**\n\t * Creates an instance of CaseSensitiveModulesWarning.\n\t * @param {Module[]} modules modules that were detected\n\t */\n\tconstructor(modules) {\n\t\tconst sortedModules = sortModules(modules);\n\t\tconst modulesList = createModulesListMessage(sortedModules);\n\t\tsuper(`There are multiple modules with names that only differ in casing.\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\nUse equal casing. Compare these module identifiers:\n${modulesList}`);\n\n\t\tthis.name = \"CaseSensitiveModulesWarning\";\n\t\tthis.origin = this.module = sortedModules[0];\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = CaseSensitiveModulesWarning;\n","/*\nMIT License http://www.opensource.org/licenses/mit-license.php\nAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst intersect = require(\"./util/SetHelpers\").intersect;\nconst GraphHelpers = require(\"./GraphHelpers\");\nconst Entrypoint = require(\"./Entrypoint\");\nlet debugId = 1000;\nconst ERR_CHUNK_ENTRY = \"Chunk.entry was removed. Use hasRuntime()\";\nconst ERR_CHUNK_INITIAL =\n\t\"Chunk.initial was removed. Use canBeInitial/isOnlyInitial()\";\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./ModuleReason\")} ModuleReason */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n/**\n *  @typedef {Object} WithId an object who has an id property *\n *  @property {string | number} id the id of the object\n */\n\n/**\n * Compare two Modules based on their ids for sorting\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} sort value\n */\n\n// TODO use @callback\n/** @typedef {(a: Module, b: Module) => -1|0|1} ModuleSortPredicate */\n/** @typedef {(m: Module) => boolean} ModuleFilterPredicate */\n/** @typedef {(c: Chunk) => boolean} ChunkFilterPredicate */\n\nconst sortModuleById = (a, b) => {\n\tif (a.id < b.id) return -1;\n\tif (b.id < a.id) return 1;\n\treturn 0;\n};\n\n/**\n * Compare two ChunkGroups based on their ids for sorting\n * @param {ChunkGroup} a chunk group\n * @param {ChunkGroup} b chunk group\n * @returns {-1|0|1} sort value\n */\nconst sortChunkGroupById = (a, b) => {\n\tif (a.id < b.id) return -1;\n\tif (b.id < a.id) return 1;\n\treturn 0;\n};\n\n/**\n * Compare two Identifiables , based on their ids for sorting\n * @param {Module} a first object with ident fn\n * @param {Module} b second object with ident fn\n * @returns {-1|0|1} The order number of the sort\n */\nconst sortByIdentifier = (a, b) => {\n\tif (a.identifier() > b.identifier()) return 1;\n\tif (a.identifier() < b.identifier()) return -1;\n\treturn 0;\n};\n\n/**\n * @returns {string} a concatenation of module identifiers sorted\n * @param {SortableSet} set to pull module identifiers from\n */\nconst getModulesIdent = set => {\n\tset.sort();\n\tlet str = \"\";\n\tfor (const m of set) {\n\t\tstr += m.identifier() + \"#\";\n\t}\n\treturn str;\n};\n\n/**\n * @template T\n * @param {SortableSet<T>} set the sortable set to convert to array\n * @returns {Array<T>} the array returned from Array.from(set)\n */\nconst getArray = set => Array.from(set);\n\n/**\n * @param {SortableSet<Module>} set the sortable Set to get the count/size of\n * @returns {number} the size of the modules\n */\nconst getModulesSize = set => {\n\tlet size = 0;\n\tfor (const module of set) {\n\t\tsize += module.size();\n\t}\n\treturn size;\n};\n\n/**\n * A Chunk is a unit of encapsulation for Modules.\n * Chunks are \"rendered\" into bundles that get emitted when the build completes.\n */\nclass Chunk {\n\t/**\n\t * @param {string=} name of chunk being created, is optional (for subclasses)\n\t */\n\tconstructor(name) {\n\t\t/** @type {number | null} */\n\t\tthis.id = null;\n\t\t/** @type {number[] | null} */\n\t\tthis.ids = null;\n\t\t/** @type {number} */\n\t\tthis.debugId = debugId++;\n\t\t/** @type {string} */\n\t\tthis.name = name;\n\t\t/** @type {boolean} */\n\t\tthis.preventIntegration = false;\n\t\t/** @type {Module=} */\n\t\tthis.entryModule = undefined;\n\t\t/** @private @type {SortableSet<Module>} */\n\t\tthis._modules = new SortableSet(undefined, sortByIdentifier);\n\t\t/** @type {string?} */\n\t\tthis.filenameTemplate = undefined;\n\t\t/** @private @type {SortableSet<ChunkGroup>} */\n\t\tthis._groups = new SortableSet(undefined, sortChunkGroupById);\n\t\t/** @type {string[]} */\n\t\tthis.files = [];\n\t\t/** @type {boolean} */\n\t\tthis.rendered = false;\n\t\t/** @type {string=} */\n\t\tthis.hash = undefined;\n\t\t/** @type {Object} */\n\t\tthis.contentHash = Object.create(null);\n\t\t/** @type {string=} */\n\t\tthis.renderedHash = undefined;\n\t\t/** @type {string=} */\n\t\tthis.chunkReason = undefined;\n\t\t/** @type {boolean} */\n\t\tthis.extraAsync = false;\n\t\tthis.removedModules = undefined;\n\t}\n\n\t/**\n\t * @deprecated Chunk.entry has been deprecated. Please use .hasRuntime() instead\n\t * @returns {never} Throws an error trying to access this property\n\t */\n\tget entry() {\n\t\tthrow new Error(ERR_CHUNK_ENTRY);\n\t}\n\n\t/**\n\t * @deprecated .entry has been deprecated. Please use .hasRuntime() instead\n\t * @param {never} data The data that was attempting to be set\n\t * @returns {never} Throws an error trying to access this property\n\t */\n\tset entry(data) {\n\t\tthrow new Error(ERR_CHUNK_ENTRY);\n\t}\n\n\t/**\n\t * @deprecated Chunk.initial was removed. Use canBeInitial/isOnlyInitial()\n\t * @returns {never} Throws an error trying to access this property\n\t */\n\tget initial() {\n\t\tthrow new Error(ERR_CHUNK_INITIAL);\n\t}\n\n\t/**\n\t * @deprecated Chunk.initial was removed. Use canBeInitial/isOnlyInitial()\n\t * @param {never} data The data attempting to be set\n\t * @returns {never} Throws an error trying to access this property\n\t */\n\tset initial(data) {\n\t\tthrow new Error(ERR_CHUNK_INITIAL);\n\t}\n\n\t/**\n\t * @returns {boolean} whether or not the Chunk will have a runtime\n\t */\n\thasRuntime() {\n\t\tfor (const chunkGroup of this._groups) {\n\t\t\tif (\n\t\t\t\tchunkGroup.isInitial() &&\n\t\t\t\tchunkGroup instanceof Entrypoint &&\n\t\t\t\tchunkGroup.getRuntimeChunk() === this\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @returns {boolean} whether or not this chunk can be an initial chunk\n\t */\n\tcanBeInitial() {\n\t\tfor (const chunkGroup of this._groups) {\n\t\t\tif (chunkGroup.isInitial()) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @returns {boolean} whether this chunk can only be an initial chunk\n\t */\n\tisOnlyInitial() {\n\t\tif (this._groups.size <= 0) return false;\n\t\tfor (const chunkGroup of this._groups) {\n\t\t\tif (!chunkGroup.isInitial()) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * @returns {boolean} if this chunk contains the entry module\n\t */\n\thasEntryModule() {\n\t\treturn !!this.entryModule;\n\t}\n\n\t/**\n\t * @param {Module} module the module that will be added to this chunk.\n\t * @returns {boolean} returns true if the chunk doesn't have the module and it was added\n\t */\n\taddModule(module) {\n\t\tif (!this._modules.has(module)) {\n\t\t\tthis._modules.add(module);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {Module} module the module that will be removed from this chunk\n\t * @returns {boolean} returns true if chunk exists and is successfully deleted\n\t */\n\tremoveModule(module) {\n\t\tif (this._modules.delete(module)) {\n\t\t\tmodule.removeChunk(this);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {Module[]} modules the new modules to be set\n\t * @returns {void} set new modules to this chunk and return nothing\n\t */\n\tsetModules(modules) {\n\t\tthis._modules = new SortableSet(modules, sortByIdentifier);\n\t}\n\n\t/**\n\t * @returns {number} the amount of modules in chunk\n\t */\n\tgetNumberOfModules() {\n\t\treturn this._modules.size;\n\t}\n\n\t/**\n\t * @returns {SortableSet} return the modules SortableSet for this chunk\n\t */\n\tget modulesIterable() {\n\t\treturn this._modules;\n\t}\n\n\t/**\n\t * @param {ChunkGroup} chunkGroup the chunkGroup the chunk is being added\n\t * @returns {boolean} returns true if chunk is not apart of chunkGroup and is added successfully\n\t */\n\taddGroup(chunkGroup) {\n\t\tif (this._groups.has(chunkGroup)) return false;\n\t\tthis._groups.add(chunkGroup);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {ChunkGroup} chunkGroup the chunkGroup the chunk is being removed from\n\t * @returns {boolean} returns true if chunk does exist in chunkGroup and is removed\n\t */\n\tremoveGroup(chunkGroup) {\n\t\tif (!this._groups.has(chunkGroup)) return false;\n\t\tthis._groups.delete(chunkGroup);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {ChunkGroup} chunkGroup the chunkGroup to check\n\t * @returns {boolean} returns true if chunk has chunkGroup reference and exists in chunkGroup\n\t */\n\tisInGroup(chunkGroup) {\n\t\treturn this._groups.has(chunkGroup);\n\t}\n\n\t/**\n\t * @returns {number} the amount of groups said chunk is in\n\t */\n\tgetNumberOfGroups() {\n\t\treturn this._groups.size;\n\t}\n\n\t/**\n\t * @returns {SortableSet<ChunkGroup>} the chunkGroups that said chunk is referenced in\n\t */\n\tget groupsIterable() {\n\t\treturn this._groups;\n\t}\n\n\t/**\n\t * @param {Chunk} otherChunk the chunk to compare itself with\n\t * @returns {-1|0|1} this is a comparitor function like sort and returns -1, 0, or 1 based on sort order\n\t */\n\tcompareTo(otherChunk) {\n\t\tif (this.name && !otherChunk.name) return -1;\n\t\tif (!this.name && otherChunk.name) return 1;\n\t\tif (this.name < otherChunk.name) return -1;\n\t\tif (this.name > otherChunk.name) return 1;\n\t\tif (this._modules.size > otherChunk._modules.size) return -1;\n\t\tif (this._modules.size < otherChunk._modules.size) return 1;\n\t\tthis._modules.sort();\n\t\totherChunk._modules.sort();\n\t\tconst a = this._modules[Symbol.iterator]();\n\t\tconst b = otherChunk._modules[Symbol.iterator]();\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tconst aItem = a.next();\n\t\t\tif (aItem.done) return 0;\n\t\t\tconst bItem = b.next();\n\t\t\tconst aModuleIdentifier = aItem.value.identifier();\n\t\t\tconst bModuleIdentifier = bItem.value.identifier();\n\t\t\tif (aModuleIdentifier < bModuleIdentifier) return -1;\n\t\t\tif (aModuleIdentifier > bModuleIdentifier) return 1;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module Module to check\n\t * @returns {boolean} returns true if module does exist in this chunk\n\t */\n\tcontainsModule(module) {\n\t\treturn this._modules.has(module);\n\t}\n\n\t/**\n\t * @returns {Module[]} an array of modules (do not modify)\n\t */\n\tgetModules() {\n\t\treturn this._modules.getFromCache(getArray);\n\t}\n\n\tgetModulesIdent() {\n\t\treturn this._modules.getFromUnorderedCache(getModulesIdent);\n\t}\n\n\t/**\n\t * @param {string=} reason reason why chunk is removed\n\t * @returns {void}\n\t */\n\tremove(reason) {\n\t\t// cleanup modules\n\t\t// Array.from is used here to create a clone, because removeChunk modifies this._modules\n\t\tfor (const module of Array.from(this._modules)) {\n\t\t\tmodule.removeChunk(this);\n\t\t}\n\t\tfor (const chunkGroup of this._groups) {\n\t\t\tchunkGroup.removeChunk(this);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {Module} module module to move\n\t * @param {Chunk} otherChunk other chunk to move it to\n\t * @returns {void}\n\t */\n\tmoveModule(module, otherChunk) {\n\t\tGraphHelpers.disconnectChunkAndModule(this, module);\n\t\tGraphHelpers.connectChunkAndModule(otherChunk, module);\n\t\tmodule.rewriteChunkInReasons(this, [otherChunk]);\n\t}\n\n\t/**\n\t *\n\t * @param {Chunk} otherChunk the chunk to integrate with\n\t * @param {ModuleReason} reason reason why the module is being integrated\n\t * @returns {boolean} returns true or false if integration succeeds or fails\n\t */\n\tintegrate(otherChunk, reason) {\n\t\tif (!this.canBeIntegrated(otherChunk)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Pick a new name for the integrated chunk\n\t\tif (this.name && otherChunk.name) {\n\t\t\tif (this.hasEntryModule() === otherChunk.hasEntryModule()) {\n\t\t\t\t// When both chunks have entry modules or none have one, use\n\t\t\t\t// shortest name\n\t\t\t\tif (this.name.length !== otherChunk.name.length) {\n\t\t\t\t\tthis.name =\n\t\t\t\t\t\tthis.name.length < otherChunk.name.length\n\t\t\t\t\t\t\t? this.name\n\t\t\t\t\t\t\t: otherChunk.name;\n\t\t\t\t} else {\n\t\t\t\t\tthis.name = this.name < otherChunk.name ? this.name : otherChunk.name;\n\t\t\t\t}\n\t\t\t} else if (otherChunk.hasEntryModule()) {\n\t\t\t\t// Pick the name of the chunk with the entry module\n\t\t\t\tthis.name = otherChunk.name;\n\t\t\t}\n\t\t} else if (otherChunk.name) {\n\t\t\tthis.name = otherChunk.name;\n\t\t}\n\n\t\t// Array.from is used here to create a clone, because moveModule modifies otherChunk._modules\n\t\tfor (const module of Array.from(otherChunk._modules)) {\n\t\t\totherChunk.moveModule(module, this);\n\t\t}\n\t\totherChunk._modules.clear();\n\n\t\tif (otherChunk.entryModule) {\n\t\t\tthis.entryModule = otherChunk.entryModule;\n\t\t}\n\n\t\tfor (const chunkGroup of otherChunk._groups) {\n\t\t\tchunkGroup.replaceChunk(otherChunk, this);\n\t\t\tthis.addGroup(chunkGroup);\n\t\t}\n\t\totherChunk._groups.clear();\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {Chunk} newChunk the new chunk that will be split out of the current chunk\n\t * @returns {void}\n\t */\n\tsplit(newChunk) {\n\t\tfor (const chunkGroup of this._groups) {\n\t\t\tchunkGroup.insertChunk(newChunk, this);\n\t\t\tnewChunk.addGroup(chunkGroup);\n\t\t}\n\t}\n\n\tisEmpty() {\n\t\treturn this._modules.size === 0;\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(`${this.id} `);\n\t\thash.update(this.ids ? this.ids.join(\",\") : \"\");\n\t\thash.update(`${this.name || \"\"} `);\n\t\tfor (const m of this._modules) {\n\t\t\thash.update(m.hash);\n\t\t}\n\t}\n\n\tcanBeIntegrated(otherChunk) {\n\t\tif (this.preventIntegration || otherChunk.preventIntegration) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst isAvailable = (a, b) => {\n\t\t\tconst queue = new Set(b.groupsIterable);\n\t\t\tfor (const chunkGroup of queue) {\n\t\t\t\tif (a.isInGroup(chunkGroup)) continue;\n\t\t\t\tif (chunkGroup.isInitial()) return false;\n\t\t\t\tfor (const parent of chunkGroup.parentsIterable) {\n\t\t\t\t\tqueue.add(parent);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst selfHasRuntime = this.hasRuntime();\n\t\tconst otherChunkHasRuntime = otherChunk.hasRuntime();\n\n\t\tif (selfHasRuntime !== otherChunkHasRuntime) {\n\t\t\tif (selfHasRuntime) {\n\t\t\t\treturn isAvailable(this, otherChunk);\n\t\t\t} else if (otherChunkHasRuntime) {\n\t\t\t\treturn isAvailable(otherChunk, this);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (this.hasEntryModule() || otherChunk.hasEntryModule()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param {number} size the size\n\t * @param {Object} options the options passed in\n\t * @returns {number} the multiplier returned\n\t */\n\taddMultiplierAndOverhead(size, options) {\n\t\tconst overhead =\n\t\t\ttypeof options.chunkOverhead === \"number\" ? options.chunkOverhead : 10000;\n\t\tconst multiplicator = this.canBeInitial()\n\t\t\t? options.entryChunkMultiplicator || 10\n\t\t\t: 1;\n\n\t\treturn size * multiplicator + overhead;\n\t}\n\n\t/**\n\t * @returns {number} the size of all modules\n\t */\n\tmodulesSize() {\n\t\treturn this._modules.getFromUnorderedCache(getModulesSize);\n\t}\n\n\t/**\n\t * @param {Object} options the size display options\n\t * @returns {number} the chunk size\n\t */\n\tsize(options = {}) {\n\t\treturn this.addMultiplierAndOverhead(this.modulesSize(), options);\n\t}\n\n\t/**\n\t * @param {Chunk} otherChunk the other chunk\n\t * @param {TODO} options the options for this function\n\t * @returns {number | false} the size, or false if it can't be integrated\n\t */\n\tintegratedSize(otherChunk, options) {\n\t\t// Chunk if it's possible to integrate this chunk\n\t\tif (!this.canBeIntegrated(otherChunk)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet integratedModulesSize = this.modulesSize();\n\t\t// only count modules that do not exist in this chunk!\n\t\tfor (const otherModule of otherChunk._modules) {\n\t\t\tif (!this._modules.has(otherModule)) {\n\t\t\t\tintegratedModulesSize += otherModule.size();\n\t\t\t}\n\t\t}\n\n\t\treturn this.addMultiplierAndOverhead(integratedModulesSize, options);\n\t}\n\n\t/**\n\t * @param {function(Module, Module): -1|0|1=} sortByFn a predicate function used to sort modules\n\t * @returns {void}\n\t */\n\tsortModules(sortByFn) {\n\t\tthis._modules.sortWith(sortByFn || sortModuleById);\n\t}\n\n\tsortItems() {\n\t\tthis.sortModules();\n\t}\n\n\t/**\n\t * @returns {Set<Chunk>} a set of all the async chunks\n\t */\n\tgetAllAsyncChunks() {\n\t\tconst queue = new Set();\n\t\tconst chunks = new Set();\n\n\t\tconst initialChunks = intersect(\n\t\t\tArray.from(this.groupsIterable, g => new Set(g.chunks))\n\t\t);\n\n\t\tfor (const chunkGroup of this.groupsIterable) {\n\t\t\tfor (const child of chunkGroup.childrenIterable) {\n\t\t\t\tqueue.add(child);\n\t\t\t}\n\t\t}\n\n\t\tfor (const chunkGroup of queue) {\n\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\tif (!initialChunks.has(chunk)) {\n\t\t\t\t\tchunks.add(chunk);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const child of chunkGroup.childrenIterable) {\n\t\t\t\tqueue.add(child);\n\t\t\t}\n\t\t}\n\n\t\treturn chunks;\n\t}\n\n\t/**\n\t * @typedef {Object} ChunkMaps\n\t * @property {Record<string|number, string>} hash\n\t * @property {Record<string|number, Record<string, string>>} contentHash\n\t * @property {Record<string|number, string>} name\n\t */\n\n\t/**\n\t * @param {boolean} realHash should the full hash or the rendered hash be used\n\t * @returns {ChunkMaps} the chunk map information\n\t */\n\tgetChunkMaps(realHash) {\n\t\t/** @type {Record<string|number, string>} */\n\t\tconst chunkHashMap = Object.create(null);\n\t\t/** @type {Record<string|number, Record<string, string>>} */\n\t\tconst chunkContentHashMap = Object.create(null);\n\t\t/** @type {Record<string|number, string>} */\n\t\tconst chunkNameMap = Object.create(null);\n\n\t\tfor (const chunk of this.getAllAsyncChunks()) {\n\t\t\tchunkHashMap[chunk.id] = realHash ? chunk.hash : chunk.renderedHash;\n\t\t\tfor (const key of Object.keys(chunk.contentHash)) {\n\t\t\t\tif (!chunkContentHashMap[key]) {\n\t\t\t\t\tchunkContentHashMap[key] = Object.create(null);\n\t\t\t\t}\n\t\t\t\tchunkContentHashMap[key][chunk.id] = chunk.contentHash[key];\n\t\t\t}\n\t\t\tif (chunk.name) {\n\t\t\t\tchunkNameMap[chunk.id] = chunk.name;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\thash: chunkHashMap,\n\t\t\tcontentHash: chunkContentHashMap,\n\t\t\tname: chunkNameMap\n\t\t};\n\t}\n\n\t/**\n\t * @returns {Record<string, Set<TODO>[]>} a record object of names to lists of child ids(?)\n\t */\n\tgetChildIdsByOrders() {\n\t\tconst lists = new Map();\n\t\tfor (const group of this.groupsIterable) {\n\t\t\tif (group.chunks[group.chunks.length - 1] === this) {\n\t\t\t\tfor (const childGroup of group.childrenIterable) {\n\t\t\t\t\t// TODO webpack 5 remove this check for options\n\t\t\t\t\tif (typeof childGroup.options === \"object\") {\n\t\t\t\t\t\tfor (const key of Object.keys(childGroup.options)) {\n\t\t\t\t\t\t\tif (key.endsWith(\"Order\")) {\n\t\t\t\t\t\t\t\tconst name = key.substr(0, key.length - \"Order\".length);\n\t\t\t\t\t\t\t\tlet list = lists.get(name);\n\t\t\t\t\t\t\t\tif (list === undefined) lists.set(name, (list = []));\n\t\t\t\t\t\t\t\tlist.push({\n\t\t\t\t\t\t\t\t\torder: childGroup.options[key],\n\t\t\t\t\t\t\t\t\tgroup: childGroup\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst result = Object.create(null);\n\t\tfor (const [name, list] of lists) {\n\t\t\tlist.sort((a, b) => {\n\t\t\t\tconst cmp = b.order - a.order;\n\t\t\t\tif (cmp !== 0) return cmp;\n\t\t\t\t// TODO webpack 5 remove this check of compareTo\n\t\t\t\tif (a.group.compareTo) {\n\t\t\t\t\treturn a.group.compareTo(b.group);\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tresult[name] = Array.from(\n\t\t\t\tlist.reduce((set, item) => {\n\t\t\t\t\tfor (const chunk of item.group.chunks) {\n\t\t\t\t\t\tset.add(chunk.id);\n\t\t\t\t\t}\n\t\t\t\t\treturn set;\n\t\t\t\t}, new Set())\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetChildIdsByOrdersMap(includeDirectChildren) {\n\t\tconst chunkMaps = Object.create(null);\n\n\t\tconst addChildIdsByOrdersToMap = chunk => {\n\t\t\tconst data = chunk.getChildIdsByOrders();\n\t\t\tfor (const key of Object.keys(data)) {\n\t\t\t\tlet chunkMap = chunkMaps[key];\n\t\t\t\tif (chunkMap === undefined) {\n\t\t\t\t\tchunkMaps[key] = chunkMap = Object.create(null);\n\t\t\t\t}\n\t\t\t\tchunkMap[chunk.id] = data[key];\n\t\t\t}\n\t\t};\n\n\t\tif (includeDirectChildren) {\n\t\t\tconst chunks = new Set();\n\t\t\tfor (const chunkGroup of this.groupsIterable) {\n\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\tchunks.add(chunk);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const chunk of chunks) {\n\t\t\t\taddChildIdsByOrdersToMap(chunk);\n\t\t\t}\n\t\t}\n\n\t\tfor (const chunk of this.getAllAsyncChunks()) {\n\t\t\taddChildIdsByOrdersToMap(chunk);\n\t\t}\n\n\t\treturn chunkMaps;\n\t}\n\n\t/**\n\t * @typedef {Object} ChunkModuleMaps\n\t * @property {Record<string|number, (string|number)[]>} id\n\t * @property {Record<string|number, string>} hash\n\t */\n\n\t/**\n\t * @param {ModuleFilterPredicate} filterFn function used to filter modules\n\t * @returns {ChunkModuleMaps} module map information\n\t */\n\tgetChunkModuleMaps(filterFn) {\n\t\t/** @type {Record<string|number, (string|number)[]>} */\n\t\tconst chunkModuleIdMap = Object.create(null);\n\t\t/** @type {Record<string|number, string>} */\n\t\tconst chunkModuleHashMap = Object.create(null);\n\n\t\tfor (const chunk of this.getAllAsyncChunks()) {\n\t\t\t/** @type {(string|number)[]} */\n\t\t\tlet array;\n\t\t\tfor (const module of chunk.modulesIterable) {\n\t\t\t\tif (filterFn(module)) {\n\t\t\t\t\tif (array === undefined) {\n\t\t\t\t\t\tarray = [];\n\t\t\t\t\t\tchunkModuleIdMap[chunk.id] = array;\n\t\t\t\t\t}\n\t\t\t\t\tarray.push(module.id);\n\t\t\t\t\tchunkModuleHashMap[module.id] = module.renderedHash;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (array !== undefined) {\n\t\t\t\tarray.sort();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tid: chunkModuleIdMap,\n\t\t\thash: chunkModuleHashMap\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {function(Module): boolean} filterFn predicate function used to filter modules\n\t * @param {function(Chunk): boolean} filterChunkFn predicate function used to filter chunks\n\t * @returns {boolean} return true if module exists in graph\n\t */\n\thasModuleInGraph(filterFn, filterChunkFn) {\n\t\tconst queue = new Set(this.groupsIterable);\n\t\tconst chunksProcessed = new Set();\n\n\t\tfor (const chunkGroup of queue) {\n\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\tif (!chunksProcessed.has(chunk)) {\n\t\t\t\t\tchunksProcessed.add(chunk);\n\t\t\t\t\tif (!filterChunkFn || filterChunkFn(chunk)) {\n\t\t\t\t\t\tfor (const module of chunk.modulesIterable) {\n\t\t\t\t\t\t\tif (filterFn(module)) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const child of chunkGroup.childrenIterable) {\n\t\t\t\tqueue.add(child);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\ttoString() {\n\t\treturn `Chunk[${Array.from(this._modules).join()}]`;\n\t}\n}\n\n// TODO remove in webpack 5\nObject.defineProperty(Chunk.prototype, \"forEachModule\", {\n\tconfigurable: false,\n\tvalue: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {Chunk}\n\t\t * @typedef {function(any, any, Set<any>): void} ForEachModuleCallback\n\t\t * @param {ForEachModuleCallback} fn Callback function\n\t\t * @returns {void}\n\t\t */\n\t\tfunction(fn) {\n\t\t\tthis._modules.forEach(fn);\n\t\t},\n\t\t\"Chunk.forEachModule: Use for(const module of chunk.modulesIterable) instead\"\n\t)\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(Chunk.prototype, \"mapModules\", {\n\tconfigurable: false,\n\tvalue: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {Chunk}\n\t\t * @typedef {function(any, number): any} MapModulesCallback\n\t\t * @param {MapModulesCallback} fn Callback function\n\t\t * @returns {TODO[]} result of mapped modules\n\t\t */\n\t\tfunction(fn) {\n\t\t\treturn Array.from(this._modules, fn);\n\t\t},\n\t\t\"Chunk.mapModules: Use Array.from(chunk.modulesIterable, fn) instead\"\n\t)\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(Chunk.prototype, \"chunks\", {\n\tconfigurable: false,\n\tget() {\n\t\tthrow new Error(\"Chunk.chunks: Use ChunkGroup.getChildren() instead\");\n\t},\n\tset() {\n\t\tthrow new Error(\"Chunk.chunks: Use ChunkGroup.add/removeChild() instead\");\n\t}\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(Chunk.prototype, \"parents\", {\n\tconfigurable: false,\n\tget() {\n\t\tthrow new Error(\"Chunk.parents: Use ChunkGroup.getParents() instead\");\n\t},\n\tset() {\n\t\tthrow new Error(\"Chunk.parents: Use ChunkGroup.add/removeParent() instead\");\n\t}\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(Chunk.prototype, \"blocks\", {\n\tconfigurable: false,\n\tget() {\n\t\tthrow new Error(\"Chunk.blocks: Use ChunkGroup.getBlocks() instead\");\n\t},\n\tset() {\n\t\tthrow new Error(\"Chunk.blocks: Use ChunkGroup.add/removeBlock() instead\");\n\t}\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(Chunk.prototype, \"entrypoints\", {\n\tconfigurable: false,\n\tget() {\n\t\tthrow new Error(\n\t\t\t\"Chunk.entrypoints: Use Chunks.groupsIterable and filter by instanceof Entrypoint instead\"\n\t\t);\n\t},\n\tset() {\n\t\tthrow new Error(\"Chunk.entrypoints: Use Chunks.addGroup instead\");\n\t}\n});\n\nmodule.exports = Chunk;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SortableSet = require(\"./util/SortableSet\");\nconst compareLocations = require(\"./compareLocations\");\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleReason\")} ModuleReason */\n\n/** @typedef {{module: Module, loc: TODO, request: string}} OriginRecord */\n/** @typedef {string|{name: string}} ChunkGroupOptions */\n\nlet debugId = 5000;\n\n/**\n * @template T\n * @param {SortableSet<T>} set set to convert to array.\n * @returns {T[]} the array format of existing set\n */\nconst getArray = set => Array.from(set);\n\n/**\n * A convenience method used to sort chunks based on their id's\n * @param {ChunkGroup} a first sorting comparator\n * @param {ChunkGroup} b second sorting comparator\n * @returns {1|0|-1} a sorting index to determine order\n */\nconst sortById = (a, b) => {\n\tif (a.id < b.id) return -1;\n\tif (b.id < a.id) return 1;\n\treturn 0;\n};\n\n/**\n * @param {OriginRecord} a the first comparator in sort\n * @param {OriginRecord} b the second comparator in sort\n * @returns {1|-1|0} returns sorting order as index\n */\nconst sortOrigin = (a, b) => {\n\tconst aIdent = a.module ? a.module.identifier() : \"\";\n\tconst bIdent = b.module ? b.module.identifier() : \"\";\n\tif (aIdent < bIdent) return -1;\n\tif (aIdent > bIdent) return 1;\n\treturn compareLocations(a.loc, b.loc);\n};\n\nclass ChunkGroup {\n\t/**\n\t * Creates an instance of ChunkGroup.\n\t * @param {ChunkGroupOptions=} options chunk group options passed to chunkGroup\n\t */\n\tconstructor(options) {\n\t\tif (typeof options === \"string\") {\n\t\t\toptions = { name: options };\n\t\t} else if (!options) {\n\t\t\toptions = { name: undefined };\n\t\t}\n\t\t/** @type {number} */\n\t\tthis.groupDebugId = debugId++;\n\t\tthis.options = options;\n\t\t/** @type {SortableSet<ChunkGroup>} */\n\t\tthis._children = new SortableSet(undefined, sortById);\n\t\tthis._parents = new SortableSet(undefined, sortById);\n\t\tthis._blocks = new SortableSet();\n\t\t/** @type {Chunk[]} */\n\t\tthis.chunks = [];\n\t\t/** @type {OriginRecord[]} */\n\t\tthis.origins = [];\n\t\t/** Indicies in top-down order */\n\t\t/** @private @type {Map<Module, number>} */\n\t\tthis._moduleIndicies = new Map();\n\t\t/** Indicies in bottom-up order */\n\t\t/** @private @type {Map<Module, number>} */\n\t\tthis._moduleIndicies2 = new Map();\n\t}\n\n\t/**\n\t * when a new chunk is added to a chunkGroup, addingOptions will occur.\n\t * @param {ChunkGroupOptions} options the chunkGroup options passed to addOptions\n\t * @returns {void}\n\t */\n\taddOptions(options) {\n\t\tfor (const key of Object.keys(options)) {\n\t\t\tif (this.options[key] === undefined) {\n\t\t\t\tthis.options[key] = options[key];\n\t\t\t} else if (this.options[key] !== options[key]) {\n\t\t\t\tif (key.endsWith(\"Order\")) {\n\t\t\t\t\tthis.options[key] = Math.max(this.options[key], options[key]);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`ChunkGroup.addOptions: No option merge strategy for ${key}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * returns the name of current ChunkGroup\n\t * @returns {string|undefined} returns the ChunkGroup name\n\t */\n\tget name() {\n\t\treturn this.options.name;\n\t}\n\n\t/**\n\t * sets a new name for current ChunkGroup\n\t * @param {string} value the new name for ChunkGroup\n\t * @returns {void}\n\t */\n\tset name(value) {\n\t\tthis.options.name = value;\n\t}\n\n\t/**\n\t * get a uniqueId for ChunkGroup, made up of its member Chunk debugId's\n\t * @returns {string} a unique concatenation of chunk debugId's\n\t */\n\tget debugId() {\n\t\treturn Array.from(this.chunks, x => x.debugId).join(\"+\");\n\t}\n\n\t/**\n\t * get a unique id for ChunkGroup, made up of its member Chunk id's\n\t * @returns {string} a unique concatenation of chunk ids\n\t */\n\tget id() {\n\t\treturn Array.from(this.chunks, x => x.id).join(\"+\");\n\t}\n\n\t/**\n\t * Performs an unshift of a specific chunk\n\t * @param {Chunk} chunk chunk being unshifted\n\t * @returns {boolean} returns true if attempted chunk shift is accepted\n\t */\n\tunshiftChunk(chunk) {\n\t\tconst oldIdx = this.chunks.indexOf(chunk);\n\t\tif (oldIdx > 0) {\n\t\t\tthis.chunks.splice(oldIdx, 1);\n\t\t\tthis.chunks.unshift(chunk);\n\t\t} else if (oldIdx < 0) {\n\t\t\tthis.chunks.unshift(chunk);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * inserts a chunk before another existing chunk in group\n\t * @param {Chunk} chunk Chunk being inserted\n\t * @param {Chunk} before Placeholder/target chunk marking new chunk insertion point\n\t * @returns {boolean} return true if insertion was successful\n\t */\n\tinsertChunk(chunk, before) {\n\t\tconst oldIdx = this.chunks.indexOf(chunk);\n\t\tconst idx = this.chunks.indexOf(before);\n\t\tif (idx < 0) {\n\t\t\tthrow new Error(\"before chunk not found\");\n\t\t}\n\t\tif (oldIdx >= 0 && oldIdx > idx) {\n\t\t\tthis.chunks.splice(oldIdx, 1);\n\t\t\tthis.chunks.splice(idx, 0, chunk);\n\t\t} else if (oldIdx < 0) {\n\t\t\tthis.chunks.splice(idx, 0, chunk);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * add a chunk into ChunkGroup. Is pushed on or prepended\n\t * @param {Chunk} chunk chunk being pushed into ChunkGroupS\n\t * @returns {boolean} returns true if chunk addition was ssuccesful.\n\t */\n\tpushChunk(chunk) {\n\t\tconst oldIdx = this.chunks.indexOf(chunk);\n\t\tif (oldIdx >= 0) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.chunks.push(chunk);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {Chunk} oldChunk chunk to be replaced\n\t * @param {Chunk} newChunk New chunkt that will be replaced\n\t * @returns {boolean} rerturns true for\n\t */\n\treplaceChunk(oldChunk, newChunk) {\n\t\tconst oldIdx = this.chunks.indexOf(oldChunk);\n\t\tif (oldIdx < 0) return false;\n\t\tconst newIdx = this.chunks.indexOf(newChunk);\n\t\tif (newIdx < 0) {\n\t\t\tthis.chunks[oldIdx] = newChunk;\n\t\t\treturn true;\n\t\t}\n\t\tif (newIdx < oldIdx) {\n\t\t\tthis.chunks.splice(oldIdx, 1);\n\t\t\treturn true;\n\t\t} else if (newIdx !== oldIdx) {\n\t\t\tthis.chunks[oldIdx] = newChunk;\n\t\t\tthis.chunks.splice(newIdx, 1);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tremoveChunk(chunk) {\n\t\tconst idx = this.chunks.indexOf(chunk);\n\t\tif (idx >= 0) {\n\t\t\tthis.chunks.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisInitial() {\n\t\treturn false;\n\t}\n\n\taddChild(chunk) {\n\t\tif (this._children.has(chunk)) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._children.add(chunk);\n\t\treturn true;\n\t}\n\n\tgetChildren() {\n\t\treturn this._children.getFromCache(getArray);\n\t}\n\n\tgetNumberOfChildren() {\n\t\treturn this._children.size;\n\t}\n\n\tget childrenIterable() {\n\t\treturn this._children;\n\t}\n\n\tremoveChild(chunk) {\n\t\tif (!this._children.has(chunk)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._children.delete(chunk);\n\t\tchunk.removeParent(this);\n\t\treturn true;\n\t}\n\n\taddParent(parentChunk) {\n\t\tif (!this._parents.has(parentChunk)) {\n\t\t\tthis._parents.add(parentChunk);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetParents() {\n\t\treturn this._parents.getFromCache(getArray);\n\t}\n\n\tsetParents(newParents) {\n\t\tthis._parents.clear();\n\t\tfor (const p of newParents) {\n\t\t\tthis._parents.add(p);\n\t\t}\n\t}\n\n\tgetNumberOfParents() {\n\t\treturn this._parents.size;\n\t}\n\n\thasParent(parent) {\n\t\treturn this._parents.has(parent);\n\t}\n\n\tget parentsIterable() {\n\t\treturn this._parents;\n\t}\n\n\tremoveParent(chunk) {\n\t\tif (this._parents.delete(chunk)) {\n\t\t\tchunk.removeChunk(this);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @returns {Array} - an array containing the blocks\n\t */\n\tgetBlocks() {\n\t\treturn this._blocks.getFromCache(getArray);\n\t}\n\n\tgetNumberOfBlocks() {\n\t\treturn this._blocks.size;\n\t}\n\n\thasBlock(block) {\n\t\treturn this._blocks.has(block);\n\t}\n\n\tget blocksIterable() {\n\t\treturn this._blocks;\n\t}\n\n\taddBlock(block) {\n\t\tif (!this._blocks.has(block)) {\n\t\t\tthis._blocks.add(block);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\taddOrigin(module, loc, request) {\n\t\tthis.origins.push({\n\t\t\tmodule,\n\t\t\tloc,\n\t\t\trequest\n\t\t});\n\t}\n\n\tcontainsModule(module) {\n\t\tfor (const chunk of this.chunks) {\n\t\t\tif (chunk.containsModule(module)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetFiles() {\n\t\tconst files = new Set();\n\n\t\tfor (const chunk of this.chunks) {\n\t\t\tfor (const file of chunk.files) {\n\t\t\t\tfiles.add(file);\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(files);\n\t}\n\n\t/**\n\t * @param {string=} reason reason for removing ChunkGroup\n\t * @returns {void}\n\t */\n\tremove(reason) {\n\t\t// cleanup parents\n\t\tfor (const parentChunkGroup of this._parents) {\n\t\t\t// remove this chunk from its parents\n\t\t\tparentChunkGroup._children.delete(this);\n\n\t\t\t// cleanup \"sub chunks\"\n\t\t\tfor (const chunkGroup of this._children) {\n\t\t\t\t/**\n\t\t\t\t * remove this chunk as \"intermediary\" and connect\n\t\t\t\t * it \"sub chunks\" and parents directly\n\t\t\t\t */\n\t\t\t\t// add parent to each \"sub chunk\"\n\t\t\t\tchunkGroup.addParent(parentChunkGroup);\n\t\t\t\t// add \"sub chunk\" to parent\n\t\t\t\tparentChunkGroup.addChild(chunkGroup);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * we need to iterate again over the children\n\t\t * to remove this from the childs parents.\n\t\t * This can not be done in the above loop\n\t\t * as it is not guaranteed that `this._parents` contains anything.\n\t\t */\n\t\tfor (const chunkGroup of this._children) {\n\t\t\t// remove this as parent of every \"sub chunk\"\n\t\t\tchunkGroup._parents.delete(this);\n\t\t}\n\n\t\t// cleanup blocks\n\t\tfor (const block of this._blocks) {\n\t\t\tblock.chunkGroup = null;\n\t\t}\n\n\t\t// remove chunks\n\t\tfor (const chunk of this.chunks) {\n\t\t\tchunk.removeGroup(this);\n\t\t}\n\t}\n\n\tsortItems() {\n\t\tthis.origins.sort(sortOrigin);\n\t\tthis._parents.sort();\n\t\tthis._children.sort();\n\t}\n\n\t/**\n\t * Sorting predicate which allows current ChunkGroup to be compared against another.\n\t * Sorting values are based off of number of chunks in ChunkGroup.\n\t *\n\t * @param {ChunkGroup} otherGroup the chunkGroup to compare this against\n\t * @returns {-1|0|1} sort position for comparison\n\t */\n\tcompareTo(otherGroup) {\n\t\tif (this.chunks.length > otherGroup.chunks.length) return -1;\n\t\tif (this.chunks.length < otherGroup.chunks.length) return 1;\n\t\tconst a = this.chunks[Symbol.iterator]();\n\t\tconst b = otherGroup.chunks[Symbol.iterator]();\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tconst aItem = a.next();\n\t\t\tconst bItem = b.next();\n\t\t\tif (aItem.done) return 0;\n\t\t\tconst cmp = aItem.value.compareTo(bItem.value);\n\t\t\tif (cmp !== 0) return cmp;\n\t\t}\n\t}\n\n\tgetChildrenByOrders() {\n\t\tconst lists = new Map();\n\t\tfor (const childGroup of this._children) {\n\t\t\t// TODO webpack 5 remove this check for options\n\t\t\tif (typeof childGroup.options === \"object\") {\n\t\t\t\tfor (const key of Object.keys(childGroup.options)) {\n\t\t\t\t\tif (key.endsWith(\"Order\")) {\n\t\t\t\t\t\tconst name = key.substr(0, key.length - \"Order\".length);\n\t\t\t\t\t\tlet list = lists.get(name);\n\t\t\t\t\t\tif (list === undefined) {\n\t\t\t\t\t\t\tlists.set(name, (list = []));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlist.push({\n\t\t\t\t\t\t\torder: childGroup.options[key],\n\t\t\t\t\t\t\tgroup: childGroup\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst result = Object.create(null);\n\t\tfor (const [name, list] of lists) {\n\t\t\tlist.sort((a, b) => {\n\t\t\t\tconst cmp = b.order - a.order;\n\t\t\t\tif (cmp !== 0) return cmp;\n\t\t\t\t// TODO webpack 5 remove this check of compareTo\n\t\t\t\tif (a.group.compareTo) {\n\t\t\t\t\treturn a.group.compareTo(b.group);\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tresult[name] = list.map(i => i.group);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Sets the top-down index of a module in this ChunkGroup\n\t * @param {Module} module module for which the index should be set\n\t * @param {number} index the index of the module\n\t * @returns {void}\n\t */\n\tsetModuleIndex(module, index) {\n\t\tthis._moduleIndicies.set(module, index);\n\t}\n\n\t/**\n\t * Gets the top-down index of a module in this ChunkGroup\n\t * @param {Module} module the module\n\t * @returns {number} index\n\t */\n\tgetModuleIndex(module) {\n\t\treturn this._moduleIndicies.get(module);\n\t}\n\n\t/**\n\t * Sets the bottom-up index of a module in this ChunkGroup\n\t * @param {Module} module module for which the index should be set\n\t * @param {number} index the index of the module\n\t * @returns {void}\n\t */\n\tsetModuleIndex2(module, index) {\n\t\tthis._moduleIndicies2.set(module, index);\n\t}\n\n\t/**\n\t * Gets the bottom-up index of a module in this ChunkGroup\n\t * @param {Module} module the module\n\t * @returns {number} index\n\t */\n\tgetModuleIndex2(module) {\n\t\treturn this._moduleIndicies2.get(module);\n\t}\n\n\tcheckConstraints() {\n\t\tconst chunk = this;\n\t\tfor (const child of chunk._children) {\n\t\t\tif (!child._parents.has(chunk)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`checkConstraints: child missing parent ${chunk.debugId} -> ${child.debugId}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tfor (const parentChunk of chunk._parents) {\n\t\t\tif (!parentChunk._children.has(chunk)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`checkConstraints: parent missing child ${parentChunk.debugId} <- ${chunk.debugId}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = ChunkGroup;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\nclass ChunkRenderError extends WebpackError {\n\t/**\n\t * Create a new ChunkRenderError\n\t * @param {Chunk} chunk A chunk\n\t * @param {string} file Related file\n\t * @param {Error} error Original error\n\t */\n\tconstructor(chunk, file, error) {\n\t\tsuper();\n\n\t\tthis.name = \"ChunkRenderError\";\n\t\tthis.error = error;\n\t\tthis.message = error.message;\n\t\tthis.details = error.stack;\n\t\tthis.file = file;\n\t\tthis.chunk = chunk;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = ChunkRenderError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable, SyncWaterfallHook, SyncHook } = require(\"tapable\");\n\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Module\")} Module} */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate} */\n/** @typedef {import(\"./util/createHash\").Hash} Hash} */\n\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {TODO} outputOptions\n * @property {{javascript: ModuleTemplate, webassembly: ModuleTemplate}} moduleTemplates\n * @property {Map<TODO, TODO>} dependencyTemplates\n */\n\nmodule.exports = class ChunkTemplate extends Tapable {\n\tconstructor(outputOptions) {\n\t\tsuper();\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncWaterfallHook<TODO[], RenderManifestOptions>} */\n\t\t\trenderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n\t\t\tmodules: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trender: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trenderWithEntry: new SyncWaterfallHook([\"source\", \"chunk\"]),\n\t\t\thash: new SyncHook([\"hash\"]),\n\t\t\thashForChunk: new SyncHook([\"hash\", \"chunk\"])\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {RenderManifestOptions} options render manifest options\n\t * @returns {TODO[]} returns render manifest\n\t */\n\tgetRenderManifest(options) {\n\t\tconst result = [];\n\n\t\tthis.hooks.renderManifest.call(result, options);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Updates hash with information from this template\n\t * @param {Hash} hash the hash to update\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(\"ChunkTemplate\");\n\t\thash.update(\"2\");\n\t\tthis.hooks.hash.call(hash);\n\t}\n\n\t/**\n\t * TODO webpack 5: remove moduleTemplate and dependencyTemplates\n\t * Updates hash with chunk-specific information from this template\n\t * @param {Hash} hash the hash to update\n\t * @param {Chunk} chunk the chunk\n\t * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n\t * @returns {void}\n\t */\n\tupdateHashForChunk(hash, chunk, moduleTemplate, dependencyTemplates) {\n\t\tthis.updateHash(hash);\n\t\tthis.hooks.hashForChunk.call(hash, chunk);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n\nclass CommentCompilationWarning extends WebpackError {\n\t/**\n\t *\n\t * @param {string} message warning message\n\t * @param {Module} module affected module\n\t * @param {DependencyLocation} loc affected lines of code\n\t */\n\tconstructor(message, module, loc) {\n\t\tsuper(message);\n\n\t\tthis.name = \"CommentCompilationWarning\";\n\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = CommentCompilationWarning;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nclass CommonJsStuffPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"CommonJsStuffPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"require.main.require\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"CommonJsStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.expressionIsUnsupported(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\"require.main.require is not supported by webpack.\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"module.parent.require\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"CommonJsStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.expressionIsUnsupported(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\"module.parent.require is not supported by webpack.\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"require.main\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"CommonJsStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\"__webpack_require__.c[__webpack_require__.s]\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"module.loaded\")\n\t\t\t\t\t\t.tap(\"CommonJsStuffPlugin\", expr => {\n\t\t\t\t\t\t\tparser.state.module.buildMeta.moduleConcatenationBailout =\n\t\t\t\t\t\t\t\t\"module.loaded\";\n\t\t\t\t\t\t\treturn ParserHelpers.toConstantDependency(parser, \"module.l\")(\n\t\t\t\t\t\t\t\texpr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"module.id\")\n\t\t\t\t\t\t.tap(\"CommonJsStuffPlugin\", expr => {\n\t\t\t\t\t\t\tparser.state.module.buildMeta.moduleConcatenationBailout =\n\t\t\t\t\t\t\t\t\"module.id\";\n\t\t\t\t\t\t\treturn ParserHelpers.toConstantDependency(parser, \"module.i\")(\n\t\t\t\t\t\t\t\texpr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"module.exports\")\n\t\t\t\t\t\t.tap(\"CommonJsStuffPlugin\", () => {\n\t\t\t\t\t\t\tconst module = parser.state.module;\n\t\t\t\t\t\t\tconst isHarmony =\n\t\t\t\t\t\t\t\tmodule.buildMeta && module.buildMeta.exportsType;\n\t\t\t\t\t\t\tif (!isHarmony) return true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"module.hot\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"CommonJsStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToIdentifier(\"module.hot\", false)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"module\")\n\t\t\t\t\t\t.tap(\"CommonJsStuffPlugin\", () => {\n\t\t\t\t\t\t\tconst module = parser.state.module;\n\t\t\t\t\t\t\tconst isHarmony =\n\t\t\t\t\t\t\t\tmodule.buildMeta && module.buildMeta.exportsType;\n\t\t\t\t\t\t\tlet moduleJsPath = path.join(\n\t\t\t\t\t\t\t\t__dirname,\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"buildin\",\n\t\t\t\t\t\t\t\tisHarmony ? \"harmony-module.js\" : \"module.js\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (module.context) {\n\t\t\t\t\t\t\t\tmoduleJsPath = path.relative(\n\t\t\t\t\t\t\t\t\tparser.state.module.context,\n\t\t\t\t\t\t\t\t\tmoduleJsPath\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (!/^[A-Z]:/i.test(moduleJsPath)) {\n\t\t\t\t\t\t\t\t\tmoduleJsPath = `./${moduleJsPath.replace(/\\\\/g, \"/\")}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ParserHelpers.addParsedVariableToModule(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\"module\",\n\t\t\t\t\t\t\t\t`require(${JSON.stringify(moduleJsPath)})(module)`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"CommonJsStuffPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"CommonJsStuffPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = CommonJsStuffPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst NullFactory = require(\"./NullFactory\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass CompatibilityPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"CompatibilityPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"CompatibilityPlugin\", (parser, parserOptions) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tparserOptions.browserify !== undefined &&\n\t\t\t\t\t\t\t!parserOptions.browserify\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tparser.hooks.call\n\t\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t\t.tap(\"CompatibilityPlugin\", expr => {\n\t\t\t\t\t\t\t\t// support for browserify style require delegator: \"require(o, !0)\"\n\t\t\t\t\t\t\t\tif (expr.arguments.length !== 2) return;\n\t\t\t\t\t\t\t\tconst second = parser.evaluateExpression(expr.arguments[1]);\n\t\t\t\t\t\t\t\tif (!second.isBoolean()) return;\n\t\t\t\t\t\t\t\tif (second.asBool() !== true) return;\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"require\", expr.callee.range);\n\t\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\t\tif (parser.state.current.dependencies.length > 1) {\n\t\t\t\t\t\t\t\t\tconst last =\n\t\t\t\t\t\t\t\t\t\tparser.state.current.dependencies[\n\t\t\t\t\t\t\t\t\t\t\tparser.state.current.dependencies.length - 1\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tlast.critical &&\n\t\t\t\t\t\t\t\t\t\tlast.options &&\n\t\t\t\t\t\t\t\t\t\tlast.options.request === \".\" &&\n\t\t\t\t\t\t\t\t\t\tlast.userRequest === \".\" &&\n\t\t\t\t\t\t\t\t\t\tlast.options.recursive\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\tparser.state.current.dependencies.pop();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = CompatibilityPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst util = require(\"util\");\nconst { CachedSource } = require(\"webpack-sources\");\nconst {\n\tTapable,\n\tSyncHook,\n\tSyncBailHook,\n\tSyncWaterfallHook,\n\tAsyncSeriesHook\n} = require(\"tapable\");\nconst EntryModuleNotFoundError = require(\"./EntryModuleNotFoundError\");\nconst ModuleNotFoundError = require(\"./ModuleNotFoundError\");\nconst ModuleDependencyWarning = require(\"./ModuleDependencyWarning\");\nconst ModuleDependencyError = require(\"./ModuleDependencyError\");\nconst ChunkGroup = require(\"./ChunkGroup\");\nconst Chunk = require(\"./Chunk\");\nconst Entrypoint = require(\"./Entrypoint\");\nconst MainTemplate = require(\"./MainTemplate\");\nconst ChunkTemplate = require(\"./ChunkTemplate\");\nconst HotUpdateChunkTemplate = require(\"./HotUpdateChunkTemplate\");\nconst ModuleTemplate = require(\"./ModuleTemplate\");\nconst RuntimeTemplate = require(\"./RuntimeTemplate\");\nconst ChunkRenderError = require(\"./ChunkRenderError\");\nconst Stats = require(\"./Stats\");\nconst Semaphore = require(\"./util/Semaphore\");\nconst createHash = require(\"./util/createHash\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst GraphHelpers = require(\"./GraphHelpers\");\nconst ModuleDependency = require(\"./dependencies/ModuleDependency\");\nconst compareLocations = require(\"./compareLocations\");\nconst { Logger, LogType } = require(\"./logging/Logger\");\nconst ErrorHelpers = require(\"./ErrorHelpers\");\nconst buildChunkGraph = require(\"./buildChunkGraph\");\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./DependenciesBlockVariable\")} DependenciesBlockVariable */\n/** @typedef {import(\"./dependencies/SingleEntryDependency\")} SingleEntryDependency */\n/** @typedef {import(\"./dependencies/MultiEntryDependency\")} MultiEntryDependency */\n/** @typedef {import(\"./dependencies/DllEntryDependency\")} DllEntryDependency */\n/** @typedef {import(\"./dependencies/DependencyReference\")} DependencyReference */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n// TODO use @callback\n/** @typedef {{[assetName: string]: Source}} CompilationAssets */\n/** @typedef {(err: Error|null, result?: Module) => void } ModuleCallback */\n/** @typedef {(err?: Error|null, result?: Module) => void } ModuleChainCallback */\n/** @typedef {(module: Module) => void} OnModuleCallback */\n/** @typedef {(err?: Error|null) => void} Callback */\n/** @typedef {(d: Dependency) => any} DepBlockVarDependenciesCallback */\n/** @typedef {new (...args: any[]) => Dependency} DepConstructor */\n/** @typedef {{apply: () => void}} Plugin */\n\n/**\n * @typedef {Object} ModuleFactoryCreateDataContextInfo\n * @property {string} issuer\n * @property {string} compiler\n */\n\n/**\n * @typedef {Object} ModuleFactoryCreateData\n * @property {ModuleFactoryCreateDataContextInfo} contextInfo\n * @property {any=} resolveOptions\n * @property {string} context\n * @property {Dependency[]} dependencies\n */\n\n/**\n * @typedef {Object} ModuleFactory\n * @property {(data: ModuleFactoryCreateData, callback: ModuleCallback) => any} create\n */\n\n/**\n * @typedef {Object} SortedDependency\n * @property {ModuleFactory} factory\n * @property {Dependency[]} dependencies\n */\n\n/**\n * @typedef {Object} DependenciesBlockLike\n * @property {Dependency[]} dependencies\n * @property {AsyncDependenciesBlock[]} blocks\n * @property {DependenciesBlockVariable[]} variables\n */\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} type\n * @property {any[]} args\n * @property {number} time\n * @property {string[]=} trace\n */\n\n/**\n * @param {Chunk} a first chunk to sort by id\n * @param {Chunk} b second chunk to sort by id\n * @returns {-1|0|1} sort value\n */\nconst byId = (a, b) => {\n\tif (typeof a.id !== typeof b.id) {\n\t\treturn typeof a.id < typeof b.id ? -1 : 1;\n\t}\n\tif (a.id < b.id) return -1;\n\tif (a.id > b.id) return 1;\n\treturn 0;\n};\n\n/**\n * @param {Module} a first module to sort by\n * @param {Module} b second module to sort by\n * @returns {-1|0|1} sort value\n */\nconst byIdOrIdentifier = (a, b) => {\n\tif (typeof a.id !== typeof b.id) {\n\t\treturn typeof a.id < typeof b.id ? -1 : 1;\n\t}\n\tif (a.id < b.id) return -1;\n\tif (a.id > b.id) return 1;\n\tconst identA = a.identifier();\n\tconst identB = b.identifier();\n\tif (identA < identB) return -1;\n\tif (identA > identB) return 1;\n\treturn 0;\n};\n\n/**\n * @param {Module} a first module to sort by\n * @param {Module} b second module to sort by\n * @returns {-1|0|1} sort value\n */\nconst byIndexOrIdentifier = (a, b) => {\n\tif (a.index < b.index) return -1;\n\tif (a.index > b.index) return 1;\n\tconst identA = a.identifier();\n\tconst identB = b.identifier();\n\tif (identA < identB) return -1;\n\tif (identA > identB) return 1;\n\treturn 0;\n};\n\n/**\n * @param {Compilation} a first compilation to sort by\n * @param {Compilation} b second compilation to sort by\n * @returns {-1|0|1} sort value\n */\nconst byNameOrHash = (a, b) => {\n\tif (a.name < b.name) return -1;\n\tif (a.name > b.name) return 1;\n\tif (a.fullHash < b.fullHash) return -1;\n\tif (a.fullHash > b.fullHash) return 1;\n\treturn 0;\n};\n\n/**\n * @param {DependenciesBlockVariable[]} variables DepBlock Variables to iterate over\n * @param {DepBlockVarDependenciesCallback} fn callback to apply on iterated elements\n * @returns {void}\n */\nconst iterationBlockVariable = (variables, fn) => {\n\tfor (\n\t\tlet indexVariable = 0;\n\t\tindexVariable < variables.length;\n\t\tindexVariable++\n\t) {\n\t\tconst varDep = variables[indexVariable].dependencies;\n\t\tfor (let indexVDep = 0; indexVDep < varDep.length; indexVDep++) {\n\t\t\tfn(varDep[indexVDep]);\n\t\t}\n\t}\n};\n\n/**\n * @template T\n * @param {T[]} arr array of elements to iterate over\n * @param {function(T): void} fn callback applied to each element\n * @returns {void}\n */\nconst iterationOfArrayCallback = (arr, fn) => {\n\tfor (let index = 0; index < arr.length; index++) {\n\t\tfn(arr[index]);\n\t}\n};\n\n/**\n * @template T\n * @param {Set<T>} set set to add items to\n * @param {Set<T>} otherSet set to add items from\n * @returns {void}\n */\nconst addAllToSet = (set, otherSet) => {\n\tfor (const item of otherSet) {\n\t\tset.add(item);\n\t}\n};\n\nclass Compilation extends Tapable {\n\t/**\n\t * Creates an instance of Compilation.\n\t * @param {Compiler} compiler the compiler which created the compilation\n\t */\n\tconstructor(compiler) {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncHook<Module>} */\n\t\t\tbuildModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<Module>} */\n\t\t\trebuildModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<Module, Error>} */\n\t\t\tfailedModule: new SyncHook([\"module\", \"error\"]),\n\t\t\t/** @type {SyncHook<Module>} */\n\t\t\tsucceedModule: new SyncHook([\"module\"]),\n\n\t\t\t/** @type {SyncHook<Dependency, string>} */\n\t\t\taddEntry: new SyncHook([\"entry\", \"name\"]),\n\t\t\t/** @type {SyncHook<Dependency, string, Error>} */\n\t\t\tfailedEntry: new SyncHook([\"entry\", \"name\", \"error\"]),\n\t\t\t/** @type {SyncHook<Dependency, string, Module>} */\n\t\t\tsucceedEntry: new SyncHook([\"entry\", \"name\", \"module\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<DependencyReference, Dependency, Module>} */\n\t\t\tdependencyReference: new SyncWaterfallHook([\n\t\t\t\t\"dependencyReference\",\n\t\t\t\t\"dependency\",\n\t\t\t\t\"module\"\n\t\t\t]),\n\n\t\t\t/** @type {AsyncSeriesHook<Module[]>} */\n\t\t\tfinishModules: new AsyncSeriesHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module>} */\n\t\t\tfinishRebuildingModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tunseal: new SyncHook([]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tseal: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook} */\n\t\t\tbeforeChunks: new SyncHook([]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tafterChunks: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeDependenciesBasic: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeDependencies: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeDependenciesAdvanced: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\tafterOptimizeDependencies: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook} */\n\t\t\toptimize: new SyncHook([]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeModulesBasic: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeModules: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncBailHook<Module[]>} */\n\t\t\toptimizeModulesAdvanced: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tafterOptimizeModules: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n\t\t\toptimizeChunksBasic: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n\t\t\toptimizeChunks: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[], ChunkGroup[]>} */\n\t\t\toptimizeChunksAdvanced: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\t\t\t/** @type {SyncHook<Chunk[], ChunkGroup[]>} */\n\t\t\tafterOptimizeChunks: new SyncHook([\"chunks\", \"chunkGroups\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<Chunk[], Module[]>} */\n\t\t\toptimizeTree: new AsyncSeriesHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncHook<Chunk[], Module[]>} */\n\t\t\tafterOptimizeTree: new SyncHook([\"chunks\", \"modules\"]),\n\n\t\t\t/** @type {SyncBailHook<Chunk[], Module[]>} */\n\t\t\toptimizeChunkModulesBasic: new SyncBailHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[], Module[]>} */\n\t\t\toptimizeChunkModules: new SyncBailHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[], Module[]>} */\n\t\t\toptimizeChunkModulesAdvanced: new SyncBailHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncHook<Chunk[], Module[]>} */\n\t\t\tafterOptimizeChunkModules: new SyncHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncBailHook} */\n\t\t\tshouldRecord: new SyncBailHook([]),\n\n\t\t\t/** @type {SyncHook<Module[], any>} */\n\t\t\treviveModules: new SyncHook([\"modules\", \"records\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\toptimizeModuleOrder: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tadvancedOptimizeModuleOrder: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tbeforeModuleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tmoduleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\toptimizeModuleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<Module[]>} */\n\t\t\tafterOptimizeModuleIds: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook<Chunk[], any>} */\n\t\t\treviveChunks: new SyncHook([\"chunks\", \"records\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\toptimizeChunkOrder: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tbeforeChunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\toptimizeChunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tafterOptimizeChunkIds: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {SyncHook<Module[], any>} */\n\t\t\trecordModules: new SyncHook([\"modules\", \"records\"]),\n\t\t\t/** @type {SyncHook<Chunk[], any>} */\n\t\t\trecordChunks: new SyncHook([\"chunks\", \"records\"]),\n\n\t\t\t/** @type {SyncHook} */\n\t\t\tbeforeHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<Chunk>} */\n\t\t\tcontentHash: new SyncHook([\"chunk\"]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tafterHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<any>} */\n\t\t\trecordHash: new SyncHook([\"records\"]),\n\t\t\t/** @type {SyncHook<Compilation, any>} */\n\t\t\trecord: new SyncHook([\"compilation\", \"records\"]),\n\n\t\t\t/** @type {SyncHook} */\n\t\t\tbeforeModuleAssets: new SyncHook([]),\n\t\t\t/** @type {SyncBailHook} */\n\t\t\tshouldGenerateChunkAssets: new SyncBailHook([]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tbeforeChunkAssets: new SyncHook([]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tadditionalChunkAssets: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {AsyncSeriesHook} */\n\t\t\tadditionalAssets: new AsyncSeriesHook([]),\n\t\t\t/** @type {AsyncSeriesHook<Chunk[]>} */\n\t\t\toptimizeChunkAssets: new AsyncSeriesHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tafterOptimizeChunkAssets: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {AsyncSeriesHook<CompilationAssets>} */\n\t\t\toptimizeAssets: new AsyncSeriesHook([\"assets\"]),\n\t\t\t/** @type {SyncHook<CompilationAssets>} */\n\t\t\tafterOptimizeAssets: new SyncHook([\"assets\"]),\n\n\t\t\t/** @type {SyncBailHook} */\n\t\t\tneedAdditionalSeal: new SyncBailHook([]),\n\t\t\t/** @type {AsyncSeriesHook} */\n\t\t\tafterSeal: new AsyncSeriesHook([]),\n\n\t\t\t/** @type {SyncHook<Chunk, Hash>} */\n\t\t\tchunkHash: new SyncHook([\"chunk\", \"chunkHash\"]),\n\t\t\t/** @type {SyncHook<Module, string>} */\n\t\t\tmoduleAsset: new SyncHook([\"module\", \"filename\"]),\n\t\t\t/** @type {SyncHook<Chunk, string>} */\n\t\t\tchunkAsset: new SyncHook([\"chunk\", \"filename\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<string, TODO>} */\n\t\t\tassetPath: new SyncWaterfallHook([\"filename\", \"data\"]), // TODO MainTemplate\n\n\t\t\t/** @type {SyncBailHook} */\n\t\t\tneedAdditionalPass: new SyncBailHook([]),\n\n\t\t\t/** @type {SyncHook<Compiler, string, number>} */\n\t\t\tchildCompiler: new SyncHook([\n\t\t\t\t\"childCompiler\",\n\t\t\t\t\"compilerName\",\n\t\t\t\t\"compilerIndex\"\n\t\t\t]),\n\n\t\t\t/** @type {SyncBailHook<string, LogEntry>} */\n\t\t\tlog: new SyncBailHook([\"origin\", \"logEntry\"]),\n\n\t\t\t// TODO the following hooks are weirdly located here\n\t\t\t// TODO move them for webpack 5\n\t\t\t/** @type {SyncHook<object, Module>} */\n\t\t\tnormalModuleLoader: new SyncHook([\"loaderContext\", \"module\"]),\n\n\t\t\t/** @type {SyncBailHook<Chunk[]>} */\n\t\t\toptimizeExtractedChunksBasic: new SyncBailHook([\"chunks\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[]>} */\n\t\t\toptimizeExtractedChunks: new SyncBailHook([\"chunks\"]),\n\t\t\t/** @type {SyncBailHook<Chunk[]>} */\n\t\t\toptimizeExtractedChunksAdvanced: new SyncBailHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<Chunk[]>} */\n\t\t\tafterOptimizeExtractedChunks: new SyncHook([\"chunks\"])\n\t\t};\n\t\tthis._pluginCompat.tap(\"Compilation\", options => {\n\t\t\tswitch (options.name) {\n\t\t\t\tcase \"optimize-tree\":\n\t\t\t\tcase \"additional-assets\":\n\t\t\t\tcase \"optimize-chunk-assets\":\n\t\t\t\tcase \"optimize-assets\":\n\t\t\t\tcase \"after-seal\":\n\t\t\t\t\toptions.async = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\t/** @type {string=} */\n\t\tthis.name = undefined;\n\t\t/** @type {Compiler} */\n\t\tthis.compiler = compiler;\n\t\tthis.resolverFactory = compiler.resolverFactory;\n\t\tthis.inputFileSystem = compiler.inputFileSystem;\n\t\tthis.requestShortener = compiler.requestShortener;\n\n\t\tconst options = compiler.options;\n\t\tthis.options = options;\n\t\tthis.outputOptions = options && options.output;\n\t\t/** @type {boolean=} */\n\t\tthis.bail = options && options.bail;\n\t\tthis.profile = options && options.profile;\n\t\tthis.performance = options && options.performance;\n\n\t\tthis.mainTemplate = new MainTemplate(this.outputOptions);\n\t\tthis.chunkTemplate = new ChunkTemplate(this.outputOptions);\n\t\tthis.hotUpdateChunkTemplate = new HotUpdateChunkTemplate(\n\t\t\tthis.outputOptions\n\t\t);\n\t\tthis.runtimeTemplate = new RuntimeTemplate(\n\t\t\tthis.outputOptions,\n\t\t\tthis.requestShortener\n\t\t);\n\t\tthis.moduleTemplates = {\n\t\t\tjavascript: new ModuleTemplate(this.runtimeTemplate, \"javascript\"),\n\t\t\twebassembly: new ModuleTemplate(this.runtimeTemplate, \"webassembly\")\n\t\t};\n\n\t\tthis.semaphore = new Semaphore(options.parallelism || 100);\n\n\t\tthis.entries = [];\n\t\t/** @private @type {{name: string, request: string, module: Module}[]} */\n\t\tthis._preparedEntrypoints = [];\n\t\tthis.entrypoints = new Map();\n\t\t/** @type {Chunk[]} */\n\t\tthis.chunks = [];\n\t\t/** @type {ChunkGroup[]} */\n\t\tthis.chunkGroups = [];\n\t\t/** @type {Map<string, ChunkGroup>} */\n\t\tthis.namedChunkGroups = new Map();\n\t\t/** @type {Map<string, Chunk>} */\n\t\tthis.namedChunks = new Map();\n\t\t/** @type {Module[]} */\n\t\tthis.modules = [];\n\t\t/** @private @type {Map<string, Module>} */\n\t\tthis._modules = new Map();\n\t\tthis.cache = null;\n\t\tthis.records = null;\n\t\t/** @type {string[]} */\n\t\tthis.additionalChunkAssets = [];\n\t\t/** @type {CompilationAssets} */\n\t\tthis.assets = {};\n\t\t/** @type {WebpackError[]} */\n\t\tthis.errors = [];\n\t\t/** @type {WebpackError[]} */\n\t\tthis.warnings = [];\n\t\t/** @type {Compilation[]} */\n\t\tthis.children = [];\n\t\t/** @type {Map<string, LogEntry[]>} */\n\t\tthis.logging = new Map();\n\t\t/** @type {Map<DepConstructor, ModuleFactory>} */\n\t\tthis.dependencyFactories = new Map();\n\t\t/** @type {Map<DepConstructor, DependencyTemplate>} */\n\t\tthis.dependencyTemplates = new Map();\n\t\t// TODO refactor this in webpack 5 to a custom DependencyTemplates class with a hash property\n\t\t// @ts-ignore\n\t\tthis.dependencyTemplates.set(\"hash\", \"\");\n\t\tthis.childrenCounters = {};\n\t\t/** @type {Set<number|string>} */\n\t\tthis.usedChunkIds = null;\n\t\t/** @type {Set<number>} */\n\t\tthis.usedModuleIds = null;\n\t\t/** @type {Map<string, number>=} */\n\t\tthis.fileTimestamps = undefined;\n\t\t/** @type {Map<string, number>=} */\n\t\tthis.contextTimestamps = undefined;\n\t\t/** @type {Set<string>=} */\n\t\tthis.compilationDependencies = undefined;\n\t\t/** @private @type {Map<Module, Callback[]>} */\n\t\tthis._buildingModules = new Map();\n\t\t/** @private @type {Map<Module, Callback[]>} */\n\t\tthis._rebuildingModules = new Map();\n\t\t/** @type {Set<string>} */\n\t\tthis.emittedAssets = new Set();\n\t}\n\n\tgetStats() {\n\t\treturn new Stats(this);\n\t}\n\n\t/**\n\t * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n\t * @returns {Logger} a logger with that name\n\t */\n\tgetLogger(name) {\n\t\tif (!name) {\n\t\t\tthrow new TypeError(\"Compilation.getLogger(name) called without a name\");\n\t\t}\n\t\t/** @type {LogEntry[] | undefined} */\n\t\tlet logEntries;\n\t\treturn new Logger((type, args) => {\n\t\t\tif (typeof name === \"function\") {\n\t\t\t\tname = name();\n\t\t\t\tif (!name) {\n\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\"Compilation.getLogger(name) called with a function not returning a name\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet trace;\n\t\t\tswitch (type) {\n\t\t\t\tcase LogType.warn:\n\t\t\t\tcase LogType.error:\n\t\t\t\tcase LogType.trace:\n\t\t\t\t\ttrace = ErrorHelpers.cutOffLoaderExecution(new Error(\"Trace\").stack)\n\t\t\t\t\t\t.split(\"\\n\")\n\t\t\t\t\t\t.slice(3);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/** @type {LogEntry} */\n\t\t\tconst logEntry = {\n\t\t\t\ttime: Date.now(),\n\t\t\t\ttype,\n\t\t\t\targs,\n\t\t\t\ttrace\n\t\t\t};\n\t\t\tif (this.hooks.log.call(name, logEntry) === undefined) {\n\t\t\t\tif (logEntry.type === LogType.profileEnd) {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tif (typeof console.profileEnd === \"function\") {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tconsole.profileEnd(`[${name}] ${logEntry.args[0]}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (logEntries === undefined) {\n\t\t\t\t\tlogEntries = this.logging.get(name);\n\t\t\t\t\tif (logEntries === undefined) {\n\t\t\t\t\t\tlogEntries = [];\n\t\t\t\t\t\tthis.logging.set(name, logEntries);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlogEntries.push(logEntry);\n\t\t\t\tif (logEntry.type === LogType.profile) {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tif (typeof console.profile === \"function\") {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tconsole.profile(`[${name}] ${logEntry.args[0]}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @typedef {Object} AddModuleResult\n\t * @property {Module} module the added or existing module\n\t * @property {boolean} issuer was this the first request for this module\n\t * @property {boolean} build should the module be build\n\t * @property {boolean} dependencies should dependencies be walked\n\t */\n\n\t/**\n\t * @param {Module} module module to be added that was created\n\t * @param {any=} cacheGroup cacheGroup it is apart of\n\t * @returns {AddModuleResult} returns meta about whether or not the module had built\n\t * had an issuer, or any dependnecies\n\t */\n\taddModule(module, cacheGroup) {\n\t\tconst identifier = module.identifier();\n\t\tconst alreadyAddedModule = this._modules.get(identifier);\n\t\tif (alreadyAddedModule) {\n\t\t\treturn {\n\t\t\t\tmodule: alreadyAddedModule,\n\t\t\t\tissuer: false,\n\t\t\t\tbuild: false,\n\t\t\t\tdependencies: false\n\t\t\t};\n\t\t}\n\t\tconst cacheName = (cacheGroup || \"m\") + identifier;\n\t\tif (this.cache && this.cache[cacheName]) {\n\t\t\tconst cacheModule = this.cache[cacheName];\n\n\t\t\tif (typeof cacheModule.updateCacheModule === \"function\") {\n\t\t\t\tcacheModule.updateCacheModule(module);\n\t\t\t}\n\n\t\t\tlet rebuild = true;\n\t\t\tif (this.fileTimestamps && this.contextTimestamps) {\n\t\t\t\trebuild = cacheModule.needRebuild(\n\t\t\t\t\tthis.fileTimestamps,\n\t\t\t\t\tthis.contextTimestamps\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!rebuild) {\n\t\t\t\tcacheModule.disconnect();\n\t\t\t\tthis._modules.set(identifier, cacheModule);\n\t\t\t\tthis.modules.push(cacheModule);\n\t\t\t\tfor (const err of cacheModule.errors) {\n\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t}\n\t\t\t\tfor (const err of cacheModule.warnings) {\n\t\t\t\t\tthis.warnings.push(err);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tmodule: cacheModule,\n\t\t\t\t\tissuer: true,\n\t\t\t\t\tbuild: false,\n\t\t\t\t\tdependencies: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tcacheModule.unbuild();\n\t\t\tmodule = cacheModule;\n\t\t}\n\t\tthis._modules.set(identifier, module);\n\t\tif (this.cache) {\n\t\t\tthis.cache[cacheName] = module;\n\t\t}\n\t\tthis.modules.push(module);\n\t\treturn {\n\t\t\tmodule: module,\n\t\t\tissuer: true,\n\t\t\tbuild: true,\n\t\t\tdependencies: true\n\t\t};\n\t}\n\n\t/**\n\t * Fetches a module from a compilation by its identifier\n\t * @param {Module} module the module provided\n\t * @returns {Module} the module requested\n\t */\n\tgetModule(module) {\n\t\tconst identifier = module.identifier();\n\t\treturn this._modules.get(identifier);\n\t}\n\n\t/**\n\t * Attempts to search for a module by its identifier\n\t * @param {string} identifier identifier (usually path) for module\n\t * @returns {Module|undefined} attempt to search for module and return it, else undefined\n\t */\n\tfindModule(identifier) {\n\t\treturn this._modules.get(identifier);\n\t}\n\n\t/**\n\t * @param {Module} module module with its callback list\n\t * @param {Callback} callback the callback function\n\t * @returns {void}\n\t */\n\twaitForBuildingFinished(module, callback) {\n\t\tlet callbackList = this._buildingModules.get(module);\n\t\tif (callbackList) {\n\t\t\tcallbackList.push(() => callback());\n\t\t} else {\n\t\t\tprocess.nextTick(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Builds the module object\n\t *\n\t * @param {Module} module module to be built\n\t * @param {boolean} optional optional flag\n\t * @param {Module=} origin origin module this module build was requested from\n\t * @param {Dependency[]=} dependencies optional dependencies from the module to be built\n\t * @param {TODO} thisCallback the callback\n\t * @returns {TODO} returns the callback function with results\n\t */\n\tbuildModule(module, optional, origin, dependencies, thisCallback) {\n\t\tlet callbackList = this._buildingModules.get(module);\n\t\tif (callbackList) {\n\t\t\tcallbackList.push(thisCallback);\n\t\t\treturn;\n\t\t}\n\t\tthis._buildingModules.set(module, (callbackList = [thisCallback]));\n\n\t\tconst callback = err => {\n\t\t\tthis._buildingModules.delete(module);\n\t\t\tfor (const cb of callbackList) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t};\n\n\t\tthis.hooks.buildModule.call(module);\n\t\tmodule.build(\n\t\t\tthis.options,\n\t\t\tthis,\n\t\t\tthis.resolverFactory.get(\"normal\", module.resolveOptions),\n\t\t\tthis.inputFileSystem,\n\t\t\terror => {\n\t\t\t\tconst errors = module.errors;\n\t\t\t\tfor (let indexError = 0; indexError < errors.length; indexError++) {\n\t\t\t\t\tconst err = errors[indexError];\n\t\t\t\t\terr.origin = origin;\n\t\t\t\t\terr.dependencies = dependencies;\n\t\t\t\t\tif (optional) {\n\t\t\t\t\t\tthis.warnings.push(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst warnings = module.warnings;\n\t\t\t\tfor (\n\t\t\t\t\tlet indexWarning = 0;\n\t\t\t\t\tindexWarning < warnings.length;\n\t\t\t\t\tindexWarning++\n\t\t\t\t) {\n\t\t\t\t\tconst war = warnings[indexWarning];\n\t\t\t\t\twar.origin = origin;\n\t\t\t\t\twar.dependencies = dependencies;\n\t\t\t\t\tthis.warnings.push(war);\n\t\t\t\t}\n\t\t\t\tconst originalMap = module.dependencies.reduce((map, v, i) => {\n\t\t\t\t\tmap.set(v, i);\n\t\t\t\t\treturn map;\n\t\t\t\t}, new Map());\n\t\t\t\tmodule.dependencies.sort((a, b) => {\n\t\t\t\t\tconst cmp = compareLocations(a.loc, b.loc);\n\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t\treturn originalMap.get(a) - originalMap.get(b);\n\t\t\t\t});\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.hooks.failedModule.call(module, error);\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\t\t\t\tthis.hooks.succeedModule.call(module);\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module to be processed for deps\n\t * @param {ModuleCallback} callback callback to be triggered\n\t * @returns {void}\n\t */\n\tprocessModuleDependencies(module, callback) {\n\t\tconst dependencies = new Map();\n\n\t\tconst addDependency = dep => {\n\t\t\tconst resourceIdent = dep.getResourceIdentifier();\n\t\t\tif (resourceIdent) {\n\t\t\t\tconst factory = this.dependencyFactories.get(dep.constructor);\n\t\t\t\tif (factory === undefined) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`No module factory available for dependency type: ${dep.constructor.name}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tlet innerMap = dependencies.get(factory);\n\t\t\t\tif (innerMap === undefined) {\n\t\t\t\t\tdependencies.set(factory, (innerMap = new Map()));\n\t\t\t\t}\n\t\t\t\tlet list = innerMap.get(resourceIdent);\n\t\t\t\tif (list === undefined) innerMap.set(resourceIdent, (list = []));\n\t\t\t\tlist.push(dep);\n\t\t\t}\n\t\t};\n\n\t\tconst addDependenciesBlock = block => {\n\t\t\tif (block.dependencies) {\n\t\t\t\titerationOfArrayCallback(block.dependencies, addDependency);\n\t\t\t}\n\t\t\tif (block.blocks) {\n\t\t\t\titerationOfArrayCallback(block.blocks, addDependenciesBlock);\n\t\t\t}\n\t\t\tif (block.variables) {\n\t\t\t\titerationBlockVariable(block.variables, addDependency);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\taddDependenciesBlock(module);\n\t\t} catch (e) {\n\t\t\tcallback(e);\n\t\t}\n\n\t\tconst sortedDependencies = [];\n\n\t\tfor (const pair1 of dependencies) {\n\t\t\tfor (const pair2 of pair1[1]) {\n\t\t\t\tsortedDependencies.push({\n\t\t\t\t\tfactory: pair1[0],\n\t\t\t\t\tdependencies: pair2[1]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.addModuleDependencies(\n\t\t\tmodule,\n\t\t\tsortedDependencies,\n\t\t\tthis.bail,\n\t\t\tnull,\n\t\t\ttrue,\n\t\t\tcallback\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module module to add deps to\n\t * @param {SortedDependency[]} dependencies set of sorted dependencies to iterate through\n\t * @param {(boolean|null)=} bail whether to bail or not\n\t * @param {TODO} cacheGroup optional cacheGroup\n\t * @param {boolean} recursive whether it is recursive traversal\n\t * @param {function} callback callback for when dependencies are finished being added\n\t * @returns {void}\n\t */\n\taddModuleDependencies(\n\t\tmodule,\n\t\tdependencies,\n\t\tbail,\n\t\tcacheGroup,\n\t\trecursive,\n\t\tcallback\n\t) {\n\t\tconst start = this.profile && Date.now();\n\t\tconst currentProfile = this.profile && {};\n\n\t\tasyncLib.forEach(\n\t\t\tdependencies,\n\t\t\t(item, callback) => {\n\t\t\t\tconst dependencies = item.dependencies;\n\n\t\t\t\tconst errorAndCallback = err => {\n\t\t\t\t\terr.origin = module;\n\t\t\t\t\terr.dependencies = dependencies;\n\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\tif (bail) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst warningAndCallback = err => {\n\t\t\t\t\terr.origin = module;\n\t\t\t\t\tthis.warnings.push(err);\n\t\t\t\t\tcallback();\n\t\t\t\t};\n\n\t\t\t\tconst semaphore = this.semaphore;\n\t\t\t\tsemaphore.acquire(() => {\n\t\t\t\t\tconst factory = item.factory;\n\t\t\t\t\tfactory.create(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontextInfo: {\n\t\t\t\t\t\t\t\tissuer: module.nameForCondition && module.nameForCondition(),\n\t\t\t\t\t\t\t\tcompiler: this.compiler.name\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tresolveOptions: module.resolveOptions,\n\t\t\t\t\t\t\tcontext: module.context,\n\t\t\t\t\t\t\tdependencies: dependencies\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err, dependentModule) => {\n\t\t\t\t\t\t\tlet afterFactory;\n\n\t\t\t\t\t\t\tconst isOptional = () => {\n\t\t\t\t\t\t\t\treturn dependencies.every(d => d.optional);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst errorOrWarningAndCallback = err => {\n\t\t\t\t\t\t\t\tif (isOptional()) {\n\t\t\t\t\t\t\t\t\treturn warningAndCallback(err);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn errorAndCallback(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\treturn errorOrWarningAndCallback(\n\t\t\t\t\t\t\t\t\tnew ModuleNotFoundError(module, err)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!dependentModule) {\n\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\treturn process.nextTick(callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\tafterFactory = Date.now();\n\t\t\t\t\t\t\t\tcurrentProfile.factory = afterFactory - start;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst iterationDependencies = depend => {\n\t\t\t\t\t\t\t\tfor (let index = 0; index < depend.length; index++) {\n\t\t\t\t\t\t\t\t\tconst dep = depend[index];\n\t\t\t\t\t\t\t\t\tdep.module = dependentModule;\n\t\t\t\t\t\t\t\t\tdependentModule.addReason(module, dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst addModuleResult = this.addModule(\n\t\t\t\t\t\t\t\tdependentModule,\n\t\t\t\t\t\t\t\tcacheGroup\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdependentModule = addModuleResult.module;\n\t\t\t\t\t\t\titerationDependencies(dependencies);\n\n\t\t\t\t\t\t\tconst afterBuild = () => {\n\t\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\t\tconst afterBuilding = Date.now();\n\t\t\t\t\t\t\t\t\tcurrentProfile.building = afterBuilding - afterFactory;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (recursive && addModuleResult.dependencies) {\n\t\t\t\t\t\t\t\t\tthis.processModuleDependencies(dependentModule, callback);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (addModuleResult.issuer) {\n\t\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\t\tdependentModule.profile = currentProfile;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdependentModule.issuer = module;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (this.profile) {\n\t\t\t\t\t\t\t\t\tif (module.profile) {\n\t\t\t\t\t\t\t\t\t\tconst time = Date.now() - start;\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!module.profile.dependencies ||\n\t\t\t\t\t\t\t\t\t\t\ttime > module.profile.dependencies\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tmodule.profile.dependencies = time;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (addModuleResult.build) {\n\t\t\t\t\t\t\t\tthis.buildModule(\n\t\t\t\t\t\t\t\t\tdependentModule,\n\t\t\t\t\t\t\t\t\tisOptional(),\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\t\t\t\treturn errorOrWarningAndCallback(err);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\t\t\t\tconst afterBuilding = Date.now();\n\t\t\t\t\t\t\t\t\t\t\tcurrentProfile.building = afterBuilding - afterFactory;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\t\t\tafterBuild();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\tthis.waitForBuildingFinished(dependentModule, afterBuild);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t},\n\t\t\terr => {\n\t\t\t\t// In V8, the Error objects keep a reference to the functions on the stack. These warnings &\n\t\t\t\t// errors are created inside closures that keep a reference to the Compilation, so errors are\n\t\t\t\t// leaking the Compilation object.\n\n\t\t\t\tif (err) {\n\t\t\t\t\t// eslint-disable-next-line no-self-assign\n\t\t\t\t\terr.stack = err.stack;\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\treturn process.nextTick(callback);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param {string} context context string path\n\t * @param {Dependency} dependency dependency used to create Module chain\n\t * @param {OnModuleCallback} onModule function invoked on modules creation\n\t * @param {ModuleChainCallback} callback callback for when module chain is complete\n\t * @returns {void} will throw if dependency instance is not a valid Dependency\n\t */\n\t_addModuleChain(context, dependency, onModule, callback) {\n\t\tconst start = this.profile && Date.now();\n\t\tconst currentProfile = this.profile && {};\n\n\t\tconst errorAndCallback = this.bail\n\t\t\t? err => {\n\t\t\t\t\tcallback(err);\n\t\t\t  }\n\t\t\t: err => {\n\t\t\t\t\terr.dependencies = [dependency];\n\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\tcallback();\n\t\t\t  };\n\n\t\tif (\n\t\t\ttypeof dependency !== \"object\" ||\n\t\t\tdependency === null ||\n\t\t\t!dependency.constructor\n\t\t) {\n\t\t\tthrow new Error(\"Parameter 'dependency' must be a Dependency\");\n\t\t}\n\t\tconst Dep = /** @type {DepConstructor} */ (dependency.constructor);\n\t\tconst moduleFactory = this.dependencyFactories.get(Dep);\n\t\tif (!moduleFactory) {\n\t\t\tthrow new Error(\n\t\t\t\t`No dependency factory available for this dependency type: ${dependency.constructor.name}`\n\t\t\t);\n\t\t}\n\n\t\tthis.semaphore.acquire(() => {\n\t\t\tmoduleFactory.create(\n\t\t\t\t{\n\t\t\t\t\tcontextInfo: {\n\t\t\t\t\t\tissuer: \"\",\n\t\t\t\t\t\tcompiler: this.compiler.name\n\t\t\t\t\t},\n\t\t\t\t\tcontext: context,\n\t\t\t\t\tdependencies: [dependency]\n\t\t\t\t},\n\t\t\t\t(err, module) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthis.semaphore.release();\n\t\t\t\t\t\treturn errorAndCallback(new EntryModuleNotFoundError(err));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet afterFactory;\n\n\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\tafterFactory = Date.now();\n\t\t\t\t\t\tcurrentProfile.factory = afterFactory - start;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst addModuleResult = this.addModule(module);\n\t\t\t\t\tmodule = addModuleResult.module;\n\n\t\t\t\t\tonModule(module);\n\n\t\t\t\t\tdependency.module = module;\n\t\t\t\t\tmodule.addReason(null, dependency);\n\n\t\t\t\t\tconst afterBuild = () => {\n\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\tconst afterBuilding = Date.now();\n\t\t\t\t\t\t\tcurrentProfile.building = afterBuilding - afterFactory;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (addModuleResult.dependencies) {\n\t\t\t\t\t\t\tthis.processModuleDependencies(module, err => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tcallback(null, module);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn callback(null, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (addModuleResult.issuer) {\n\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\tmodule.profile = currentProfile;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (addModuleResult.build) {\n\t\t\t\t\t\tthis.buildModule(module, false, null, null, err => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tthis.semaphore.release();\n\t\t\t\t\t\t\t\treturn errorAndCallback(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (currentProfile) {\n\t\t\t\t\t\t\t\tconst afterBuilding = Date.now();\n\t\t\t\t\t\t\t\tcurrentProfile.building = afterBuilding - afterFactory;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.semaphore.release();\n\t\t\t\t\t\t\tafterBuild();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.semaphore.release();\n\t\t\t\t\t\tthis.waitForBuildingFinished(module, afterBuild);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {string} context context path for entry\n\t * @param {Dependency} entry entry dependency being created\n\t * @param {string} name name of entry\n\t * @param {ModuleCallback} callback callback function\n\t * @returns {void} returns\n\t */\n\taddEntry(context, entry, name, callback) {\n\t\tthis.hooks.addEntry.call(entry, name);\n\n\t\tconst slot = {\n\t\t\tname: name,\n\t\t\t// TODO webpack 5 remove `request`\n\t\t\trequest: null,\n\t\t\tmodule: null\n\t\t};\n\n\t\tif (entry instanceof ModuleDependency) {\n\t\t\tslot.request = entry.request;\n\t\t}\n\n\t\t// TODO webpack 5: merge modules instead when multiple entry modules are supported\n\t\tconst idx = this._preparedEntrypoints.findIndex(slot => slot.name === name);\n\t\tif (idx >= 0) {\n\t\t\t// Overwrite existing entrypoint\n\t\t\tthis._preparedEntrypoints[idx] = slot;\n\t\t} else {\n\t\t\tthis._preparedEntrypoints.push(slot);\n\t\t}\n\t\tthis._addModuleChain(\n\t\t\tcontext,\n\t\t\tentry,\n\t\t\tmodule => {\n\t\t\t\tthis.entries.push(module);\n\t\t\t},\n\t\t\t(err, module) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthis.hooks.failedEntry.call(entry, name, err);\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tif (module) {\n\t\t\t\t\tslot.module = module;\n\t\t\t\t} else {\n\t\t\t\t\tconst idx = this._preparedEntrypoints.indexOf(slot);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tthis._preparedEntrypoints.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.hooks.succeedEntry.call(entry, name, module);\n\t\t\t\treturn callback(null, module);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context path string\n\t * @param {Dependency} dependency dep used to create module\n\t * @param {ModuleCallback} callback module callback sending module up a level\n\t * @returns {void}\n\t */\n\tprefetch(context, dependency, callback) {\n\t\tthis._addModuleChain(\n\t\t\tcontext,\n\t\t\tdependency,\n\t\t\tmodule => {\n\t\t\t\tmodule.prefetched = true;\n\t\t\t},\n\t\t\tcallback\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module module to be rebuilt\n\t * @param {Callback} thisCallback callback when module finishes rebuilding\n\t * @returns {void}\n\t */\n\trebuildModule(module, thisCallback) {\n\t\tlet callbackList = this._rebuildingModules.get(module);\n\t\tif (callbackList) {\n\t\t\tcallbackList.push(thisCallback);\n\t\t\treturn;\n\t\t}\n\t\tthis._rebuildingModules.set(module, (callbackList = [thisCallback]));\n\n\t\tconst callback = err => {\n\t\t\tthis._rebuildingModules.delete(module);\n\t\t\tfor (const cb of callbackList) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t};\n\n\t\tthis.hooks.rebuildModule.call(module);\n\t\tconst oldDependencies = module.dependencies.slice();\n\t\tconst oldVariables = module.variables.slice();\n\t\tconst oldBlocks = module.blocks.slice();\n\t\tmodule.unbuild();\n\t\tthis.buildModule(module, false, module, null, err => {\n\t\t\tif (err) {\n\t\t\t\tthis.hooks.finishRebuildingModule.call(module);\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tthis.processModuleDependencies(module, err => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tthis.removeReasonsOfDependencyBlock(module, {\n\t\t\t\t\tdependencies: oldDependencies,\n\t\t\t\t\tvariables: oldVariables,\n\t\t\t\t\tblocks: oldBlocks\n\t\t\t\t});\n\t\t\t\tthis.hooks.finishRebuildingModule.call(module);\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t}\n\n\tfinish(callback) {\n\t\tconst modules = this.modules;\n\t\tthis.hooks.finishModules.callAsync(modules, err => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tfor (let index = 0; index < modules.length; index++) {\n\t\t\t\tconst module = modules[index];\n\t\t\t\tthis.reportDependencyErrorsAndWarnings(module, [module]);\n\t\t\t}\n\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tunseal() {\n\t\tthis.hooks.unseal.call();\n\t\tthis.chunks.length = 0;\n\t\tthis.chunkGroups.length = 0;\n\t\tthis.namedChunks.clear();\n\t\tthis.namedChunkGroups.clear();\n\t\tthis.additionalChunkAssets.length = 0;\n\t\tthis.assets = {};\n\t\tfor (const module of this.modules) {\n\t\t\tmodule.unseal();\n\t\t}\n\t}\n\n\t/**\n\t * @param {Callback} callback signals when the seal method is finishes\n\t * @returns {void}\n\t */\n\tseal(callback) {\n\t\tthis.hooks.seal.call();\n\n\t\twhile (\n\t\t\tthis.hooks.optimizeDependenciesBasic.call(this.modules) ||\n\t\t\tthis.hooks.optimizeDependencies.call(this.modules) ||\n\t\t\tthis.hooks.optimizeDependenciesAdvanced.call(this.modules)\n\t\t) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeDependencies.call(this.modules);\n\n\t\tthis.hooks.beforeChunks.call();\n\t\tfor (const preparedEntrypoint of this._preparedEntrypoints) {\n\t\t\tconst module = preparedEntrypoint.module;\n\t\t\tconst name = preparedEntrypoint.name;\n\t\t\tconst chunk = this.addChunk(name);\n\t\t\tconst entrypoint = new Entrypoint(name);\n\t\t\tentrypoint.setRuntimeChunk(chunk);\n\t\t\tentrypoint.addOrigin(null, name, preparedEntrypoint.request);\n\t\t\tthis.namedChunkGroups.set(name, entrypoint);\n\t\t\tthis.entrypoints.set(name, entrypoint);\n\t\t\tthis.chunkGroups.push(entrypoint);\n\n\t\t\tGraphHelpers.connectChunkGroupAndChunk(entrypoint, chunk);\n\t\t\tGraphHelpers.connectChunkAndModule(chunk, module);\n\n\t\t\tchunk.entryModule = module;\n\t\t\tchunk.name = name;\n\n\t\t\tthis.assignDepth(module);\n\t\t}\n\t\tbuildChunkGraph(\n\t\t\tthis,\n\t\t\t/** @type {Entrypoint[]} */ (this.chunkGroups.slice())\n\t\t);\n\t\tthis.sortModules(this.modules);\n\t\tthis.hooks.afterChunks.call(this.chunks);\n\n\t\tthis.hooks.optimize.call();\n\n\t\twhile (\n\t\t\tthis.hooks.optimizeModulesBasic.call(this.modules) ||\n\t\t\tthis.hooks.optimizeModules.call(this.modules) ||\n\t\t\tthis.hooks.optimizeModulesAdvanced.call(this.modules)\n\t\t) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeModules.call(this.modules);\n\n\t\twhile (\n\t\t\tthis.hooks.optimizeChunksBasic.call(this.chunks, this.chunkGroups) ||\n\t\t\tthis.hooks.optimizeChunks.call(this.chunks, this.chunkGroups) ||\n\t\t\tthis.hooks.optimizeChunksAdvanced.call(this.chunks, this.chunkGroups)\n\t\t) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeChunks.call(this.chunks, this.chunkGroups);\n\n\t\tthis.hooks.optimizeTree.callAsync(this.chunks, this.modules, err => {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tthis.hooks.afterOptimizeTree.call(this.chunks, this.modules);\n\n\t\t\twhile (\n\t\t\t\tthis.hooks.optimizeChunkModulesBasic.call(this.chunks, this.modules) ||\n\t\t\t\tthis.hooks.optimizeChunkModules.call(this.chunks, this.modules) ||\n\t\t\t\tthis.hooks.optimizeChunkModulesAdvanced.call(this.chunks, this.modules)\n\t\t\t) {\n\t\t\t\t/* empty */\n\t\t\t}\n\t\t\tthis.hooks.afterOptimizeChunkModules.call(this.chunks, this.modules);\n\n\t\t\tconst shouldRecord = this.hooks.shouldRecord.call() !== false;\n\n\t\t\tthis.hooks.reviveModules.call(this.modules, this.records);\n\t\t\tthis.hooks.optimizeModuleOrder.call(this.modules);\n\t\t\tthis.hooks.advancedOptimizeModuleOrder.call(this.modules);\n\t\t\tthis.hooks.beforeModuleIds.call(this.modules);\n\t\t\tthis.hooks.moduleIds.call(this.modules);\n\t\t\tthis.applyModuleIds();\n\t\t\tthis.hooks.optimizeModuleIds.call(this.modules);\n\t\t\tthis.hooks.afterOptimizeModuleIds.call(this.modules);\n\n\t\t\tthis.sortItemsWithModuleIds();\n\n\t\t\tthis.hooks.reviveChunks.call(this.chunks, this.records);\n\t\t\tthis.hooks.optimizeChunkOrder.call(this.chunks);\n\t\t\tthis.hooks.beforeChunkIds.call(this.chunks);\n\t\t\tthis.applyChunkIds();\n\t\t\tthis.hooks.optimizeChunkIds.call(this.chunks);\n\t\t\tthis.hooks.afterOptimizeChunkIds.call(this.chunks);\n\n\t\t\tthis.sortItemsWithChunkIds();\n\n\t\t\tif (shouldRecord) {\n\t\t\t\tthis.hooks.recordModules.call(this.modules, this.records);\n\t\t\t\tthis.hooks.recordChunks.call(this.chunks, this.records);\n\t\t\t}\n\n\t\t\tthis.hooks.beforeHash.call();\n\t\t\tthis.createHash();\n\t\t\tthis.hooks.afterHash.call();\n\n\t\t\tif (shouldRecord) {\n\t\t\t\tthis.hooks.recordHash.call(this.records);\n\t\t\t}\n\n\t\t\tthis.hooks.beforeModuleAssets.call();\n\t\t\tthis.createModuleAssets();\n\t\t\tif (this.hooks.shouldGenerateChunkAssets.call() !== false) {\n\t\t\t\tthis.hooks.beforeChunkAssets.call();\n\t\t\t\tthis.createChunkAssets();\n\t\t\t}\n\t\t\tthis.hooks.additionalChunkAssets.call(this.chunks);\n\t\t\tthis.summarizeDependencies();\n\t\t\tif (shouldRecord) {\n\t\t\t\tthis.hooks.record.call(this, this.records);\n\t\t\t}\n\n\t\t\tthis.hooks.additionalAssets.callAsync(err => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tthis.hooks.optimizeChunkAssets.callAsync(this.chunks, err => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t\tthis.hooks.afterOptimizeChunkAssets.call(this.chunks);\n\t\t\t\t\tthis.hooks.optimizeAssets.callAsync(this.assets, err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.hooks.afterOptimizeAssets.call(this.assets);\n\t\t\t\t\t\tif (this.hooks.needAdditionalSeal.call()) {\n\t\t\t\t\t\t\tthis.unseal();\n\t\t\t\t\t\t\treturn this.seal(callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this.hooks.afterSeal.callAsync(callback);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {Module[]} modules the modules array on compilation to perform the sort for\n\t * @returns {void}\n\t */\n\tsortModules(modules) {\n\t\t// TODO webpack 5: this should only be enabled when `moduleIds: \"natural\"`\n\t\t// TODO move it into a plugin (NaturalModuleIdsPlugin) and use this in WebpackOptionsApply\n\t\t// TODO remove this method\n\t\tmodules.sort(byIndexOrIdentifier);\n\t}\n\n\t/**\n\t * @param {Module} module moulde to report from\n\t * @param {DependenciesBlock[]} blocks blocks to report from\n\t * @returns {void}\n\t */\n\treportDependencyErrorsAndWarnings(module, blocks) {\n\t\tfor (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n\t\t\tconst block = blocks[indexBlock];\n\t\t\tconst dependencies = block.dependencies;\n\n\t\t\tfor (let indexDep = 0; indexDep < dependencies.length; indexDep++) {\n\t\t\t\tconst d = dependencies[indexDep];\n\n\t\t\t\tconst warnings = d.getWarnings();\n\t\t\t\tif (warnings) {\n\t\t\t\t\tfor (let indexWar = 0; indexWar < warnings.length; indexWar++) {\n\t\t\t\t\t\tconst w = warnings[indexWar];\n\n\t\t\t\t\t\tconst warning = new ModuleDependencyWarning(module, w, d.loc);\n\t\t\t\t\t\tthis.warnings.push(warning);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst errors = d.getErrors();\n\t\t\t\tif (errors) {\n\t\t\t\t\tfor (let indexErr = 0; indexErr < errors.length; indexErr++) {\n\t\t\t\t\t\tconst e = errors[indexErr];\n\n\t\t\t\t\t\tconst error = new ModuleDependencyError(module, e, d.loc);\n\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reportDependencyErrorsAndWarnings(module, block.blocks);\n\t\t}\n\t}\n\n\t/**\n\t * @param {TODO} groupOptions options for the chunk group\n\t * @param {Module} module the module the references the chunk group\n\t * @param {DependencyLocation} loc the location from with the chunk group is referenced (inside of module)\n\t * @param {string} request the request from which the the chunk group is referenced\n\t * @returns {ChunkGroup} the new or existing chunk group\n\t */\n\taddChunkInGroup(groupOptions, module, loc, request) {\n\t\tif (typeof groupOptions === \"string\") {\n\t\t\tgroupOptions = { name: groupOptions };\n\t\t}\n\t\tconst name = groupOptions.name;\n\t\tif (name) {\n\t\t\tconst chunkGroup = this.namedChunkGroups.get(name);\n\t\t\tif (chunkGroup !== undefined) {\n\t\t\t\tchunkGroup.addOptions(groupOptions);\n\t\t\t\tif (module) {\n\t\t\t\t\tchunkGroup.addOrigin(module, loc, request);\n\t\t\t\t}\n\t\t\t\treturn chunkGroup;\n\t\t\t}\n\t\t}\n\t\tconst chunkGroup = new ChunkGroup(groupOptions);\n\t\tif (module) chunkGroup.addOrigin(module, loc, request);\n\t\tconst chunk = this.addChunk(name);\n\n\t\tGraphHelpers.connectChunkGroupAndChunk(chunkGroup, chunk);\n\n\t\tthis.chunkGroups.push(chunkGroup);\n\t\tif (name) {\n\t\t\tthis.namedChunkGroups.set(name, chunkGroup);\n\t\t}\n\t\treturn chunkGroup;\n\t}\n\n\t/**\n\t * This method first looks to see if a name is provided for a new chunk,\n\t * and first looks to see if any named chunks already exist and reuse that chunk instead.\n\t *\n\t * @param {string=} name optional chunk name to be provided\n\t * @returns {Chunk} create a chunk (invoked during seal event)\n\t */\n\taddChunk(name) {\n\t\tif (name) {\n\t\t\tconst chunk = this.namedChunks.get(name);\n\t\t\tif (chunk !== undefined) {\n\t\t\t\treturn chunk;\n\t\t\t}\n\t\t}\n\t\tconst chunk = new Chunk(name);\n\t\tthis.chunks.push(chunk);\n\t\tif (name) {\n\t\t\tthis.namedChunks.set(name, chunk);\n\t\t}\n\t\treturn chunk;\n\t}\n\n\t/**\n\t * @param {Module} module module to assign depth\n\t * @returns {void}\n\t */\n\tassignDepth(module) {\n\t\tconst queue = new Set([module]);\n\t\tlet depth;\n\n\t\tmodule.depth = 0;\n\n\t\t/**\n\t\t * @param {Module} module module for processeing\n\t\t * @returns {void}\n\t\t */\n\t\tconst enqueueJob = module => {\n\t\t\tconst d = module.depth;\n\t\t\tif (typeof d === \"number\" && d <= depth) return;\n\t\t\tqueue.add(module);\n\t\t\tmodule.depth = depth;\n\t\t};\n\n\t\t/**\n\t\t * @param {Dependency} dependency dependency to assign depth to\n\t\t * @returns {void}\n\t\t */\n\t\tconst assignDepthToDependency = dependency => {\n\t\t\tif (dependency.module) {\n\t\t\t\tenqueueJob(dependency.module);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @param {DependenciesBlock} block block to assign depth to\n\t\t * @returns {void}\n\t\t */\n\t\tconst assignDepthToDependencyBlock = block => {\n\t\t\tif (block.variables) {\n\t\t\t\titerationBlockVariable(block.variables, assignDepthToDependency);\n\t\t\t}\n\n\t\t\tif (block.dependencies) {\n\t\t\t\titerationOfArrayCallback(block.dependencies, assignDepthToDependency);\n\t\t\t}\n\n\t\t\tif (block.blocks) {\n\t\t\t\titerationOfArrayCallback(block.blocks, assignDepthToDependencyBlock);\n\t\t\t}\n\t\t};\n\n\t\tfor (module of queue) {\n\t\t\tqueue.delete(module);\n\t\t\tdepth = module.depth;\n\n\t\t\tdepth++;\n\t\t\tassignDepthToDependencyBlock(module);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module the module containing the dependency\n\t * @param {Dependency} dependency the dependency\n\t * @returns {DependencyReference} a reference for the dependency\n\t */\n\tgetDependencyReference(module, dependency) {\n\t\t// TODO remove dep.getReference existence check in webpack 5\n\t\tif (typeof dependency.getReference !== \"function\") return null;\n\t\tconst ref = dependency.getReference();\n\t\tif (!ref) return null;\n\t\treturn this.hooks.dependencyReference.call(ref, dependency, module);\n\t}\n\n\t/**\n\t *\n\t * @param {Module} module module relationship for removal\n\t * @param {DependenciesBlockLike} block //TODO: good description\n\t * @returns {void}\n\t */\n\tremoveReasonsOfDependencyBlock(module, block) {\n\t\tconst iteratorDependency = d => {\n\t\t\tif (!d.module) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (d.module.removeReason(module, d)) {\n\t\t\t\tfor (const chunk of d.module.chunksIterable) {\n\t\t\t\t\tthis.patchChunksAfterReasonRemoval(d.module, chunk);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (block.blocks) {\n\t\t\titerationOfArrayCallback(block.blocks, block =>\n\t\t\t\tthis.removeReasonsOfDependencyBlock(module, block)\n\t\t\t);\n\t\t}\n\n\t\tif (block.dependencies) {\n\t\t\titerationOfArrayCallback(block.dependencies, iteratorDependency);\n\t\t}\n\n\t\tif (block.variables) {\n\t\t\titerationBlockVariable(block.variables, iteratorDependency);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module module to patch tie\n\t * @param {Chunk} chunk chunk to patch tie\n\t * @returns {void}\n\t */\n\tpatchChunksAfterReasonRemoval(module, chunk) {\n\t\tif (!module.hasReasons()) {\n\t\t\tthis.removeReasonsOfDependencyBlock(module, module);\n\t\t}\n\t\tif (!module.hasReasonForChunk(chunk)) {\n\t\t\tif (module.removeChunk(chunk)) {\n\t\t\t\tthis.removeChunkFromDependencies(module, chunk);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {DependenciesBlock} block block tie for Chunk\n\t * @param {Chunk} chunk chunk to remove from dep\n\t * @returns {void}\n\t */\n\tremoveChunkFromDependencies(block, chunk) {\n\t\tconst iteratorDependency = d => {\n\t\t\tif (!d.module) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.patchChunksAfterReasonRemoval(d.module, chunk);\n\t\t};\n\n\t\tconst blocks = block.blocks;\n\t\tfor (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n\t\t\tconst asyncBlock = blocks[indexBlock];\n\t\t\t// Grab all chunks from the first Block's AsyncDepBlock\n\t\t\tconst chunks = asyncBlock.chunkGroup.chunks;\n\t\t\t// For each chunk in chunkGroup\n\t\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\t\tconst iteratedChunk = chunks[indexChunk];\n\t\t\t\tasyncBlock.chunkGroup.removeChunk(iteratedChunk);\n\t\t\t\tasyncBlock.chunkGroup.removeParent(iteratedChunk);\n\t\t\t\t// Recurse\n\t\t\t\tthis.removeChunkFromDependencies(block, iteratedChunk);\n\t\t\t}\n\t\t}\n\n\t\tif (block.dependencies) {\n\t\t\titerationOfArrayCallback(block.dependencies, iteratorDependency);\n\t\t}\n\n\t\tif (block.variables) {\n\t\t\titerationBlockVariable(block.variables, iteratorDependency);\n\t\t}\n\t}\n\n\tapplyModuleIds() {\n\t\tconst unusedIds = [];\n\t\tlet nextFreeModuleId = 0;\n\t\tconst usedIds = new Set();\n\t\tif (this.usedModuleIds) {\n\t\t\tfor (const id of this.usedModuleIds) {\n\t\t\t\tusedIds.add(id);\n\t\t\t}\n\t\t}\n\n\t\tconst modules1 = this.modules;\n\t\tfor (let indexModule1 = 0; indexModule1 < modules1.length; indexModule1++) {\n\t\t\tconst module1 = modules1[indexModule1];\n\t\t\tif (module1.id !== null) {\n\t\t\t\tusedIds.add(module1.id);\n\t\t\t}\n\t\t}\n\n\t\tif (usedIds.size > 0) {\n\t\t\tlet usedIdMax = -1;\n\t\t\tfor (const usedIdKey of usedIds) {\n\t\t\t\tif (typeof usedIdKey !== \"number\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tusedIdMax = Math.max(usedIdMax, usedIdKey);\n\t\t\t}\n\n\t\t\tlet lengthFreeModules = (nextFreeModuleId = usedIdMax + 1);\n\n\t\t\twhile (lengthFreeModules--) {\n\t\t\t\tif (!usedIds.has(lengthFreeModules)) {\n\t\t\t\t\tunusedIds.push(lengthFreeModules);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst modules2 = this.modules;\n\t\tfor (let indexModule2 = 0; indexModule2 < modules2.length; indexModule2++) {\n\t\t\tconst module2 = modules2[indexModule2];\n\t\t\tif (module2.id === null) {\n\t\t\t\tif (unusedIds.length > 0) {\n\t\t\t\t\tmodule2.id = unusedIds.pop();\n\t\t\t\t} else {\n\t\t\t\t\tmodule2.id = nextFreeModuleId++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tapplyChunkIds() {\n\t\t/** @type {Set<number>} */\n\t\tconst usedIds = new Set();\n\n\t\t// Get used ids from usedChunkIds property (i. e. from records)\n\t\tif (this.usedChunkIds) {\n\t\t\tfor (const id of this.usedChunkIds) {\n\t\t\t\tif (typeof id !== \"number\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tusedIds.add(id);\n\t\t\t}\n\t\t}\n\n\t\t// Get used ids from existing chunks\n\t\tconst chunks = this.chunks;\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tconst chunk = chunks[indexChunk];\n\t\t\tconst usedIdValue = chunk.id;\n\n\t\t\tif (typeof usedIdValue !== \"number\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tusedIds.add(usedIdValue);\n\t\t}\n\n\t\t// Calculate maximum assigned chunk id\n\t\tlet nextFreeChunkId = -1;\n\t\tfor (const id of usedIds) {\n\t\t\tnextFreeChunkId = Math.max(nextFreeChunkId, id);\n\t\t}\n\t\tnextFreeChunkId++;\n\n\t\t// Determine free chunk ids from 0 to maximum\n\t\t/** @type {number[]} */\n\t\tconst unusedIds = [];\n\t\tif (nextFreeChunkId > 0) {\n\t\t\tlet index = nextFreeChunkId;\n\t\t\twhile (index--) {\n\t\t\t\tif (!usedIds.has(index)) {\n\t\t\t\t\tunusedIds.push(index);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Assign ids to chunk which has no id\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tconst chunk = chunks[indexChunk];\n\t\t\tif (chunk.id === null) {\n\t\t\t\tif (unusedIds.length > 0) {\n\t\t\t\t\tchunk.id = unusedIds.pop();\n\t\t\t\t} else {\n\t\t\t\t\tchunk.id = nextFreeChunkId++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!chunk.ids) {\n\t\t\t\tchunk.ids = [chunk.id];\n\t\t\t}\n\t\t}\n\t}\n\n\tsortItemsWithModuleIds() {\n\t\tthis.modules.sort(byIdOrIdentifier);\n\n\t\tconst modules = this.modules;\n\t\tfor (let indexModule = 0; indexModule < modules.length; indexModule++) {\n\t\t\tmodules[indexModule].sortItems(false);\n\t\t}\n\n\t\tconst chunks = this.chunks;\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tchunks[indexChunk].sortItems();\n\t\t}\n\n\t\tchunks.sort((a, b) => a.compareTo(b));\n\t}\n\n\tsortItemsWithChunkIds() {\n\t\tfor (const chunkGroup of this.chunkGroups) {\n\t\t\tchunkGroup.sortItems();\n\t\t}\n\n\t\tthis.chunks.sort(byId);\n\n\t\tfor (\n\t\t\tlet indexModule = 0;\n\t\t\tindexModule < this.modules.length;\n\t\t\tindexModule++\n\t\t) {\n\t\t\tthis.modules[indexModule].sortItems(true);\n\t\t}\n\n\t\tconst chunks = this.chunks;\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tchunks[indexChunk].sortItems();\n\t\t}\n\n\t\t/**\n\t\t * Used to sort errors and warnings in compilation. this.warnings, and\n\t\t * this.errors contribute to the compilation hash and therefore should be\n\t\t * updated whenever other references (having a chunk id) are sorted. This preserves the hash\n\t\t * integrity\n\t\t *\n\t\t * @param {WebpackError} a first WebpackError instance (including subclasses)\n\t\t * @param {WebpackError} b second WebpackError instance (including subclasses)\n\t\t * @returns {-1|0|1} sort order index\n\t\t */\n\t\tconst byMessage = (a, b) => {\n\t\t\tconst ma = `${a.message}`;\n\t\t\tconst mb = `${b.message}`;\n\t\t\tif (ma < mb) return -1;\n\t\t\tif (mb < ma) return 1;\n\t\t\treturn 0;\n\t\t};\n\n\t\tthis.errors.sort(byMessage);\n\t\tthis.warnings.sort(byMessage);\n\t\tthis.children.sort(byNameOrHash);\n\t}\n\n\tsummarizeDependencies() {\n\t\tthis.fileDependencies = new SortableSet(this.compilationDependencies);\n\t\tthis.contextDependencies = new SortableSet();\n\t\tthis.missingDependencies = new SortableSet();\n\n\t\tfor (\n\t\t\tlet indexChildren = 0;\n\t\t\tindexChildren < this.children.length;\n\t\t\tindexChildren++\n\t\t) {\n\t\t\tconst child = this.children[indexChildren];\n\n\t\t\taddAllToSet(this.fileDependencies, child.fileDependencies);\n\t\t\taddAllToSet(this.contextDependencies, child.contextDependencies);\n\t\t\taddAllToSet(this.missingDependencies, child.missingDependencies);\n\t\t}\n\n\t\tfor (\n\t\t\tlet indexModule = 0;\n\t\t\tindexModule < this.modules.length;\n\t\t\tindexModule++\n\t\t) {\n\t\t\tconst module = this.modules[indexModule];\n\n\t\t\tif (module.buildInfo.fileDependencies) {\n\t\t\t\taddAllToSet(this.fileDependencies, module.buildInfo.fileDependencies);\n\t\t\t}\n\t\t\tif (module.buildInfo.contextDependencies) {\n\t\t\t\taddAllToSet(\n\t\t\t\t\tthis.contextDependencies,\n\t\t\t\t\tmodule.buildInfo.contextDependencies\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tfor (const error of this.errors) {\n\t\t\tif (\n\t\t\t\ttypeof error.missing === \"object\" &&\n\t\t\t\terror.missing &&\n\t\t\t\terror.missing[Symbol.iterator]\n\t\t\t) {\n\t\t\t\taddAllToSet(this.missingDependencies, error.missing);\n\t\t\t}\n\t\t}\n\t\tthis.fileDependencies.sort();\n\t\tthis.contextDependencies.sort();\n\t\tthis.missingDependencies.sort();\n\t}\n\n\tcreateHash() {\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst hashFunction = outputOptions.hashFunction;\n\t\tconst hashDigest = outputOptions.hashDigest;\n\t\tconst hashDigestLength = outputOptions.hashDigestLength;\n\t\tconst hash = createHash(hashFunction);\n\t\tif (outputOptions.hashSalt) {\n\t\t\thash.update(outputOptions.hashSalt);\n\t\t}\n\t\tthis.mainTemplate.updateHash(hash);\n\t\tthis.chunkTemplate.updateHash(hash);\n\t\tfor (const key of Object.keys(this.moduleTemplates).sort()) {\n\t\t\tthis.moduleTemplates[key].updateHash(hash);\n\t\t}\n\t\tfor (const child of this.children) {\n\t\t\thash.update(child.hash);\n\t\t}\n\t\tfor (const warning of this.warnings) {\n\t\t\thash.update(`${warning.message}`);\n\t\t}\n\t\tfor (const error of this.errors) {\n\t\t\thash.update(`${error.message}`);\n\t\t}\n\t\tconst modules = this.modules;\n\t\tfor (let i = 0; i < modules.length; i++) {\n\t\t\tconst module = modules[i];\n\t\t\tconst moduleHash = createHash(hashFunction);\n\t\t\tmodule.updateHash(moduleHash);\n\t\t\tmodule.hash = /** @type {string} */ (moduleHash.digest(hashDigest));\n\t\t\tmodule.renderedHash = module.hash.substr(0, hashDigestLength);\n\t\t}\n\t\t// clone needed as sort below is inplace mutation\n\t\tconst chunks = this.chunks.slice();\n\t\t/**\n\t\t * sort here will bring all \"falsy\" values to the beginning\n\t\t * this is needed as the \"hasRuntime()\" chunks are dependent on the\n\t\t * hashes of the non-runtime chunks.\n\t\t */\n\t\tchunks.sort((a, b) => {\n\t\t\tconst aEntry = a.hasRuntime();\n\t\t\tconst bEntry = b.hasRuntime();\n\t\t\tif (aEntry && !bEntry) return 1;\n\t\t\tif (!aEntry && bEntry) return -1;\n\t\t\treturn byId(a, b);\n\t\t});\n\t\tfor (let i = 0; i < chunks.length; i++) {\n\t\t\tconst chunk = chunks[i];\n\t\t\tconst chunkHash = createHash(hashFunction);\n\t\t\ttry {\n\t\t\t\tif (outputOptions.hashSalt) {\n\t\t\t\t\tchunkHash.update(outputOptions.hashSalt);\n\t\t\t\t}\n\t\t\t\tchunk.updateHash(chunkHash);\n\t\t\t\tconst template = chunk.hasRuntime()\n\t\t\t\t\t? this.mainTemplate\n\t\t\t\t\t: this.chunkTemplate;\n\t\t\t\ttemplate.updateHashForChunk(\n\t\t\t\t\tchunkHash,\n\t\t\t\t\tchunk,\n\t\t\t\t\tthis.moduleTemplates.javascript,\n\t\t\t\t\tthis.dependencyTemplates\n\t\t\t\t);\n\t\t\t\tthis.hooks.chunkHash.call(chunk, chunkHash);\n\t\t\t\tchunk.hash = /** @type {string} */ (chunkHash.digest(hashDigest));\n\t\t\t\thash.update(chunk.hash);\n\t\t\t\tchunk.renderedHash = chunk.hash.substr(0, hashDigestLength);\n\t\t\t\tthis.hooks.contentHash.call(chunk);\n\t\t\t} catch (err) {\n\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, \"\", err));\n\t\t\t}\n\t\t}\n\t\tthis.fullHash = /** @type {string} */ (hash.digest(hashDigest));\n\t\tthis.hash = this.fullHash.substr(0, hashDigestLength);\n\t}\n\n\t/**\n\t * @param {string} update extra information\n\t * @returns {void}\n\t */\n\tmodifyHash(update) {\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst hashFunction = outputOptions.hashFunction;\n\t\tconst hashDigest = outputOptions.hashDigest;\n\t\tconst hashDigestLength = outputOptions.hashDigestLength;\n\t\tconst hash = createHash(hashFunction);\n\t\thash.update(this.fullHash);\n\t\thash.update(update);\n\t\tthis.fullHash = /** @type {string} */ (hash.digest(hashDigest));\n\t\tthis.hash = this.fullHash.substr(0, hashDigestLength);\n\t}\n\n\tcreateModuleAssets() {\n\t\tfor (let i = 0; i < this.modules.length; i++) {\n\t\t\tconst module = this.modules[i];\n\t\t\tif (module.buildInfo.assets) {\n\t\t\t\tfor (const assetName of Object.keys(module.buildInfo.assets)) {\n\t\t\t\t\tconst fileName = this.getPath(assetName);\n\t\t\t\t\tthis.assets[fileName] = module.buildInfo.assets[assetName];\n\t\t\t\t\tthis.hooks.moduleAsset.call(module, fileName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateChunkAssets() {\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst cachedSourceMap = new Map();\n\t\t/** @type {Map<string, {hash: string, source: Source, chunk: Chunk}>} */\n\t\tconst alreadyWrittenFiles = new Map();\n\t\tfor (let i = 0; i < this.chunks.length; i++) {\n\t\t\tconst chunk = this.chunks[i];\n\t\t\tchunk.files = [];\n\t\t\tlet source;\n\t\t\tlet file;\n\t\t\tlet filenameTemplate;\n\t\t\ttry {\n\t\t\t\tconst template = chunk.hasRuntime()\n\t\t\t\t\t? this.mainTemplate\n\t\t\t\t\t: this.chunkTemplate;\n\t\t\t\tconst manifest = template.getRenderManifest({\n\t\t\t\t\tchunk,\n\t\t\t\t\thash: this.hash,\n\t\t\t\t\tfullHash: this.fullHash,\n\t\t\t\t\toutputOptions,\n\t\t\t\t\tmoduleTemplates: this.moduleTemplates,\n\t\t\t\t\tdependencyTemplates: this.dependencyTemplates\n\t\t\t\t}); // [{ render(), filenameTemplate, pathOptions, identifier, hash }]\n\t\t\t\tfor (const fileManifest of manifest) {\n\t\t\t\t\tconst cacheName = fileManifest.identifier;\n\t\t\t\t\tconst usedHash = fileManifest.hash;\n\t\t\t\t\tfilenameTemplate = fileManifest.filenameTemplate;\n\t\t\t\t\tfile = this.getPath(filenameTemplate, fileManifest.pathOptions);\n\n\t\t\t\t\t// check if the same filename was already written by another chunk\n\t\t\t\t\tconst alreadyWritten = alreadyWrittenFiles.get(file);\n\t\t\t\t\tif (alreadyWritten !== undefined) {\n\t\t\t\t\t\tif (alreadyWritten.hash === usedHash) {\n\t\t\t\t\t\t\tif (this.cache) {\n\t\t\t\t\t\t\t\tthis.cache[cacheName] = {\n\t\t\t\t\t\t\t\t\thash: usedHash,\n\t\t\t\t\t\t\t\t\tsource: alreadyWritten.source\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunk.files.push(file);\n\t\t\t\t\t\t\tthis.hooks.chunkAsset.call(chunk, file);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Conflict: Multiple chunks emit assets to the same filename ${file}` +\n\t\t\t\t\t\t\t\t\t` (chunks ${alreadyWritten.chunk.id} and ${chunk.id})`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.cache &&\n\t\t\t\t\t\tthis.cache[cacheName] &&\n\t\t\t\t\t\tthis.cache[cacheName].hash === usedHash\n\t\t\t\t\t) {\n\t\t\t\t\t\tsource = this.cache[cacheName].source;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsource = fileManifest.render();\n\t\t\t\t\t\t// Ensure that source is a cached source to avoid additional cost because of repeated access\n\t\t\t\t\t\tif (!(source instanceof CachedSource)) {\n\t\t\t\t\t\t\tconst cacheEntry = cachedSourceMap.get(source);\n\t\t\t\t\t\t\tif (cacheEntry) {\n\t\t\t\t\t\t\t\tsource = cacheEntry;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst cachedSource = new CachedSource(source);\n\t\t\t\t\t\t\t\tcachedSourceMap.set(source, cachedSource);\n\t\t\t\t\t\t\t\tsource = cachedSource;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.cache) {\n\t\t\t\t\t\t\tthis.cache[cacheName] = {\n\t\t\t\t\t\t\t\thash: usedHash,\n\t\t\t\t\t\t\t\tsource\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.assets[file] && this.assets[file] !== source) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Conflict: Multiple assets emit to the same filename ${file}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis.assets[file] = source;\n\t\t\t\t\tchunk.files.push(file);\n\t\t\t\t\tthis.hooks.chunkAsset.call(chunk, file);\n\t\t\t\t\talreadyWrittenFiles.set(file, {\n\t\t\t\t\t\thash: usedHash,\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\tchunk\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis.errors.push(\n\t\t\t\t\tnew ChunkRenderError(chunk, file || filenameTemplate, err)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} filename used to get asset path with hash\n\t * @param {TODO=} data // TODO: figure out this param type\n\t * @returns {string} interpolated path\n\t */\n\tgetPath(filename, data) {\n\t\tdata = data || {};\n\t\tdata.hash = data.hash || this.hash;\n\t\treturn this.mainTemplate.getAssetPath(filename, data);\n\t}\n\n\t/**\n\t * This function allows you to run another instance of webpack inside of webpack however as\n\t * a child with different settings and configurations (if desired) applied. It copies all hooks, plugins\n\t * from parent (or top level compiler) and creates a child Compilation\n\t *\n\t * @param {string} name name of the child compiler\n\t * @param {TODO} outputOptions // Need to convert config schema to types for this\n\t * @param {Plugin[]} plugins webpack plugins that will be applied\n\t * @returns {Compiler} creates a child Compiler instance\n\t */\n\tcreateChildCompiler(name, outputOptions, plugins) {\n\t\tconst idx = this.childrenCounters[name] || 0;\n\t\tthis.childrenCounters[name] = idx + 1;\n\t\treturn this.compiler.createChildCompiler(\n\t\t\tthis,\n\t\t\tname,\n\t\t\tidx,\n\t\t\toutputOptions,\n\t\t\tplugins\n\t\t);\n\t}\n\n\tcheckConstraints() {\n\t\t/** @type {Set<number|string>} */\n\t\tconst usedIds = new Set();\n\n\t\tconst modules = this.modules;\n\t\tfor (let indexModule = 0; indexModule < modules.length; indexModule++) {\n\t\t\tconst moduleId = modules[indexModule].id;\n\t\t\tif (moduleId === null) continue;\n\t\t\tif (usedIds.has(moduleId)) {\n\t\t\t\tthrow new Error(`checkConstraints: duplicate module id ${moduleId}`);\n\t\t\t}\n\t\t\tusedIds.add(moduleId);\n\t\t}\n\n\t\tconst chunks = this.chunks;\n\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\tconst chunk = chunks[indexChunk];\n\t\t\tif (chunks.indexOf(chunk) !== indexChunk) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`checkConstraints: duplicate chunk in compilation ${chunk.debugId}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfor (const chunkGroup of this.chunkGroups) {\n\t\t\tchunkGroup.checkConstraints();\n\t\t}\n\t}\n}\n\n// TODO remove in webpack 5\nCompilation.prototype.applyPlugins = util.deprecate(\n\t/**\n\t * @deprecated\n\t * @param {string} name Name\n\t * @param {any[]} args Other arguments\n\t * @returns {void}\n\t * @this {Compilation}\n\t */\n\tfunction(name, ...args) {\n\t\tthis.hooks[\n\t\t\tname.replace(/[- ]([a-z])/g, match => match[1].toUpperCase())\n\t\t].call(...args);\n\t},\n\t\"Compilation.applyPlugins is deprecated. Use new API on `.hooks` instead\"\n);\n\n// TODO remove in webpack 5\nObject.defineProperty(Compilation.prototype, \"moduleTemplate\", {\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {Compilation}\n\t\t * @returns {TODO} module template\n\t\t */\n\t\tfunction() {\n\t\t\treturn this.moduleTemplates.javascript;\n\t\t},\n\t\t\"Compilation.moduleTemplate: Use Compilation.moduleTemplates.javascript instead\"\n\t),\n\tset: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @param {ModuleTemplate} value Template value\n\t\t * @this {Compilation}\n\t\t * @returns {void}\n\t\t */\n\t\tfunction(value) {\n\t\t\tthis.moduleTemplates.javascript = value;\n\t\t},\n\t\t\"Compilation.moduleTemplate: Use Compilation.moduleTemplates.javascript instead.\"\n\t)\n});\n\nmodule.exports = Compilation;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst parseJson = require(\"json-parse-better-errors\");\nconst asyncLib = require(\"neo-async\");\nconst path = require(\"path\");\nconst { Source } = require(\"webpack-sources\");\nconst util = require(\"util\");\nconst {\n\tTapable,\n\tSyncHook,\n\tSyncBailHook,\n\tAsyncParallelHook,\n\tAsyncSeriesHook\n} = require(\"tapable\");\n\nconst Compilation = require(\"./Compilation\");\nconst Stats = require(\"./Stats\");\nconst Watching = require(\"./Watching\");\nconst NormalModuleFactory = require(\"./NormalModuleFactory\");\nconst ContextModuleFactory = require(\"./ContextModuleFactory\");\nconst ResolverFactory = require(\"./ResolverFactory\");\n\nconst RequestShortener = require(\"./RequestShortener\");\nconst { makePathsRelative } = require(\"./util/identifier\");\nconst ConcurrentCompilationError = require(\"./ConcurrentCompilationError\");\nconst { Logger } = require(\"./logging/Logger\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Entry} Entry */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptions} WebpackOptions */\n\n/**\n * @typedef {Object} CompilationParams\n * @property {NormalModuleFactory} normalModuleFactory\n * @property {ContextModuleFactory} contextModuleFactory\n * @property {Set<string>} compilationDependencies\n */\n\nclass Compiler extends Tapable {\n\tconstructor(context) {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncBailHook<Compilation>} */\n\t\t\tshouldEmit: new SyncBailHook([\"compilation\"]),\n\t\t\t/** @type {AsyncSeriesHook<Stats>} */\n\t\t\tdone: new AsyncSeriesHook([\"stats\"]),\n\t\t\t/** @type {AsyncSeriesHook<>} */\n\t\t\tadditionalPass: new AsyncSeriesHook([]),\n\t\t\t/** @type {AsyncSeriesHook<Compiler>} */\n\t\t\tbeforeRun: new AsyncSeriesHook([\"compiler\"]),\n\t\t\t/** @type {AsyncSeriesHook<Compiler>} */\n\t\t\trun: new AsyncSeriesHook([\"compiler\"]),\n\t\t\t/** @type {AsyncSeriesHook<Compilation>} */\n\t\t\temit: new AsyncSeriesHook([\"compilation\"]),\n\t\t\t/** @type {AsyncSeriesHook<Compilation>} */\n\t\t\tafterEmit: new AsyncSeriesHook([\"compilation\"]),\n\n\t\t\t/** @type {SyncHook<Compilation, CompilationParams>} */\n\t\t\tthisCompilation: new SyncHook([\"compilation\", \"params\"]),\n\t\t\t/** @type {SyncHook<Compilation, CompilationParams>} */\n\t\t\tcompilation: new SyncHook([\"compilation\", \"params\"]),\n\t\t\t/** @type {SyncHook<NormalModuleFactory>} */\n\t\t\tnormalModuleFactory: new SyncHook([\"normalModuleFactory\"]),\n\t\t\t/** @type {SyncHook<ContextModuleFactory>}  */\n\t\t\tcontextModuleFactory: new SyncHook([\"contextModulefactory\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<CompilationParams>} */\n\t\t\tbeforeCompile: new AsyncSeriesHook([\"params\"]),\n\t\t\t/** @type {SyncHook<CompilationParams>} */\n\t\t\tcompile: new SyncHook([\"params\"]),\n\t\t\t/** @type {AsyncParallelHook<Compilation>} */\n\t\t\tmake: new AsyncParallelHook([\"compilation\"]),\n\t\t\t/** @type {AsyncSeriesHook<Compilation>} */\n\t\t\tafterCompile: new AsyncSeriesHook([\"compilation\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<Compiler>} */\n\t\t\twatchRun: new AsyncSeriesHook([\"compiler\"]),\n\t\t\t/** @type {SyncHook<Error>} */\n\t\t\tfailed: new SyncHook([\"error\"]),\n\t\t\t/** @type {SyncHook<string, string>} */\n\t\t\tinvalid: new SyncHook([\"filename\", \"changeTime\"]),\n\t\t\t/** @type {SyncHook} */\n\t\t\twatchClose: new SyncHook([]),\n\n\t\t\t/** @type {SyncBailHook<string, string, any[]>} */\n\t\t\tinfrastructurelog: new SyncBailHook([\"origin\", \"type\", \"args\"]),\n\n\t\t\t// TODO the following hooks are weirdly located here\n\t\t\t// TODO move them for webpack 5\n\t\t\t/** @type {SyncHook} */\n\t\t\tenvironment: new SyncHook([]),\n\t\t\t/** @type {SyncHook} */\n\t\t\tafterEnvironment: new SyncHook([]),\n\t\t\t/** @type {SyncHook<Compiler>} */\n\t\t\tafterPlugins: new SyncHook([\"compiler\"]),\n\t\t\t/** @type {SyncHook<Compiler>} */\n\t\t\tafterResolvers: new SyncHook([\"compiler\"]),\n\t\t\t/** @type {SyncBailHook<string, Entry>} */\n\t\t\tentryOption: new SyncBailHook([\"context\", \"entry\"])\n\t\t};\n\n\t\tthis._pluginCompat.tap(\"Compiler\", options => {\n\t\t\tswitch (options.name) {\n\t\t\t\tcase \"additional-pass\":\n\t\t\t\tcase \"before-run\":\n\t\t\t\tcase \"run\":\n\t\t\t\tcase \"emit\":\n\t\t\t\tcase \"after-emit\":\n\t\t\t\tcase \"before-compile\":\n\t\t\t\tcase \"make\":\n\t\t\t\tcase \"after-compile\":\n\t\t\t\tcase \"watch-run\":\n\t\t\t\t\toptions.async = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t/** @type {string=} */\n\t\tthis.name = undefined;\n\t\t/** @type {Compilation=} */\n\t\tthis.parentCompilation = undefined;\n\t\t/** @type {string} */\n\t\tthis.outputPath = \"\";\n\n\t\tthis.outputFileSystem = null;\n\t\tthis.inputFileSystem = null;\n\n\t\t/** @type {string|null} */\n\t\tthis.recordsInputPath = null;\n\t\t/** @type {string|null} */\n\t\tthis.recordsOutputPath = null;\n\t\tthis.records = {};\n\t\tthis.removedFiles = new Set();\n\t\t/** @type {Map<string, number>} */\n\t\tthis.fileTimestamps = new Map();\n\t\t/** @type {Map<string, number>} */\n\t\tthis.contextTimestamps = new Map();\n\t\t/** @type {ResolverFactory} */\n\t\tthis.resolverFactory = new ResolverFactory();\n\n\t\tthis.infrastructureLogger = undefined;\n\n\t\t// TODO remove in webpack 5\n\t\tthis.resolvers = {\n\t\t\tnormal: {\n\t\t\t\tplugins: util.deprecate((hook, fn) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver normal\", resolver => {\n\t\t\t\t\t\tresolver.plugin(hook, fn);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.normal is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver normal\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n\t\t\t\tapply: util.deprecate((...args) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver normal\", resolver => {\n\t\t\t\t\t\tresolver.apply(...args);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.normal is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver normal\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n\t\t\t},\n\t\t\tloader: {\n\t\t\t\tplugins: util.deprecate((hook, fn) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver loader\", resolver => {\n\t\t\t\t\t\tresolver.plugin(hook, fn);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.loader is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver loader\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n\t\t\t\tapply: util.deprecate((...args) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver loader\", resolver => {\n\t\t\t\t\t\tresolver.apply(...args);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.loader is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver loader\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n\t\t\t},\n\t\t\tcontext: {\n\t\t\t\tplugins: util.deprecate((hook, fn) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver context\", resolver => {\n\t\t\t\t\t\tresolver.plugin(hook, fn);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.context is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver context\", resolver => {\\n  resolver.plugin(/* … */);\\n}); instead.'),\n\t\t\t\tapply: util.deprecate((...args) => {\n\t\t\t\t\tthis.resolverFactory.plugin(\"resolver context\", resolver => {\n\t\t\t\t\t\tresolver.apply(...args);\n\t\t\t\t\t});\n\t\t\t\t}, \"webpack: Using compiler.resolvers.context is deprecated.\\n\" + 'Use compiler.resolverFactory.plugin(\"resolver context\", resolver => {\\n  resolver.apply(/* … */);\\n}); instead.')\n\t\t\t}\n\t\t};\n\n\t\t/** @type {WebpackOptions} */\n\t\tthis.options = /** @type {WebpackOptions} */ ({});\n\n\t\tthis.context = context;\n\n\t\tthis.requestShortener = new RequestShortener(context);\n\n\t\t/** @type {boolean} */\n\t\tthis.running = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.watchMode = false;\n\n\t\t/** @private @type {WeakMap<Source, { sizeOnlySource: SizeOnlySource, writtenTo: Map<string, number> }>} */\n\t\tthis._assetEmittingSourceCache = new WeakMap();\n\t\t/** @private @type {Map<string, number>} */\n\t\tthis._assetEmittingWrittenFiles = new Map();\n\t}\n\n\t/**\n\t * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n\t * @returns {Logger} a logger with that name\n\t */\n\tgetInfrastructureLogger(name) {\n\t\tif (!name) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"Compiler.getInfrastructureLogger(name) called without a name\"\n\t\t\t);\n\t\t}\n\t\treturn new Logger((type, args) => {\n\t\t\tif (typeof name === \"function\") {\n\t\t\t\tname = name();\n\t\t\t\tif (!name) {\n\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\"Compiler.getInfrastructureLogger(name) called with a function not returning a name\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.hooks.infrastructurelog.call(name, type, args) === undefined) {\n\t\t\t\tif (this.infrastructureLogger !== undefined) {\n\t\t\t\t\tthis.infrastructureLogger(name, type, args);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\twatch(watchOptions, handler) {\n\t\tif (this.running) return handler(new ConcurrentCompilationError());\n\n\t\tthis.running = true;\n\t\tthis.watchMode = true;\n\t\tthis.fileTimestamps = new Map();\n\t\tthis.contextTimestamps = new Map();\n\t\tthis.removedFiles = new Set();\n\t\treturn new Watching(this, watchOptions, handler);\n\t}\n\n\trun(callback) {\n\t\tif (this.running) return callback(new ConcurrentCompilationError());\n\n\t\tconst finalCallback = (err, stats) => {\n\t\t\tthis.running = false;\n\n\t\t\tif (err) {\n\t\t\t\tthis.hooks.failed.call(err);\n\t\t\t}\n\n\t\t\tif (callback !== undefined) return callback(err, stats);\n\t\t};\n\n\t\tconst startTime = Date.now();\n\n\t\tthis.running = true;\n\n\t\tconst onCompiled = (err, compilation) => {\n\t\t\tif (err) return finalCallback(err);\n\n\t\t\tif (this.hooks.shouldEmit.call(compilation) === false) {\n\t\t\t\tconst stats = new Stats(compilation);\n\t\t\t\tstats.startTime = startTime;\n\t\t\t\tstats.endTime = Date.now();\n\t\t\t\tthis.hooks.done.callAsync(stats, err => {\n\t\t\t\t\tif (err) return finalCallback(err);\n\t\t\t\t\treturn finalCallback(null, stats);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitAssets(compilation, err => {\n\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\tif (compilation.hooks.needAdditionalPass.call()) {\n\t\t\t\t\tcompilation.needAdditionalPass = true;\n\n\t\t\t\t\tconst stats = new Stats(compilation);\n\t\t\t\t\tstats.startTime = startTime;\n\t\t\t\t\tstats.endTime = Date.now();\n\t\t\t\t\tthis.hooks.done.callAsync(stats, err => {\n\t\t\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\t\t\tthis.hooks.additionalPass.callAsync(err => {\n\t\t\t\t\t\t\tif (err) return finalCallback(err);\n\t\t\t\t\t\t\tthis.compile(onCompiled);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.emitRecords(err => {\n\t\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\t\tconst stats = new Stats(compilation);\n\t\t\t\t\tstats.startTime = startTime;\n\t\t\t\t\tstats.endTime = Date.now();\n\t\t\t\t\tthis.hooks.done.callAsync(stats, err => {\n\t\t\t\t\t\tif (err) return finalCallback(err);\n\t\t\t\t\t\treturn finalCallback(null, stats);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\tthis.hooks.beforeRun.callAsync(this, err => {\n\t\t\tif (err) return finalCallback(err);\n\n\t\t\tthis.hooks.run.callAsync(this, err => {\n\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\tthis.readRecords(err => {\n\t\t\t\t\tif (err) return finalCallback(err);\n\n\t\t\t\t\tthis.compile(onCompiled);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\trunAsChild(callback) {\n\t\tthis.compile((err, compilation) => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tthis.parentCompilation.children.push(compilation);\n\t\t\tfor (const name of Object.keys(compilation.assets)) {\n\t\t\t\tthis.parentCompilation.assets[name] = compilation.assets[name];\n\t\t\t}\n\n\t\t\tconst entries = Array.from(\n\t\t\t\tcompilation.entrypoints.values(),\n\t\t\t\tep => ep.chunks\n\t\t\t).reduce((array, chunks) => {\n\t\t\t\treturn array.concat(chunks);\n\t\t\t}, []);\n\n\t\t\treturn callback(null, entries, compilation);\n\t\t});\n\t}\n\n\tpurgeInputFileSystem() {\n\t\tif (this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\tthis.inputFileSystem.purge();\n\t\t}\n\t}\n\n\temitAssets(compilation, callback) {\n\t\tlet outputPath;\n\t\tconst emitFiles = err => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tasyncLib.forEachLimit(\n\t\t\t\tcompilation.assets,\n\t\t\t\t15,\n\t\t\t\t(source, file, callback) => {\n\t\t\t\t\tlet targetFile = file;\n\t\t\t\t\tconst queryStringIdx = targetFile.indexOf(\"?\");\n\t\t\t\t\tif (queryStringIdx >= 0) {\n\t\t\t\t\t\ttargetFile = targetFile.substr(0, queryStringIdx);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst writeOut = err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tconst targetPath = this.outputFileSystem.join(\n\t\t\t\t\t\t\toutputPath,\n\t\t\t\t\t\t\ttargetFile\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// TODO webpack 5 remove futureEmitAssets option and make it on by default\n\t\t\t\t\t\tif (this.options.output.futureEmitAssets) {\n\t\t\t\t\t\t\t// check if the target file has already been written by this Compiler\n\t\t\t\t\t\t\tconst targetFileGeneration = this._assetEmittingWrittenFiles.get(\n\t\t\t\t\t\t\t\ttargetPath\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// create an cache entry for this Source if not already existing\n\t\t\t\t\t\t\tlet cacheEntry = this._assetEmittingSourceCache.get(source);\n\t\t\t\t\t\t\tif (cacheEntry === undefined) {\n\t\t\t\t\t\t\t\tcacheEntry = {\n\t\t\t\t\t\t\t\t\tsizeOnlySource: undefined,\n\t\t\t\t\t\t\t\t\twrittenTo: new Map()\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._assetEmittingSourceCache.set(source, cacheEntry);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if the target file has already been written\n\t\t\t\t\t\t\tif (targetFileGeneration !== undefined) {\n\t\t\t\t\t\t\t\t// check if the Source has been written to this target file\n\t\t\t\t\t\t\t\tconst writtenGeneration = cacheEntry.writtenTo.get(targetPath);\n\t\t\t\t\t\t\t\tif (writtenGeneration === targetFileGeneration) {\n\t\t\t\t\t\t\t\t\t// if yes, we skip writing the file\n\t\t\t\t\t\t\t\t\t// as it's already there\n\t\t\t\t\t\t\t\t\t// (we assume one doesn't remove files while the Compiler is running)\n\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// get the binary (Buffer) content from the Source\n\t\t\t\t\t\t\t/** @type {Buffer} */\n\t\t\t\t\t\t\tlet content;\n\t\t\t\t\t\t\tif (typeof source.buffer === \"function\") {\n\t\t\t\t\t\t\t\tcontent = source.buffer();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst bufferOrString = source.source();\n\t\t\t\t\t\t\t\tif (Buffer.isBuffer(bufferOrString)) {\n\t\t\t\t\t\t\t\t\tcontent = bufferOrString;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontent = Buffer.from(bufferOrString, \"utf8\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Create a replacement resource which only allows to ask for size\n\t\t\t\t\t\t\t// This allows to GC all memory allocated by the Source\n\t\t\t\t\t\t\t// (expect when the Source is stored in any other cache)\n\t\t\t\t\t\t\tcacheEntry.sizeOnlySource = new SizeOnlySource(content.length);\n\t\t\t\t\t\t\tcompilation.assets[file] = cacheEntry.sizeOnlySource;\n\n\t\t\t\t\t\t\t// Write the file to output file system\n\t\t\t\t\t\t\tthis.outputFileSystem.writeFile(targetPath, content, err => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t// information marker that the asset has been emitted\n\t\t\t\t\t\t\t\tcompilation.emittedAssets.add(file);\n\n\t\t\t\t\t\t\t\t// cache the information that the Source has been written to that location\n\t\t\t\t\t\t\t\tconst newGeneration =\n\t\t\t\t\t\t\t\t\ttargetFileGeneration === undefined\n\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t: targetFileGeneration + 1;\n\t\t\t\t\t\t\t\tcacheEntry.writtenTo.set(targetPath, newGeneration);\n\t\t\t\t\t\t\t\tthis._assetEmittingWrittenFiles.set(targetPath, newGeneration);\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (source.existsAt === targetPath) {\n\t\t\t\t\t\t\t\tsource.emitted = false;\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet content = source.source();\n\n\t\t\t\t\t\t\tif (!Buffer.isBuffer(content)) {\n\t\t\t\t\t\t\t\tcontent = Buffer.from(content, \"utf8\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsource.existsAt = targetPath;\n\t\t\t\t\t\t\tsource.emitted = true;\n\t\t\t\t\t\t\tthis.outputFileSystem.writeFile(targetPath, content, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (targetFile.match(/\\/|\\\\/)) {\n\t\t\t\t\t\tconst dir = path.dirname(targetFile);\n\t\t\t\t\t\tthis.outputFileSystem.mkdirp(\n\t\t\t\t\t\t\tthis.outputFileSystem.join(outputPath, dir),\n\t\t\t\t\t\t\twriteOut\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriteOut();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tthis.hooks.afterEmit.callAsync(compilation, err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tthis.hooks.emit.callAsync(compilation, err => {\n\t\t\tif (err) return callback(err);\n\t\t\toutputPath = compilation.getPath(this.outputPath);\n\t\t\tthis.outputFileSystem.mkdirp(outputPath, emitFiles);\n\t\t});\n\t}\n\n\temitRecords(callback) {\n\t\tif (!this.recordsOutputPath) return callback();\n\t\tconst idx1 = this.recordsOutputPath.lastIndexOf(\"/\");\n\t\tconst idx2 = this.recordsOutputPath.lastIndexOf(\"\\\\\");\n\t\tlet recordsOutputPathDirectory = null;\n\t\tif (idx1 > idx2) {\n\t\t\trecordsOutputPathDirectory = this.recordsOutputPath.substr(0, idx1);\n\t\t} else if (idx1 < idx2) {\n\t\t\trecordsOutputPathDirectory = this.recordsOutputPath.substr(0, idx2);\n\t\t}\n\n\t\tconst writeFile = () => {\n\t\t\tthis.outputFileSystem.writeFile(\n\t\t\t\tthis.recordsOutputPath,\n\t\t\t\tJSON.stringify(this.records, undefined, 2),\n\t\t\t\tcallback\n\t\t\t);\n\t\t};\n\n\t\tif (!recordsOutputPathDirectory) {\n\t\t\treturn writeFile();\n\t\t}\n\t\tthis.outputFileSystem.mkdirp(recordsOutputPathDirectory, err => {\n\t\t\tif (err) return callback(err);\n\t\t\twriteFile();\n\t\t});\n\t}\n\n\treadRecords(callback) {\n\t\tif (!this.recordsInputPath) {\n\t\t\tthis.records = {};\n\t\t\treturn callback();\n\t\t}\n\t\tthis.inputFileSystem.stat(this.recordsInputPath, err => {\n\t\t\t// It doesn't exist\n\t\t\t// We can ignore this.\n\t\t\tif (err) return callback();\n\n\t\t\tthis.inputFileSystem.readFile(this.recordsInputPath, (err, content) => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.records = parseJson(content.toString(\"utf-8\"));\n\t\t\t\t} catch (e) {\n\t\t\t\t\te.message = \"Cannot parse records: \" + e.message;\n\t\t\t\t\treturn callback(e);\n\t\t\t\t}\n\n\t\t\t\treturn callback();\n\t\t\t});\n\t\t});\n\t}\n\n\tcreateChildCompiler(\n\t\tcompilation,\n\t\tcompilerName,\n\t\tcompilerIndex,\n\t\toutputOptions,\n\t\tplugins\n\t) {\n\t\tconst childCompiler = new Compiler(this.context);\n\t\tif (Array.isArray(plugins)) {\n\t\t\tfor (const plugin of plugins) {\n\t\t\t\tplugin.apply(childCompiler);\n\t\t\t}\n\t\t}\n\t\tfor (const name in this.hooks) {\n\t\t\tif (\n\t\t\t\t![\n\t\t\t\t\t\"make\",\n\t\t\t\t\t\"compile\",\n\t\t\t\t\t\"emit\",\n\t\t\t\t\t\"afterEmit\",\n\t\t\t\t\t\"invalid\",\n\t\t\t\t\t\"done\",\n\t\t\t\t\t\"thisCompilation\"\n\t\t\t\t].includes(name)\n\t\t\t) {\n\t\t\t\tif (childCompiler.hooks[name]) {\n\t\t\t\t\tchildCompiler.hooks[name].taps = this.hooks[name].taps.slice();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchildCompiler.name = compilerName;\n\t\tchildCompiler.outputPath = this.outputPath;\n\t\tchildCompiler.inputFileSystem = this.inputFileSystem;\n\t\tchildCompiler.outputFileSystem = null;\n\t\tchildCompiler.resolverFactory = this.resolverFactory;\n\t\tchildCompiler.fileTimestamps = this.fileTimestamps;\n\t\tchildCompiler.contextTimestamps = this.contextTimestamps;\n\n\t\tconst relativeCompilerName = makePathsRelative(this.context, compilerName);\n\t\tif (!this.records[relativeCompilerName]) {\n\t\t\tthis.records[relativeCompilerName] = [];\n\t\t}\n\t\tif (this.records[relativeCompilerName][compilerIndex]) {\n\t\t\tchildCompiler.records = this.records[relativeCompilerName][compilerIndex];\n\t\t} else {\n\t\t\tthis.records[relativeCompilerName].push((childCompiler.records = {}));\n\t\t}\n\n\t\tchildCompiler.options = Object.create(this.options);\n\t\tchildCompiler.options.output = Object.create(childCompiler.options.output);\n\t\tfor (const name in outputOptions) {\n\t\t\tchildCompiler.options.output[name] = outputOptions[name];\n\t\t}\n\t\tchildCompiler.parentCompilation = compilation;\n\n\t\tcompilation.hooks.childCompiler.call(\n\t\t\tchildCompiler,\n\t\t\tcompilerName,\n\t\t\tcompilerIndex\n\t\t);\n\n\t\treturn childCompiler;\n\t}\n\n\tisChild() {\n\t\treturn !!this.parentCompilation;\n\t}\n\n\tcreateCompilation() {\n\t\treturn new Compilation(this);\n\t}\n\n\tnewCompilation(params) {\n\t\tconst compilation = this.createCompilation();\n\t\tcompilation.fileTimestamps = this.fileTimestamps;\n\t\tcompilation.contextTimestamps = this.contextTimestamps;\n\t\tcompilation.name = this.name;\n\t\tcompilation.records = this.records;\n\t\tcompilation.compilationDependencies = params.compilationDependencies;\n\t\tthis.hooks.thisCompilation.call(compilation, params);\n\t\tthis.hooks.compilation.call(compilation, params);\n\t\treturn compilation;\n\t}\n\n\tcreateNormalModuleFactory() {\n\t\tconst normalModuleFactory = new NormalModuleFactory(\n\t\t\tthis.options.context,\n\t\t\tthis.resolverFactory,\n\t\t\tthis.options.module || {}\n\t\t);\n\t\tthis.hooks.normalModuleFactory.call(normalModuleFactory);\n\t\treturn normalModuleFactory;\n\t}\n\n\tcreateContextModuleFactory() {\n\t\tconst contextModuleFactory = new ContextModuleFactory(this.resolverFactory);\n\t\tthis.hooks.contextModuleFactory.call(contextModuleFactory);\n\t\treturn contextModuleFactory;\n\t}\n\n\tnewCompilationParams() {\n\t\tconst params = {\n\t\t\tnormalModuleFactory: this.createNormalModuleFactory(),\n\t\t\tcontextModuleFactory: this.createContextModuleFactory(),\n\t\t\tcompilationDependencies: new Set()\n\t\t};\n\t\treturn params;\n\t}\n\n\tcompile(callback) {\n\t\tconst params = this.newCompilationParams();\n\t\tthis.hooks.beforeCompile.callAsync(params, err => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tthis.hooks.compile.call(params);\n\n\t\t\tconst compilation = this.newCompilation(params);\n\n\t\t\tthis.hooks.make.callAsync(compilation, err => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\tcompilation.finish(err => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tcompilation.seal(err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tthis.hooks.afterCompile.callAsync(compilation, err => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\treturn callback(null, compilation);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = Compiler;\n\nclass SizeOnlySource extends Source {\n\tconstructor(size) {\n\t\tsuper();\n\t\tthis._size = size;\n\t}\n\n\t_error() {\n\t\treturn new Error(\n\t\t\t\"Content and Map of this Source is no longer available (only size() is supported)\"\n\t\t);\n\t}\n\n\tsize() {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * @param {any} options options\n\t * @returns {string} the source\n\t */\n\tsource(options) {\n\t\tthrow this._error();\n\t}\n\n\tnode() {\n\t\tthrow this._error();\n\t}\n\n\tlistMap() {\n\t\tthrow this._error();\n\t}\n\n\tmap() {\n\t\tthrow this._error();\n\t}\n\n\tlistNode() {\n\t\tthrow this._error();\n\t}\n\n\tupdateHash() {\n\t\tthrow this._error();\n\t}\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Maksim Nazarjev @acupofspirt\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\nmodule.exports = class ConcurrentCompilationError extends WebpackError {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.name = \"ConcurrentCompilationError\";\n\t\tthis.message =\n\t\t\t\"You ran Webpack twice. Each instance only supports a single concurrent compilation at a time.\";\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst NullFactory = require(\"./NullFactory\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nconst getQuery = request => {\n\tconst i = request.indexOf(\"?\");\n\treturn i !== -1 ? request.substr(i) : \"\";\n};\n\nconst collectDeclaration = (declarations, pattern) => {\n\tconst stack = [pattern];\n\twhile (stack.length > 0) {\n\t\tconst node = stack.pop();\n\t\tswitch (node.type) {\n\t\t\tcase \"Identifier\":\n\t\t\t\tdeclarations.add(node.name);\n\t\t\t\tbreak;\n\t\t\tcase \"ArrayPattern\":\n\t\t\t\tfor (const element of node.elements) {\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tstack.push(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"AssignmentPattern\":\n\t\t\t\tstack.push(node.left);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectPattern\":\n\t\t\t\tfor (const property of node.properties) {\n\t\t\t\t\tstack.push(property.value);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"RestElement\":\n\t\t\t\tstack.push(node.argument);\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n\nconst getHoistedDeclarations = (branch, includeFunctionDeclarations) => {\n\tconst declarations = new Set();\n\tconst stack = [branch];\n\twhile (stack.length > 0) {\n\t\tconst node = stack.pop();\n\t\t// Some node could be `null` or `undefined`.\n\t\tif (!node) continue;\n\t\tswitch (node.type) {\n\t\t\t// Walk through control statements to look for hoisted declarations.\n\t\t\t// Some branches are skipped since they do not allow declarations.\n\t\t\tcase \"BlockStatement\":\n\t\t\t\tfor (const stmt of node.body) {\n\t\t\t\t\tstack.push(stmt);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"IfStatement\":\n\t\t\t\tstack.push(node.consequent);\n\t\t\t\tstack.push(node.alternate);\n\t\t\t\tbreak;\n\t\t\tcase \"ForStatement\":\n\t\t\t\tstack.push(node.init);\n\t\t\t\tstack.push(node.body);\n\t\t\t\tbreak;\n\t\t\tcase \"ForInStatement\":\n\t\t\tcase \"ForOfStatement\":\n\t\t\t\tstack.push(node.left);\n\t\t\t\tstack.push(node.body);\n\t\t\t\tbreak;\n\t\t\tcase \"DoWhileStatement\":\n\t\t\tcase \"WhileStatement\":\n\t\t\tcase \"LabeledStatement\":\n\t\t\t\tstack.push(node.body);\n\t\t\t\tbreak;\n\t\t\tcase \"SwitchStatement\":\n\t\t\t\tfor (const cs of node.cases) {\n\t\t\t\t\tfor (const consequent of cs.consequent) {\n\t\t\t\t\t\tstack.push(consequent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"TryStatement\":\n\t\t\t\tstack.push(node.block);\n\t\t\t\tif (node.handler) {\n\t\t\t\t\tstack.push(node.handler.body);\n\t\t\t\t}\n\t\t\t\tstack.push(node.finalizer);\n\t\t\t\tbreak;\n\t\t\tcase \"FunctionDeclaration\":\n\t\t\t\tif (includeFunctionDeclarations) {\n\t\t\t\t\tcollectDeclaration(declarations, node.id);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"VariableDeclaration\":\n\t\t\t\tif (node.kind === \"var\") {\n\t\t\t\t\tfor (const decl of node.declarations) {\n\t\t\t\t\t\tcollectDeclaration(declarations, decl.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn Array.from(declarations);\n};\n\nclass ConstPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ConstPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tparser.hooks.statementIf.tap(\"ConstPlugin\", statement => {\n\t\t\t\t\t\tconst param = parser.evaluateExpression(statement.test);\n\t\t\t\t\t\tconst bool = param.asBool();\n\t\t\t\t\t\tif (typeof bool === \"boolean\") {\n\t\t\t\t\t\t\tif (statement.test.type !== \"Literal\") {\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(`${bool}`, param.range);\n\t\t\t\t\t\t\t\tdep.loc = statement.loc;\n\t\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst branchToRemove = bool\n\t\t\t\t\t\t\t\t? statement.alternate\n\t\t\t\t\t\t\t\t: statement.consequent;\n\t\t\t\t\t\t\tif (branchToRemove) {\n\t\t\t\t\t\t\t\t// Before removing the dead branch, the hoisted declarations\n\t\t\t\t\t\t\t\t// must be collected.\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// Given the following code:\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t//     if (true) f() else g()\n\t\t\t\t\t\t\t\t//     if (false) {\n\t\t\t\t\t\t\t\t//       function f() {}\n\t\t\t\t\t\t\t\t//       const g = function g() {}\n\t\t\t\t\t\t\t\t//       if (someTest) {\n\t\t\t\t\t\t\t\t//         let a = 1\n\t\t\t\t\t\t\t\t//         var x, {y, z} = obj\n\t\t\t\t\t\t\t\t//       }\n\t\t\t\t\t\t\t\t//     } else {\n\t\t\t\t\t\t\t\t//       …\n\t\t\t\t\t\t\t\t//     }\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// the generated code is:\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t//     if (true) f() else {}\n\t\t\t\t\t\t\t\t//     if (false) {\n\t\t\t\t\t\t\t\t//       var f, x, y, z;   (in loose mode)\n\t\t\t\t\t\t\t\t//       var x, y, z;      (in strict mode)\n\t\t\t\t\t\t\t\t//     } else {\n\t\t\t\t\t\t\t\t//       …\n\t\t\t\t\t\t\t\t//     }\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// NOTE: When code runs in strict mode, `var` declarations\n\t\t\t\t\t\t\t\t// are hoisted but `function` declarations don't.\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\tlet declarations;\n\t\t\t\t\t\t\t\tif (parser.scope.isStrict) {\n\t\t\t\t\t\t\t\t\t// If the code runs in strict mode, variable declarations\n\t\t\t\t\t\t\t\t\t// using `var` must be hoisted.\n\t\t\t\t\t\t\t\t\tdeclarations = getHoistedDeclarations(branchToRemove, false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Otherwise, collect all hoisted declaration.\n\t\t\t\t\t\t\t\t\tdeclarations = getHoistedDeclarations(branchToRemove, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet replacement;\n\t\t\t\t\t\t\t\tif (declarations.length > 0) {\n\t\t\t\t\t\t\t\t\treplacement = `{ var ${declarations.join(\", \")}; }`;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treplacement = \"{}\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\treplacement,\n\t\t\t\t\t\t\t\t\tbranchToRemove.range\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = branchToRemove.loc;\n\t\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn bool;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.expressionConditionalOperator.tap(\n\t\t\t\t\t\t\"ConstPlugin\",\n\t\t\t\t\t\texpression => {\n\t\t\t\t\t\t\tconst param = parser.evaluateExpression(expression.test);\n\t\t\t\t\t\t\tconst bool = param.asBool();\n\t\t\t\t\t\t\tif (typeof bool === \"boolean\") {\n\t\t\t\t\t\t\t\tif (expression.test.type !== \"Literal\") {\n\t\t\t\t\t\t\t\t\tconst dep = new ConstDependency(` ${bool}`, param.range);\n\t\t\t\t\t\t\t\t\tdep.loc = expression.loc;\n\t\t\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Expressions do not hoist.\n\t\t\t\t\t\t\t\t// It is safe to remove the dead branch.\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// Given the following code:\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t//   false ? someExpression() : otherExpression();\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// the generated code is:\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t//   false ? undefined : otherExpression();\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\tconst branchToRemove = bool\n\t\t\t\t\t\t\t\t\t? expression.alternate\n\t\t\t\t\t\t\t\t\t: expression.consequent;\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\t\"undefined\",\n\t\t\t\t\t\t\t\t\tbranchToRemove.range\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = branchToRemove.loc;\n\t\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\t\treturn bool;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expressionLogicalOperator.tap(\n\t\t\t\t\t\t\"ConstPlugin\",\n\t\t\t\t\t\texpression => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\texpression.operator === \"&&\" ||\n\t\t\t\t\t\t\t\texpression.operator === \"||\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst param = parser.evaluateExpression(expression.left);\n\t\t\t\t\t\t\t\tconst bool = param.asBool();\n\t\t\t\t\t\t\t\tif (typeof bool === \"boolean\") {\n\t\t\t\t\t\t\t\t\t// Expressions do not hoist.\n\t\t\t\t\t\t\t\t\t// It is safe to remove the dead branch.\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// ------------------------------------------\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// Given the following code:\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t//   falsyExpression() && someExpression();\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// the generated code is:\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t//   falsyExpression() && false;\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// ------------------------------------------\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// Given the following code:\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t//   truthyExpression() && someExpression();\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// the generated code is:\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t//   true && someExpression();\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// ------------------------------------------\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// Given the following code:\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t//   truthyExpression() || someExpression();\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// the generated code is:\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t//   truthyExpression() || false;\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// ------------------------------------------\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// Given the following code:\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t//   falsyExpression() || someExpression();\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// the generated code is:\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t//   false && someExpression();\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\tconst keepRight =\n\t\t\t\t\t\t\t\t\t\t(expression.operator === \"&&\" && bool) ||\n\t\t\t\t\t\t\t\t\t\t(expression.operator === \"||\" && !bool);\n\n\t\t\t\t\t\t\t\t\tif (param.isBoolean() || keepRight) {\n\t\t\t\t\t\t\t\t\t\t// for case like\n\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\t//   return'development'===process.env.NODE_ENV&&'foo'\n\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\t// we need a space before the bool to prevent result like\n\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\t//   returnfalse&&'foo'\n\t\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\tconst dep = new ConstDependency(` ${bool}`, param.range);\n\t\t\t\t\t\t\t\t\t\tdep.loc = expression.loc;\n\t\t\t\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tparser.walkExpression(expression.left);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!keepRight) {\n\t\t\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\t\t\t\"false\",\n\t\t\t\t\t\t\t\t\t\t\texpression.right.range\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tdep.loc = expression.loc;\n\t\t\t\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn keepRight;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"__resourceQuery\")\n\t\t\t\t\t\t.tap(\"ConstPlugin\", expr => {\n\t\t\t\t\t\t\tif (!parser.state.module) return;\n\t\t\t\t\t\t\treturn ParserHelpers.evaluateToString(\n\t\t\t\t\t\t\t\tgetQuery(parser.state.module.resource)\n\t\t\t\t\t\t\t)(expr);\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"__resourceQuery\")\n\t\t\t\t\t\t.tap(\"ConstPlugin\", () => {\n\t\t\t\t\t\t\tif (!parser.state.module) return;\n\t\t\t\t\t\t\tparser.state.current.addVariable(\n\t\t\t\t\t\t\t\t\"__resourceQuery\",\n\t\t\t\t\t\t\t\tJSON.stringify(getQuery(parser.state.module.resource))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ConstPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ConstPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ConstPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ConstPlugin;\n","\"use strict\";\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./ContextModuleFactory\")} ContextModuleFactory */\n\nclass ContextExclusionPlugin {\n\t/**\n\t * @param {RegExp} negativeMatcher Matcher regular expression\n\t */\n\tconstructor(negativeMatcher) {\n\t\tthis.negativeMatcher = negativeMatcher;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.contextModuleFactory.tap(\"ContextExclusionPlugin\", cmf => {\n\t\t\tcmf.hooks.contextModuleFiles.tap(\"ContextExclusionPlugin\", files => {\n\t\t\t\treturn files.filter(filePath => !this.negativeMatcher.test(filePath));\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = ContextExclusionPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst util = require(\"util\");\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\nconst AsyncDependenciesBlock = require(\"./AsyncDependenciesBlock\");\nconst Template = require(\"./Template\");\nconst contextify = require(\"./util/identifier\").contextify;\n\n/** @typedef {\"sync\" | \"eager\" | \"weak\" | \"async-weak\" | \"lazy\" | \"lazy-once\"} ContextMode Context mode */\n/** @typedef {import(\"./dependencies/ContextElementDependency\")} ContextElementDependency */\n\n/**\n * @callback ResolveDependenciesCallback\n * @param {Error=} err\n * @param {ContextElementDependency[]} dependencies\n */\n\n/**\n * @callback ResolveDependencies\n * @param {TODO} fs\n * @param {TODO} options\n * @param {ResolveDependenciesCallback} callback\n */\n\nclass ContextModule extends Module {\n\t// type ContextMode = \"sync\" | \"eager\" | \"weak\" | \"async-weak\" | \"lazy\" | \"lazy-once\"\n\t// type ContextOptions = { resource: string, recursive: boolean, regExp: RegExp, addon?: string, mode?: ContextMode, chunkName?: string, include?: RegExp, exclude?: RegExp, groupOptions?: Object }\n\t// resolveDependencies: (fs: FS, options: ContextOptions, (err: Error?, dependencies: Dependency[]) => void) => void\n\t// options: ContextOptions\n\t/**\n\t * @param {ResolveDependencies} resolveDependencies function to get dependencies in this context\n\t * @param {TODO} options options object\n\t */\n\tconstructor(resolveDependencies, options) {\n\t\tlet resource;\n\t\tlet resourceQuery;\n\t\tconst queryIdx = options.resource.indexOf(\"?\");\n\t\tif (queryIdx >= 0) {\n\t\t\tresource = options.resource.substr(0, queryIdx);\n\t\t\tresourceQuery = options.resource.substr(queryIdx);\n\t\t} else {\n\t\t\tresource = options.resource;\n\t\t\tresourceQuery = \"\";\n\t\t}\n\n\t\tsuper(\"javascript/dynamic\", resource);\n\n\t\t// Info from Factory\n\t\tthis.resolveDependencies = resolveDependencies;\n\t\tthis.options = Object.assign({}, options, {\n\t\t\tresource: resource,\n\t\t\tresourceQuery: resourceQuery\n\t\t});\n\t\tif (options.resolveOptions !== undefined) {\n\t\t\tthis.resolveOptions = options.resolveOptions;\n\t\t}\n\n\t\t// Info from Build\n\t\tthis._contextDependencies = new Set([this.context]);\n\n\t\tif (typeof options.mode !== \"string\") {\n\t\t\tthrow new Error(\"options.mode is a required option\");\n\t\t}\n\n\t\tthis._identifier = this._createIdentifier();\n\t}\n\n\tupdateCacheModule(module) {\n\t\tthis.resolveDependencies = module.resolveDependencies;\n\t\tthis.options = module.options;\n\t\tthis.resolveOptions = module.resolveOptions;\n\t}\n\n\tprettyRegExp(regexString) {\n\t\t// remove the \"/\" at the front and the beginning\n\t\t// \"/foo/\" -> \"foo\"\n\t\treturn regexString.substring(1, regexString.length - 1);\n\t}\n\n\t_createIdentifier() {\n\t\tlet identifier = this.context;\n\t\tif (this.options.resourceQuery) {\n\t\t\tidentifier += ` ${this.options.resourceQuery}`;\n\t\t}\n\t\tif (this.options.mode) {\n\t\t\tidentifier += ` ${this.options.mode}`;\n\t\t}\n\t\tif (!this.options.recursive) {\n\t\t\tidentifier += \" nonrecursive\";\n\t\t}\n\t\tif (this.options.addon) {\n\t\t\tidentifier += ` ${this.options.addon}`;\n\t\t}\n\t\tif (this.options.regExp) {\n\t\t\tidentifier += ` ${this.options.regExp}`;\n\t\t}\n\t\tif (this.options.include) {\n\t\t\tidentifier += ` include: ${this.options.include}`;\n\t\t}\n\t\tif (this.options.exclude) {\n\t\t\tidentifier += ` exclude: ${this.options.exclude}`;\n\t\t}\n\t\tif (this.options.groupOptions) {\n\t\t\tidentifier += ` groupOptions: ${JSON.stringify(\n\t\t\t\tthis.options.groupOptions\n\t\t\t)}`;\n\t\t}\n\t\tif (this.options.namespaceObject === \"strict\") {\n\t\t\tidentifier += \" strict namespace object\";\n\t\t} else if (this.options.namespaceObject) {\n\t\t\tidentifier += \" namespace object\";\n\t\t}\n\n\t\treturn identifier;\n\t}\n\n\tidentifier() {\n\t\treturn this._identifier;\n\t}\n\n\treadableIdentifier(requestShortener) {\n\t\tlet identifier = requestShortener.shorten(this.context);\n\t\tif (this.options.resourceQuery) {\n\t\t\tidentifier += ` ${this.options.resourceQuery}`;\n\t\t}\n\t\tif (this.options.mode) {\n\t\t\tidentifier += ` ${this.options.mode}`;\n\t\t}\n\t\tif (!this.options.recursive) {\n\t\t\tidentifier += \" nonrecursive\";\n\t\t}\n\t\tif (this.options.addon) {\n\t\t\tidentifier += ` ${requestShortener.shorten(this.options.addon)}`;\n\t\t}\n\t\tif (this.options.regExp) {\n\t\t\tidentifier += ` ${this.prettyRegExp(this.options.regExp + \"\")}`;\n\t\t}\n\t\tif (this.options.include) {\n\t\t\tidentifier += ` include: ${this.prettyRegExp(this.options.include + \"\")}`;\n\t\t}\n\t\tif (this.options.exclude) {\n\t\t\tidentifier += ` exclude: ${this.prettyRegExp(this.options.exclude + \"\")}`;\n\t\t}\n\t\tif (this.options.groupOptions) {\n\t\t\tconst groupOptions = this.options.groupOptions;\n\t\t\tfor (const key of Object.keys(groupOptions)) {\n\t\t\t\tidentifier += ` ${key}: ${groupOptions[key]}`;\n\t\t\t}\n\t\t}\n\t\tif (this.options.namespaceObject === \"strict\") {\n\t\t\tidentifier += \" strict namespace object\";\n\t\t} else if (this.options.namespaceObject) {\n\t\t\tidentifier += \" namespace object\";\n\t\t}\n\n\t\treturn identifier;\n\t}\n\n\tlibIdent(options) {\n\t\tlet identifier = contextify(options.context, this.context);\n\t\tif (this.options.mode) {\n\t\t\tidentifier += ` ${this.options.mode}`;\n\t\t}\n\t\tif (this.options.recursive) {\n\t\t\tidentifier += \" recursive\";\n\t\t}\n\t\tif (this.options.addon) {\n\t\t\tidentifier += ` ${contextify(options.context, this.options.addon)}`;\n\t\t}\n\t\tif (this.options.regExp) {\n\t\t\tidentifier += ` ${this.prettyRegExp(this.options.regExp + \"\")}`;\n\t\t}\n\t\tif (this.options.include) {\n\t\t\tidentifier += ` include: ${this.prettyRegExp(this.options.include + \"\")}`;\n\t\t}\n\t\tif (this.options.exclude) {\n\t\t\tidentifier += ` exclude: ${this.prettyRegExp(this.options.exclude + \"\")}`;\n\t\t}\n\n\t\treturn identifier;\n\t}\n\n\tneedRebuild(fileTimestamps, contextTimestamps) {\n\t\tconst ts = contextTimestamps.get(this.context);\n\t\tif (!ts) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn ts >= this.buildInfo.builtTime;\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tbuiltTime: Date.now(),\n\t\t\tcontextDependencies: this._contextDependencies\n\t\t};\n\t\tthis.resolveDependencies(fs, this.options, (err, dependencies) => {\n\t\t\tif (err) return callback(err);\n\n\t\t\t// abort if something failed\n\t\t\t// this will create an empty context\n\t\t\tif (!dependencies) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// enhance dependencies with meta info\n\t\t\tfor (const dep of dependencies) {\n\t\t\t\tdep.loc = {\n\t\t\t\t\tname: dep.userRequest\n\t\t\t\t};\n\t\t\t\tdep.request = this.options.addon + dep.request;\n\t\t\t}\n\n\t\t\tif (this.options.mode === \"sync\" || this.options.mode === \"eager\") {\n\t\t\t\t// if we have an sync or eager context\n\t\t\t\t// just add all dependencies and continue\n\t\t\t\tthis.dependencies = dependencies;\n\t\t\t} else if (this.options.mode === \"lazy-once\") {\n\t\t\t\t// for the lazy-once mode create a new async dependency block\n\t\t\t\t// and add that block to this context\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst block = new AsyncDependenciesBlock(\n\t\t\t\t\t\tObject.assign({}, this.options.groupOptions, {\n\t\t\t\t\t\t\tname: this.options.chunkName\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tthis\n\t\t\t\t\t);\n\t\t\t\t\tfor (const dep of dependencies) {\n\t\t\t\t\t\tblock.addDependency(dep);\n\t\t\t\t\t}\n\t\t\t\t\tthis.addBlock(block);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tthis.options.mode === \"weak\" ||\n\t\t\t\tthis.options.mode === \"async-weak\"\n\t\t\t) {\n\t\t\t\t// we mark all dependencies as weak\n\t\t\t\tfor (const dep of dependencies) {\n\t\t\t\t\tdep.weak = true;\n\t\t\t\t}\n\t\t\t\tthis.dependencies = dependencies;\n\t\t\t} else if (this.options.mode === \"lazy\") {\n\t\t\t\t// if we are lazy create a new async dependency block per dependency\n\t\t\t\t// and add all blocks to this context\n\t\t\t\tlet index = 0;\n\t\t\t\tfor (const dep of dependencies) {\n\t\t\t\t\tlet chunkName = this.options.chunkName;\n\t\t\t\t\tif (chunkName) {\n\t\t\t\t\t\tif (!/\\[(index|request)\\]/.test(chunkName)) {\n\t\t\t\t\t\t\tchunkName += \"[index]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchunkName = chunkName.replace(/\\[index\\]/g, index++);\n\t\t\t\t\t\tchunkName = chunkName.replace(\n\t\t\t\t\t\t\t/\\[request\\]/g,\n\t\t\t\t\t\t\tTemplate.toPath(dep.userRequest)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst block = new AsyncDependenciesBlock(\n\t\t\t\t\t\tObject.assign({}, this.options.groupOptions, {\n\t\t\t\t\t\t\tname: chunkName\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdep.module,\n\t\t\t\t\t\tdep.loc,\n\t\t\t\t\t\tdep.userRequest\n\t\t\t\t\t);\n\t\t\t\t\tblock.addDependency(dep);\n\t\t\t\t\tthis.addBlock(block);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcallback(\n\t\t\t\t\tnew Error(`Unsupported mode \"${this.options.mode}\" in context`)\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tgetUserRequestMap(dependencies) {\n\t\t// if we filter first we get a new array\n\t\t// therefor we dont need to create a clone of dependencies explicitly\n\t\t// therefore the order of this is !important!\n\t\treturn dependencies\n\t\t\t.filter(dependency => dependency.module)\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.userRequest === b.userRequest) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn a.userRequest < b.userRequest ? -1 : 1;\n\t\t\t})\n\t\t\t.reduce((map, dep) => {\n\t\t\t\tmap[dep.userRequest] = dep.module.id;\n\t\t\t\treturn map;\n\t\t\t}, Object.create(null));\n\t}\n\n\tgetFakeMap(dependencies) {\n\t\tif (!this.options.namespaceObject) {\n\t\t\treturn 9;\n\t\t}\n\t\t// if we filter first we get a new array\n\t\t// therefor we dont need to create a clone of dependencies explicitly\n\t\t// therefore the order of this is !important!\n\t\tlet hasNonHarmony = false;\n\t\tlet hasNamespace = false;\n\t\tlet hasNamed = false;\n\t\tconst fakeMap = dependencies\n\t\t\t.filter(dependency => dependency.module)\n\t\t\t.sort((a, b) => {\n\t\t\t\treturn b.module.id - a.module.id;\n\t\t\t})\n\t\t\t.reduce((map, dep) => {\n\t\t\t\tconst exportsType =\n\t\t\t\t\tdep.module.buildMeta && dep.module.buildMeta.exportsType;\n\t\t\t\tconst id = dep.module.id;\n\t\t\t\tif (!exportsType) {\n\t\t\t\t\tmap[id] = this.options.namespaceObject === \"strict\" ? 1 : 7;\n\t\t\t\t\thasNonHarmony = true;\n\t\t\t\t} else if (exportsType === \"namespace\") {\n\t\t\t\t\tmap[id] = 9;\n\t\t\t\t\thasNamespace = true;\n\t\t\t\t} else if (exportsType === \"named\") {\n\t\t\t\t\tmap[id] = 3;\n\t\t\t\t\thasNamed = true;\n\t\t\t\t}\n\t\t\t\treturn map;\n\t\t\t}, Object.create(null));\n\t\tif (!hasNamespace && hasNonHarmony && !hasNamed) {\n\t\t\treturn this.options.namespaceObject === \"strict\" ? 1 : 7;\n\t\t}\n\t\tif (hasNamespace && !hasNonHarmony && !hasNamed) {\n\t\t\treturn 9;\n\t\t}\n\t\tif (!hasNamespace && !hasNonHarmony && hasNamed) {\n\t\t\treturn 3;\n\t\t}\n\t\tif (!hasNamespace && !hasNonHarmony && !hasNamed) {\n\t\t\treturn 9;\n\t\t}\n\t\treturn fakeMap;\n\t}\n\n\tgetFakeMapInitStatement(fakeMap) {\n\t\treturn typeof fakeMap === \"object\"\n\t\t\t? `var fakeMap = ${JSON.stringify(fakeMap, null, \"\\t\")};`\n\t\t\t: \"\";\n\t}\n\n\tgetReturn(type) {\n\t\tif (type === 9) {\n\t\t\treturn \"__webpack_require__(id)\";\n\t\t}\n\t\treturn `__webpack_require__.t(id, ${type})`;\n\t}\n\n\tgetReturnModuleObjectSource(fakeMap, fakeMapDataExpression = \"fakeMap[id]\") {\n\t\tif (typeof fakeMap === \"number\") {\n\t\t\treturn `return ${this.getReturn(fakeMap)};`;\n\t\t}\n\t\treturn `return __webpack_require__.t(id, ${fakeMapDataExpression})`;\n\t}\n\n\tgetSyncSource(dependencies, id) {\n\t\tconst map = this.getUserRequestMap(dependencies);\n\t\tconst fakeMap = this.getFakeMap(dependencies);\n\t\tconst returnModuleObject = this.getReturnModuleObjectSource(fakeMap);\n\n\t\treturn `var map = ${JSON.stringify(map, null, \"\\t\")};\n${this.getFakeMapInitStatement(fakeMap)}\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\t${returnModuleObject}\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = ${JSON.stringify(id)};`;\n\t}\n\n\tgetWeakSyncSource(dependencies, id) {\n\t\tconst map = this.getUserRequestMap(dependencies);\n\t\tconst fakeMap = this.getFakeMap(dependencies);\n\t\tconst returnModuleObject = this.getReturnModuleObjectSource(fakeMap);\n\n\t\treturn `var map = ${JSON.stringify(map, null, \"\\t\")};\n${this.getFakeMapInitStatement(fakeMap)}\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tif(!__webpack_require__.m[id]) {\n\t\tvar e = new Error(\"Module '\" + req + \"' ('\" + id + \"') is not available (weak dependency)\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\t${returnModuleObject}\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nwebpackContext.id = ${JSON.stringify(id)};\nmodule.exports = webpackContext;`;\n\t}\n\n\tgetAsyncWeakSource(dependencies, id) {\n\t\tconst map = this.getUserRequestMap(dependencies);\n\t\tconst fakeMap = this.getFakeMap(dependencies);\n\t\tconst returnModuleObject = this.getReturnModuleObjectSource(fakeMap);\n\n\t\treturn `var map = ${JSON.stringify(map, null, \"\\t\")};\n${this.getFakeMapInitStatement(fakeMap)}\n\nfunction webpackAsyncContext(req) {\n\treturn webpackAsyncContextResolve(req).then(function(id) {\n\t\tif(!__webpack_require__.m[id]) {\n\t\t\tvar e = new Error(\"Module '\" + req + \"' ('\" + id + \"') is not available (weak dependency)\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\t\t${returnModuleObject}\n\t});\n}\nfunction webpackAsyncContextResolve(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\t\treturn map[req];\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.resolve = webpackAsyncContextResolve;\nwebpackAsyncContext.id = ${JSON.stringify(id)};\nmodule.exports = webpackAsyncContext;`;\n\t}\n\n\tgetEagerSource(dependencies, id) {\n\t\tconst map = this.getUserRequestMap(dependencies);\n\t\tconst fakeMap = this.getFakeMap(dependencies);\n\t\tconst thenFunction =\n\t\t\tfakeMap !== 9\n\t\t\t\t? `function(id) {\n\t\t${this.getReturnModuleObjectSource(fakeMap)}\n\t}`\n\t\t\t\t: \"__webpack_require__\";\n\t\treturn `var map = ${JSON.stringify(map, null, \"\\t\")};\n${this.getFakeMapInitStatement(fakeMap)}\n\nfunction webpackAsyncContext(req) {\n\treturn webpackAsyncContextResolve(req).then(${thenFunction});\n}\nfunction webpackAsyncContextResolve(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\t\treturn map[req];\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.resolve = webpackAsyncContextResolve;\nwebpackAsyncContext.id = ${JSON.stringify(id)};\nmodule.exports = webpackAsyncContext;`;\n\t}\n\n\tgetLazyOnceSource(block, dependencies, id, runtimeTemplate) {\n\t\tconst promise = runtimeTemplate.blockPromise({\n\t\t\tblock,\n\t\t\tmessage: \"lazy-once context\"\n\t\t});\n\t\tconst map = this.getUserRequestMap(dependencies);\n\t\tconst fakeMap = this.getFakeMap(dependencies);\n\t\tconst thenFunction =\n\t\t\tfakeMap !== 9\n\t\t\t\t? `function(id) {\n\t\t${this.getReturnModuleObjectSource(fakeMap)};\n\t}`\n\t\t\t\t: \"__webpack_require__\";\n\n\t\treturn `var map = ${JSON.stringify(map, null, \"\\t\")};\n${this.getFakeMapInitStatement(fakeMap)}\n\nfunction webpackAsyncContext(req) {\n\treturn webpackAsyncContextResolve(req).then(${thenFunction});\n}\nfunction webpackAsyncContextResolve(req) {\n\treturn ${promise}.then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\t\treturn map[req];\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.resolve = webpackAsyncContextResolve;\nwebpackAsyncContext.id = ${JSON.stringify(id)};\nmodule.exports = webpackAsyncContext;`;\n\t}\n\n\tgetLazySource(blocks, id) {\n\t\tlet hasMultipleOrNoChunks = false;\n\t\tlet hasNoChunk = true;\n\t\tconst fakeMap = this.getFakeMap(blocks.map(b => b.dependencies[0]));\n\t\tconst hasFakeMap = typeof fakeMap === \"object\";\n\t\tconst map = blocks\n\t\t\t.filter(block => block.dependencies[0].module)\n\t\t\t.map(block => {\n\t\t\t\tconst chunks = block.chunkGroup ? block.chunkGroup.chunks : [];\n\t\t\t\tif (chunks.length > 0) {\n\t\t\t\t\thasNoChunk = false;\n\t\t\t\t}\n\t\t\t\tif (chunks.length !== 1) {\n\t\t\t\t\thasMultipleOrNoChunks = true;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdependency: block.dependencies[0],\n\t\t\t\t\tblock: block,\n\t\t\t\t\tuserRequest: block.dependencies[0].userRequest,\n\t\t\t\t\tchunks\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.userRequest === b.userRequest) return 0;\n\t\t\t\treturn a.userRequest < b.userRequest ? -1 : 1;\n\t\t\t})\n\t\t\t.reduce((map, item) => {\n\t\t\t\tconst chunks = item.chunks;\n\n\t\t\t\tif (hasNoChunk && !hasFakeMap) {\n\t\t\t\t\tmap[item.userRequest] = item.dependency.module.id;\n\t\t\t\t} else {\n\t\t\t\t\tconst arrayStart = [item.dependency.module.id];\n\t\t\t\t\tif (typeof fakeMap === \"object\") {\n\t\t\t\t\t\tarrayStart.push(fakeMap[item.dependency.module.id]);\n\t\t\t\t\t}\n\t\t\t\t\tmap[item.userRequest] = arrayStart.concat(\n\t\t\t\t\t\tchunks.map(chunk => chunk.id)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}, Object.create(null));\n\n\t\tconst shortMode = hasNoChunk && !hasFakeMap;\n\t\tconst chunksStartPosition = hasFakeMap ? 2 : 1;\n\t\tconst requestPrefix = hasNoChunk\n\t\t\t? \"Promise.resolve()\"\n\t\t\t: hasMultipleOrNoChunks\n\t\t\t? `Promise.all(ids.slice(${chunksStartPosition}).map(__webpack_require__.e))`\n\t\t\t: `__webpack_require__.e(ids[${chunksStartPosition}])`;\n\t\tconst returnModuleObject = this.getReturnModuleObjectSource(\n\t\t\tfakeMap,\n\t\t\tshortMode ? \"invalid\" : \"ids[1]\"\n\t\t);\n\n\t\tconst webpackAsyncContext =\n\t\t\trequestPrefix === \"Promise.resolve()\"\n\t\t\t\t? `${shortMode ? \"\" : \"\"}\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\t${shortMode ? \"var id = map[req];\" : \"var ids = map[req], id = ids[0];\"}\n\t\t${returnModuleObject}\n\t});\n}`\n\t\t\t\t: `function webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn ${requestPrefix}.then(function() {\n\t\t${returnModuleObject}\n\t});\n}`;\n\n\t\treturn `var map = ${JSON.stringify(map, null, \"\\t\")};\n${webpackAsyncContext}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = ${JSON.stringify(id)};\nmodule.exports = webpackAsyncContext;`;\n\t}\n\n\tgetSourceForEmptyContext(id) {\n\t\treturn `function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = ${JSON.stringify(id)};`;\n\t}\n\n\tgetSourceForEmptyAsyncContext(id) {\n\t\treturn `function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = ${JSON.stringify(id)};`;\n\t}\n\n\tgetSourceString(asyncMode, runtimeTemplate) {\n\t\tif (asyncMode === \"lazy\") {\n\t\t\tif (this.blocks && this.blocks.length > 0) {\n\t\t\t\treturn this.getLazySource(this.blocks, this.id);\n\t\t\t}\n\t\t\treturn this.getSourceForEmptyAsyncContext(this.id);\n\t\t}\n\t\tif (asyncMode === \"eager\") {\n\t\t\tif (this.dependencies && this.dependencies.length > 0) {\n\t\t\t\treturn this.getEagerSource(this.dependencies, this.id);\n\t\t\t}\n\t\t\treturn this.getSourceForEmptyAsyncContext(this.id);\n\t\t}\n\t\tif (asyncMode === \"lazy-once\") {\n\t\t\tconst block = this.blocks[0];\n\t\t\tif (block) {\n\t\t\t\treturn this.getLazyOnceSource(\n\t\t\t\t\tblock,\n\t\t\t\t\tblock.dependencies,\n\t\t\t\t\tthis.id,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn this.getSourceForEmptyAsyncContext(this.id);\n\t\t}\n\t\tif (asyncMode === \"async-weak\") {\n\t\t\tif (this.dependencies && this.dependencies.length > 0) {\n\t\t\t\treturn this.getAsyncWeakSource(this.dependencies, this.id);\n\t\t\t}\n\t\t\treturn this.getSourceForEmptyAsyncContext(this.id);\n\t\t}\n\t\tif (asyncMode === \"weak\") {\n\t\t\tif (this.dependencies && this.dependencies.length > 0) {\n\t\t\t\treturn this.getWeakSyncSource(this.dependencies, this.id);\n\t\t\t}\n\t\t}\n\t\tif (this.dependencies && this.dependencies.length > 0) {\n\t\t\treturn this.getSyncSource(this.dependencies, this.id);\n\t\t}\n\t\treturn this.getSourceForEmptyContext(this.id);\n\t}\n\n\tgetSource(sourceString) {\n\t\tif (this.useSourceMap) {\n\t\t\treturn new OriginalSource(sourceString, this.identifier());\n\t\t}\n\t\treturn new RawSource(sourceString);\n\t}\n\n\tsource(dependencyTemplates, runtimeTemplate) {\n\t\treturn this.getSource(\n\t\t\tthis.getSourceString(this.options.mode, runtimeTemplate)\n\t\t);\n\t}\n\n\tsize() {\n\t\t// base penalty\n\t\tconst initialSize = 160;\n\n\t\t// if we dont have dependencies we stop here.\n\t\treturn this.dependencies.reduce((size, dependency) => {\n\t\t\tconst element = /** @type {ContextElementDependency} */ (dependency);\n\t\t\treturn size + 5 + element.userRequest.length;\n\t\t}, initialSize);\n\t}\n}\n\n// TODO remove in webpack 5\nObject.defineProperty(ContextModule.prototype, \"recursive\", {\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @returns {boolean} is recursive\n\t\t */\n\t\tfunction() {\n\t\t\treturn this.options.recursive;\n\t\t},\n\t\t\"ContextModule.recursive has been moved to ContextModule.options.recursive\"\n\t),\n\tset: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @param {boolean} value is recursive\n\t\t * @returns {void}\n\t\t */\n\t\tfunction(value) {\n\t\t\tthis.options.recursive = value;\n\t\t},\n\t\t\"ContextModule.recursive has been moved to ContextModule.options.recursive\"\n\t)\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(ContextModule.prototype, \"regExp\", {\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @returns {RegExp} regular expression\n\t\t */\n\t\tfunction() {\n\t\t\treturn this.options.regExp;\n\t\t},\n\t\t\"ContextModule.regExp has been moved to ContextModule.options.regExp\"\n\t),\n\tset: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @param {RegExp} value Regular expression\n\t\t * @returns {void}\n\t\t */\n\t\tfunction(value) {\n\t\t\tthis.options.regExp = value;\n\t\t},\n\t\t\"ContextModule.regExp has been moved to ContextModule.options.regExp\"\n\t)\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(ContextModule.prototype, \"addon\", {\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @returns {string} addon\n\t\t */\n\t\tfunction() {\n\t\t\treturn this.options.addon;\n\t\t},\n\t\t\"ContextModule.addon has been moved to ContextModule.options.addon\"\n\t),\n\tset: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @param {string} value addon\n\t\t * @returns {void}\n\t\t */\n\t\tfunction(value) {\n\t\t\tthis.options.addon = value;\n\t\t},\n\t\t\"ContextModule.addon has been moved to ContextModule.options.addon\"\n\t)\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(ContextModule.prototype, \"async\", {\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @returns {boolean} is async\n\t\t */\n\t\tfunction() {\n\t\t\treturn this.options.mode;\n\t\t},\n\t\t\"ContextModule.async has been moved to ContextModule.options.mode\"\n\t),\n\tset: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @param {ContextMode} value Context mode\n\t\t * @returns {void}\n\t\t */\n\t\tfunction(value) {\n\t\t\tthis.options.mode = value;\n\t\t},\n\t\t\"ContextModule.async has been moved to ContextModule.options.mode\"\n\t)\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(ContextModule.prototype, \"chunkName\", {\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @returns {string} chunk name\n\t\t */\n\t\tfunction() {\n\t\t\treturn this.options.chunkName;\n\t\t},\n\t\t\"ContextModule.chunkName has been moved to ContextModule.options.chunkName\"\n\t),\n\tset: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {ContextModule}\n\t\t * @param {string} value chunk name\n\t\t * @returns {void}\n\t\t */\n\t\tfunction(value) {\n\t\t\tthis.options.chunkName = value;\n\t\t},\n\t\t\"ContextModule.chunkName has been moved to ContextModule.options.chunkName\"\n\t)\n});\n\nmodule.exports = ContextModule;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst path = require(\"path\");\n\nconst {\n\tTapable,\n\tAsyncSeriesWaterfallHook,\n\tSyncWaterfallHook\n} = require(\"tapable\");\nconst ContextModule = require(\"./ContextModule\");\nconst ContextElementDependency = require(\"./dependencies/ContextElementDependency\");\n\n/** @typedef {import(\"./Module\")} Module */\n\nconst EMPTY_RESOLVE_OPTIONS = {};\n\nmodule.exports = class ContextModuleFactory extends Tapable {\n\tconstructor(resolverFactory) {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\t/** @type {AsyncSeriesWaterfallHook<TODO>} */\n\t\t\tbeforeResolve: new AsyncSeriesWaterfallHook([\"data\"]),\n\t\t\t/** @type {AsyncSeriesWaterfallHook<TODO>} */\n\t\t\tafterResolve: new AsyncSeriesWaterfallHook([\"data\"]),\n\t\t\t/** @type {SyncWaterfallHook<string[]>} */\n\t\t\tcontextModuleFiles: new SyncWaterfallHook([\"files\"]),\n\t\t\t/** @type {SyncWaterfallHook<TODO[]>} */\n\t\t\talternatives: new AsyncSeriesWaterfallHook([\"modules\"])\n\t\t};\n\t\tthis._pluginCompat.tap(\"ContextModuleFactory\", options => {\n\t\t\tswitch (options.name) {\n\t\t\t\tcase \"before-resolve\":\n\t\t\t\tcase \"after-resolve\":\n\t\t\t\tcase \"alternatives\":\n\t\t\t\t\toptions.async = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\tthis.resolverFactory = resolverFactory;\n\t}\n\n\tcreate(data, callback) {\n\t\tconst context = data.context;\n\t\tconst dependencies = data.dependencies;\n\t\tconst resolveOptions = data.resolveOptions;\n\t\tconst dependency = dependencies[0];\n\t\tthis.hooks.beforeResolve.callAsync(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tcontext: context,\n\t\t\t\t\tdependencies: dependencies,\n\t\t\t\t\tresolveOptions\n\t\t\t\t},\n\t\t\t\tdependency.options\n\t\t\t),\n\t\t\t(err, beforeResolveResult) => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t// Ignored\n\t\t\t\tif (!beforeResolveResult) return callback();\n\n\t\t\t\tconst context = beforeResolveResult.context;\n\t\t\t\tconst request = beforeResolveResult.request;\n\t\t\t\tconst resolveOptions = beforeResolveResult.resolveOptions;\n\n\t\t\t\tlet loaders,\n\t\t\t\t\tresource,\n\t\t\t\t\tloadersPrefix = \"\";\n\t\t\t\tconst idx = request.lastIndexOf(\"!\");\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tlet loadersRequest = request.substr(0, idx + 1);\n\t\t\t\t\tlet i;\n\t\t\t\t\tfor (\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\ti < loadersRequest.length && loadersRequest[i] === \"!\";\n\t\t\t\t\t\ti++\n\t\t\t\t\t) {\n\t\t\t\t\t\tloadersPrefix += \"!\";\n\t\t\t\t\t}\n\t\t\t\t\tloadersRequest = loadersRequest\n\t\t\t\t\t\t.substr(i)\n\t\t\t\t\t\t.replace(/!+$/, \"\")\n\t\t\t\t\t\t.replace(/!!+/g, \"!\");\n\t\t\t\t\tif (loadersRequest === \"\") {\n\t\t\t\t\t\tloaders = [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tloaders = loadersRequest.split(\"!\");\n\t\t\t\t\t}\n\t\t\t\t\tresource = request.substr(idx + 1);\n\t\t\t\t} else {\n\t\t\t\t\tloaders = [];\n\t\t\t\t\tresource = request;\n\t\t\t\t}\n\n\t\t\t\tconst contextResolver = this.resolverFactory.get(\n\t\t\t\t\t\"context\",\n\t\t\t\t\tresolveOptions || EMPTY_RESOLVE_OPTIONS\n\t\t\t\t);\n\t\t\t\tconst loaderResolver = this.resolverFactory.get(\n\t\t\t\t\t\"loader\",\n\t\t\t\t\tEMPTY_RESOLVE_OPTIONS\n\t\t\t\t);\n\n\t\t\t\tasyncLib.parallel(\n\t\t\t\t\t[\n\t\t\t\t\t\tcallback => {\n\t\t\t\t\t\t\tcontextResolver.resolve(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback => {\n\t\t\t\t\t\t\tasyncLib.map(\n\t\t\t\t\t\t\t\tloaders,\n\t\t\t\t\t\t\t\t(loader, callback) => {\n\t\t\t\t\t\t\t\t\tloaderResolver.resolve(\n\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\t\tloader,\n\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tthis.hooks.afterResolve.callAsync(\n\t\t\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\taddon:\n\t\t\t\t\t\t\t\t\t\tloadersPrefix +\n\t\t\t\t\t\t\t\t\t\tresult[1].join(\"!\") +\n\t\t\t\t\t\t\t\t\t\t(result[1].length > 0 ? \"!\" : \"\"),\n\t\t\t\t\t\t\t\t\tresource: result[0],\n\t\t\t\t\t\t\t\t\tresolveDependencies: this.resolveDependencies.bind(this)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbeforeResolveResult\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t// Ignored\n\t\t\t\t\t\t\t\tif (!result) return callback();\n\n\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\tnew ContextModule(result.resolveDependencies, result)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\tresolveDependencies(fs, options, callback) {\n\t\tconst cmf = this;\n\t\tlet resource = options.resource;\n\t\tlet resourceQuery = options.resourceQuery;\n\t\tlet recursive = options.recursive;\n\t\tlet regExp = options.regExp;\n\t\tlet include = options.include;\n\t\tlet exclude = options.exclude;\n\t\tif (!regExp || !resource) return callback(null, []);\n\n\t\tconst addDirectory = (directory, callback) => {\n\t\t\tfs.readdir(directory, (err, files) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tfiles = cmf.hooks.contextModuleFiles.call(files);\n\t\t\t\tif (!files || files.length === 0) return callback(null, []);\n\t\t\t\tasyncLib.map(\n\t\t\t\t\tfiles.filter(p => p.indexOf(\".\") !== 0),\n\t\t\t\t\t(segment, callback) => {\n\t\t\t\t\t\tconst subResource = path.join(directory, segment);\n\n\t\t\t\t\t\tif (!exclude || !subResource.match(exclude)) {\n\t\t\t\t\t\t\tfs.stat(subResource, (err, stat) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tif (err.code === \"ENOENT\") {\n\t\t\t\t\t\t\t\t\t\t// ENOENT is ok here because the file may have been deleted between\n\t\t\t\t\t\t\t\t\t\t// the readdir and stat calls.\n\t\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\t\t\t\t\tif (!recursive) return callback();\n\t\t\t\t\t\t\t\t\taddDirectory.call(this, subResource, callback);\n\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\tstat.isFile() &&\n\t\t\t\t\t\t\t\t\t(!include || subResource.match(include))\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\tcontext: resource,\n\t\t\t\t\t\t\t\t\t\trequest:\n\t\t\t\t\t\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\t\t\t\t\t\tsubResource.substr(resource.length).replace(/\\\\/g, \"/\")\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tthis.hooks.alternatives.callAsync(\n\t\t\t\t\t\t\t\t\t\t[obj],\n\t\t\t\t\t\t\t\t\t\t(err, alternatives) => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\t\talternatives = alternatives\n\t\t\t\t\t\t\t\t\t\t\t\t.filter(obj => regExp.test(obj.request))\n\t\t\t\t\t\t\t\t\t\t\t\t.map(obj => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst dep = new ContextElementDependency(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tobj.request + resourceQuery,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tobj.request\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn dep;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tcallback(null, alternatives);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tif (!result) return callback(null, []);\n\n\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tresult.filter(Boolean).reduce((a, i) => a.concat(i), [])\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\n\t\taddDirectory(resource, callback);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst ContextElementDependency = require(\"./dependencies/ContextElementDependency\");\n\nclass ContextReplacementPlugin {\n\tconstructor(\n\t\tresourceRegExp,\n\t\tnewContentResource,\n\t\tnewContentRecursive,\n\t\tnewContentRegExp\n\t) {\n\t\tthis.resourceRegExp = resourceRegExp;\n\n\t\tif (typeof newContentResource === \"function\") {\n\t\t\tthis.newContentCallback = newContentResource;\n\t\t} else if (\n\t\t\ttypeof newContentResource === \"string\" &&\n\t\t\ttypeof newContentRecursive === \"object\"\n\t\t) {\n\t\t\tthis.newContentResource = newContentResource;\n\t\t\tthis.newContentCreateContextMap = (fs, callback) => {\n\t\t\t\tcallback(null, newContentRecursive);\n\t\t\t};\n\t\t} else if (\n\t\t\ttypeof newContentResource === \"string\" &&\n\t\t\ttypeof newContentRecursive === \"function\"\n\t\t) {\n\t\t\tthis.newContentResource = newContentResource;\n\t\t\tthis.newContentCreateContextMap = newContentRecursive;\n\t\t} else {\n\t\t\tif (typeof newContentResource !== \"string\") {\n\t\t\t\tnewContentRegExp = newContentRecursive;\n\t\t\t\tnewContentRecursive = newContentResource;\n\t\t\t\tnewContentResource = undefined;\n\t\t\t}\n\t\t\tif (typeof newContentRecursive !== \"boolean\") {\n\t\t\t\tnewContentRegExp = newContentRecursive;\n\t\t\t\tnewContentRecursive = undefined;\n\t\t\t}\n\t\t\tthis.newContentResource = newContentResource;\n\t\t\tthis.newContentRecursive = newContentRecursive;\n\t\t\tthis.newContentRegExp = newContentRegExp;\n\t\t}\n\t}\n\n\tapply(compiler) {\n\t\tconst resourceRegExp = this.resourceRegExp;\n\t\tconst newContentCallback = this.newContentCallback;\n\t\tconst newContentResource = this.newContentResource;\n\t\tconst newContentRecursive = this.newContentRecursive;\n\t\tconst newContentRegExp = this.newContentRegExp;\n\t\tconst newContentCreateContextMap = this.newContentCreateContextMap;\n\n\t\tcompiler.hooks.contextModuleFactory.tap(\"ContextReplacementPlugin\", cmf => {\n\t\t\tcmf.hooks.beforeResolve.tap(\"ContextReplacementPlugin\", result => {\n\t\t\t\tif (!result) return;\n\t\t\t\tif (resourceRegExp.test(result.request)) {\n\t\t\t\t\tif (newContentResource !== undefined) {\n\t\t\t\t\t\tresult.request = newContentResource;\n\t\t\t\t\t}\n\t\t\t\t\tif (newContentRecursive !== undefined) {\n\t\t\t\t\t\tresult.recursive = newContentRecursive;\n\t\t\t\t\t}\n\t\t\t\t\tif (newContentRegExp !== undefined) {\n\t\t\t\t\t\tresult.regExp = newContentRegExp;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof newContentCallback === \"function\") {\n\t\t\t\t\t\tnewContentCallback(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const d of result.dependencies) {\n\t\t\t\t\t\t\tif (d.critical) d.critical = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\t\t\tcmf.hooks.afterResolve.tap(\"ContextReplacementPlugin\", result => {\n\t\t\t\tif (!result) return;\n\t\t\t\tif (resourceRegExp.test(result.resource)) {\n\t\t\t\t\tif (newContentResource !== undefined) {\n\t\t\t\t\t\tresult.resource = path.resolve(result.resource, newContentResource);\n\t\t\t\t\t}\n\t\t\t\t\tif (newContentRecursive !== undefined) {\n\t\t\t\t\t\tresult.recursive = newContentRecursive;\n\t\t\t\t\t}\n\t\t\t\t\tif (newContentRegExp !== undefined) {\n\t\t\t\t\t\tresult.regExp = newContentRegExp;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof newContentCreateContextMap === \"function\") {\n\t\t\t\t\t\tresult.resolveDependencies = createResolveDependenciesFromContextMap(\n\t\t\t\t\t\t\tnewContentCreateContextMap\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof newContentCallback === \"function\") {\n\t\t\t\t\t\tconst origResource = result.resource;\n\t\t\t\t\t\tnewContentCallback(result);\n\t\t\t\t\t\tif (result.resource !== origResource) {\n\t\t\t\t\t\t\tresult.resource = path.resolve(origResource, result.resource);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const d of result.dependencies) {\n\t\t\t\t\t\t\tif (d.critical) d.critical = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\t\t});\n\t}\n}\n\nconst createResolveDependenciesFromContextMap = createContextMap => {\n\tconst resolveDependenciesFromContextMap = (fs, options, callback) => {\n\t\tcreateContextMap(fs, (err, map) => {\n\t\t\tif (err) return callback(err);\n\t\t\tconst dependencies = Object.keys(map).map(key => {\n\t\t\t\treturn new ContextElementDependency(\n\t\t\t\t\tmap[key] + options.resourceQuery,\n\t\t\t\t\tkey\n\t\t\t\t);\n\t\t\t});\n\t\t\tcallback(null, dependencies);\n\t\t});\n\t};\n\treturn resolveDependenciesFromContextMap;\n};\n\nmodule.exports = ContextReplacementPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst NullFactory = require(\"./NullFactory\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Parser\")} Parser */\n/** @typedef {null|undefined|RegExp|Function|string|number} CodeValuePrimitive */\n/** @typedef {CodeValuePrimitive|Record<string, CodeValuePrimitive>|RuntimeValue} CodeValue */\n\nclass RuntimeValue {\n\tconstructor(fn, fileDependencies) {\n\t\tthis.fn = fn;\n\t\tthis.fileDependencies = fileDependencies || [];\n\t}\n\n\texec(parser) {\n\t\tif (this.fileDependencies === true) {\n\t\t\tparser.state.module.buildInfo.cacheable = false;\n\t\t} else {\n\t\t\tfor (const fileDependency of this.fileDependencies) {\n\t\t\t\tparser.state.module.buildInfo.fileDependencies.add(fileDependency);\n\t\t\t}\n\t\t}\n\n\t\treturn this.fn({ module: parser.state.module });\n\t}\n}\n\nconst stringifyObj = (obj, parser) => {\n\treturn (\n\t\t\"Object({\" +\n\t\tObject.keys(obj)\n\t\t\t.map(key => {\n\t\t\t\tconst code = obj[key];\n\t\t\t\treturn JSON.stringify(key) + \":\" + toCode(code, parser);\n\t\t\t})\n\t\t\t.join(\",\") +\n\t\t\"})\"\n\t);\n};\n\n/**\n * Convert code to a string that evaluates\n * @param {CodeValue} code Code to evaluate\n * @param {Parser} parser Parser\n * @returns {string} code converted to string that evaluates\n */\nconst toCode = (code, parser) => {\n\tif (code === null) {\n\t\treturn \"null\";\n\t}\n\tif (code === undefined) {\n\t\treturn \"undefined\";\n\t}\n\tif (code instanceof RuntimeValue) {\n\t\treturn toCode(code.exec(parser), parser);\n\t}\n\tif (code instanceof RegExp && code.toString) {\n\t\treturn code.toString();\n\t}\n\tif (typeof code === \"function\" && code.toString) {\n\t\treturn \"(\" + code.toString() + \")\";\n\t}\n\tif (typeof code === \"object\") {\n\t\treturn stringifyObj(code, parser);\n\t}\n\treturn code + \"\";\n};\n\nclass DefinePlugin {\n\t/**\n\t * Create a new define plugin\n\t * @param {Record<string, CodeValue>} definitions A map of global object definitions\n\t */\n\tconstructor(definitions) {\n\t\tthis.definitions = definitions;\n\t}\n\n\tstatic runtimeValue(fn, fileDependencies) {\n\t\treturn new RuntimeValue(fn, fileDependencies);\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler Webpack compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst definitions = this.definitions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DefinePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * Handler\n\t\t\t\t * @param {Parser} parser Parser\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\t/**\n\t\t\t\t\t * Walk definitions\n\t\t\t\t\t * @param {Object} definitions Definitions map\n\t\t\t\t\t * @param {string} prefix Prefix string\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst walkDefinitions = (definitions, prefix) => {\n\t\t\t\t\t\tObject.keys(definitions).forEach(key => {\n\t\t\t\t\t\t\tconst code = definitions[key];\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcode &&\n\t\t\t\t\t\t\t\ttypeof code === \"object\" &&\n\t\t\t\t\t\t\t\t!(code instanceof RuntimeValue) &&\n\t\t\t\t\t\t\t\t!(code instanceof RegExp)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\twalkDefinitions(code, prefix + key + \".\");\n\t\t\t\t\t\t\t\tapplyObjectDefine(prefix + key, code);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tapplyDefineKey(prefix, key);\n\t\t\t\t\t\t\tapplyDefine(prefix + key, code);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Apply define key\n\t\t\t\t\t * @param {string} prefix Prefix\n\t\t\t\t\t * @param {string} key Key\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst applyDefineKey = (prefix, key) => {\n\t\t\t\t\t\tconst splittedKey = key.split(\".\");\n\t\t\t\t\t\tsplittedKey.slice(1).forEach((_, i) => {\n\t\t\t\t\t\t\tconst fullKey = prefix + splittedKey.slice(0, i + 1).join(\".\");\n\t\t\t\t\t\t\tparser.hooks.canRename\n\t\t\t\t\t\t\t\t.for(fullKey)\n\t\t\t\t\t\t\t\t.tap(\"DefinePlugin\", ParserHelpers.approve);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Apply Code\n\t\t\t\t\t * @param {string} key Key\n\t\t\t\t\t * @param {CodeValue} code Code\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst applyDefine = (key, code) => {\n\t\t\t\t\t\tconst isTypeof = /^typeof\\s+/.test(key);\n\t\t\t\t\t\tif (isTypeof) key = key.replace(/^typeof\\s+/, \"\");\n\t\t\t\t\t\tlet recurse = false;\n\t\t\t\t\t\tlet recurseTypeof = false;\n\t\t\t\t\t\tif (!isTypeof) {\n\t\t\t\t\t\t\tparser.hooks.canRename\n\t\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t\t.tap(\"DefinePlugin\", ParserHelpers.approve);\n\t\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t\t.tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * this is needed in case there is a recursion in the DefinePlugin\n\t\t\t\t\t\t\t\t\t * to prevent an endless recursion\n\t\t\t\t\t\t\t\t\t * e.g.: new DefinePlugin({\n\t\t\t\t\t\t\t\t\t * \"a\": \"b\",\n\t\t\t\t\t\t\t\t\t * \"b\": \"a\"\n\t\t\t\t\t\t\t\t\t * });\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\tif (recurse) return;\n\t\t\t\t\t\t\t\t\trecurse = true;\n\t\t\t\t\t\t\t\t\tconst res = parser.evaluate(toCode(code, parser));\n\t\t\t\t\t\t\t\t\trecurse = false;\n\t\t\t\t\t\t\t\t\tres.setRange(expr.range);\n\t\t\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tparser.hooks.expression.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\t\tconst strCode = toCode(code, parser);\n\t\t\t\t\t\t\t\tif (/__webpack_require__/.test(strCode)) {\n\t\t\t\t\t\t\t\t\treturn ParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\tstrCode\n\t\t\t\t\t\t\t\t\t)(expr);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn ParserHelpers.toConstantDependency(parser, strCode)(\n\t\t\t\t\t\t\t\t\t\texpr\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparser.hooks.evaluateTypeof.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * this is needed in case there is a recursion in the DefinePlugin\n\t\t\t\t\t\t\t * to prevent an endless recursion\n\t\t\t\t\t\t\t * e.g.: new DefinePlugin({\n\t\t\t\t\t\t\t * \"typeof a\": \"typeof b\",\n\t\t\t\t\t\t\t * \"typeof b\": \"typeof a\"\n\t\t\t\t\t\t\t * });\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif (recurseTypeof) return;\n\t\t\t\t\t\t\trecurseTypeof = true;\n\t\t\t\t\t\t\tconst typeofCode = isTypeof\n\t\t\t\t\t\t\t\t? toCode(code, parser)\n\t\t\t\t\t\t\t\t: \"typeof (\" + toCode(code, parser) + \")\";\n\t\t\t\t\t\t\tconst res = parser.evaluate(typeofCode);\n\t\t\t\t\t\t\trecurseTypeof = false;\n\t\t\t\t\t\t\tres.setRange(expr.range);\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.typeof.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\tconst typeofCode = isTypeof\n\t\t\t\t\t\t\t\t? toCode(code, parser)\n\t\t\t\t\t\t\t\t: \"typeof (\" + toCode(code, parser) + \")\";\n\t\t\t\t\t\t\tconst res = parser.evaluate(typeofCode);\n\t\t\t\t\t\t\tif (!res.isString()) return;\n\t\t\t\t\t\t\treturn ParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(res.string)\n\t\t\t\t\t\t\t).bind(parser)(expr);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Apply Object\n\t\t\t\t\t * @param {string} key Key\n\t\t\t\t\t * @param {Object} obj Object\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst applyObjectDefine = (key, obj) => {\n\t\t\t\t\t\tparser.hooks.canRename\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefinePlugin\", ParserHelpers.approve);\n\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefinePlugin\", expr =>\n\t\t\t\t\t\t\t\tnew BasicEvaluatedExpression().setTruthy().setRange(expr.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateTypeof.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\treturn ParserHelpers.evaluateToString(\"object\")(expr);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.expression.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\tconst strCode = stringifyObj(obj, parser);\n\n\t\t\t\t\t\t\tif (/__webpack_require__/.test(strCode)) {\n\t\t\t\t\t\t\t\treturn ParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tstrCode\n\t\t\t\t\t\t\t\t)(expr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ParserHelpers.toConstantDependency(parser, strCode)(\n\t\t\t\t\t\t\t\t\texpr\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.typeof.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\treturn ParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"object\")\n\t\t\t\t\t\t\t)(expr);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\twalkDefinitions(definitions, \"\");\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"DefinePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"DefinePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"DefinePlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = DefinePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\n\nconst Module = require(\"./Module\");\nconst WebpackMissingModule = require(\"./dependencies/WebpackMissingModule\");\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\nconst DelegatedExportsDependency = require(\"./dependencies/DelegatedExportsDependency\");\n\n/** @typedef {import(\"./dependencies/ModuleDependency\")} ModuleDependency */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass DelegatedModule extends Module {\n\tconstructor(sourceRequest, data, type, userRequest, originalRequest) {\n\t\tsuper(\"javascript/dynamic\", null);\n\n\t\t// Info from Factory\n\t\tthis.sourceRequest = sourceRequest;\n\t\tthis.request = data.id;\n\t\tthis.type = type;\n\t\tthis.userRequest = userRequest;\n\t\tthis.originalRequest = originalRequest;\n\t\tthis.delegateData = data;\n\n\t\t// Build info\n\t\tthis.delegatedSourceDependency = undefined;\n\t}\n\n\tlibIdent(options) {\n\t\treturn typeof this.originalRequest === \"string\"\n\t\t\t? this.originalRequest\n\t\t\t: this.originalRequest.libIdent(options);\n\t}\n\n\tidentifier() {\n\t\treturn `delegated ${JSON.stringify(this.request)} from ${\n\t\t\tthis.sourceRequest\n\t\t}`;\n\t}\n\n\treadableIdentifier() {\n\t\treturn `delegated ${this.userRequest} from ${this.sourceRequest}`;\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = Object.assign({}, this.delegateData.buildMeta);\n\t\tthis.buildInfo = {};\n\t\tthis.delegatedSourceDependency = new DelegatedSourceDependency(\n\t\t\tthis.sourceRequest\n\t\t);\n\t\tthis.addDependency(this.delegatedSourceDependency);\n\t\tthis.addDependency(\n\t\t\tnew DelegatedExportsDependency(this, this.delegateData.exports || true)\n\t\t);\n\t\tcallback();\n\t}\n\n\tsource(depTemplates, runtime) {\n\t\tconst dep = /** @type {DelegatedSourceDependency} */ (this.dependencies[0]);\n\t\tconst sourceModule = dep.module;\n\t\tlet str;\n\n\t\tif (!sourceModule) {\n\t\t\tstr = WebpackMissingModule.moduleCode(this.sourceRequest);\n\t\t} else {\n\t\t\tstr = `module.exports = (${runtime.moduleExports({\n\t\t\t\tmodule: sourceModule,\n\t\t\t\trequest: dep.request\n\t\t\t})})`;\n\n\t\t\tswitch (this.type) {\n\t\t\t\tcase \"require\":\n\t\t\t\t\tstr += `(${JSON.stringify(this.request)})`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"object\":\n\t\t\t\t\tstr += `[${JSON.stringify(this.request)}]`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tstr += \";\";\n\t\t}\n\n\t\tif (this.useSourceMap) {\n\t\t\treturn new OriginalSource(str, this.identifier());\n\t\t} else {\n\t\t\treturn new RawSource(str);\n\t\t}\n\t}\n\n\tsize() {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(this.type);\n\t\thash.update(JSON.stringify(this.request));\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nmodule.exports = DelegatedModule;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DelegatedModule = require(\"./DelegatedModule\");\n\n// options.source\n// options.type\n// options.context\n// options.scope\n// options.content\nclass DelegatedModuleFactoryPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t\toptions.type = options.type || \"require\";\n\t\toptions.extensions = options.extensions || [\n\t\t\t\"\",\n\t\t\t\".wasm\",\n\t\t\t\".mjs\",\n\t\t\t\".js\",\n\t\t\t\".json\"\n\t\t];\n\t}\n\n\tapply(normalModuleFactory) {\n\t\tconst scope = this.options.scope;\n\t\tif (scope) {\n\t\t\tnormalModuleFactory.hooks.factory.tap(\n\t\t\t\t\"DelegatedModuleFactoryPlugin\",\n\t\t\t\tfactory => (data, callback) => {\n\t\t\t\t\tconst dependency = data.dependencies[0];\n\t\t\t\t\tconst request = dependency.request;\n\t\t\t\t\tif (request && request.indexOf(scope + \"/\") === 0) {\n\t\t\t\t\t\tconst innerRequest = \".\" + request.substr(scope.length);\n\t\t\t\t\t\tlet resolved;\n\t\t\t\t\t\tif (innerRequest in this.options.content) {\n\t\t\t\t\t\t\tresolved = this.options.content[innerRequest];\n\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tnew DelegatedModule(\n\t\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\t\tinnerRequest,\n\t\t\t\t\t\t\t\t\trequest\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < this.options.extensions.length; i++) {\n\t\t\t\t\t\t\tconst extension = this.options.extensions[i];\n\t\t\t\t\t\t\tconst requestPlusExt = innerRequest + extension;\n\t\t\t\t\t\t\tif (requestPlusExt in this.options.content) {\n\t\t\t\t\t\t\t\tresolved = this.options.content[requestPlusExt];\n\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\tnew DelegatedModule(\n\t\t\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\t\t\trequestPlusExt,\n\t\t\t\t\t\t\t\t\t\trequest + extension\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn factory(data, callback);\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\"DelegatedModuleFactoryPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tif (module.libIdent) {\n\t\t\t\t\t\tconst request = module.libIdent(this.options);\n\t\t\t\t\t\tif (request && request in this.options.content) {\n\t\t\t\t\t\t\tconst resolved = this.options.content[request];\n\t\t\t\t\t\t\treturn new DelegatedModule(\n\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn module;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n}\nmodule.exports = DelegatedModuleFactoryPlugin;\n","/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nconst DependenciesBlockVariable = require(\"./DependenciesBlockVariable\");\n\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./DependenciesBlockVariable\")} DependenciesBlockVariable */\n/** @typedef {(d: Dependency) => boolean} DependencyFilterFunction */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass DependenciesBlock {\n\tconstructor() {\n\t\t/** @type {Dependency[]} */\n\t\tthis.dependencies = [];\n\t\t/** @type {AsyncDependenciesBlock[]} */\n\t\tthis.blocks = [];\n\t\t/** @type {DependenciesBlockVariable[]} */\n\t\tthis.variables = [];\n\t}\n\n\t/**\n\t * Adds a DependencyBlock to DependencyBlock relationship.\n\t * This is used for when a Module has a AsyncDependencyBlock tie (for code-splitting)\n\t *\n\t * @param {AsyncDependenciesBlock} block block being added\n\t * @returns {void}\n\t */\n\taddBlock(block) {\n\t\tthis.blocks.push(block);\n\t\tblock.parent = this;\n\t}\n\n\t/**\n\t * @param {string} name name of dependency\n\t * @param {string} expression expression string for variable\n\t * @param {Dependency[]} dependencies dependency instances tied to variable\n\t * @returns {void}\n\t */\n\taddVariable(name, expression, dependencies) {\n\t\tfor (let v of this.variables) {\n\t\t\tif (v.name === name && v.expression === expression) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.variables.push(\n\t\t\tnew DependenciesBlockVariable(name, expression, dependencies)\n\t\t);\n\t}\n\n\t/**\n\t * @param {Dependency} dependency dependency being tied to block.\n\t * This is an \"edge\" pointing to another \"node\" on module graph.\n\t * @returns {void}\n\t */\n\taddDependency(dependency) {\n\t\tthis.dependencies.push(dependency);\n\t}\n\n\t/**\n\t * @param {Dependency} dependency dependency being removed\n\t * @returns {void}\n\t */\n\tremoveDependency(dependency) {\n\t\tconst idx = this.dependencies.indexOf(dependency);\n\t\tif (idx >= 0) {\n\t\t\tthis.dependencies.splice(idx, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\tfor (const dep of this.dependencies) dep.updateHash(hash);\n\t\tfor (const block of this.blocks) block.updateHash(hash);\n\t\tfor (const variable of this.variables) variable.updateHash(hash);\n\t}\n\n\tdisconnect() {\n\t\tfor (const dep of this.dependencies) dep.disconnect();\n\t\tfor (const block of this.blocks) block.disconnect();\n\t\tfor (const variable of this.variables) variable.disconnect();\n\t}\n\n\tunseal() {\n\t\tfor (const block of this.blocks) block.unseal();\n\t}\n\n\t/**\n\t * @param {DependencyFilterFunction} filter filter function for dependencies, gets passed all dependency ties from current instance\n\t * @returns {boolean} returns boolean for filter\n\t */\n\thasDependencies(filter) {\n\t\tif (filter) {\n\t\t\tfor (const dep of this.dependencies) {\n\t\t\t\tif (filter(dep)) return true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.dependencies.length > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (const block of this.blocks) {\n\t\t\tif (block.hasDependencies(filter)) return true;\n\t\t}\n\t\tfor (const variable of this.variables) {\n\t\t\tif (variable.hasDependencies(filter)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tsortItems() {\n\t\tfor (const block of this.blocks) block.sortItems();\n\t}\n}\n\nmodule.exports = DependenciesBlock;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { RawSource, ReplaceSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n/** @typedef {(d: Dependency) => boolean} DependencyFilterFunction */\n/** @typedef {Map<Function, DependencyTemplate>} DependencyTemplates */\n\nclass DependenciesBlockVariable {\n\t/**\n\t * Creates an instance of DependenciesBlockVariable.\n\t * @param {string} name name of DependenciesBlockVariable\n\t * @param {string} expression expression string\n\t * @param {Dependency[]=} dependencies dependencies tied to this varaiable\n\t */\n\tconstructor(name, expression, dependencies) {\n\t\tthis.name = name;\n\t\tthis.expression = expression;\n\t\tthis.dependencies = dependencies || [];\n\t}\n\n\t/**\n\t * @param {Hash} hash hash for instance to update\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(this.name);\n\t\thash.update(this.expression);\n\t\tfor (const d of this.dependencies) {\n\t\t\td.updateHash(hash);\n\t\t}\n\t}\n\n\t/**\n\t * @param {DependencyTemplates} dependencyTemplates Dependency constructors and templates Map.\n\t * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate to generate expression souce\n\t * @returns {ReplaceSource} returns constructed source for expression via templates\n\t */\n\texpressionSource(dependencyTemplates, runtimeTemplate) {\n\t\tconst source = new ReplaceSource(new RawSource(this.expression));\n\t\tfor (const dep of this.dependencies) {\n\t\t\tconst template = dependencyTemplates.get(dep.constructor);\n\t\t\tif (!template) {\n\t\t\t\tthrow new Error(`No template for dependency: ${dep.constructor.name}`);\n\t\t\t}\n\t\t\ttemplate.apply(dep, source, runtimeTemplate, dependencyTemplates);\n\t\t}\n\t\treturn source;\n\t}\n\n\tdisconnect() {\n\t\tfor (const d of this.dependencies) {\n\t\t\td.disconnect();\n\t\t}\n\t}\n\n\thasDependencies(filter) {\n\t\tif (filter) {\n\t\t\treturn this.dependencies.some(filter);\n\t\t}\n\t\treturn this.dependencies.length > 0;\n\t}\n}\n\nmodule.exports = DependenciesBlockVariable;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\nconst compareLocations = require(\"./compareLocations\");\nconst DependencyReference = require(\"./dependencies/DependencyReference\");\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/**\n * @typedef {Object} DependencyTemplate\n * @property {function(Dependency, Source, RuntimeTemplate, Map<Function, DependencyTemplate>): void} apply\n */\n\n/** @typedef {Object} SourcePosition\n *  @property {number} line\n *  @property {number=} column\n */\n\n/** @typedef {Object} RealDependencyLocation\n *  @property {SourcePosition} start\n *  @property {SourcePosition=} end\n *  @property {number=} index\n */\n\n/** @typedef {Object} SynteticDependencyLocation\n *  @property {string} name\n *  @property {number=} index\n */\n\n/** @typedef {SynteticDependencyLocation|RealDependencyLocation} DependencyLocation */\n\nclass Dependency {\n\tconstructor() {\n\t\t/** @type {Module|null} */\n\t\tthis.module = null;\n\t\t// TODO remove in webpack 5\n\t\t/** @type {boolean} */\n\t\tthis.weak = false;\n\t\t/** @type {boolean} */\n\t\tthis.optional = false;\n\t\t/** @type {DependencyLocation} */\n\t\tthis.loc = undefined;\n\t}\n\n\tgetResourceIdentifier() {\n\t\treturn null;\n\t}\n\n\t// Returns the referenced module and export\n\tgetReference() {\n\t\tif (!this.module) return null;\n\t\treturn new DependencyReference(this.module, true, this.weak);\n\t}\n\n\t// Returns the exported names\n\tgetExports() {\n\t\treturn null;\n\t}\n\n\tgetWarnings() {\n\t\treturn null;\n\t}\n\n\tgetErrors() {\n\t\treturn null;\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update((this.module && this.module.id) + \"\");\n\t}\n\n\tdisconnect() {\n\t\tthis.module = null;\n\t}\n}\n\n// TODO remove in webpack 5\nDependency.compare = util.deprecate(\n\t(a, b) => compareLocations(a.loc, b.loc),\n\t\"Dependency.compare is deprecated and will be removed in the next major version\"\n);\n\nmodule.exports = Dependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DllEntryDependency = require(\"./dependencies/DllEntryDependency\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\nconst DllModuleFactory = require(\"./DllModuleFactory\");\n\nclass DllEntryPlugin {\n\tconstructor(context, entries, name) {\n\t\tthis.context = context;\n\t\tthis.entries = entries;\n\t\tthis.name = name;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DllEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst dllModuleFactory = new DllModuleFactory();\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tDllEntryDependency,\n\t\t\t\t\tdllModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tSingleEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.make.tapAsync(\"DllEntryPlugin\", (compilation, callback) => {\n\t\t\tcompilation.addEntry(\n\t\t\t\tthis.context,\n\t\t\t\tnew DllEntryDependency(\n\t\t\t\t\tthis.entries.map((e, idx) => {\n\t\t\t\t\t\tconst dep = new SingleEntryDependency(e);\n\t\t\t\t\t\tdep.loc = {\n\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\tindex: idx\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn dep;\n\t\t\t\t\t}),\n\t\t\t\t\tthis.name\n\t\t\t\t),\n\t\t\t\tthis.name,\n\t\t\t\tcallback\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = DllEntryPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass DllModule extends Module {\n\tconstructor(context, dependencies, name, type) {\n\t\tsuper(\"javascript/dynamic\", context);\n\n\t\t// Info from Factory\n\t\tthis.dependencies = dependencies;\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t}\n\n\tidentifier() {\n\t\treturn `dll ${this.name}`;\n\t}\n\n\treadableIdentifier() {\n\t\treturn `dll ${this.name}`;\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {};\n\t\treturn callback();\n\t}\n\n\tsource() {\n\t\treturn new RawSource(\"module.exports = __webpack_require__;\");\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tsize() {\n\t\treturn 12;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(\"dll module\");\n\t\thash.update(this.name || \"\");\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nmodule.exports = DllModule;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable } = require(\"tapable\");\nconst DllModule = require(\"./DllModule\");\n\nclass DllModuleFactory extends Tapable {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.hooks = {};\n\t}\n\tcreate(data, callback) {\n\t\tconst dependency = data.dependencies[0];\n\t\tcallback(\n\t\t\tnull,\n\t\t\tnew DllModule(\n\t\t\t\tdata.context,\n\t\t\t\tdependency.dependencies,\n\t\t\t\tdependency.name,\n\t\t\t\tdependency.type\n\t\t\t)\n\t\t);\n\t}\n}\n\nmodule.exports = DllModuleFactory;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst DllEntryPlugin = require(\"./DllEntryPlugin\");\nconst LibManifestPlugin = require(\"./LibManifestPlugin\");\nconst FlagInitialModulesAsUsedPlugin = require(\"./FlagInitialModulesAsUsedPlugin\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/DllPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/DllPlugin\").DllPluginOptions} DllPluginOptions */\n\nclass DllPlugin {\n\t/**\n\t * @param {DllPluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidateOptions(schema, options, \"Dll Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.entryOption.tap(\"DllPlugin\", (context, entry) => {\n\t\t\tconst itemToPlugin = (item, name) => {\n\t\t\t\tif (Array.isArray(item)) {\n\t\t\t\t\treturn new DllEntryPlugin(context, item, name);\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"DllPlugin: supply an Array as entry\");\n\t\t\t};\n\t\t\tif (typeof entry === \"object\" && !Array.isArray(entry)) {\n\t\t\t\tObject.keys(entry).forEach(name => {\n\t\t\t\t\titemToPlugin(entry[name], name).apply(compiler);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\titemToPlugin(entry, \"main\").apply(compiler);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tnew LibManifestPlugin(this.options).apply(compiler);\n\t\tif (!this.options.entryOnly) {\n\t\t\tnew FlagInitialModulesAsUsedPlugin(\"DllPlugin\").apply(compiler);\n\t\t}\n\t}\n}\n\nmodule.exports = DllPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst parseJson = require(\"json-parse-better-errors\");\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\nconst DelegatedModuleFactoryPlugin = require(\"./DelegatedModuleFactoryPlugin\");\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\nconst DelegatedExportsDependency = require(\"./dependencies/DelegatedExportsDependency\");\nconst NullFactory = require(\"./NullFactory\");\nconst makePathsRelative = require(\"./util/identifier\").makePathsRelative;\nconst WebpackError = require(\"./WebpackError\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/DllReferencePlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/DllReferencePlugin\").DllReferencePluginOptions} DllReferencePluginOptions */\n/** @typedef {import(\"../declarations/plugins/DllReferencePlugin\").DllReferencePluginOptionsManifest} DllReferencePluginOptionsManifest */\n\nclass DllReferencePlugin {\n\t/**\n\t * @param {DllReferencePluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidateOptions(schema, options, \"Dll Reference Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DllReferencePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tDelegatedSourceDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tDelegatedExportsDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.beforeCompile.tapAsync(\n\t\t\t\"DllReferencePlugin\",\n\t\t\t(params, callback) => {\n\t\t\t\tif (\"manifest\" in this.options) {\n\t\t\t\t\tconst manifest = this.options.manifest;\n\t\t\t\t\tif (typeof manifest === \"string\") {\n\t\t\t\t\t\tparams.compilationDependencies.add(manifest);\n\t\t\t\t\t\tcompiler.inputFileSystem.readFile(manifest, (err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t// Catch errors parsing the manifest so that blank\n\t\t\t\t\t\t\t// or malformed manifest files don't kill the process.\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tparams[\"dll reference \" + manifest] = parseJson(\n\t\t\t\t\t\t\t\t\tresult.toString(\"utf-8\")\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t// Store the error in the params so that it can\n\t\t\t\t\t\t\t\t// be added as a compilation error later on.\n\t\t\t\t\t\t\t\tconst manifestPath = makePathsRelative(\n\t\t\t\t\t\t\t\t\tcompiler.options.context,\n\t\t\t\t\t\t\t\t\tmanifest\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tparams[\n\t\t\t\t\t\t\t\t\t\"dll reference parse error \" + manifest\n\t\t\t\t\t\t\t\t] = new DllManifestError(manifestPath, e.message);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.compile.tap(\"DllReferencePlugin\", params => {\n\t\t\tlet name = this.options.name;\n\t\t\tlet sourceType = this.options.sourceType;\n\t\t\tlet content =\n\t\t\t\t\"content\" in this.options ? this.options.content : undefined;\n\t\t\tif (\"manifest\" in this.options) {\n\t\t\t\tlet manifestParameter = this.options.manifest;\n\t\t\t\tlet manifest;\n\t\t\t\tif (typeof manifestParameter === \"string\") {\n\t\t\t\t\t// If there was an error parsing the manifest\n\t\t\t\t\t// file, exit now because the error will be added\n\t\t\t\t\t// as a compilation error in the \"compilation\" hook.\n\t\t\t\t\tif (params[\"dll reference parse error \" + manifestParameter]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tmanifest =\n\t\t\t\t\t\t/** @type {DllReferencePluginOptionsManifest} */ (params[\n\t\t\t\t\t\t\t\"dll reference \" + manifestParameter\n\t\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tmanifest = manifestParameter;\n\t\t\t\t}\n\t\t\t\tif (manifest) {\n\t\t\t\t\tif (!name) name = manifest.name;\n\t\t\t\t\tif (!sourceType) sourceType = manifest.type;\n\t\t\t\t\tif (!content) content = manifest.content;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst externals = {};\n\t\t\tconst source = \"dll-reference \" + name;\n\t\t\texternals[source] = name;\n\t\t\tconst normalModuleFactory = params.normalModuleFactory;\n\t\t\tnew ExternalModuleFactoryPlugin(sourceType || \"var\", externals).apply(\n\t\t\t\tnormalModuleFactory\n\t\t\t);\n\t\t\tnew DelegatedModuleFactoryPlugin({\n\t\t\t\tsource: source,\n\t\t\t\ttype: this.options.type,\n\t\t\t\tscope: this.options.scope,\n\t\t\t\tcontext: this.options.context || compiler.options.context,\n\t\t\t\tcontent,\n\t\t\t\textensions: this.options.extensions\n\t\t\t}).apply(normalModuleFactory);\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DllReferencePlugin\",\n\t\t\t(compilation, params) => {\n\t\t\t\tif (\"manifest\" in this.options) {\n\t\t\t\t\tlet manifest = this.options.manifest;\n\t\t\t\t\tif (typeof manifest === \"string\") {\n\t\t\t\t\t\t// If there was an error parsing the manifest file, add the\n\t\t\t\t\t\t// error as a compilation error to make the compilation fail.\n\t\t\t\t\t\tlet e = params[\"dll reference parse error \" + manifest];\n\t\t\t\t\t\tif (e) {\n\t\t\t\t\t\t\tcompilation.errors.push(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass DllManifestError extends WebpackError {\n\tconstructor(filename, message) {\n\t\tsuper();\n\n\t\tthis.name = \"DllManifestError\";\n\t\tthis.message = `Dll manifest ${filename}\\n${message}`;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = DllReferencePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Naoyuki Kanezawa @nkzawa\n*/\n\"use strict\";\n\nconst MultiEntryDependency = require(\"./dependencies/MultiEntryDependency\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\nconst MultiModuleFactory = require(\"./MultiModuleFactory\");\nconst MultiEntryPlugin = require(\"./MultiEntryPlugin\");\nconst SingleEntryPlugin = require(\"./SingleEntryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDynamic} EntryDynamic */\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryStatic} EntryStatic */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass DynamicEntryPlugin {\n\t/**\n\t * @param {string} context the context path\n\t * @param {EntryDynamic} entry the entry value\n\t */\n\tconstructor(context, entry) {\n\t\tthis.context = context;\n\t\tthis.entry = entry;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DynamicEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst multiModuleFactory = new MultiModuleFactory();\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tMultiEntryDependency,\n\t\t\t\t\tmultiModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tSingleEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"DynamicEntryPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\t/**\n\t\t\t\t * @param {string|string[]} entry entry value or array of entry values\n\t\t\t\t * @param {string} name name of entry\n\t\t\t\t * @returns {Promise<EntryStatic>} returns the promise resolving the Compilation#addEntry function\n\t\t\t\t */\n\t\t\t\tconst addEntry = (entry, name) => {\n\t\t\t\t\tconst dep = DynamicEntryPlugin.createDependency(entry, name);\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tcompilation.addEntry(this.context, dep, name, err => {\n\t\t\t\t\t\t\tif (err) return reject(err);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tPromise.resolve(this.entry()).then(entry => {\n\t\t\t\t\tif (typeof entry === \"string\" || Array.isArray(entry)) {\n\t\t\t\t\t\taddEntry(entry, \"main\").then(() => callback(), callback);\n\t\t\t\t\t} else if (typeof entry === \"object\") {\n\t\t\t\t\t\tPromise.all(\n\t\t\t\t\t\t\tObject.keys(entry).map(name => {\n\t\t\t\t\t\t\t\treturn addEntry(entry[name], name);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t).then(() => callback(), callback);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = DynamicEntryPlugin;\n/**\n * @param {string|string[]} entry entry value or array of entry paths\n * @param {string} name name of entry\n * @returns {SingleEntryDependency|MultiEntryDependency} returns dep\n */\nDynamicEntryPlugin.createDependency = (entry, name) => {\n\tif (Array.isArray(entry)) {\n\t\treturn MultiEntryPlugin.createDependency(entry, name);\n\t} else {\n\t\treturn SingleEntryPlugin.createDependency(entry, name);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\nclass EntryModuleNotFoundError extends WebpackError {\n\tconstructor(err) {\n\t\tsuper(\"Entry module not found: \" + err);\n\n\t\tthis.name = \"EntryModuleNotFoundError\";\n\t\tthis.details = err.details;\n\t\tthis.error = err;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = EntryModuleNotFoundError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SingleEntryPlugin = require(\"./SingleEntryPlugin\");\nconst MultiEntryPlugin = require(\"./MultiEntryPlugin\");\nconst DynamicEntryPlugin = require(\"./DynamicEntryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryItem} EntryItem */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string} context context path\n * @param {EntryItem} item entry array or single path\n * @param {string} name entry key name\n * @returns {SingleEntryPlugin | MultiEntryPlugin} returns either a single or multi entry plugin\n */\nconst itemToPlugin = (context, item, name) => {\n\tif (Array.isArray(item)) {\n\t\treturn new MultiEntryPlugin(context, item, name);\n\t}\n\treturn new SingleEntryPlugin(context, item, name);\n};\n\nmodule.exports = class EntryOptionPlugin {\n\t/**\n\t * @param {Compiler} compiler the compiler instance one is tapping into\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.entryOption.tap(\"EntryOptionPlugin\", (context, entry) => {\n\t\t\tif (typeof entry === \"string\" || Array.isArray(entry)) {\n\t\t\t\titemToPlugin(context, entry, \"main\").apply(compiler);\n\t\t\t} else if (typeof entry === \"object\") {\n\t\t\t\tfor (const name of Object.keys(entry)) {\n\t\t\t\t\titemToPlugin(context, entry[name], name).apply(compiler);\n\t\t\t\t}\n\t\t\t} else if (typeof entry === \"function\") {\n\t\t\t\tnew DynamicEntryPlugin(context, entry).apply(compiler);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ChunkGroup = require(\"./ChunkGroup\");\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/**\n * Entrypoint serves as an encapsulation primitive for chunks that are\n * a part of a single ChunkGroup. They represent all bundles that need to be loaded for a\n * single instance of a page. Multi-page application architectures will typically yield multiple Entrypoint objects\n * inside of the compilation, whereas a Single Page App may only contain one with many lazy-loaded chunks.\n */\nclass Entrypoint extends ChunkGroup {\n\t/**\n\t * Creates an instance of Entrypoint.\n\t * @param {string} name the name of the entrypoint\n\t */\n\tconstructor(name) {\n\t\tsuper(name);\n\t\t/** @type {Chunk=} */\n\t\tthis.runtimeChunk = undefined;\n\t}\n\n\t/**\n\t * isInitial will always return true for Entrypoint ChunkGroup.\n\t * @returns {true} returns true as all entrypoints are initial ChunkGroups\n\t */\n\tisInitial() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Sets the runtimeChunk for an entrypoint.\n\t * @param {Chunk} chunk the chunk being set as the runtime chunk.\n\t * @returns {void}\n\t */\n\tsetRuntimeChunk(chunk) {\n\t\tthis.runtimeChunk = chunk;\n\t}\n\n\t/**\n\t * Fetches the chunk reference containing the webpack bootstrap code\n\t * @returns {Chunk} returns the runtime chunk or first chunk in `this.chunks`\n\t */\n\tgetRuntimeChunk() {\n\t\treturn this.runtimeChunk || this.chunks[0];\n\t}\n\n\t/**\n\t * @param {Chunk} oldChunk chunk to be replaced\n\t * @param {Chunk} newChunk New chunkt that will be replaced\n\t * @returns {boolean} rerturns true for\n\t */\n\treplaceChunk(oldChunk, newChunk) {\n\t\tif (this.runtimeChunk === oldChunk) this.runtimeChunk = newChunk;\n\t\treturn super.replaceChunk(oldChunk, newChunk);\n\t}\n}\n\nmodule.exports = Entrypoint;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthors Simen Brekken @simenbrekken, Einar Löve @einarlove\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nconst WebpackError = require(\"./WebpackError\");\nconst DefinePlugin = require(\"./DefinePlugin\");\n\nconst needsEnvVarFix =\n\t[\"8\", \"9\"].indexOf(process.versions.node.split(\".\")[0]) >= 0 &&\n\tprocess.platform === \"win32\";\n\nclass EnvironmentPlugin {\n\tconstructor(...keys) {\n\t\tif (keys.length === 1 && Array.isArray(keys[0])) {\n\t\t\tthis.keys = keys[0];\n\t\t\tthis.defaultValues = {};\n\t\t} else if (keys.length === 1 && keys[0] && typeof keys[0] === \"object\") {\n\t\t\tthis.keys = Object.keys(keys[0]);\n\t\t\tthis.defaultValues = keys[0];\n\t\t} else {\n\t\t\tthis.keys = keys;\n\t\t\tthis.defaultValues = {};\n\t\t}\n\t}\n\n\t/**\n\t * @param {Compiler} compiler webpack compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst definitions = this.keys.reduce((defs, key) => {\n\t\t\t// TODO remove once the fix has made its way into Node 8.\n\t\t\t// Work around https://github.com/nodejs/node/pull/18463,\n\t\t\t// affecting Node 8 & 9 by performing an OS-level\n\t\t\t// operation that always succeeds before reading\n\t\t\t// environment variables:\n\t\t\tif (needsEnvVarFix) require(\"os\").cpus();\n\n\t\t\tconst value =\n\t\t\t\tprocess.env[key] !== undefined\n\t\t\t\t\t? process.env[key]\n\t\t\t\t\t: this.defaultValues[key];\n\n\t\t\tif (value === undefined) {\n\t\t\t\tcompiler.hooks.thisCompilation.tap(\"EnvironmentPlugin\", compilation => {\n\t\t\t\t\tconst error = new WebpackError(\n\t\t\t\t\t\t`EnvironmentPlugin - ${key} environment variable is undefined.\\n\\n` +\n\t\t\t\t\t\t\t\"You can pass an object with default values to suppress this warning.\\n\" +\n\t\t\t\t\t\t\t\"See https://webpack.js.org/plugins/environment-plugin for example.\"\n\t\t\t\t\t);\n\n\t\t\t\t\terror.name = \"EnvVariableNotDefinedError\";\n\t\t\t\t\tcompilation.warnings.push(error);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdefs[`process.env.${key}`] =\n\t\t\t\tvalue === undefined ? \"undefined\" : JSON.stringify(value);\n\n\t\t\treturn defs;\n\t\t}, {});\n\n\t\tnew DefinePlugin(definitions).apply(compiler);\n\t}\n}\n\nmodule.exports = EnvironmentPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst loaderFlag = \"LOADER_EXECUTION\";\n\nconst webpackOptionsFlag = \"WEBPACK_OPTIONS\";\n\nexports.cutOffByFlag = (stack, flag) => {\n\tstack = stack.split(\"\\n\");\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tif (stack[i].includes(flag)) {\n\t\t\tstack.length = i;\n\t\t}\n\t}\n\treturn stack.join(\"\\n\");\n};\n\nexports.cutOffLoaderExecution = stack =>\n\texports.cutOffByFlag(stack, loaderFlag);\n\nexports.cutOffWebpackOptions = stack =>\n\texports.cutOffByFlag(stack, webpackOptionsFlag);\n\nexports.cutOffMultilineMessage = (stack, message) => {\n\tstack = stack.split(\"\\n\");\n\tmessage = message.split(\"\\n\");\n\n\treturn stack\n\t\t.reduce(\n\t\t\t(acc, line, idx) =>\n\t\t\t\tline.includes(message[idx]) ? acc : acc.concat(line),\n\t\t\t[]\n\t\t)\n\t\t.join(\"\\n\");\n};\n\nexports.cutOffMessage = (stack, message) => {\n\tconst nextLine = stack.indexOf(\"\\n\");\n\tif (nextLine === -1) {\n\t\treturn stack === message ? \"\" : stack;\n\t} else {\n\t\tconst firstLine = stack.substr(0, nextLine);\n\t\treturn firstLine === message ? stack.substr(nextLine + 1) : stack;\n\t}\n};\n\nexports.cleanUp = (stack, message) => {\n\tstack = exports.cutOffLoaderExecution(stack);\n\tstack = exports.cutOffMessage(stack, message);\n\treturn stack;\n};\n\nexports.cleanUpWebpackOptions = (stack, message) => {\n\tstack = exports.cutOffWebpackOptions(stack);\n\tstack = exports.cutOffMultilineMessage(stack, message);\n\treturn stack;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EvalDevToolModuleTemplatePlugin = require(\"./EvalDevToolModuleTemplatePlugin\");\n\nclass EvalDevToolModulePlugin {\n\tconstructor(options) {\n\t\tthis.sourceUrlComment = options.sourceUrlComment;\n\t\tthis.moduleFilenameTemplate = options.moduleFilenameTemplate;\n\t\tthis.namespace = options.namespace;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"EvalDevToolModulePlugin\", compilation => {\n\t\t\tnew EvalDevToolModuleTemplatePlugin({\n\t\t\t\tsourceUrlComment: this.sourceUrlComment,\n\t\t\t\tmoduleFilenameTemplate: this.moduleFilenameTemplate,\n\t\t\t\tnamespace: this.namespace\n\t\t\t}).apply(compilation.moduleTemplates.javascript);\n\t\t});\n\t}\n}\n\nmodule.exports = EvalDevToolModulePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nconst cache = new WeakMap();\n\nclass EvalDevToolModuleTemplatePlugin {\n\tconstructor(options) {\n\t\tthis.sourceUrlComment = options.sourceUrlComment || \"\\n//# sourceURL=[url]\";\n\t\tthis.moduleFilenameTemplate =\n\t\t\toptions.moduleFilenameTemplate ||\n\t\t\t\"webpack://[namespace]/[resourcePath]?[loaders]\";\n\t\tthis.namespace = options.namespace || \"\";\n\t}\n\n\tapply(moduleTemplate) {\n\t\tmoduleTemplate.hooks.module.tap(\n\t\t\t\"EvalDevToolModuleTemplatePlugin\",\n\t\t\t(source, module) => {\n\t\t\t\tconst cacheEntry = cache.get(source);\n\t\t\t\tif (cacheEntry !== undefined) return cacheEntry;\n\t\t\t\tconst content = source.source();\n\t\t\t\tconst str = ModuleFilenameHelpers.createFilename(\n\t\t\t\t\tmodule,\n\t\t\t\t\t{\n\t\t\t\t\t\tmoduleFilenameTemplate: this.moduleFilenameTemplate,\n\t\t\t\t\t\tnamespace: this.namespace\n\t\t\t\t\t},\n\t\t\t\t\tmoduleTemplate.runtimeTemplate.requestShortener\n\t\t\t\t);\n\t\t\t\tconst footer =\n\t\t\t\t\t\"\\n\" +\n\t\t\t\t\tthis.sourceUrlComment.replace(\n\t\t\t\t\t\t/\\[url\\]/g,\n\t\t\t\t\t\tencodeURI(str)\n\t\t\t\t\t\t\t.replace(/%2F/g, \"/\")\n\t\t\t\t\t\t\t.replace(/%20/g, \"_\")\n\t\t\t\t\t\t\t.replace(/%5E/g, \"^\")\n\t\t\t\t\t\t\t.replace(/%5C/g, \"\\\\\")\n\t\t\t\t\t\t\t.replace(/^\\//, \"\")\n\t\t\t\t\t);\n\t\t\t\tconst result = new RawSource(\n\t\t\t\t\t`eval(${JSON.stringify(content + footer)});`\n\t\t\t\t);\n\t\t\t\tcache.set(source, result);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t);\n\t\tmoduleTemplate.hooks.hash.tap(\"EvalDevToolModuleTemplatePlugin\", hash => {\n\t\t\thash.update(\"EvalDevToolModuleTemplatePlugin\");\n\t\t\thash.update(\"2\");\n\t\t});\n\t}\n}\n\nmodule.exports = EvalDevToolModuleTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nconst cache = new WeakMap();\n\nclass EvalSourceMapDevToolModuleTemplatePlugin {\n\tconstructor(compilation, options) {\n\t\tthis.compilation = compilation;\n\t\tthis.sourceMapComment =\n\t\t\toptions.append || \"//# sourceURL=[module]\\n//# sourceMappingURL=[url]\";\n\t\tthis.moduleFilenameTemplate =\n\t\t\toptions.moduleFilenameTemplate ||\n\t\t\t\"webpack://[namespace]/[resource-path]?[hash]\";\n\t\tthis.namespace = options.namespace || \"\";\n\t\tthis.options = options;\n\t}\n\n\tapply(moduleTemplate) {\n\t\tconst self = this;\n\t\tconst options = this.options;\n\t\tconst matchModule = ModuleFilenameHelpers.matchObject.bind(\n\t\t\tModuleFilenameHelpers,\n\t\t\toptions\n\t\t);\n\t\tmoduleTemplate.hooks.module.tap(\n\t\t\t\"EvalSourceMapDevToolModuleTemplatePlugin\",\n\t\t\t(source, module) => {\n\t\t\t\tconst cachedSource = cache.get(source);\n\t\t\t\tif (cachedSource !== undefined) {\n\t\t\t\t\treturn cachedSource;\n\t\t\t\t}\n\n\t\t\t\tif (!matchModule(module.resource)) {\n\t\t\t\t\treturn source;\n\t\t\t\t}\n\n\t\t\t\t/** @type {{ [key: string]: TODO; }} */\n\t\t\t\tlet sourceMap;\n\t\t\t\tlet content;\n\t\t\t\tif (source.sourceAndMap) {\n\t\t\t\t\tconst sourceAndMap = source.sourceAndMap(options);\n\t\t\t\t\tsourceMap = sourceAndMap.map;\n\t\t\t\t\tcontent = sourceAndMap.source;\n\t\t\t\t} else {\n\t\t\t\t\tsourceMap = source.map(options);\n\t\t\t\t\tcontent = source.source();\n\t\t\t\t}\n\t\t\t\tif (!sourceMap) {\n\t\t\t\t\treturn source;\n\t\t\t\t}\n\n\t\t\t\t// Clone (flat) the sourcemap to ensure that the mutations below do not persist.\n\t\t\t\tsourceMap = Object.keys(sourceMap).reduce((obj, key) => {\n\t\t\t\t\tobj[key] = sourceMap[key];\n\t\t\t\t\treturn obj;\n\t\t\t\t}, {});\n\t\t\t\tconst modules = sourceMap.sources.map(source => {\n\t\t\t\t\tconst module = self.compilation.findModule(source);\n\t\t\t\t\treturn module || source;\n\t\t\t\t});\n\t\t\t\tlet moduleFilenames = modules.map(module => {\n\t\t\t\t\treturn ModuleFilenameHelpers.createFilename(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmoduleFilenameTemplate: self.moduleFilenameTemplate,\n\t\t\t\t\t\t\tnamespace: self.namespace\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmoduleTemplate.runtimeTemplate.requestShortener\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tmoduleFilenames = ModuleFilenameHelpers.replaceDuplicates(\n\t\t\t\t\tmoduleFilenames,\n\t\t\t\t\t(filename, i, n) => {\n\t\t\t\t\t\tfor (let j = 0; j < n; j++) filename += \"*\";\n\t\t\t\t\t\treturn filename;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsourceMap.sources = moduleFilenames;\n\t\t\t\tsourceMap.sourceRoot = options.sourceRoot || \"\";\n\t\t\t\tsourceMap.file = `${module.id}.js`;\n\n\t\t\t\tconst footer =\n\t\t\t\t\tself.sourceMapComment.replace(\n\t\t\t\t\t\t/\\[url\\]/g,\n\t\t\t\t\t\t`data:application/json;charset=utf-8;base64,${Buffer.from(\n\t\t\t\t\t\t\tJSON.stringify(sourceMap),\n\t\t\t\t\t\t\t\"utf8\"\n\t\t\t\t\t\t).toString(\"base64\")}`\n\t\t\t\t\t) + `\\n//# sourceURL=webpack-internal:///${module.id}\\n`; // workaround for chrome bug\n\n\t\t\t\tconst evalSource = new RawSource(\n\t\t\t\t\t`eval(${JSON.stringify(content + footer)});`\n\t\t\t\t);\n\n\t\t\t\tcache.set(source, evalSource);\n\n\t\t\t\treturn evalSource;\n\t\t\t}\n\t\t);\n\t\tmoduleTemplate.hooks.hash.tap(\n\t\t\t\"EvalSourceMapDevToolModuleTemplatePlugin\",\n\t\t\thash => {\n\t\t\t\thash.update(\"eval-source-map\");\n\t\t\t\thash.update(\"2\");\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = EvalSourceMapDevToolModuleTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EvalSourceMapDevToolModuleTemplatePlugin = require(\"./EvalSourceMapDevToolModuleTemplatePlugin\");\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\n\nclass EvalSourceMapDevToolPlugin {\n\tconstructor(options) {\n\t\tif (arguments.length > 1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"EvalSourceMapDevToolPlugin only takes one argument (pass an options object)\"\n\t\t\t);\n\t\t}\n\t\tif (typeof options === \"string\") {\n\t\t\toptions = {\n\t\t\t\tappend: options\n\t\t\t};\n\t\t}\n\t\tif (!options) options = {};\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EvalSourceMapDevToolPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n\t\t\t\tnew EvalSourceMapDevToolModuleTemplatePlugin(\n\t\t\t\t\tcompilation,\n\t\t\t\t\toptions\n\t\t\t\t).apply(compilation.moduleTemplates.javascript);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = EvalSourceMapDevToolPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\nclass ExportPropertyMainTemplatePlugin {\n\t/**\n\t * @param {string|string[]} property the name of the property to export\n\t */\n\tconstructor(property) {\n\t\tthis.property = property;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation instance\n\t * @returns {void}\n\t */\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst postfix = `${accessorToObjectAccess([].concat(this.property))}`;\n\t\t\treturn new ConcatSource(source, postfix);\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"ExportPropertyMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.hash.tap(\"ExportPropertyMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"export property\");\n\t\t\thash.update(`${this.property}`);\n\t\t});\n\t}\n}\n\nmodule.exports = ExportPropertyMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"./Template\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst NullFactory = require(\"./NullFactory\");\n\nconst REPLACEMENTS = {\n\t// eslint-disable-next-line camelcase\n\t__webpack_hash__: \"__webpack_require__.h\",\n\t// eslint-disable-next-line camelcase\n\t__webpack_chunkname__: \"__webpack_require__.cn\"\n};\nconst REPLACEMENT_TYPES = {\n\t// eslint-disable-next-line camelcase\n\t__webpack_hash__: \"string\",\n\t// eslint-disable-next-line camelcase\n\t__webpack_chunkname__: \"string\"\n};\n\nclass ExtendedAPIPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\t\t\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t(source, chunk, hash) => {\n\t\t\t\t\t\tconst buf = [source];\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_hash__\");\n\t\t\t\t\t\tbuf.push(`${mainTemplate.requireFn}.h = ${JSON.stringify(hash)};`);\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_chunkname__\");\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\t`${mainTemplate.requireFn}.cn = ${JSON.stringify(chunk.name)};`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString(buf);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tmainTemplate.hooks.globalHash.tap(\"ExtendedAPIPlugin\", () => true);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.evaluateToString(REPLACEMENT_TYPES[key])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ExtendedAPIPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\nconst WebpackMissingModule = require(\"./dependencies/WebpackMissingModule\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass ExternalModule extends Module {\n\tconstructor(request, type, userRequest) {\n\t\tsuper(\"javascript/dynamic\", null);\n\n\t\t// Info from Factory\n\t\tthis.request = request;\n\t\tthis.externalType = type;\n\t\tthis.userRequest = userRequest;\n\t\tthis.external = true;\n\t}\n\n\tlibIdent() {\n\t\treturn this.userRequest;\n\t}\n\n\tchunkCondition(chunk) {\n\t\treturn chunk.hasEntryModule();\n\t}\n\n\tidentifier() {\n\t\treturn \"external \" + JSON.stringify(this.request);\n\t}\n\n\treadableIdentifier() {\n\t\treturn \"external \" + JSON.stringify(this.request);\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {};\n\t\tcallback();\n\t}\n\n\tgetSourceForGlobalVariableExternal(variableName, type) {\n\t\tif (!Array.isArray(variableName)) {\n\t\t\t// make it an array as the look up works the same basically\n\t\t\tvariableName = [variableName];\n\t\t}\n\n\t\t// needed for e.g. window[\"some\"][\"thing\"]\n\t\tconst objectLookup = variableName\n\t\t\t.map(r => `[${JSON.stringify(r)}]`)\n\t\t\t.join(\"\");\n\t\treturn `(function() { module.exports = ${type}${objectLookup}; }());`;\n\t}\n\n\tgetSourceForCommonJsExternal(moduleAndSpecifiers) {\n\t\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\t\treturn `module.exports = require(${JSON.stringify(\n\t\t\t\tmoduleAndSpecifiers\n\t\t\t)});`;\n\t\t}\n\n\t\tconst moduleName = moduleAndSpecifiers[0];\n\t\tconst objectLookup = moduleAndSpecifiers\n\t\t\t.slice(1)\n\t\t\t.map(r => `[${JSON.stringify(r)}]`)\n\t\t\t.join(\"\");\n\t\treturn `module.exports = require(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)})${objectLookup};`;\n\t}\n\n\tcheckExternalVariable(variableToCheck, request) {\n\t\treturn `if(typeof ${variableToCheck} === 'undefined') {${WebpackMissingModule.moduleCode(\n\t\t\trequest\n\t\t)}}\\n`;\n\t}\n\n\tgetSourceForAmdOrUmdExternal(id, optional, request) {\n\t\tconst externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\n\t\t\t`${id}`\n\t\t)}__`;\n\t\tconst missingModuleError = optional\n\t\t\t? this.checkExternalVariable(externalVariable, request)\n\t\t\t: \"\";\n\t\treturn `${missingModuleError}module.exports = ${externalVariable};`;\n\t}\n\n\tgetSourceForDefaultCase(optional, request) {\n\t\tif (!Array.isArray(request)) {\n\t\t\t// make it an array as the look up works the same basically\n\t\t\trequest = [request];\n\t\t}\n\n\t\tconst variableName = request[0];\n\t\tconst missingModuleError = optional\n\t\t\t? this.checkExternalVariable(variableName, request.join(\".\"))\n\t\t\t: \"\";\n\t\tconst objectLookup = request\n\t\t\t.slice(1)\n\t\t\t.map(r => `[${JSON.stringify(r)}]`)\n\t\t\t.join(\"\");\n\t\treturn `${missingModuleError}module.exports = ${variableName}${objectLookup};`;\n\t}\n\n\tgetSourceString(runtime) {\n\t\tconst request =\n\t\t\ttypeof this.request === \"object\" && !Array.isArray(this.request)\n\t\t\t\t? this.request[this.externalType]\n\t\t\t\t: this.request;\n\t\tswitch (this.externalType) {\n\t\t\tcase \"this\":\n\t\t\tcase \"window\":\n\t\t\tcase \"self\":\n\t\t\t\treturn this.getSourceForGlobalVariableExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\tthis.externalType\n\t\t\t\t);\n\t\t\tcase \"global\":\n\t\t\t\treturn this.getSourceForGlobalVariableExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\truntime.outputOptions.globalObject\n\t\t\t\t);\n\t\t\tcase \"commonjs\":\n\t\t\tcase \"commonjs2\":\n\t\t\t\treturn this.getSourceForCommonJsExternal(request);\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\t\treturn this.getSourceForAmdOrUmdExternal(\n\t\t\t\t\tthis.id,\n\t\t\t\t\tthis.optional,\n\t\t\t\t\trequest\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn this.getSourceForDefaultCase(this.optional, request);\n\t\t}\n\t}\n\n\tgetSource(sourceString) {\n\t\tif (this.useSourceMap) {\n\t\t\treturn new OriginalSource(sourceString, this.identifier());\n\t\t}\n\n\t\treturn new RawSource(sourceString);\n\t}\n\n\tsource(dependencyTemplates, runtime) {\n\t\treturn this.getSource(this.getSourceString(runtime));\n\t}\n\n\tsize() {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(this.externalType);\n\t\thash.update(JSON.stringify(this.request));\n\t\thash.update(JSON.stringify(Boolean(this.optional)));\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nmodule.exports = ExternalModule;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ExternalModule = require(\"./ExternalModule\");\n\nclass ExternalModuleFactoryPlugin {\n\tconstructor(type, externals) {\n\t\tthis.type = type;\n\t\tthis.externals = externals;\n\t}\n\n\tapply(normalModuleFactory) {\n\t\tconst globalType = this.type;\n\t\tnormalModuleFactory.hooks.factory.tap(\n\t\t\t\"ExternalModuleFactoryPlugin\",\n\t\t\tfactory => (data, callback) => {\n\t\t\t\tconst context = data.context;\n\t\t\t\tconst dependency = data.dependencies[0];\n\n\t\t\t\tconst handleExternal = (value, type, callback) => {\n\t\t\t\t\tif (typeof type === \"function\") {\n\t\t\t\t\t\tcallback = type;\n\t\t\t\t\t\ttype = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (value === false) return factory(data, callback);\n\t\t\t\t\tif (value === true) value = dependency.request;\n\t\t\t\t\tif (type === undefined && /^[a-z0-9]+ /.test(value)) {\n\t\t\t\t\t\tconst idx = value.indexOf(\" \");\n\t\t\t\t\t\ttype = value.substr(0, idx);\n\t\t\t\t\t\tvalue = value.substr(idx + 1);\n\t\t\t\t\t}\n\t\t\t\t\tcallback(\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnew ExternalModule(value, type || globalType, dependency.request)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\n\t\t\t\tconst handleExternals = (externals, callback) => {\n\t\t\t\t\tif (typeof externals === \"string\") {\n\t\t\t\t\t\tif (externals === dependency.request) {\n\t\t\t\t\t\t\treturn handleExternal(dependency.request, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(externals)) {\n\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\tconst next = () => {\n\t\t\t\t\t\t\tlet asyncFlag;\n\t\t\t\t\t\t\tconst handleExternalsAndCallback = (err, module) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tif (!module) {\n\t\t\t\t\t\t\t\t\tif (asyncFlag) {\n\t\t\t\t\t\t\t\t\t\tasyncFlag = false;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn next();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcallback(null, module);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tasyncFlag = true;\n\t\t\t\t\t\t\t\tif (i >= externals.length) return callback();\n\t\t\t\t\t\t\t\thandleExternals(externals[i++], handleExternalsAndCallback);\n\t\t\t\t\t\t\t} while (!asyncFlag);\n\t\t\t\t\t\t\tasyncFlag = false;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tnext();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (externals instanceof RegExp) {\n\t\t\t\t\t\tif (externals.test(dependency.request)) {\n\t\t\t\t\t\t\treturn handleExternal(dependency.request, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (typeof externals === \"function\") {\n\t\t\t\t\t\texternals.call(\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tdependency.request,\n\t\t\t\t\t\t\t(err, value, type) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t\t\t\thandleExternal(value, type, callback);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\ttypeof externals === \"object\" &&\n\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(externals, dependency.request)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn handleExternal(externals[dependency.request], callback);\n\t\t\t\t\t}\n\t\t\t\t\tcallback();\n\t\t\t\t};\n\n\t\t\t\thandleExternals(this.externals, (err, module) => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (!module) return handleExternal(false, callback);\n\t\t\t\t\treturn callback(null, module);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ExternalModuleFactoryPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\n\nclass ExternalsPlugin {\n\tconstructor(type, externals) {\n\t\tthis.type = type;\n\t\tthis.externals = externals;\n\t}\n\tapply(compiler) {\n\t\tcompiler.hooks.compile.tap(\"ExternalsPlugin\", ({ normalModuleFactory }) => {\n\t\t\tnew ExternalModuleFactoryPlugin(this.type, this.externals).apply(\n\t\t\t\tnormalModuleFactory\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = ExternalsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Queue = require(\"./util/Queue\");\n\nconst addToSet = (a, b) => {\n\tlet changed = false;\n\tfor (const item of b) {\n\t\tif (!a.has(item)) {\n\t\t\ta.add(item);\n\t\t\tchanged = true;\n\t\t}\n\t}\n\treturn changed;\n};\n\nclass FlagDependencyExportsPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"FlagDependencyExportsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.finishModules.tap(\n\t\t\t\t\t\"FlagDependencyExportsPlugin\",\n\t\t\t\t\tmodules => {\n\t\t\t\t\t\tconst dependencies = new Map();\n\n\t\t\t\t\t\tconst queue = new Queue();\n\n\t\t\t\t\t\tlet module;\n\t\t\t\t\t\tlet moduleWithExports;\n\t\t\t\t\t\tlet moduleProvidedExports;\n\t\t\t\t\t\tlet providedExportsAreTemporary;\n\n\t\t\t\t\t\tconst processDependenciesBlock = depBlock => {\n\t\t\t\t\t\t\tfor (const dep of depBlock.dependencies) {\n\t\t\t\t\t\t\t\tif (processDependency(dep)) return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const variable of depBlock.variables) {\n\t\t\t\t\t\t\t\tfor (const dep of variable.dependencies) {\n\t\t\t\t\t\t\t\t\tif (processDependency(dep)) return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const block of depBlock.blocks) {\n\t\t\t\t\t\t\t\tif (processDependenciesBlock(block)) return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst processDependency = dep => {\n\t\t\t\t\t\t\tconst exportDesc = dep.getExports && dep.getExports();\n\t\t\t\t\t\t\tif (!exportDesc) return;\n\t\t\t\t\t\t\tmoduleWithExports = true;\n\t\t\t\t\t\t\tconst exports = exportDesc.exports;\n\t\t\t\t\t\t\t// break early if it's only in the worst state\n\t\t\t\t\t\t\tif (module.buildMeta.providedExports === true) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// break if it should move to the worst state\n\t\t\t\t\t\t\tif (exports === true) {\n\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = true;\n\t\t\t\t\t\t\t\tnotifyDependencies();\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// merge in new exports\n\t\t\t\t\t\t\tif (Array.isArray(exports)) {\n\t\t\t\t\t\t\t\tif (addToSet(moduleProvidedExports, exports)) {\n\t\t\t\t\t\t\t\t\tnotifyDependencies();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// store dependencies\n\t\t\t\t\t\t\tconst exportDeps = exportDesc.dependencies;\n\t\t\t\t\t\t\tif (exportDeps) {\n\t\t\t\t\t\t\t\tprovidedExportsAreTemporary = true;\n\t\t\t\t\t\t\t\tfor (const exportDependency of exportDeps) {\n\t\t\t\t\t\t\t\t\t// add dependency for this module\n\t\t\t\t\t\t\t\t\tconst set = dependencies.get(exportDependency);\n\t\t\t\t\t\t\t\t\tif (set === undefined) {\n\t\t\t\t\t\t\t\t\t\tdependencies.set(exportDependency, new Set([module]));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tset.add(module);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst notifyDependencies = () => {\n\t\t\t\t\t\t\tconst deps = dependencies.get(module);\n\t\t\t\t\t\t\tif (deps !== undefined) {\n\t\t\t\t\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\t\t\t\t\tqueue.enqueue(dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Start with all modules without provided exports\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\tif (module.buildInfo.temporaryProvidedExports) {\n\t\t\t\t\t\t\t\t// Clear exports when they are temporary\n\t\t\t\t\t\t\t\t// and recreate them\n\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = null;\n\t\t\t\t\t\t\t\tqueue.enqueue(module);\n\t\t\t\t\t\t\t} else if (!module.buildMeta.providedExports) {\n\t\t\t\t\t\t\t\tqueue.enqueue(module);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twhile (queue.length > 0) {\n\t\t\t\t\t\t\tmodule = queue.dequeue();\n\n\t\t\t\t\t\t\tif (module.buildMeta.providedExports !== true) {\n\t\t\t\t\t\t\t\tmoduleWithExports =\n\t\t\t\t\t\t\t\t\tmodule.buildMeta && module.buildMeta.exportsType;\n\t\t\t\t\t\t\t\tmoduleProvidedExports = Array.isArray(\n\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t? new Set(module.buildMeta.providedExports)\n\t\t\t\t\t\t\t\t\t: new Set();\n\t\t\t\t\t\t\t\tprovidedExportsAreTemporary = false;\n\t\t\t\t\t\t\t\tprocessDependenciesBlock(module);\n\t\t\t\t\t\t\t\tmodule.buildInfo.temporaryProvidedExports = providedExportsAreTemporary;\n\t\t\t\t\t\t\t\tif (!moduleWithExports) {\n\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = true;\n\t\t\t\t\t\t\t\t\tnotifyDependencies();\n\t\t\t\t\t\t\t\t} else if (module.buildMeta.providedExports !== true) {\n\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports = Array.from(\n\t\t\t\t\t\t\t\t\t\tmoduleProvidedExports\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst providedExportsCache = new WeakMap();\n\t\t\t\tcompilation.hooks.rebuildModule.tap(\n\t\t\t\t\t\"FlagDependencyExportsPlugin\",\n\t\t\t\t\tmodule => {\n\t\t\t\t\t\tprovidedExportsCache.set(module, module.buildMeta.providedExports);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.finishRebuildingModule.tap(\n\t\t\t\t\t\"FlagDependencyExportsPlugin\",\n\t\t\t\t\tmodule => {\n\t\t\t\t\t\tmodule.buildMeta.providedExports = providedExportsCache.get(module);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = FlagDependencyExportsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n\n/** @typedef {false | true | string[]} UsedExports */\n\nconst addToSet = (a, b) => {\n\tfor (const item of b) {\n\t\tif (!a.includes(item)) a.push(item);\n\t}\n\treturn a;\n};\n\nconst isSubset = (biggerSet, subset) => {\n\tif (biggerSet === true) return true;\n\tif (subset === true) return false;\n\treturn subset.every(item => biggerSet.indexOf(item) >= 0);\n};\n\nclass FlagDependencyUsagePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"FlagDependencyUsagePlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\"FlagDependencyUsagePlugin\",\n\t\t\t\tmodules => {\n\t\t\t\t\tconst processModule = (module, usedExports) => {\n\t\t\t\t\t\tmodule.used = true;\n\t\t\t\t\t\tif (module.usedExports === true) return;\n\t\t\t\t\t\tif (usedExports === true) {\n\t\t\t\t\t\t\tmodule.usedExports = true;\n\t\t\t\t\t\t} else if (Array.isArray(usedExports)) {\n\t\t\t\t\t\t\tconst old = module.usedExports ? module.usedExports.length : -1;\n\t\t\t\t\t\t\tmodule.usedExports = addToSet(\n\t\t\t\t\t\t\t\tmodule.usedExports || [],\n\t\t\t\t\t\t\t\tusedExports\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (module.usedExports.length === old) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Array.isArray(module.usedExports)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmodule.usedExports = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// for a module without side effects we stop tracking usage here when no export is used\n\t\t\t\t\t\t// This module won't be evaluated in this case\n\t\t\t\t\t\tif (module.factoryMeta.sideEffectFree) {\n\t\t\t\t\t\t\tif (module.usedExports === false) return;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tArray.isArray(module.usedExports) &&\n\t\t\t\t\t\t\t\tmodule.usedExports.length === 0\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqueue.push([module, module, module.usedExports]);\n\t\t\t\t\t};\n\n\t\t\t\t\tconst processDependenciesBlock = (module, depBlock, usedExports) => {\n\t\t\t\t\t\tfor (const dep of depBlock.dependencies) {\n\t\t\t\t\t\t\tprocessDependency(module, dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const variable of depBlock.variables) {\n\t\t\t\t\t\t\tfor (const dep of variable.dependencies) {\n\t\t\t\t\t\t\t\tprocessDependency(module, dep);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const block of depBlock.blocks) {\n\t\t\t\t\t\t\tqueue.push([module, block, usedExports]);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tconst processDependency = (module, dep) => {\n\t\t\t\t\t\tconst reference = compilation.getDependencyReference(module, dep);\n\t\t\t\t\t\tif (!reference) return;\n\t\t\t\t\t\tconst referenceModule = reference.module;\n\t\t\t\t\t\tconst importedNames = reference.importedNames;\n\t\t\t\t\t\tconst oldUsed = referenceModule.used;\n\t\t\t\t\t\tconst oldUsedExports = referenceModule.usedExports;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!oldUsed ||\n\t\t\t\t\t\t\t(importedNames &&\n\t\t\t\t\t\t\t\t(!oldUsedExports || !isSubset(oldUsedExports, importedNames)))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tprocessModule(referenceModule, importedNames);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tmodule.used = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t/** @type {[Module, DependenciesBlock, UsedExports][]} */\n\t\t\t\t\tconst queue = [];\n\t\t\t\t\tfor (const preparedEntrypoint of compilation._preparedEntrypoints) {\n\t\t\t\t\t\tif (preparedEntrypoint.module) {\n\t\t\t\t\t\t\tprocessModule(preparedEntrypoint.module, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (queue.length) {\n\t\t\t\t\t\tconst queueItem = queue.pop();\n\t\t\t\t\t\tprocessDependenciesBlock(queueItem[0], queueItem[1], queueItem[2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = FlagDependencyUsagePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass FlagInitialModulesAsUsedPlugin {\n\tconstructor(explanation) {\n\t\tthis.explanation = explanation;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"FlagInitialModulesAsUsedPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.afterOptimizeChunks.tap(\n\t\t\t\t\t\"FlagInitialModulesAsUsedPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\tif (!chunk.isOnlyInitial()) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const module of chunk.modulesIterable) {\n\t\t\t\t\t\t\t\tmodule.used = true;\n\t\t\t\t\t\t\t\tmodule.usedExports = true;\n\t\t\t\t\t\t\t\tmodule.addReason(null, null, this.explanation);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = FlagInitialModulesAsUsedPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst FunctionModuleTemplatePlugin = require(\"./FunctionModuleTemplatePlugin\");\n\nclass FunctionModulePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"FunctionModulePlugin\", compilation => {\n\t\t\tnew FunctionModuleTemplatePlugin().apply(\n\t\t\t\tcompilation.moduleTemplates.javascript\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = FunctionModulePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\n\nclass FunctionModuleTemplatePlugin {\n\tapply(moduleTemplate) {\n\t\tmoduleTemplate.hooks.render.tap(\n\t\t\t\"FunctionModuleTemplatePlugin\",\n\t\t\t(moduleSource, module) => {\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tconst args = [module.moduleArgument];\n\t\t\t\t// TODO remove HACK checking type for javascript\n\t\t\t\tif (module.type && module.type.startsWith(\"javascript\")) {\n\t\t\t\t\targs.push(module.exportsArgument);\n\t\t\t\t\tif (module.hasDependencies(d => d.requireWebpackRequire !== false)) {\n\t\t\t\t\t\targs.push(\"__webpack_require__\");\n\t\t\t\t\t}\n\t\t\t\t} else if (module.type && module.type.startsWith(\"json\")) {\n\t\t\t\t\t// no additional arguments needed\n\t\t\t\t} else {\n\t\t\t\t\targs.push(module.exportsArgument, \"__webpack_require__\");\n\t\t\t\t}\n\t\t\t\tsource.add(\"/***/ (function(\" + args.join(\", \") + \") {\\n\\n\");\n\t\t\t\tif (module.buildInfo.strict) source.add('\"use strict\";\\n');\n\t\t\t\tsource.add(moduleSource);\n\t\t\t\tsource.add(\"\\n\\n/***/ })\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\n\t\tmoduleTemplate.hooks.package.tap(\n\t\t\t\"FunctionModuleTemplatePlugin\",\n\t\t\t(moduleSource, module) => {\n\t\t\t\tif (moduleTemplate.runtimeTemplate.outputOptions.pathinfo) {\n\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\tconst req = module.readableIdentifier(\n\t\t\t\t\t\tmoduleTemplate.runtimeTemplate.requestShortener\n\t\t\t\t\t);\n\t\t\t\t\tconst reqStr = req.replace(/\\*\\//g, \"*_/\");\n\t\t\t\t\tconst reqStrStar = \"*\".repeat(reqStr.length);\n\t\t\t\t\tsource.add(\"/*!****\" + reqStrStar + \"****!*\\\\\\n\");\n\t\t\t\t\tsource.add(\"  !*** \" + reqStr + \" ***!\\n\");\n\t\t\t\t\tsource.add(\"  \\\\****\" + reqStrStar + \"****/\\n\");\n\t\t\t\t\tif (\n\t\t\t\t\t\tArray.isArray(module.buildMeta.providedExports) &&\n\t\t\t\t\t\tmodule.buildMeta.providedExports.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tsource.add(Template.toComment(\"no exports provided\") + \"\\n\");\n\t\t\t\t\t} else if (Array.isArray(module.buildMeta.providedExports)) {\n\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\tTemplate.toComment(\n\t\t\t\t\t\t\t\t\"exports provided: \" +\n\t\t\t\t\t\t\t\t\tmodule.buildMeta.providedExports.join(\", \")\n\t\t\t\t\t\t\t) + \"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (module.buildMeta.providedExports) {\n\t\t\t\t\t\tsource.add(Template.toComment(\"no static exports found\") + \"\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tArray.isArray(module.usedExports) &&\n\t\t\t\t\t\tmodule.usedExports.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tsource.add(Template.toComment(\"no exports used\") + \"\\n\");\n\t\t\t\t\t} else if (Array.isArray(module.usedExports)) {\n\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\tTemplate.toComment(\n\t\t\t\t\t\t\t\t\"exports used: \" + module.usedExports.join(\", \")\n\t\t\t\t\t\t\t) + \"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (module.usedExports) {\n\t\t\t\t\t\tsource.add(Template.toComment(\"all exports used\") + \"\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tif (module.optimizationBailout) {\n\t\t\t\t\t\tfor (const text of module.optimizationBailout) {\n\t\t\t\t\t\t\tlet code;\n\t\t\t\t\t\t\tif (typeof text === \"function\") {\n\t\t\t\t\t\t\t\tcode = text(moduleTemplate.runtimeTemplate.requestShortener);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcode = text;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource.add(Template.toComment(`${code}`) + \"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsource.add(moduleSource);\n\t\t\t\t\treturn source;\n\t\t\t\t}\n\t\t\t\treturn moduleSource;\n\t\t\t}\n\t\t);\n\n\t\tmoduleTemplate.hooks.hash.tap(\"FunctionModuleTemplatePlugin\", hash => {\n\t\t\thash.update(\"FunctionModuleTemplatePlugin\");\n\t\t\thash.update(\"2\");\n\t\t});\n\t}\n}\nmodule.exports = FunctionModuleTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate */\n\n/**\n *\n */\nclass Generator {\n\tstatic byType(map) {\n\t\treturn new ByTypeGenerator(map);\n\t}\n\n\t/**\n\t * @abstract\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\n\t * @param {string} type which kind of code should be generated\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, dependencyTemplates, runtimeTemplate, type) {\n\t\tthrow new Error(\"Generator.generate: must be overridden\");\n\t}\n}\n\nclass ByTypeGenerator extends Generator {\n\tconstructor(map) {\n\t\tsuper();\n\t\tthis.map = map;\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\n\t * @param {string} type which kind of code should be generated\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, dependencyTemplates, runtimeTemplate, type) {\n\t\tconst generator = this.map[type];\n\t\tif (!generator) {\n\t\t\tthrow new Error(`Generator.byType: no generator specified for ${type}`);\n\t\t}\n\t\treturn generator.generate(\n\t\t\tmodule,\n\t\t\tdependencyTemplates,\n\t\t\truntimeTemplate,\n\t\t\ttype\n\t\t);\n\t}\n}\n\nmodule.exports = Generator;\n","/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n\n/**\n * @param {ChunkGroup} chunkGroup the ChunkGroup to connect\n * @param {Chunk} chunk chunk to tie to ChunkGroup\n * @returns {void}\n */\nconst connectChunkGroupAndChunk = (chunkGroup, chunk) => {\n\tif (chunkGroup.pushChunk(chunk)) {\n\t\tchunk.addGroup(chunkGroup);\n\t}\n};\n\n/**\n * @param {ChunkGroup} parent parent ChunkGroup to connect\n * @param {ChunkGroup} child child ChunkGroup to connect\n * @returns {void}\n */\nconst connectChunkGroupParentAndChild = (parent, child) => {\n\tif (parent.addChild(child)) {\n\t\tchild.addParent(parent);\n\t}\n};\n\n/**\n * @param {Chunk} chunk Chunk to connect to Module\n * @param {Module} module Module to connect to Chunk\n * @returns {void}\n */\nconst connectChunkAndModule = (chunk, module) => {\n\tif (module.addChunk(chunk)) {\n\t\tchunk.addModule(module);\n\t}\n};\n\n/**\n * @param {Chunk} chunk Chunk being disconnected\n * @param {Module} module Module being disconnected\n * @returns {void}\n */\nconst disconnectChunkAndModule = (chunk, module) => {\n\tchunk.removeModule(module);\n\tmodule.removeChunk(chunk);\n};\n\n/**\n * @param {AsyncDependenciesBlock} depBlock DepBlock being tied to ChunkGroup\n * @param {ChunkGroup} chunkGroup ChunkGroup being tied to DepBlock\n * @returns {void}\n */\nconst connectDependenciesBlockAndChunkGroup = (depBlock, chunkGroup) => {\n\tif (chunkGroup.addBlock(depBlock)) {\n\t\tdepBlock.chunkGroup = chunkGroup;\n\t}\n};\n\nexports.connectChunkGroupAndChunk = connectChunkGroupAndChunk;\nexports.connectChunkGroupParentAndChild = connectChunkGroupParentAndChild;\nexports.connectChunkAndModule = connectChunkAndModule;\nexports.disconnectChunkAndModule = disconnectChunkAndModule;\nexports.connectDependenciesBlockAndChunkGroup = connectDependenciesBlockAndChunkGroup;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\nmodule.exports = class HarmonyLinkingError extends WebpackError {\n\t/** @param {string} message Error message */\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = \"HarmonyLinkingError\";\n\t\tthis.hideStack = true;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst createHash = require(\"./util/createHash\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/HashedModuleIdsPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/HashedModuleIdsPlugin\").HashedModuleIdsPluginOptions} HashedModuleIdsPluginOptions */\n\nclass HashedModuleIdsPlugin {\n\t/**\n\t * @param {HashedModuleIdsPluginOptions=} options options object\n\t */\n\tconstructor(options) {\n\t\tif (!options) options = {};\n\n\t\tvalidateOptions(schema, options, \"Hashed Module Ids Plugin\");\n\n\t\t/** @type {HashedModuleIdsPluginOptions} */\n\t\tthis.options = Object.assign(\n\t\t\t{\n\t\t\t\tcontext: null,\n\t\t\t\thashFunction: \"md4\",\n\t\t\t\thashDigest: \"base64\",\n\t\t\t\thashDigestLength: 4\n\t\t\t},\n\t\t\toptions\n\t\t);\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"HashedModuleIdsPlugin\", compilation => {\n\t\t\tconst usedIds = new Set();\n\t\t\tcompilation.hooks.beforeModuleIds.tap(\n\t\t\t\t\"HashedModuleIdsPlugin\",\n\t\t\t\tmodules => {\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tif (module.id === null && module.libIdent) {\n\t\t\t\t\t\t\tconst id = module.libIdent({\n\t\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst hash = createHash(options.hashFunction);\n\t\t\t\t\t\t\thash.update(id);\n\t\t\t\t\t\t\tconst hashId = /** @type {string} */ (hash.digest(\n\t\t\t\t\t\t\t\toptions.hashDigest\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\tlet len = options.hashDigestLength;\n\t\t\t\t\t\t\twhile (usedIds.has(hashId.substr(0, len))) len++;\n\t\t\t\t\t\t\tmodule.id = hashId.substr(0, len);\n\t\t\t\t\t\t\tusedIds.add(module.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = HashedModuleIdsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*global $hash$ $requestTimeout$ installedModules $require$ hotDownloadManifest hotDownloadUpdateChunk hotDisposeChunk modules */\nmodule.exports = function() {\n\tvar hotApplyOnUpdate = true;\n\t// eslint-disable-next-line no-unused-vars\n\tvar hotCurrentHash = $hash$;\n\tvar hotRequestTimeout = $requestTimeout$;\n\tvar hotCurrentModuleData = {};\n\tvar hotCurrentChildModule;\n\t// eslint-disable-next-line no-unused-vars\n\tvar hotCurrentParents = [];\n\t// eslint-disable-next-line no-unused-vars\n\tvar hotCurrentParentsTemp = [];\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotCreateRequire(moduleId) {\n\t\tvar me = installedModules[moduleId];\n\t\tif (!me) return $require$;\n\t\tvar fn = function(request) {\n\t\t\tif (me.hot.active) {\n\t\t\t\tif (installedModules[request]) {\n\t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n\t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thotCurrentParents = [moduleId];\n\t\t\t\t\thotCurrentChildModule = request;\n\t\t\t\t}\n\t\t\t\tif (me.children.indexOf(request) === -1) {\n\t\t\t\t\tme.children.push(request);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"[HMR] unexpected require(\" +\n\t\t\t\t\t\trequest +\n\t\t\t\t\t\t\") from disposed module \" +\n\t\t\t\t\t\tmoduleId\n\t\t\t\t);\n\t\t\t\thotCurrentParents = [];\n\t\t\t}\n\t\t\treturn $require$(request);\n\t\t};\n\t\tvar ObjectFactory = function ObjectFactory(name) {\n\t\t\treturn {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn $require$[name];\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\t$require$[name] = value;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tfor (var name in $require$) {\n\t\t\tif (\n\t\t\t\tObject.prototype.hasOwnProperty.call($require$, name) &&\n\t\t\t\tname !== \"e\" &&\n\t\t\t\tname !== \"t\"\n\t\t\t) {\n\t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n\t\t\t}\n\t\t}\n\t\tfn.e = function(chunkId) {\n\t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n\t\t\thotChunksLoading++;\n\t\t\treturn $require$.e(chunkId).then(finishChunkLoading, function(err) {\n\t\t\t\tfinishChunkLoading();\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\t\tfunction finishChunkLoading() {\n\t\t\t\thotChunksLoading--;\n\t\t\t\tif (hotStatus === \"prepare\") {\n\t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n\t\t\t\t\t}\n\t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n\t\t\t\t\t\thotUpdateDownloaded();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfn.t = function(value, mode) {\n\t\t\tif (mode & 1) value = fn(value);\n\t\t\treturn $require$.t(value, mode & ~1);\n\t\t};\n\t\treturn fn;\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotCreateModule(moduleId) {\n\t\tvar hot = {\n\t\t\t// private stuff\n\t\t\t_acceptedDependencies: {},\n\t\t\t_declinedDependencies: {},\n\t\t\t_selfAccepted: false,\n\t\t\t_selfDeclined: false,\n\t\t\t_disposeHandlers: [],\n\t\t\t_main: hotCurrentChildModule !== moduleId,\n\n\t\t\t// Module API\n\t\t\tactive: true,\n\t\t\taccept: function(dep, callback) {\n\t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n\t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n\t\t\t\telse if (typeof dep === \"object\")\n\t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n\t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n\t\t\t},\n\t\t\tdecline: function(dep) {\n\t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n\t\t\t\telse if (typeof dep === \"object\")\n\t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n\t\t\t\telse hot._declinedDependencies[dep] = true;\n\t\t\t},\n\t\t\tdispose: function(callback) {\n\t\t\t\thot._disposeHandlers.push(callback);\n\t\t\t},\n\t\t\taddDisposeHandler: function(callback) {\n\t\t\t\thot._disposeHandlers.push(callback);\n\t\t\t},\n\t\t\tremoveDisposeHandler: function(callback) {\n\t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n\t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n\t\t\t},\n\n\t\t\t// Management API\n\t\t\tcheck: hotCheck,\n\t\t\tapply: hotApply,\n\t\t\tstatus: function(l) {\n\t\t\t\tif (!l) return hotStatus;\n\t\t\t\thotStatusHandlers.push(l);\n\t\t\t},\n\t\t\taddStatusHandler: function(l) {\n\t\t\t\thotStatusHandlers.push(l);\n\t\t\t},\n\t\t\tremoveStatusHandler: function(l) {\n\t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n\t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n\t\t\t},\n\n\t\t\t//inherit from previous dispose call\n\t\t\tdata: hotCurrentModuleData[moduleId]\n\t\t};\n\t\thotCurrentChildModule = undefined;\n\t\treturn hot;\n\t}\n\n\tvar hotStatusHandlers = [];\n\tvar hotStatus = \"idle\";\n\n\tfunction hotSetStatus(newStatus) {\n\t\thotStatus = newStatus;\n\t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n\t\t\thotStatusHandlers[i].call(null, newStatus);\n\t}\n\n\t// while downloading\n\tvar hotWaitingFiles = 0;\n\tvar hotChunksLoading = 0;\n\tvar hotWaitingFilesMap = {};\n\tvar hotRequestedFilesMap = {};\n\tvar hotAvailableFilesMap = {};\n\tvar hotDeferred;\n\n\t// The update info\n\tvar hotUpdate, hotUpdateNewHash;\n\n\tfunction toModuleId(id) {\n\t\tvar isNumber = +id + \"\" === id;\n\t\treturn isNumber ? +id : id;\n\t}\n\n\tfunction hotCheck(apply) {\n\t\tif (hotStatus !== \"idle\") {\n\t\t\tthrow new Error(\"check() is only allowed in idle status\");\n\t\t}\n\t\thotApplyOnUpdate = apply;\n\t\thotSetStatus(\"check\");\n\t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n\t\t\tif (!update) {\n\t\t\t\thotSetStatus(\"idle\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\thotRequestedFilesMap = {};\n\t\t\thotWaitingFilesMap = {};\n\t\t\thotAvailableFilesMap = update.c;\n\t\t\thotUpdateNewHash = update.h;\n\n\t\t\thotSetStatus(\"prepare\");\n\t\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\t\thotDeferred = {\n\t\t\t\t\tresolve: resolve,\n\t\t\t\t\treject: reject\n\t\t\t\t};\n\t\t\t});\n\t\t\thotUpdate = {};\n\t\t\t/*foreachInstalledChunks*/\n\t\t\t// eslint-disable-next-line no-lone-blocks\n\t\t\t{\n\t\t\t\t/*globals chunkId */\n\t\t\t\thotEnsureUpdateChunk(chunkId);\n\t\t\t}\n\t\t\tif (\n\t\t\t\thotStatus === \"prepare\" &&\n\t\t\t\thotChunksLoading === 0 &&\n\t\t\t\thotWaitingFiles === 0\n\t\t\t) {\n\t\t\t\thotUpdateDownloaded();\n\t\t\t}\n\t\t\treturn promise;\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotAddUpdateChunk(chunkId, moreModules) {\n\t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n\t\t\treturn;\n\t\thotRequestedFilesMap[chunkId] = false;\n\t\tfor (var moduleId in moreModules) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n\t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n\t\t\thotUpdateDownloaded();\n\t\t}\n\t}\n\n\tfunction hotEnsureUpdateChunk(chunkId) {\n\t\tif (!hotAvailableFilesMap[chunkId]) {\n\t\t\thotWaitingFilesMap[chunkId] = true;\n\t\t} else {\n\t\t\thotRequestedFilesMap[chunkId] = true;\n\t\t\thotWaitingFiles++;\n\t\t\thotDownloadUpdateChunk(chunkId);\n\t\t}\n\t}\n\n\tfunction hotUpdateDownloaded() {\n\t\thotSetStatus(\"ready\");\n\t\tvar deferred = hotDeferred;\n\t\thotDeferred = null;\n\t\tif (!deferred) return;\n\t\tif (hotApplyOnUpdate) {\n\t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n\t\t\t// avoid triggering uncaught exception warning in Chrome.\n\t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n\t\t\tPromise.resolve()\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n\t\t\t\t})\n\t\t\t\t.then(\n\t\t\t\t\tfunction(result) {\n\t\t\t\t\t\tdeferred.resolve(result);\n\t\t\t\t\t},\n\t\t\t\t\tfunction(err) {\n\t\t\t\t\t\tdeferred.reject(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t} else {\n\t\t\tvar outdatedModules = [];\n\t\t\tfor (var id in hotUpdate) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n\t\t\t\t\toutdatedModules.push(toModuleId(id));\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeferred.resolve(outdatedModules);\n\t\t}\n\t}\n\n\tfunction hotApply(options) {\n\t\tif (hotStatus !== \"ready\")\n\t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n\t\toptions = options || {};\n\n\t\tvar cb;\n\t\tvar i;\n\t\tvar j;\n\t\tvar module;\n\t\tvar moduleId;\n\n\t\tfunction getAffectedStuff(updateModuleId) {\n\t\t\tvar outdatedModules = [updateModuleId];\n\t\t\tvar outdatedDependencies = {};\n\n\t\t\tvar queue = outdatedModules.map(function(id) {\n\t\t\t\treturn {\n\t\t\t\t\tchain: [id],\n\t\t\t\t\tid: id\n\t\t\t\t};\n\t\t\t});\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tvar queueItem = queue.pop();\n\t\t\t\tvar moduleId = queueItem.id;\n\t\t\t\tvar chain = queueItem.chain;\n\t\t\t\tmodule = installedModules[moduleId];\n\t\t\t\tif (!module || module.hot._selfAccepted) continue;\n\t\t\t\tif (module.hot._selfDeclined) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"self-declined\",\n\t\t\t\t\t\tchain: chain,\n\t\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (module.hot._main) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"unaccepted\",\n\t\t\t\t\t\tchain: chain,\n\t\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n\t\t\t\t\tvar parentId = module.parents[i];\n\t\t\t\t\tvar parent = installedModules[parentId];\n\t\t\t\t\tif (!parent) continue;\n\t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: \"declined\",\n\t\t\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\tparentId: parentId\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n\t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n\t\t\t\t\t\tif (!outdatedDependencies[parentId])\n\t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n\t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdelete outdatedDependencies[parentId];\n\t\t\t\t\toutdatedModules.push(parentId);\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\t\tid: parentId\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttype: \"accepted\",\n\t\t\t\tmoduleId: updateModuleId,\n\t\t\t\toutdatedModules: outdatedModules,\n\t\t\t\toutdatedDependencies: outdatedDependencies\n\t\t\t};\n\t\t}\n\n\t\tfunction addAllToSet(a, b) {\n\t\t\tfor (var i = 0; i < b.length; i++) {\n\t\t\t\tvar item = b[i];\n\t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n\t\t\t}\n\t\t}\n\n\t\t// at begin all updates modules are outdated\n\t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n\t\tvar outdatedDependencies = {};\n\t\tvar outdatedModules = [];\n\t\tvar appliedUpdate = {};\n\n\t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n\t\t\tconsole.warn(\n\t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n\t\t\t);\n\t\t};\n\n\t\tfor (var id in hotUpdate) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n\t\t\t\tmoduleId = toModuleId(id);\n\t\t\t\t/** @type {TODO} */\n\t\t\t\tvar result;\n\t\t\t\tif (hotUpdate[id]) {\n\t\t\t\t\tresult = getAffectedStuff(moduleId);\n\t\t\t\t} else {\n\t\t\t\t\tresult = {\n\t\t\t\t\t\ttype: \"disposed\",\n\t\t\t\t\t\tmoduleId: id\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t/** @type {Error|false} */\n\t\t\t\tvar abortError = false;\n\t\t\t\tvar doApply = false;\n\t\t\t\tvar doDispose = false;\n\t\t\t\tvar chainInfo = \"\";\n\t\t\t\tif (result.chain) {\n\t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n\t\t\t\t}\n\t\t\t\tswitch (result.type) {\n\t\t\t\t\tcase \"self-declined\":\n\t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n\t\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"declined\":\n\t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n\t\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\t\t\t\tresult.parentId +\n\t\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"unaccepted\":\n\t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n\t\t\t\t\t\tif (!options.ignoreUnaccepted)\n\t\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"accepted\":\n\t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n\t\t\t\t\t\tdoApply = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"disposed\":\n\t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n\t\t\t\t\t\tdoDispose = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n\t\t\t\t}\n\t\t\t\tif (abortError) {\n\t\t\t\t\thotSetStatus(\"abort\");\n\t\t\t\t\treturn Promise.reject(abortError);\n\t\t\t\t}\n\t\t\t\tif (doApply) {\n\t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n\t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n\t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\tresult.outdatedDependencies,\n\t\t\t\t\t\t\t\tmoduleId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n\t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n\t\t\t\t\t\t\taddAllToSet(\n\t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n\t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (doDispose) {\n\t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n\t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Store self accepted outdated modules to require them later by the module system\n\t\tvar outdatedSelfAcceptedModules = [];\n\t\tfor (i = 0; i < outdatedModules.length; i++) {\n\t\t\tmoduleId = outdatedModules[i];\n\t\t\tif (\n\t\t\t\tinstalledModules[moduleId] &&\n\t\t\t\tinstalledModules[moduleId].hot._selfAccepted &&\n\t\t\t\t// removed self-accepted modules should not be required\n\t\t\t\tappliedUpdate[moduleId] !== warnUnexpectedRequire\n\t\t\t) {\n\t\t\t\toutdatedSelfAcceptedModules.push({\n\t\t\t\t\tmodule: moduleId,\n\t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Now in \"dispose\" phase\n\t\thotSetStatus(\"dispose\");\n\t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n\t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n\t\t\t\thotDisposeChunk(chunkId);\n\t\t\t}\n\t\t});\n\n\t\tvar idx;\n\t\tvar queue = outdatedModules.slice();\n\t\twhile (queue.length > 0) {\n\t\t\tmoduleId = queue.pop();\n\t\t\tmodule = installedModules[moduleId];\n\t\t\tif (!module) continue;\n\n\t\t\tvar data = {};\n\n\t\t\t// Call dispose handlers\n\t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n\t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n\t\t\t\tcb = disposeHandlers[j];\n\t\t\t\tcb(data);\n\t\t\t}\n\t\t\thotCurrentModuleData[moduleId] = data;\n\n\t\t\t// disable module (this disables requires from this module)\n\t\t\tmodule.hot.active = false;\n\n\t\t\t// remove module from cache\n\t\t\tdelete installedModules[moduleId];\n\n\t\t\t// when disposing there is no need to call dispose handler\n\t\t\tdelete outdatedDependencies[moduleId];\n\n\t\t\t// remove \"parents\" references from all children\n\t\t\tfor (j = 0; j < module.children.length; j++) {\n\t\t\t\tvar child = installedModules[module.children[j]];\n\t\t\t\tif (!child) continue;\n\t\t\t\tidx = child.parents.indexOf(moduleId);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tchild.parents.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// remove outdated dependency from module children\n\t\tvar dependency;\n\t\tvar moduleOutdatedDependencies;\n\t\tfor (moduleId in outdatedDependencies) {\n\t\t\tif (\n\t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n\t\t\t) {\n\t\t\t\tmodule = installedModules[moduleId];\n\t\t\t\tif (module) {\n\t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n\t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\tidx = module.children.indexOf(dependency);\n\t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now in \"apply\" phase\n\t\thotSetStatus(\"apply\");\n\n\t\thotCurrentHash = hotUpdateNewHash;\n\n\t\t// insert new code\n\t\tfor (moduleId in appliedUpdate) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n\t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n\t\t\t}\n\t\t}\n\n\t\t// call accept handlers\n\t\tvar error = null;\n\t\tfor (moduleId in outdatedDependencies) {\n\t\t\tif (\n\t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n\t\t\t) {\n\t\t\t\tmodule = installedModules[moduleId];\n\t\t\t\tif (module) {\n\t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n\t\t\t\t\tvar callbacks = [];\n\t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n\t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n\t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n\t\t\t\t\t\tif (cb) {\n\t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n\t\t\t\t\t\t\tcallbacks.push(cb);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n\t\t\t\t\t\tcb = callbacks[i];\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n\t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\tif (!error) error = err;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Load self accepted modules\n\t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n\t\t\tvar item = outdatedSelfAcceptedModules[i];\n\t\t\tmoduleId = item.module;\n\t\t\thotCurrentParents = [moduleId];\n\t\t\ttry {\n\t\t\t\t$require$(moduleId);\n\t\t\t} catch (err) {\n\t\t\t\tif (typeof item.errorHandler === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\titem.errorHandler(err);\n\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\tif (!error) error = err2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!error) error = err;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\ttype: \"self-accept-errored\",\n\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\tif (!error) error = err;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// handle errors in accept handlers and self accepted module load\n\t\tif (error) {\n\t\t\thotSetStatus(\"fail\");\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\thotSetStatus(\"idle\");\n\t\treturn new Promise(function(resolve) {\n\t\t\tresolve(outdatedModules);\n\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { SyncBailHook } = require(\"tapable\");\nconst { RawSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\nconst ModuleHotAcceptDependency = require(\"./dependencies/ModuleHotAcceptDependency\");\nconst ModuleHotDeclineDependency = require(\"./dependencies/ModuleHotDeclineDependency\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst NullFactory = require(\"./NullFactory\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nmodule.exports = class HotModuleReplacementPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t\tthis.multiStep = this.options.multiStep;\n\t\tthis.fullBuildTimeout = this.options.fullBuildTimeout || 200;\n\t\tthis.requestTimeout = this.options.requestTimeout || 10000;\n\t}\n\n\tapply(compiler) {\n\t\tconst multiStep = this.multiStep;\n\t\tconst fullBuildTimeout = this.fullBuildTimeout;\n\t\tconst requestTimeout = this.requestTimeout;\n\t\tconst hotUpdateChunkFilename =\n\t\t\tcompiler.options.output.hotUpdateChunkFilename;\n\t\tconst hotUpdateMainFilename = compiler.options.output.hotUpdateMainFilename;\n\t\tcompiler.hooks.additionalPass.tapAsync(\n\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\tcallback => {\n\t\t\t\tif (multiStep) return setTimeout(callback, fullBuildTimeout);\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\n\t\tconst addParserPlugins = (parser, parserOptions) => {\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(\"__webpack_hash__\")\n\t\t\t\t.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\"__webpack_require__.h()\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(\"__webpack_hash__\")\n\t\t\t\t.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tParserHelpers.evaluateToString(\"string\")\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateIdentifier.for(\"module.hot\").tap(\n\t\t\t\t{\n\t\t\t\t\tname: \"HotModuleReplacementPlugin\",\n\t\t\t\t\tbefore: \"NodeStuffPlugin\"\n\t\t\t\t},\n\t\t\t\texpr => {\n\t\t\t\t\treturn ParserHelpers.evaluateToIdentifier(\n\t\t\t\t\t\t\"module.hot\",\n\t\t\t\t\t\t!!parser.state.compilation.hotUpdateChunkTemplate\n\t\t\t\t\t)(expr);\n\t\t\t\t}\n\t\t\t);\n\t\t\t// TODO webpack 5: refactor this, no custom hooks\n\t\t\tif (!parser.hooks.hotAcceptCallback) {\n\t\t\t\tparser.hooks.hotAcceptCallback = new SyncBailHook([\n\t\t\t\t\t\"expression\",\n\t\t\t\t\t\"requests\"\n\t\t\t\t]);\n\t\t\t}\n\t\t\tif (!parser.hooks.hotAcceptWithoutCallback) {\n\t\t\t\tparser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\n\t\t\t\t\t\"expression\",\n\t\t\t\t\t\"requests\"\n\t\t\t\t]);\n\t\t\t}\n\t\t\tparser.hooks.call\n\t\t\t\t.for(\"module.hot.accept\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", expr => {\n\t\t\t\t\tif (!parser.state.compilation.hotUpdateChunkTemplate) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (expr.arguments.length >= 1) {\n\t\t\t\t\t\tconst arg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tlet params = [];\n\t\t\t\t\t\tlet requests = [];\n\t\t\t\t\t\tif (arg.isString()) {\n\t\t\t\t\t\t\tparams = [arg];\n\t\t\t\t\t\t} else if (arg.isArray()) {\n\t\t\t\t\t\t\tparams = arg.items.filter(param => param.isString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (params.length > 0) {\n\t\t\t\t\t\t\tparams.forEach((param, idx) => {\n\t\t\t\t\t\t\t\tconst request = param.string;\n\t\t\t\t\t\t\t\tconst dep = new ModuleHotAcceptDependency(request, param.range);\n\t\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\n\t\t\t\t\t\t\t\tdep.loc.index = idx;\n\t\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\t\trequests.push(request);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (expr.arguments.length > 1) {\n\t\t\t\t\t\t\t\tparser.hooks.hotAcceptCallback.call(\n\t\t\t\t\t\t\t\t\texpr.arguments[1],\n\t\t\t\t\t\t\t\t\trequests\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tparser.walkExpression(expr.arguments[1]); // other args are ignored\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparser.hooks.hotAcceptWithoutCallback.call(expr, requests);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tparser.hooks.call\n\t\t\t\t.for(\"module.hot.decline\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", expr => {\n\t\t\t\t\tif (!parser.state.compilation.hotUpdateChunkTemplate) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (expr.arguments.length === 1) {\n\t\t\t\t\t\tconst arg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tlet params = [];\n\t\t\t\t\t\tif (arg.isString()) {\n\t\t\t\t\t\t\tparams = [arg];\n\t\t\t\t\t\t} else if (arg.isArray()) {\n\t\t\t\t\t\t\tparams = arg.items.filter(param => param.isString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparams.forEach((param, idx) => {\n\t\t\t\t\t\t\tconst dep = new ModuleHotDeclineDependency(\n\t\t\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\t\t\tparam.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\n\t\t\t\t\t\t\tdep.loc.index = idx;\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(\"module.hot\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", ParserHelpers.skipTraversal);\n\t\t};\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate;\n\t\t\t\tif (!hotUpdateChunkTemplate) return;\n\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tModuleHotAcceptDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tModuleHotAcceptDependency,\n\t\t\t\t\tnew ModuleHotAcceptDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tModuleHotDeclineDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tModuleHotDeclineDependency,\n\t\t\t\t\tnew ModuleHotDeclineDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.record.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(compilation, records) => {\n\t\t\t\t\t\tif (records.hash === compilation.hash) return;\n\t\t\t\t\t\trecords.hash = compilation.hash;\n\t\t\t\t\t\trecords.moduleHashs = {};\n\t\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\t\trecords.moduleHashs[identifier] = module.hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecords.chunkHashs = {};\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\trecords.chunkHashs[chunk.id] = chunk.hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecords.chunkModuleIds = {};\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\trecords.chunkModuleIds[chunk.id] = Array.from(\n\t\t\t\t\t\t\t\tchunk.modulesIterable,\n\t\t\t\t\t\t\t\tm => m.id\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tlet initialPass = false;\n\t\t\t\tlet recompilation = false;\n\t\t\t\tcompilation.hooks.afterHash.tap(\"HotModuleReplacementPlugin\", () => {\n\t\t\t\t\tlet records = compilation.records;\n\t\t\t\t\tif (!records) {\n\t\t\t\t\t\tinitialPass = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!records.hash) initialPass = true;\n\t\t\t\t\tconst preHash = records.preHash || \"x\";\n\t\t\t\t\tconst prepreHash = records.prepreHash || \"x\";\n\t\t\t\t\tif (preHash === compilation.hash) {\n\t\t\t\t\t\trecompilation = true;\n\t\t\t\t\t\tcompilation.modifyHash(prepreHash);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trecords.prepreHash = records.hash || \"x\";\n\t\t\t\t\trecords.preHash = compilation.hash;\n\t\t\t\t\tcompilation.modifyHash(records.prepreHash);\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.shouldGenerateChunkAssets.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (multiStep && !recompilation && !initialPass) return false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.needAdditionalPass.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (multiStep && !recompilation && !initialPass) return true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.additionalChunkAssets.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst records = compilation.records;\n\t\t\t\t\t\tif (records.hash === compilation.hash) return;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!records.moduleHashs ||\n\t\t\t\t\t\t\t!records.chunkHashs ||\n\t\t\t\t\t\t\t!records.chunkModuleIds\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\t\tlet hash = module.hash;\n\t\t\t\t\t\t\tmodule.hotUpdate = records.moduleHashs[identifier] !== hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst hotUpdateMainContent = {\n\t\t\t\t\t\t\th: compilation.hash,\n\t\t\t\t\t\t\tc: {}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfor (const key of Object.keys(records.chunkHashs)) {\n\t\t\t\t\t\t\tconst chunkId = isNaN(+key) ? key : +key;\n\t\t\t\t\t\t\tconst currentChunk = compilation.chunks.find(\n\t\t\t\t\t\t\t\tchunk => `${chunk.id}` === key\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (currentChunk) {\n\t\t\t\t\t\t\t\tconst newModules = currentChunk\n\t\t\t\t\t\t\t\t\t.getModules()\n\t\t\t\t\t\t\t\t\t.filter(module => module.hotUpdate);\n\t\t\t\t\t\t\t\tconst allModules = new Set();\n\t\t\t\t\t\t\t\tfor (const module of currentChunk.modulesIterable) {\n\t\t\t\t\t\t\t\t\tallModules.add(module.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst removedModules = records.chunkModuleIds[chunkId].filter(\n\t\t\t\t\t\t\t\t\tid => !allModules.has(id)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (newModules.length > 0 || removedModules.length > 0) {\n\t\t\t\t\t\t\t\t\tconst source = hotUpdateChunkTemplate.render(\n\t\t\t\t\t\t\t\t\t\tchunkId,\n\t\t\t\t\t\t\t\t\t\tnewModules,\n\t\t\t\t\t\t\t\t\t\tremovedModules,\n\t\t\t\t\t\t\t\t\t\tcompilation.hash,\n\t\t\t\t\t\t\t\t\t\tcompilation.moduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\t\tcompilation.dependencyTemplates\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst filename = compilation.getPath(hotUpdateChunkFilename, {\n\t\t\t\t\t\t\t\t\t\thash: records.hash,\n\t\t\t\t\t\t\t\t\t\tchunk: currentChunk\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tcompilation.additionalChunkAssets.push(filename);\n\t\t\t\t\t\t\t\t\tcompilation.assets[filename] = source;\n\t\t\t\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = true;\n\t\t\t\t\t\t\t\t\tcurrentChunk.files.push(filename);\n\t\t\t\t\t\t\t\t\tcompilation.hooks.chunkAsset.call(currentChunk, filename);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst source = new RawSource(JSON.stringify(hotUpdateMainContent));\n\t\t\t\t\t\tconst filename = compilation.getPath(hotUpdateMainFilename, {\n\t\t\t\t\t\t\thash: records.hash\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcompilation.assets[filename] = source;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\n\t\t\t\tmainTemplate.hooks.hash.tap(\"HotModuleReplacementPlugin\", hash => {\n\t\t\t\t\thash.update(\"HotMainTemplateDecorator\");\n\t\t\t\t});\n\n\t\t\t\tmainTemplate.hooks.moduleRequire.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(_, chunk, hash, varModuleId) => {\n\t\t\t\t\t\treturn `hotCreateRequire(${varModuleId})`;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tsource => {\n\t\t\t\t\t\tconst buf = [source];\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_hash__\");\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\tmainTemplate.requireFn +\n\t\t\t\t\t\t\t\t\".h = function() { return hotCurrentHash; };\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString(buf);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst needChunkLoadingCode = chunk => {\n\t\t\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\t\t\tif (chunkGroup.chunks.length > 1) return true;\n\t\t\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\tmainTemplate.hooks.bootstrap.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(source, chunk, hash) => {\n\t\t\t\t\t\tsource = mainTemplate.hooks.hotBootstrap.call(source, chunk, hash);\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\thotInitCode\n\t\t\t\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash))\n\t\t\t\t\t\t\t\t.replace(/\\$requestTimeout\\$/g, requestTimeout)\n\t\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t\t/\\/\\*foreachInstalledChunks\\*\\//g,\n\t\t\t\t\t\t\t\t\tneedChunkLoadingCode(chunk)\n\t\t\t\t\t\t\t\t\t\t? \"for(var chunkId in installedChunks)\"\n\t\t\t\t\t\t\t\t\t\t: `var chunkId = ${JSON.stringify(chunk.id)};`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.globalHash.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => true\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.currentHash.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(_, length) => {\n\t\t\t\t\t\tif (isFinite(length)) {\n\t\t\t\t\t\t\treturn `hotCurrentHash.substr(0, ${length})`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn \"hotCurrentHash\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.moduleObj.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(source, chunk, hash, varModuleId) => {\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\t`${source},`,\n\t\t\t\t\t\t\t`hot: hotCreateModule(${varModuleId}),`,\n\t\t\t\t\t\t\t\"parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\",\n\t\t\t\t\t\t\t\"children: []\"\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// TODO add HMR support for javascript/esm\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n\n\t\t\t\tcompilation.hooks.normalModuleLoader.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tcontext => {\n\t\t\t\t\t\tcontext.hot = true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n};\n\nconst hotInitCode = Template.getFunctionContent(\n\trequire(\"./HotModuleReplacement.runtime\")\n);\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Chunk = require(\"./Chunk\");\n\nclass HotUpdateChunk extends Chunk {\n\tconstructor() {\n\t\tsuper();\n\t\t/** @type {(string|number)[]} */\n\t\tthis.removedModules = undefined;\n\t}\n}\n\nmodule.exports = HotUpdateChunk;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"./Template\");\nconst HotUpdateChunk = require(\"./HotUpdateChunk\");\nconst { Tapable, SyncWaterfallHook, SyncHook } = require(\"tapable\");\n\nmodule.exports = class HotUpdateChunkTemplate extends Tapable {\n\tconstructor(outputOptions) {\n\t\tsuper();\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.hooks = {\n\t\t\tmodules: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"modules\",\n\t\t\t\t\"removedModules\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trender: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"modules\",\n\t\t\t\t\"removedModules\",\n\t\t\t\t\"hash\",\n\t\t\t\t\"id\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\thash: new SyncHook([\"hash\"])\n\t\t};\n\t}\n\n\trender(\n\t\tid,\n\t\tmodules,\n\t\tremovedModules,\n\t\thash,\n\t\tmoduleTemplate,\n\t\tdependencyTemplates\n\t) {\n\t\tconst hotUpdateChunk = new HotUpdateChunk();\n\t\thotUpdateChunk.id = id;\n\t\thotUpdateChunk.setModules(modules);\n\t\thotUpdateChunk.removedModules = removedModules;\n\t\tconst modulesSource = Template.renderChunkModules(\n\t\t\thotUpdateChunk,\n\t\t\tm => typeof m.source === \"function\",\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tconst core = this.hooks.modules.call(\n\t\t\tmodulesSource,\n\t\t\tmodules,\n\t\t\tremovedModules,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tconst source = this.hooks.render.call(\n\t\t\tcore,\n\t\t\tmodules,\n\t\t\tremovedModules,\n\t\t\thash,\n\t\t\tid,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\treturn source;\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(\"HotUpdateChunkTemplate\");\n\t\thash.update(\"1\");\n\t\tthis.hooks.hash.call(hash);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/IgnorePlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass IgnorePlugin {\n\t/**\n\t * @param {IgnorePluginOptions} options IgnorePlugin options\n\t */\n\tconstructor(options) {\n\t\t// TODO webpack 5 remove this compat-layer\n\t\tif (arguments.length > 1 || options instanceof RegExp) {\n\t\t\toptions = {\n\t\t\t\tresourceRegExp: arguments[0],\n\t\t\t\tcontextRegExp: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvalidateOptions(schema, options, \"IgnorePlugin\");\n\t\tthis.options = options;\n\n\t\t/** @private @type {Function} */\n\t\tthis.checkIgnore = this.checkIgnore.bind(this);\n\t}\n\n\t/**\n\t * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\"\n\t * and \"contextRegExp\" have to match.\n\t *\n\t * @param {TODO} result result\n\t * @returns {TODO|null} returns result or null if result should be ignored\n\t */\n\tcheckIgnore(result) {\n\t\tif (!result) return result;\n\n\t\tif (\n\t\t\t\"checkResource\" in this.options &&\n\t\t\tthis.options.checkResource &&\n\t\t\tthis.options.checkResource(result.request, result.context)\n\t\t) {\n\t\t\t// TODO webpack 5 remove checkContext, as checkResource already gets context\n\t\t\tif (\"checkContext\" in this.options && this.options.checkContext) {\n\t\t\t\tif (this.options.checkContext(result.context)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t\"resourceRegExp\" in this.options &&\n\t\t\tthis.options.resourceRegExp &&\n\t\t\tthis.options.resourceRegExp.test(result.request)\n\t\t) {\n\t\t\tif (\"contextRegExp\" in this.options && this.options.contextRegExp) {\n\t\t\t\t// if \"contextRegExp\" is given,\n\t\t\t\t// both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n\t\t\t\tif (this.options.contextRegExp.test(result.context)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", nmf => {\n\t\t\tnmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n\t\t});\n\t\tcompiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", cmf => {\n\t\t\tcmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n\t\t});\n\t}\n}\n\nmodule.exports = IgnorePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { RawSource, ReplaceSource } = require(\"webpack-sources\");\n\n// TODO: clean up this file\n// replace with newer constructs\n\n// TODO: remove DependencyVariables and replace them with something better\n\nclass JavascriptGenerator {\n\tgenerate(module, dependencyTemplates, runtimeTemplate) {\n\t\tconst originalSource = module.originalSource();\n\t\tif (!originalSource) {\n\t\t\treturn new RawSource(\"throw new Error('No source available');\");\n\t\t}\n\n\t\tconst source = new ReplaceSource(originalSource);\n\n\t\tthis.sourceBlock(\n\t\t\tmodule,\n\t\t\tmodule,\n\t\t\t[],\n\t\t\tdependencyTemplates,\n\t\t\tsource,\n\t\t\truntimeTemplate\n\t\t);\n\n\t\treturn source;\n\t}\n\n\tsourceBlock(\n\t\tmodule,\n\t\tblock,\n\t\tavailableVars,\n\t\tdependencyTemplates,\n\t\tsource,\n\t\truntimeTemplate\n\t) {\n\t\tfor (const dependency of block.dependencies) {\n\t\t\tthis.sourceDependency(\n\t\t\t\tdependency,\n\t\t\t\tdependencyTemplates,\n\t\t\t\tsource,\n\t\t\t\truntimeTemplate\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Get the variables of all blocks that we need to inject.\n\t\t * These will contain the variable name and its expression.\n\t\t * The name will be added as a parameter in a IIFE the expression as its value.\n\t\t */\n\t\tconst vars = block.variables.reduce((result, value) => {\n\t\t\tconst variable = this.sourceVariables(\n\t\t\t\tvalue,\n\t\t\t\tavailableVars,\n\t\t\t\tdependencyTemplates,\n\t\t\t\truntimeTemplate\n\t\t\t);\n\n\t\t\tif (variable) {\n\t\t\t\tresult.push(variable);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, []);\n\n\t\t/**\n\t\t * if we actually have variables\n\t\t * this is important as how #splitVariablesInUniqueNamedChunks works\n\t\t * it will always return an array in an array which would lead to a IIFE wrapper around\n\t\t * a module if we do this with an empty vars array.\n\t\t */\n\t\tif (vars.length > 0) {\n\t\t\t/**\n\t\t\t * Split all variables up into chunks of unique names.\n\t\t\t * e.g. imagine you have the following variable names that need to be injected:\n\t\t\t * [foo, bar, baz, foo, some, more]\n\t\t\t * we can not inject \"foo\" twice, therefore we just make two IIFEs like so:\n\t\t\t * (function(foo, bar, baz){\n\t\t\t *   (function(foo, some, more){\n\t\t\t *     …\n\t\t\t *   }(…));\n\t\t\t * }(…));\n\t\t\t *\n\t\t\t * \"splitVariablesInUniqueNamedChunks\" splits the variables shown above up to this:\n\t\t\t * [[foo, bar, baz], [foo, some, more]]\n\t\t\t */\n\t\t\tconst injectionVariableChunks = this.splitVariablesInUniqueNamedChunks(\n\t\t\t\tvars\n\t\t\t);\n\n\t\t\t// create all the beginnings of IIFEs\n\t\t\tconst functionWrapperStarts = injectionVariableChunks.map(\n\t\t\t\tvariableChunk => {\n\t\t\t\t\treturn this.variableInjectionFunctionWrapperStartCode(\n\t\t\t\t\t\tvariableChunk.map(variable => variable.name)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// and all the ends\n\t\t\tconst functionWrapperEnds = injectionVariableChunks.map(variableChunk => {\n\t\t\t\treturn this.variableInjectionFunctionWrapperEndCode(\n\t\t\t\t\tmodule,\n\t\t\t\t\tvariableChunk.map(variable => variable.expression),\n\t\t\t\t\tblock\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// join them to one big string\n\t\t\tconst varStartCode = functionWrapperStarts.join(\"\");\n\n\t\t\t// reverse the ends first before joining them, as the last added must be the inner most\n\t\t\tconst varEndCode = functionWrapperEnds.reverse().join(\"\");\n\n\t\t\t// if we have anything, add it to the source\n\t\t\tif (varStartCode && varEndCode) {\n\t\t\t\tconst start = block.range ? block.range[0] : -10;\n\t\t\t\tconst end = block.range\n\t\t\t\t\t? block.range[1]\n\t\t\t\t\t: module.originalSource().size() + 1;\n\t\t\t\tsource.insert(start + 0.5, varStartCode);\n\t\t\t\tsource.insert(end + 0.5, \"\\n/* WEBPACK VAR INJECTION */\" + varEndCode);\n\t\t\t}\n\t\t}\n\n\t\tfor (const childBlock of block.blocks) {\n\t\t\tthis.sourceBlock(\n\t\t\t\tmodule,\n\t\t\t\tchildBlock,\n\t\t\t\tavailableVars.concat(vars),\n\t\t\t\tdependencyTemplates,\n\t\t\t\tsource,\n\t\t\t\truntimeTemplate\n\t\t\t);\n\t\t}\n\t}\n\n\tsourceDependency(dependency, dependencyTemplates, source, runtimeTemplate) {\n\t\tconst template = dependencyTemplates.get(dependency.constructor);\n\t\tif (!template) {\n\t\t\tthrow new Error(\n\t\t\t\t\"No template for dependency: \" + dependency.constructor.name\n\t\t\t);\n\t\t}\n\t\ttemplate.apply(dependency, source, runtimeTemplate, dependencyTemplates);\n\t}\n\n\tsourceVariables(\n\t\tvariable,\n\t\tavailableVars,\n\t\tdependencyTemplates,\n\t\truntimeTemplate\n\t) {\n\t\tconst name = variable.name;\n\t\tconst expr = variable.expressionSource(\n\t\t\tdependencyTemplates,\n\t\t\truntimeTemplate\n\t\t);\n\n\t\tif (\n\t\t\tavailableVars.some(\n\t\t\t\tv => v.name === name && v.expression.source() === expr.source()\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\treturn {\n\t\t\tname: name,\n\t\t\texpression: expr\n\t\t};\n\t}\n\n\t/*\n\t * creates the start part of a IIFE around the module to inject a variable name\n\t * (function(…){   <- this part\n\t * }.call(…))\n\t */\n\tvariableInjectionFunctionWrapperStartCode(varNames) {\n\t\tconst args = varNames.join(\", \");\n\t\treturn `/* WEBPACK VAR INJECTION */(function(${args}) {`;\n\t}\n\n\tcontextArgument(module, block) {\n\t\tif (this === block) {\n\t\t\treturn module.exportsArgument;\n\t\t}\n\t\treturn \"this\";\n\t}\n\n\t/*\n\t * creates the end part of a IIFE around the module to inject a variable name\n\t * (function(…){\n\t * }.call(…))   <- this part\n\t */\n\tvariableInjectionFunctionWrapperEndCode(module, varExpressions, block) {\n\t\tconst firstParam = this.contextArgument(module, block);\n\t\tconst furtherParams = varExpressions.map(e => e.source()).join(\", \");\n\t\treturn `}.call(${firstParam}, ${furtherParams}))`;\n\t}\n\n\tsplitVariablesInUniqueNamedChunks(vars) {\n\t\tconst startState = [[]];\n\t\treturn vars.reduce((chunks, variable) => {\n\t\t\tconst current = chunks[chunks.length - 1];\n\t\t\t// check if variable with same name exists already\n\t\t\t// if so create a new chunk of variables.\n\t\t\tconst variableNameAlreadyExists = current.some(\n\t\t\t\tv => v.name === variable.name\n\t\t\t);\n\n\t\t\tif (variableNameAlreadyExists) {\n\t\t\t\t// start new chunk with current variable\n\t\t\t\tchunks.push([variable]);\n\t\t\t} else {\n\t\t\t\t// else add it to current chunk\n\t\t\t\tcurrent.push(variable);\n\t\t\t}\n\t\t\treturn chunks;\n\t\t}, startState);\n\t}\n}\n\nmodule.exports = JavascriptGenerator;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Parser = require(\"./Parser\");\nconst Template = require(\"./Template\");\nconst { ConcatSource } = require(\"webpack-sources\");\nconst JavascriptGenerator = require(\"./JavascriptGenerator\");\nconst createHash = require(\"./util/createHash\");\n\nclass JavascriptModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"auto\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"script\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"module\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tcompilation.mainTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst hash = options.hash;\n\t\t\t\t\t\tconst fullHash = options.fullHash;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\n\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\tchunk.filenameTemplate || outputOptions.filename;\n\n\t\t\t\t\t\tconst useChunkHash = compilation.mainTemplate.useChunkHash(chunk);\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tcompilation.mainTemplate.render(\n\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tmoduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\tnoChunkHash: !useChunkHash,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\",\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `chunk${chunk.id}`,\n\t\t\t\t\t\t\thash: useChunkHash ? chunk.hash : fullHash\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.mainTemplate.hooks.modules.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(source, chunk, hash, moduleTemplate, dependencyTemplates) => {\n\t\t\t\t\t\treturn Template.renderChunkModules(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tm => typeof m.source === \"function\",\n\t\t\t\t\t\t\tmoduleTemplate,\n\t\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\t\t\"/******/ \"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.chunkTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\tchunk.filenameTemplate || outputOptions.chunkFilename;\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tthis.renderJavascript(\n\t\t\t\t\t\t\t\t\tcompilation.chunkTemplate,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tmoduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `chunk${chunk.id}`,\n\t\t\t\t\t\t\thash: chunk.hash\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.contentHash.tap(\"JavascriptModulesPlugin\", chunk => {\n\t\t\t\t\tconst outputOptions = compilation.outputOptions;\n\t\t\t\t\tconst {\n\t\t\t\t\t\thashSalt,\n\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\thashFunction\n\t\t\t\t\t} = outputOptions;\n\t\t\t\t\tconst hash = createHash(hashFunction);\n\t\t\t\t\tif (hashSalt) hash.update(hashSalt);\n\t\t\t\t\tconst template = chunk.hasRuntime()\n\t\t\t\t\t\t? compilation.mainTemplate\n\t\t\t\t\t\t: compilation.chunkTemplate;\n\t\t\t\t\thash.update(`${chunk.id} `);\n\t\t\t\t\thash.update(chunk.ids ? chunk.ids.join(\",\") : \"\");\n\t\t\t\t\ttemplate.updateHashForChunk(\n\t\t\t\t\t\thash,\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tcompilation.moduleTemplates.javascript,\n\t\t\t\t\t\tcompilation.dependencyTemplates\n\t\t\t\t\t);\n\t\t\t\t\tfor (const m of chunk.modulesIterable) {\n\t\t\t\t\t\tif (typeof m.source === \"function\") {\n\t\t\t\t\t\t\thash.update(m.hash);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst digest = /** @type {string} */ (hash.digest(hashDigest));\n\t\t\t\t\tchunk.contentHash.javascript = digest.substr(0, hashDigestLength);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\trenderJavascript(chunkTemplate, chunk, moduleTemplate, dependencyTemplates) {\n\t\tconst moduleSources = Template.renderChunkModules(\n\t\t\tchunk,\n\t\t\tm => typeof m.source === \"function\",\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tconst core = chunkTemplate.hooks.modules.call(\n\t\t\tmoduleSources,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tlet source = chunkTemplate.hooks.render.call(\n\t\t\tcore,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tif (chunk.hasEntryModule()) {\n\t\t\tsource = chunkTemplate.hooks.renderWithEntry.call(source, chunk);\n\t\t}\n\t\tchunk.rendered = true;\n\t\treturn new ConcatSource(source, \";\");\n\t}\n}\n\nmodule.exports = JavascriptModulesPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\n\nconst stringifySafe = data => {\n\tconst stringified = JSON.stringify(data);\n\tif (!stringified) {\n\t\treturn undefined; // Invalid JSON\n\t}\n\n\treturn stringified.replace(/\\u2028|\\u2029/g, str =>\n\t\tstr === \"\\u2029\" ? \"\\\\u2029\" : \"\\\\u2028\"\n\t); // invalid in JavaScript but valid JSON\n};\n\nclass JsonGenerator {\n\tgenerate(module, dependencyTemplates, runtimeTemplate) {\n\t\tconst source = new ConcatSource();\n\t\tconst data = module.buildInfo.jsonData;\n\t\tif (data === undefined) {\n\t\t\treturn new RawSource(\n\t\t\t\truntimeTemplate.missingModuleStatement({\n\t\t\t\t\trequest: module.rawRequest\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tlet finalJson;\n\t\tif (\n\t\t\tArray.isArray(module.buildMeta.providedExports) &&\n\t\t\t!module.isUsed(\"default\")\n\t\t) {\n\t\t\t// Only some exports are used: We can optimize here, by only generating a part of the JSON\n\t\t\tconst reducedJson = {};\n\t\t\tfor (const exportName of module.buildMeta.providedExports) {\n\t\t\t\tif (exportName === \"default\") continue;\n\t\t\t\tconst used = module.isUsed(exportName);\n\t\t\t\tif (used) {\n\t\t\t\t\treducedJson[used] = data[exportName];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinalJson = reducedJson;\n\t\t} else {\n\t\t\tfinalJson = data;\n\t\t}\n\t\t// Use JSON because JSON.parse() is much faster than JavaScript evaluation\n\t\tconst jsonSource = JSON.stringify(stringifySafe(finalJson));\n\t\tconst jsonExpr = `JSON.parse(${jsonSource})`;\n\t\tsource.add(`${module.moduleArgument}.exports = ${jsonExpr};`);\n\t\treturn source;\n\t}\n}\n\nmodule.exports = JsonGenerator;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst JsonParser = require(\"./JsonParser\");\nconst JsonGenerator = require(\"./JsonGenerator\");\n\nclass JsonModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JsonModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JsonParser();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JsonGenerator();\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = JsonModulesPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst parseJson = require(\"json-parse-better-errors\");\nconst JsonExportsDependency = require(\"./dependencies/JsonExportsDependency\");\n\nclass JsonParser {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tparse(source, state) {\n\t\tconst data = parseJson(source[0] === \"\\ufeff\" ? source.slice(1) : source);\n\t\tstate.module.buildInfo.jsonData = data;\n\t\tstate.module.buildMeta.exportsType = \"named\";\n\t\tif (typeof data === \"object\" && data) {\n\t\t\tstate.module.addDependency(new JsonExportsDependency(Object.keys(data)));\n\t\t}\n\t\tstate.module.addDependency(new JsonExportsDependency([\"default\"]));\n\t\treturn state;\n\t}\n}\n\nmodule.exports = JsonParser;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst asyncLib = require(\"neo-async\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\nclass LibManifestPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.emit.tapAsync(\n\t\t\t\"LibManifestPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tcompilation.chunks,\n\t\t\t\t\t(chunk, callback) => {\n\t\t\t\t\t\tif (!chunk.isOnlyInitial()) {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst targetPath = compilation.getPath(this.options.path, {\n\t\t\t\t\t\t\thash: compilation.hash,\n\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst name =\n\t\t\t\t\t\t\tthis.options.name &&\n\t\t\t\t\t\t\tcompilation.getPath(this.options.name, {\n\t\t\t\t\t\t\t\thash: compilation.hash,\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tconst manifest = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttype: this.options.type,\n\t\t\t\t\t\t\tcontent: Array.from(chunk.modulesIterable, module => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis.options.entryOnly &&\n\t\t\t\t\t\t\t\t\t!module.reasons.some(\n\t\t\t\t\t\t\t\t\t\tr => r.dependency instanceof SingleEntryDependency\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (module.libIdent) {\n\t\t\t\t\t\t\t\t\tconst ident = module.libIdent({\n\t\t\t\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (ident) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tident,\n\t\t\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: module.id,\n\t\t\t\t\t\t\t\t\t\t\t\tbuildMeta: module.buildMeta\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t\t.reduce((obj, item) => {\n\t\t\t\t\t\t\t\t\tobj[item.ident] = item.data;\n\t\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t\t}, Object.create(null))\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Apply formatting to content if format flag is true;\n\t\t\t\t\t\tconst manifestContent = this.options.format\n\t\t\t\t\t\t\t? JSON.stringify(manifest, null, 2)\n\t\t\t\t\t\t\t: JSON.stringify(manifest);\n\t\t\t\t\t\tconst content = Buffer.from(manifestContent, \"utf8\");\n\t\t\t\t\t\tcompiler.outputFileSystem.mkdirp(path.dirname(targetPath), err => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tcompiler.outputFileSystem.writeFile(\n\t\t\t\t\t\t\t\ttargetPath,\n\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = LibManifestPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SetVarMainTemplatePlugin = require(\"./SetVarMainTemplatePlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]|LibraryCustomUmdObject} accessor the accessor\n * @param {\"amd\" | \"commonjs\" | \"root\"} umdProperty property used when a custom umd object is provided\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, umdProperty, joinWith = \"; \") => {\n\tconst normalizedAccessor =\n\t\ttypeof accessor === \"object\" && !Array.isArray(accessor)\n\t\t\t? accessor[umdProperty]\n\t\t\t: accessor;\n\tconst accessors = Array.isArray(normalizedAccessor)\n\t\t? normalizedAccessor\n\t\t: [normalizedAccessor];\n\treturn accessors\n\t\t.map((_, idx) => {\n\t\t\tconst a = base\n\t\t\t\t? base + accessorToObjectAccess(accessors.slice(0, idx + 1))\n\t\t\t\t: accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n\t\t\tif (idx === accessors.length - 1) return a;\n\t\t\tif (idx === 0 && base === undefined) {\n\t\t\t\treturn `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n\t\t\t}\n\t\t\treturn `${a} = ${a} || {}`;\n\t\t})\n\t\t.join(joinWith);\n};\n\nclass LibraryTemplatePlugin {\n\t/**\n\t * @param {string|string[]|LibraryCustomUmdObject} name name of library\n\t * @param {string} target type of library\n\t * @param {boolean} umdNamedDefine setting this to true will name the UMD module\n\t * @param {string|TODO} auxiliaryComment comment in the UMD wrapper\n\t * @param {string|string[]} exportProperty which export should be exposed as library\n\t */\n\tconstructor(name, target, umdNamedDefine, auxiliaryComment, exportProperty) {\n\t\tthis.name = name;\n\t\tthis.target = target;\n\t\tthis.umdNamedDefine = umdNamedDefine;\n\t\tthis.auxiliaryComment = auxiliaryComment;\n\t\tthis.exportProperty = exportProperty;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"LibraryTemplatePlugin\", compilation => {\n\t\t\tif (this.exportProperty) {\n\t\t\t\tconst ExportPropertyMainTemplatePlugin = require(\"./ExportPropertyMainTemplatePlugin\");\n\t\t\t\tnew ExportPropertyMainTemplatePlugin(this.exportProperty).apply(\n\t\t\t\t\tcompilation\n\t\t\t\t);\n\t\t\t}\n\t\t\tswitch (this.target) {\n\t\t\t\tcase \"var\":\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.name ||\n\t\t\t\t\t\t(typeof this.name === \"object\" && !Array.isArray(this.name))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"library name must be set and not an UMD custom object for non-UMD target\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t`var ${accessorAccess(undefined, this.name, \"root\")}`,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"assign\":\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\taccessorAccess(undefined, this.name, \"root\"),\n\t\t\t\t\t\tfalse\n\t\t\t\t\t).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"this\":\n\t\t\t\tcase \"self\":\n\t\t\t\tcase \"window\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(this.target, this.name, \"root\"),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(this.target, true).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"global\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(\n\t\t\t\t\t\t\t\tcompilation.runtimeTemplate.outputOptions.globalObject,\n\t\t\t\t\t\t\t\tthis.name,\n\t\t\t\t\t\t\t\t\"root\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\tcompilation.runtimeTemplate.outputOptions.globalObject,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"commonjs\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(\"exports\", this.name, \"commonjs\"),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\"exports\", true).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"commonjs2\":\n\t\t\t\tcase \"commonjs-module\":\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\"module.exports\", false).apply(\n\t\t\t\t\t\tcompilation\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"amd\":\n\t\t\t\tcase \"amd-require\": {\n\t\t\t\t\tconst AmdMainTemplatePlugin = require(\"./AmdMainTemplatePlugin\");\n\t\t\t\t\tif (this.name && typeof this.name !== \"string\") {\n\t\t\t\t\t\tthrow new Error(\"library name must be a string for amd target\");\n\t\t\t\t\t}\n\t\t\t\t\tnew AmdMainTemplatePlugin({\n\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\trequireAsWrapper: this.target === \"amd-require\"\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"umd\":\n\t\t\t\tcase \"umd2\": {\n\t\t\t\t\tconst UmdMainTemplatePlugin = require(\"./UmdMainTemplatePlugin\");\n\t\t\t\t\tnew UmdMainTemplatePlugin(this.name, {\n\t\t\t\t\t\toptionalAmdExternalAsGlobal: this.target === \"umd2\",\n\t\t\t\t\t\tnamedDefine: this.umdNamedDefine,\n\t\t\t\t\t\tauxiliaryComment: this.auxiliaryComment\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"jsonp\": {\n\t\t\t\t\tconst JsonpExportMainTemplatePlugin = require(\"./web/JsonpExportMainTemplatePlugin\");\n\t\t\t\t\tif (typeof this.name !== \"string\")\n\t\t\t\t\t\tthrow new Error(\"library name must be a string for jsonp target\");\n\t\t\t\t\tnew JsonpExportMainTemplatePlugin(this.name).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"system\": {\n\t\t\t\t\tconst SystemMainTemplatePlugin = require(\"./SystemMainTemplatePlugin\");\n\t\t\t\t\tnew SystemMainTemplatePlugin({\n\t\t\t\t\t\tname: this.name\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`${this.target} is not a valid Library target`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = LibraryTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/LoaderOptionsPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/LoaderOptionsPlugin\").LoaderOptionsPluginOptions} LoaderOptionsPluginOptions */\n\nclass LoaderOptionsPlugin {\n\t/**\n\t * @param {LoaderOptionsPluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidateOptions(schema, options || {}, \"Loader Options Plugin\");\n\n\t\tif (typeof options !== \"object\") options = {};\n\t\tif (!options.test) {\n\t\t\toptions.test = {\n\t\t\t\ttest: () => true\n\t\t\t};\n\t\t}\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"LoaderOptionsPlugin\", compilation => {\n\t\t\tcompilation.hooks.normalModuleLoader.tap(\n\t\t\t\t\"LoaderOptionsPlugin\",\n\t\t\t\t(context, module) => {\n\t\t\t\t\tconst resource = module.resource;\n\t\t\t\t\tif (!resource) return;\n\t\t\t\t\tconst i = resource.indexOf(\"?\");\n\t\t\t\t\tif (\n\t\t\t\t\t\tModuleFilenameHelpers.matchObject(\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\ti < 0 ? resource : resource.substr(0, i)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (const key of Object.keys(options)) {\n\t\t\t\t\t\t\tif (key === \"include\" || key === \"exclude\" || key === \"test\") {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext[key] = options[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = LoaderOptionsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass LoaderTargetPlugin {\n\tconstructor(target) {\n\t\tthis.target = target;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"LoaderTargetPlugin\", compilation => {\n\t\t\tcompilation.hooks.normalModuleLoader.tap(\n\t\t\t\t\"LoaderTargetPlugin\",\n\t\t\t\tloaderContext => {\n\t\t\t\t\tloaderContext.target = this.target;\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = LoaderTargetPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n\tConcatSource,\n\tOriginalSource,\n\tPrefixSource,\n\tRawSource\n} = require(\"webpack-sources\");\nconst {\n\tTapable,\n\tSyncWaterfallHook,\n\tSyncHook,\n\tSyncBailHook\n} = require(\"tapable\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"webpack-sources\").ConcatSource} ConcatSource */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Module\")} Module} */\n/** @typedef {import(\"./util/createHash\").Hash} Hash} */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate} */\n\n/**\n * @typedef {Object} RenderManifestOptions\n * @property {Chunk} chunk the chunk used to render\n * @property {string} hash\n * @property {string} fullHash\n * @property {TODO} outputOptions\n * @property {{javascript: ModuleTemplate, webassembly: ModuleTemplate}} moduleTemplates\n * @property {Map<TODO, TODO>} dependencyTemplates\n */\n\n// require function shortcuts:\n// __webpack_require__.s = the module id of the entry point\n// __webpack_require__.c = the module cache\n// __webpack_require__.m = the module functions\n// __webpack_require__.p = the bundle public path\n// __webpack_require__.i = the identity function used for harmony imports\n// __webpack_require__.e = the chunk ensure function\n// __webpack_require__.d = the exported property define getter function\n// __webpack_require__.o = Object.prototype.hasOwnProperty.call\n// __webpack_require__.r = define compatibility on export\n// __webpack_require__.t = create a fake namespace object\n// __webpack_require__.n = compatibility get default export\n// __webpack_require__.h = the webpack hash\n// __webpack_require__.w = an object containing all installed WebAssembly.Instance export objects keyed by module id\n// __webpack_require__.oe = the uncaught error handler for the webpack runtime\n// __webpack_require__.nc = the script nonce\n\nmodule.exports = class MainTemplate extends Tapable {\n\t/**\n\t *\n\t * @param {TODO=} outputOptions output options for the MainTemplate\n\t */\n\tconstructor(outputOptions) {\n\t\tsuper();\n\t\t/** @type {TODO?} */\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncWaterfallHook<TODO[], RenderManifestOptions>} */\n\t\t\trenderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n\t\t\tmodules: new SyncWaterfallHook([\n\t\t\t\t\"modules\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"hash\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\tmoduleObj: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"hash\",\n\t\t\t\t\"moduleIdExpression\"\n\t\t\t]),\n\t\t\trequireEnsure: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"hash\",\n\t\t\t\t\"chunkIdExpression\"\n\t\t\t]),\n\t\t\tbootstrap: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"hash\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\tlocalVars: new SyncWaterfallHook([\"source\", \"chunk\", \"hash\"]),\n\t\t\trequire: new SyncWaterfallHook([\"source\", \"chunk\", \"hash\"]),\n\t\t\trequireExtensions: new SyncWaterfallHook([\"source\", \"chunk\", \"hash\"]),\n\t\t\t/** @type {SyncWaterfallHook<string, Chunk, string>} */\n\t\t\tbeforeStartup: new SyncWaterfallHook([\"source\", \"chunk\", \"hash\"]),\n\t\t\t/** @type {SyncWaterfallHook<string, Chunk, string>} */\n\t\t\tstartup: new SyncWaterfallHook([\"source\", \"chunk\", \"hash\"]),\n\t\t\t/** @type {SyncWaterfallHook<string, Chunk, string>} */\n\t\t\tafterStartup: new SyncWaterfallHook([\"source\", \"chunk\", \"hash\"]),\n\t\t\trender: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"hash\",\n\t\t\t\t\"moduleTemplate\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trenderWithEntry: new SyncWaterfallHook([\"source\", \"chunk\", \"hash\"]),\n\t\t\tmoduleRequire: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"hash\",\n\t\t\t\t\"moduleIdExpression\"\n\t\t\t]),\n\t\t\taddModule: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"chunk\",\n\t\t\t\t\"hash\",\n\t\t\t\t\"moduleIdExpression\",\n\t\t\t\t\"moduleExpression\"\n\t\t\t]),\n\t\t\tcurrentHash: new SyncWaterfallHook([\"source\", \"requestedLength\"]),\n\t\t\tassetPath: new SyncWaterfallHook([\"path\", \"options\"]),\n\t\t\thash: new SyncHook([\"hash\"]),\n\t\t\thashForChunk: new SyncHook([\"hash\", \"chunk\"]),\n\t\t\tglobalHashPaths: new SyncWaterfallHook([\"paths\"]),\n\t\t\tglobalHash: new SyncBailHook([\"chunk\", \"paths\"]),\n\n\t\t\t// TODO this should be moved somewhere else\n\t\t\t// It's weird here\n\t\t\thotBootstrap: new SyncWaterfallHook([\"source\", \"chunk\", \"hash\"])\n\t\t};\n\t\tthis.hooks.startup.tap(\"MainTemplate\", (source, chunk, hash) => {\n\t\t\t/** @type {string[]} */\n\t\t\tconst buf = [];\n\t\t\tif (chunk.entryModule) {\n\t\t\t\tbuf.push(\"// Load entry module and return exports\");\n\t\t\t\tbuf.push(\n\t\t\t\t\t`return ${this.renderRequireFunctionForModule(\n\t\t\t\t\t\thash,\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tJSON.stringify(chunk.entryModule.id)\n\t\t\t\t\t)}(${this.requireFn}.s = ${JSON.stringify(chunk.entryModule.id)});`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Template.asString(buf);\n\t\t});\n\t\tthis.hooks.render.tap(\n\t\t\t\"MainTemplate\",\n\t\t\t(bootstrapSource, chunk, hash, moduleTemplate, dependencyTemplates) => {\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tsource.add(\"/******/ (function(modules) { // webpackBootstrap\\n\");\n\t\t\t\tsource.add(new PrefixSource(\"/******/\", bootstrapSource));\n\t\t\t\tsource.add(\"/******/ })\\n\");\n\t\t\t\tsource.add(\n\t\t\t\t\t\"/************************************************************************/\\n\"\n\t\t\t\t);\n\t\t\t\tsource.add(\"/******/ (\");\n\t\t\t\tsource.add(\n\t\t\t\t\tthis.hooks.modules.call(\n\t\t\t\t\t\tnew RawSource(\"\"),\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\thash,\n\t\t\t\t\t\tmoduleTemplate,\n\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tsource.add(\")\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tthis.hooks.localVars.tap(\"MainTemplate\", (source, chunk, hash) => {\n\t\t\treturn Template.asString([\n\t\t\t\tsource,\n\t\t\t\t\"// The module cache\",\n\t\t\t\t\"var installedModules = {};\"\n\t\t\t]);\n\t\t});\n\t\tthis.hooks.require.tap(\"MainTemplate\", (source, chunk, hash) => {\n\t\t\treturn Template.asString([\n\t\t\t\tsource,\n\t\t\t\t\"// Check if module is in cache\",\n\t\t\t\t\"if(installedModules[moduleId]) {\",\n\t\t\t\tTemplate.indent(\"return installedModules[moduleId].exports;\"),\n\t\t\t\t\"}\",\n\t\t\t\t\"// Create a new module (and put it into the cache)\",\n\t\t\t\t\"var module = installedModules[moduleId] = {\",\n\t\t\t\tTemplate.indent(this.hooks.moduleObj.call(\"\", chunk, hash, \"moduleId\")),\n\t\t\t\t\"};\",\n\t\t\t\t\"\",\n\t\t\t\tTemplate.asString(\n\t\t\t\t\toutputOptions.strictModuleExceptionHandling\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\"// Execute the module function\",\n\t\t\t\t\t\t\t\t\"var threw = true;\",\n\t\t\t\t\t\t\t\t\"try {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`modules[moduleId].call(module.exports, module, module.exports, ${this.renderRequireFunctionForModule(\n\t\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\"moduleId\"\n\t\t\t\t\t\t\t\t\t)});`,\n\t\t\t\t\t\t\t\t\t\"threw = false;\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"} finally {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if(threw) delete installedModules[moduleId];\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\"// Execute the module function\",\n\t\t\t\t\t\t\t\t`modules[moduleId].call(module.exports, module, module.exports, ${this.renderRequireFunctionForModule(\n\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\"moduleId\"\n\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t  ]\n\t\t\t\t),\n\t\t\t\t\"\",\n\t\t\t\t\"// Flag the module as loaded\",\n\t\t\t\t\"module.l = true;\",\n\t\t\t\t\"\",\n\t\t\t\t\"// Return the exports of the module\",\n\t\t\t\t\"return module.exports;\"\n\t\t\t]);\n\t\t});\n\t\tthis.hooks.moduleObj.tap(\n\t\t\t\"MainTemplate\",\n\t\t\t(source, chunk, hash, varModuleId) => {\n\t\t\t\treturn Template.asString([\"i: moduleId,\", \"l: false,\", \"exports: {}\"]);\n\t\t\t}\n\t\t);\n\t\tthis.hooks.requireExtensions.tap(\"MainTemplate\", (source, chunk, hash) => {\n\t\t\tconst buf = [];\n\t\t\tconst chunkMaps = chunk.getChunkMaps();\n\t\t\t// Check if there are non initial chunks which need to be imported using require-ensure\n\t\t\tif (Object.keys(chunkMaps.hash).length) {\n\t\t\t\tbuf.push(\"// This file contains only the entry chunk.\");\n\t\t\t\tbuf.push(\"// The chunk loading function for additional chunks\");\n\t\t\t\tbuf.push(`${this.requireFn}.e = function requireEnsure(chunkId) {`);\n\t\t\t\tbuf.push(Template.indent(\"var promises = [];\"));\n\t\t\t\tbuf.push(\n\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\tthis.hooks.requireEnsure.call(\"\", chunk, hash, \"chunkId\")\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbuf.push(Template.indent(\"return Promise.all(promises);\"));\n\t\t\t\tbuf.push(\"};\");\n\t\t\t} else if (\n\t\t\t\tchunk.hasModuleInGraph(m =>\n\t\t\t\t\tm.blocks.some(b => b.chunkGroup && b.chunkGroup.chunks.length > 0)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// There async blocks in the graph, so we need to add an empty requireEnsure\n\t\t\t\t// function anyway. This can happen with multiple entrypoints.\n\t\t\t\tbuf.push(\"// The chunk loading function for additional chunks\");\n\t\t\t\tbuf.push(\"// Since all referenced chunks are already included\");\n\t\t\t\tbuf.push(\"// in this file, this function is empty here.\");\n\t\t\t\tbuf.push(`${this.requireFn}.e = function requireEnsure() {`);\n\t\t\t\tbuf.push(Template.indent(\"return Promise.resolve();\"));\n\t\t\t\tbuf.push(\"};\");\n\t\t\t}\n\t\t\tbuf.push(\"\");\n\t\t\tbuf.push(\"// expose the modules object (__webpack_modules__)\");\n\t\t\tbuf.push(`${this.requireFn}.m = modules;`);\n\n\t\t\tbuf.push(\"\");\n\t\t\tbuf.push(\"// expose the module cache\");\n\t\t\tbuf.push(`${this.requireFn}.c = installedModules;`);\n\n\t\t\tbuf.push(\"\");\n\t\t\tbuf.push(\"// define getter function for harmony exports\");\n\t\t\tbuf.push(`${this.requireFn}.d = function(exports, name, getter) {`);\n\t\t\tbuf.push(\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t`if(!${this.requireFn}.o(exports, name)) {`,\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"Object.defineProperty(exports, name, { enumerable: true, get: getter });\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"}\"\n\t\t\t\t])\n\t\t\t);\n\t\t\tbuf.push(\"};\");\n\n\t\t\tbuf.push(\"\");\n\t\t\tbuf.push(\"// define __esModule on exports\");\n\t\t\tbuf.push(`${this.requireFn}.r = function(exports) {`);\n\t\t\tbuf.push(\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t\"if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"Object.defineProperty(exports, '__esModule', { value: true });\"\n\t\t\t\t])\n\t\t\t);\n\t\t\tbuf.push(\"};\");\n\n\t\t\tbuf.push(\"\");\n\t\t\tbuf.push(\"// create a fake namespace object\");\n\t\t\tbuf.push(\"// mode & 1: value is a module id, require it\");\n\t\t\tbuf.push(\"// mode & 2: merge all properties of value into the ns\");\n\t\t\tbuf.push(\"// mode & 4: return value when already ns object\");\n\t\t\tbuf.push(\"// mode & 8|1: behave like require\");\n\t\t\tbuf.push(`${this.requireFn}.t = function(value, mode) {`);\n\t\t\tbuf.push(\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t`if(mode & 1) value = ${this.requireFn}(value);`,\n\t\t\t\t\t`if(mode & 8) return value;`,\n\t\t\t\t\t\"if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\",\n\t\t\t\t\t\"var ns = Object.create(null);\",\n\t\t\t\t\t`${this.requireFn}.r(ns);`,\n\t\t\t\t\t\"Object.defineProperty(ns, 'default', { enumerable: true, value: value });\",\n\t\t\t\t\t\"if(mode & 2 && typeof value != 'string') for(var key in value) \" +\n\t\t\t\t\t\t`${this.requireFn}.d(ns, key, function(key) { ` +\n\t\t\t\t\t\t\"return value[key]; \" +\n\t\t\t\t\t\t\"}.bind(null, key));\",\n\t\t\t\t\t\"return ns;\"\n\t\t\t\t])\n\t\t\t);\n\t\t\tbuf.push(\"};\");\n\n\t\t\tbuf.push(\"\");\n\t\t\tbuf.push(\n\t\t\t\t\"// getDefaultExport function for compatibility with non-harmony modules\"\n\t\t\t);\n\t\t\tbuf.push(this.requireFn + \".n = function(module) {\");\n\t\t\tbuf.push(\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t\"var getter = module && module.__esModule ?\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"function getDefault() { return module['default']; } :\",\n\t\t\t\t\t\t\"function getModuleExports() { return module; };\"\n\t\t\t\t\t]),\n\t\t\t\t\t`${this.requireFn}.d(getter, 'a', getter);`,\n\t\t\t\t\t\"return getter;\"\n\t\t\t\t])\n\t\t\t);\n\t\t\tbuf.push(\"};\");\n\n\t\t\tbuf.push(\"\");\n\t\t\tbuf.push(\"// Object.prototype.hasOwnProperty.call\");\n\t\t\tbuf.push(\n\t\t\t\t`${this.requireFn}.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };`\n\t\t\t);\n\n\t\t\tconst publicPath = this.getPublicPath({\n\t\t\t\thash: hash\n\t\t\t});\n\t\t\tbuf.push(\"\");\n\t\t\tbuf.push(\"// __webpack_public_path__\");\n\t\t\tbuf.push(`${this.requireFn}.p = ${JSON.stringify(publicPath)};`);\n\t\t\treturn Template.asString(buf);\n\t\t});\n\n\t\tthis.requireFn = \"__webpack_require__\";\n\t}\n\n\t/**\n\t *\n\t * @param {RenderManifestOptions} options render manifest options\n\t * @returns {TODO[]} returns render manifest\n\t */\n\tgetRenderManifest(options) {\n\t\tconst result = [];\n\n\t\tthis.hooks.renderManifest.call(result, options);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * TODO webpack 5: remove moduleTemplate and dependencyTemplates\n\t * @param {string} hash hash to be used for render call\n\t * @param {Chunk} chunk Chunk instance\n\t * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n\t * @returns {string[]} the generated source of the bootstrap code\n\t */\n\trenderBootstrap(hash, chunk, moduleTemplate, dependencyTemplates) {\n\t\tconst buf = [];\n\t\tbuf.push(\n\t\t\tthis.hooks.bootstrap.call(\n\t\t\t\t\"\",\n\t\t\t\tchunk,\n\t\t\t\thash,\n\t\t\t\tmoduleTemplate,\n\t\t\t\tdependencyTemplates\n\t\t\t)\n\t\t);\n\t\tbuf.push(this.hooks.localVars.call(\"\", chunk, hash));\n\t\tbuf.push(\"\");\n\t\tbuf.push(\"// The require function\");\n\t\tbuf.push(`function ${this.requireFn}(moduleId) {`);\n\t\tbuf.push(Template.indent(this.hooks.require.call(\"\", chunk, hash)));\n\t\tbuf.push(\"}\");\n\t\tbuf.push(\"\");\n\t\tbuf.push(\n\t\t\tTemplate.asString(this.hooks.requireExtensions.call(\"\", chunk, hash))\n\t\t);\n\t\tbuf.push(\"\");\n\t\tbuf.push(Template.asString(this.hooks.beforeStartup.call(\"\", chunk, hash)));\n\t\tconst afterStartupCode = Template.asString(\n\t\t\tthis.hooks.afterStartup.call(\"\", chunk, hash)\n\t\t);\n\t\tif (afterStartupCode) {\n\t\t\t// TODO webpack 5: this is a bit hacky to avoid a breaking change\n\t\t\t// change it to a better way\n\t\t\tbuf.push(\"var startupResult = (function() {\");\n\t\t}\n\t\tbuf.push(Template.asString(this.hooks.startup.call(\"\", chunk, hash)));\n\t\tif (afterStartupCode) {\n\t\t\tbuf.push(\"})();\");\n\t\t\tbuf.push(afterStartupCode);\n\t\t\tbuf.push(\"return startupResult;\");\n\t\t}\n\t\treturn buf;\n\t}\n\n\t/**\n\t * @param {string} hash hash to be used for render call\n\t * @param {Chunk} chunk Chunk instance\n\t * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n\t * @returns {ConcatSource} the newly generated source from rendering\n\t */\n\trender(hash, chunk, moduleTemplate, dependencyTemplates) {\n\t\tconst buf = this.renderBootstrap(\n\t\t\thash,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tlet source = this.hooks.render.call(\n\t\t\tnew OriginalSource(\n\t\t\t\tTemplate.prefix(buf, \" \\t\") + \"\\n\",\n\t\t\t\t\"webpack/bootstrap\"\n\t\t\t),\n\t\t\tchunk,\n\t\t\thash,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tif (chunk.hasEntryModule()) {\n\t\t\tsource = this.hooks.renderWithEntry.call(source, chunk, hash);\n\t\t}\n\t\tif (!source) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Compiler error: MainTemplate plugin 'render' should return something\"\n\t\t\t);\n\t\t}\n\t\tchunk.rendered = true;\n\t\treturn new ConcatSource(source, \";\");\n\t}\n\n\t/**\n\t *\n\t * @param {string} hash hash for render fn\n\t * @param {Chunk} chunk Chunk instance for require\n\t * @param {(number|string)=} varModuleId module id\n\t * @returns {TODO} the moduleRequire hook call return signature\n\t */\n\trenderRequireFunctionForModule(hash, chunk, varModuleId) {\n\t\treturn this.hooks.moduleRequire.call(\n\t\t\tthis.requireFn,\n\t\t\tchunk,\n\t\t\thash,\n\t\t\tvarModuleId\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param {string} hash hash for render add fn\n\t * @param {Chunk} chunk Chunk instance for require add fn\n\t * @param {(string|number)=} varModuleId module id\n\t * @param {Module} varModule Module instance\n\t * @returns {TODO} renderAddModule call\n\t */\n\trenderAddModule(hash, chunk, varModuleId, varModule) {\n\t\treturn this.hooks.addModule.call(\n\t\t\t`modules[${varModuleId}] = ${varModule};`,\n\t\t\tchunk,\n\t\t\thash,\n\t\t\tvarModuleId,\n\t\t\tvarModule\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param {string} hash string hash\n\t * @param {number=} length length\n\t * @returns {string} call hook return\n\t */\n\trenderCurrentHashCode(hash, length) {\n\t\tlength = length || Infinity;\n\t\treturn this.hooks.currentHash.call(\n\t\t\tJSON.stringify(hash.substr(0, length)),\n\t\t\tlength\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param {object} options get public path options\n\t * @returns {string} hook call\n\t */\n\tgetPublicPath(options) {\n\t\treturn this.hooks.assetPath.call(\n\t\t\tthis.outputOptions.publicPath || \"\",\n\t\t\toptions\n\t\t);\n\t}\n\n\tgetAssetPath(path, options) {\n\t\treturn this.hooks.assetPath.call(path, options);\n\t}\n\n\t/**\n\t * Updates hash with information from this template\n\t * @param {Hash} hash the hash to update\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(\"maintemplate\");\n\t\thash.update(\"3\");\n\t\tthis.hooks.hash.call(hash);\n\t}\n\n\t/**\n\t * TODO webpack 5: remove moduleTemplate and dependencyTemplates\n\t * Updates hash with chunk-specific information from this template\n\t * @param {Hash} hash the hash to update\n\t * @param {Chunk} chunk the chunk\n\t * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance for render\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates dependency templates\n\t * @returns {void}\n\t */\n\tupdateHashForChunk(hash, chunk, moduleTemplate, dependencyTemplates) {\n\t\tthis.updateHash(hash);\n\t\tthis.hooks.hashForChunk.call(hash, chunk);\n\t\tfor (const line of this.renderBootstrap(\n\t\t\t\"0000\",\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t)) {\n\t\t\thash.update(line);\n\t\t}\n\t}\n\n\tuseChunkHash(chunk) {\n\t\tconst paths = this.hooks.globalHashPaths.call([]);\n\t\treturn !this.hooks.globalHash.call(chunk, paths);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = require(\"memory-fs\");\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\n\nconst DependenciesBlock = require(\"./DependenciesBlock\");\nconst ModuleReason = require(\"./ModuleReason\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nconst EMPTY_RESOLVE_OPTIONS = {};\n\nlet debugId = 1000;\n\nconst sortById = (a, b) => {\n\treturn a.id - b.id;\n};\n\nconst sortByDebugId = (a, b) => {\n\treturn a.debugId - b.debugId;\n};\n\n/** @typedef {(requestShortener: RequestShortener) => string} OptimizationBailoutFunction */\n\nclass Module extends DependenciesBlock {\n\tconstructor(type, context = null) {\n\t\tsuper();\n\t\t/** @type {string} */\n\t\tthis.type = type;\n\t\t/** @type {string} */\n\t\tthis.context = context;\n\n\t\t// Unique Id\n\t\t/** @type {number} */\n\t\tthis.debugId = debugId++;\n\n\t\t// Hash\n\t\t/** @type {string} */\n\t\tthis.hash = undefined;\n\t\t/** @type {string} */\n\t\tthis.renderedHash = undefined;\n\n\t\t// Info from Factory\n\t\t/** @type {TODO} */\n\t\tthis.resolveOptions = EMPTY_RESOLVE_OPTIONS;\n\t\t/** @type {object} */\n\t\tthis.factoryMeta = {};\n\n\t\t// Info from Build\n\t\t/** @type {WebpackError[]} */\n\t\tthis.warnings = [];\n\t\t/** @type {WebpackError[]} */\n\t\tthis.errors = [];\n\t\t/** @type {object} */\n\t\tthis.buildMeta = undefined;\n\t\t/** @type {object} */\n\t\tthis.buildInfo = undefined;\n\n\t\t// Graph (per Compilation)\n\t\t/** @type {ModuleReason[]} */\n\t\tthis.reasons = [];\n\t\t/** @type {SortableSet<Chunk>} */\n\t\tthis._chunks = new SortableSet(undefined, sortById);\n\n\t\t// Info from Compilation (per Compilation)\n\t\t/** @type {number|string} */\n\t\tthis.id = null;\n\t\t/** @type {number} */\n\t\tthis.index = null;\n\t\t/** @type {number} */\n\t\tthis.index2 = null;\n\t\t/** @type {number} */\n\t\tthis.depth = null;\n\t\t/** @type {Module} */\n\t\tthis.issuer = null;\n\t\t/** @type {undefined | object} */\n\t\tthis.profile = undefined;\n\t\t/** @type {boolean} */\n\t\tthis.prefetched = false;\n\t\t/** @type {boolean} */\n\t\tthis.built = false;\n\n\t\t// Info from Optimization (per Compilation)\n\t\t/** @type {null | boolean} */\n\t\tthis.used = null;\n\t\t/** @type {false | true | string[]} */\n\t\tthis.usedExports = null;\n\t\t/** @type {(string | OptimizationBailoutFunction)[]} */\n\t\tthis.optimizationBailout = [];\n\n\t\t// delayed operations\n\t\t/** @type {undefined | {oldChunk: Chunk, newChunks: Chunk[]}[] } */\n\t\tthis._rewriteChunkInReasons = undefined;\n\n\t\t/** @type {boolean} */\n\t\tthis.useSourceMap = false;\n\n\t\t// info from build\n\t\tthis._source = null;\n\t}\n\n\tget exportsArgument() {\n\t\treturn (this.buildInfo && this.buildInfo.exportsArgument) || \"exports\";\n\t}\n\n\tget moduleArgument() {\n\t\treturn (this.buildInfo && this.buildInfo.moduleArgument) || \"module\";\n\t}\n\n\tdisconnect() {\n\t\tthis.hash = undefined;\n\t\tthis.renderedHash = undefined;\n\n\t\tthis.reasons.length = 0;\n\t\tthis._rewriteChunkInReasons = undefined;\n\t\tthis._chunks.clear();\n\n\t\tthis.id = null;\n\t\tthis.index = null;\n\t\tthis.index2 = null;\n\t\tthis.depth = null;\n\t\tthis.issuer = null;\n\t\tthis.profile = undefined;\n\t\tthis.prefetched = false;\n\t\tthis.built = false;\n\n\t\tthis.used = null;\n\t\tthis.usedExports = null;\n\t\tthis.optimizationBailout.length = 0;\n\t\tsuper.disconnect();\n\t}\n\n\tunseal() {\n\t\tthis.id = null;\n\t\tthis.index = null;\n\t\tthis.index2 = null;\n\t\tthis.depth = null;\n\t\tthis._chunks.clear();\n\t\tsuper.unseal();\n\t}\n\n\tsetChunks(chunks) {\n\t\tthis._chunks = new SortableSet(chunks, sortById);\n\t}\n\n\taddChunk(chunk) {\n\t\tif (this._chunks.has(chunk)) return false;\n\t\tthis._chunks.add(chunk);\n\t\treturn true;\n\t}\n\n\tremoveChunk(chunk) {\n\t\tif (this._chunks.delete(chunk)) {\n\t\t\tchunk.removeModule(this);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisInChunk(chunk) {\n\t\treturn this._chunks.has(chunk);\n\t}\n\n\tisEntryModule() {\n\t\tfor (const chunk of this._chunks) {\n\t\t\tif (chunk.entryModule === this) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget optional() {\n\t\treturn (\n\t\t\tthis.reasons.length > 0 &&\n\t\t\tthis.reasons.every(r => r.dependency && r.dependency.optional)\n\t\t);\n\t}\n\n\t/**\n\t * @returns {Chunk[]} all chunks which contain the module\n\t */\n\tgetChunks() {\n\t\treturn Array.from(this._chunks);\n\t}\n\n\tgetNumberOfChunks() {\n\t\treturn this._chunks.size;\n\t}\n\n\tget chunksIterable() {\n\t\treturn this._chunks;\n\t}\n\n\thasEqualsChunks(otherModule) {\n\t\tif (this._chunks.size !== otherModule._chunks.size) return false;\n\t\tthis._chunks.sortWith(sortByDebugId);\n\t\totherModule._chunks.sortWith(sortByDebugId);\n\t\tconst a = this._chunks[Symbol.iterator]();\n\t\tconst b = otherModule._chunks[Symbol.iterator]();\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tconst aItem = a.next();\n\t\t\tconst bItem = b.next();\n\t\t\tif (aItem.done) return true;\n\t\t\tif (aItem.value !== bItem.value) return false;\n\t\t}\n\t}\n\n\taddReason(module, dependency, explanation) {\n\t\tthis.reasons.push(new ModuleReason(module, dependency, explanation));\n\t}\n\n\tremoveReason(module, dependency) {\n\t\tfor (let i = 0; i < this.reasons.length; i++) {\n\t\t\tlet r = this.reasons[i];\n\t\t\tif (r.module === module && r.dependency === dependency) {\n\t\t\t\tthis.reasons.splice(i, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\thasReasonForChunk(chunk) {\n\t\tif (this._rewriteChunkInReasons) {\n\t\t\tfor (const operation of this._rewriteChunkInReasons) {\n\t\t\t\tthis._doRewriteChunkInReasons(operation.oldChunk, operation.newChunks);\n\t\t\t}\n\t\t\tthis._rewriteChunkInReasons = undefined;\n\t\t}\n\t\tfor (let i = 0; i < this.reasons.length; i++) {\n\t\t\tif (this.reasons[i].hasChunk(chunk)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\thasReasons() {\n\t\treturn this.reasons.length > 0;\n\t}\n\n\trewriteChunkInReasons(oldChunk, newChunks) {\n\t\t// This is expensive. Delay operation until we really need the data\n\t\tif (this._rewriteChunkInReasons === undefined) {\n\t\t\tthis._rewriteChunkInReasons = [];\n\t\t}\n\t\tthis._rewriteChunkInReasons.push({\n\t\t\toldChunk,\n\t\t\tnewChunks\n\t\t});\n\t}\n\n\t_doRewriteChunkInReasons(oldChunk, newChunks) {\n\t\tfor (let i = 0; i < this.reasons.length; i++) {\n\t\t\tthis.reasons[i].rewriteChunks(oldChunk, newChunks);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string=} exportName the name of the export\n\t * @returns {boolean|string} false if the export isn't used, true if no exportName is provided and the module is used, or the name to access it if the export is used\n\t */\n\tisUsed(exportName) {\n\t\tif (!exportName) return this.used !== false;\n\t\tif (this.used === null || this.usedExports === null) return exportName;\n\t\tif (!this.used) return false;\n\t\tif (!this.usedExports) return false;\n\t\tif (this.usedExports === true) return exportName;\n\t\tlet idx = this.usedExports.indexOf(exportName);\n\t\tif (idx < 0) return false;\n\n\t\t// Mangle export name if possible\n\t\tif (this.isProvided(exportName)) {\n\t\t\tif (this.buildMeta.exportsType === \"namespace\") {\n\t\t\t\treturn Template.numberToIdentifer(idx);\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.buildMeta.exportsType === \"named\" &&\n\t\t\t\t!this.usedExports.includes(\"default\")\n\t\t\t) {\n\t\t\t\treturn Template.numberToIdentifer(idx);\n\t\t\t}\n\t\t}\n\t\treturn exportName;\n\t}\n\n\tisProvided(exportName) {\n\t\tif (!Array.isArray(this.buildMeta.providedExports)) return null;\n\t\treturn this.buildMeta.providedExports.includes(exportName);\n\t}\n\n\ttoString() {\n\t\treturn `Module[${this.id || this.debugId}]`;\n\t}\n\n\tneedRebuild(fileTimestamps, contextTimestamps) {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(`${this.id}`);\n\t\thash.update(JSON.stringify(this.usedExports));\n\t\tsuper.updateHash(hash);\n\t}\n\n\tsortItems(sortChunks) {\n\t\tsuper.sortItems();\n\t\tif (sortChunks) this._chunks.sort();\n\t\tthis.reasons.sort((a, b) => {\n\t\t\tif (a.module === b.module) return 0;\n\t\t\tif (!a.module) return -1;\n\t\t\tif (!b.module) return 1;\n\t\t\treturn sortById(a.module, b.module);\n\t\t});\n\t\tif (Array.isArray(this.usedExports)) {\n\t\t\tthis.usedExports.sort();\n\t\t}\n\t}\n\n\tunbuild() {\n\t\tthis.dependencies.length = 0;\n\t\tthis.blocks.length = 0;\n\t\tthis.variables.length = 0;\n\t\tthis.buildMeta = undefined;\n\t\tthis.buildInfo = undefined;\n\t\tthis.disconnect();\n\t}\n\n\tget arguments() {\n\t\tthrow new Error(\"Module.arguments was removed, there is no replacement.\");\n\t}\n\n\tset arguments(value) {\n\t\tthrow new Error(\"Module.arguments was removed, there is no replacement.\");\n\t}\n}\n\n// TODO remove in webpack 5\nObject.defineProperty(Module.prototype, \"forEachChunk\", {\n\tconfigurable: false,\n\tvalue: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @param {function(any, any, Set<any>): void} fn callback function\n\t\t * @returns {void}\n\t\t * @this {Module}\n\t\t */\n\t\tfunction(fn) {\n\t\t\tthis._chunks.forEach(fn);\n\t\t},\n\t\t\"Module.forEachChunk: Use for(const chunk of module.chunksIterable) instead\"\n\t)\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(Module.prototype, \"mapChunks\", {\n\tconfigurable: false,\n\tvalue: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @param {function(any, any): void} fn Mapper function\n\t\t * @returns {Array<TODO>} Array of chunks mapped\n\t\t * @this {Module}\n\t\t */\n\t\tfunction(fn) {\n\t\t\treturn Array.from(this._chunks, fn);\n\t\t},\n\t\t\"Module.mapChunks: Use Array.from(module.chunksIterable, fn) instead\"\n\t)\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(Module.prototype, \"entry\", {\n\tconfigurable: false,\n\tget() {\n\t\tthrow new Error(\"Module.entry was removed. Use Chunk.entryModule\");\n\t},\n\tset() {\n\t\tthrow new Error(\"Module.entry was removed. Use Chunk.entryModule\");\n\t}\n});\n\n// TODO remove in webpack 5\nObject.defineProperty(Module.prototype, \"meta\", {\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @returns {void}\n\t\t * @this {Module}\n\t\t */\n\t\tfunction() {\n\t\t\treturn this.buildMeta;\n\t\t},\n\t\t\"Module.meta was renamed to Module.buildMeta\"\n\t),\n\tset: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @param {TODO} value Value\n\t\t * @returns {void}\n\t\t * @this {Module}\n\t\t */\n\t\tfunction(value) {\n\t\t\tthis.buildMeta = value;\n\t\t},\n\t\t\"Module.meta was renamed to Module.buildMeta\"\n\t)\n});\n\n/** @type {function(): string} */\nModule.prototype.identifier = null;\n\n/** @type {function(RequestShortener): string} */\nModule.prototype.readableIdentifier = null;\n\nModule.prototype.build = null;\nModule.prototype.source = null;\nModule.prototype.size = null;\nModule.prototype.nameForCondition = null;\n/** @type {null | function(Chunk): boolean} */\nModule.prototype.chunkCondition = null;\nModule.prototype.updateCacheModule = null;\n\nmodule.exports = Module;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\nconst { cutOffLoaderExecution } = require(\"./ErrorHelpers\");\n\nclass ModuleBuildError extends WebpackError {\n\tconstructor(module, err, { from = null } = {}) {\n\t\tlet message = \"Module build failed\";\n\t\tlet details = undefined;\n\t\tif (from) {\n\t\t\tmessage += ` (from ${from}):\\n`;\n\t\t} else {\n\t\t\tmessage += \": \";\n\t\t}\n\t\tif (err !== null && typeof err === \"object\") {\n\t\t\tif (typeof err.stack === \"string\" && err.stack) {\n\t\t\t\tconst stack = cutOffLoaderExecution(err.stack);\n\t\t\t\tif (!err.hideStack) {\n\t\t\t\t\tmessage += stack;\n\t\t\t\t} else {\n\t\t\t\t\tdetails = stack;\n\t\t\t\t\tif (typeof err.message === \"string\" && err.message) {\n\t\t\t\t\t\tmessage += err.message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage += err;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof err.message === \"string\" && err.message) {\n\t\t\t\tmessage += err.message;\n\t\t\t} else {\n\t\t\t\tmessage += err;\n\t\t\t}\n\t\t} else {\n\t\t\tmessage = err;\n\t\t}\n\n\t\tsuper(message);\n\n\t\tthis.name = \"ModuleBuildError\";\n\t\tthis.details = details;\n\t\tthis.module = module;\n\t\tthis.error = err;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = ModuleBuildError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n\nclass ModuleDependencyError extends WebpackError {\n\t/**\n\t * Creates an instance of ModuleDependencyError.\n\t * @param {Module} module module tied to dependency\n\t * @param {Error} err error thrown\n\t * @param {TODO} loc location of dependency\n\t */\n\tconstructor(module, err, loc) {\n\t\tsuper(err.message);\n\n\t\tthis.name = \"ModuleDependencyError\";\n\t\tthis.details = err.stack\n\t\t\t.split(\"\\n\")\n\t\t\t.slice(1)\n\t\t\t.join(\"\\n\");\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\t\tthis.error = err;\n\t\tthis.origin = module.issuer;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = ModuleDependencyError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\nmodule.exports = class ModuleDependencyWarning extends WebpackError {\n\tconstructor(module, err, loc) {\n\t\tsuper(err.message);\n\n\t\tthis.name = \"ModuleDependencyWarning\";\n\t\tthis.details = err.stack\n\t\t\t.split(\"\\n\")\n\t\t\t.slice(1)\n\t\t\t.join(\"\\n\");\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\t\tthis.error = err;\n\t\tthis.origin = module.issuer;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\nconst { cleanUp } = require(\"./ErrorHelpers\");\n\nclass ModuleError extends WebpackError {\n\tconstructor(module, err, { from = null } = {}) {\n\t\tlet message = \"Module Error\";\n\t\tif (from) {\n\t\t\tmessage += ` (from ${from}):\\n`;\n\t\t} else {\n\t\t\tmessage += \": \";\n\t\t}\n\t\tif (err && typeof err === \"object\" && err.message) {\n\t\t\tmessage += err.message;\n\t\t} else if (err) {\n\t\t\tmessage += err;\n\t\t}\n\t\tsuper(message);\n\t\tthis.name = \"ModuleError\";\n\t\tthis.module = module;\n\t\tthis.error = err;\n\t\tthis.details =\n\t\t\terr && typeof err === \"object\" && err.stack\n\t\t\t\t? cleanUp(err.stack, this.message)\n\t\t\t\t: undefined;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = ModuleError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst createHash = require(\"./util/createHash\");\n\nconst ModuleFilenameHelpers = exports;\n\nModuleFilenameHelpers.ALL_LOADERS_RESOURCE = \"[all-loaders][resource]\";\nModuleFilenameHelpers.REGEXP_ALL_LOADERS_RESOURCE = /\\[all-?loaders\\]\\[resource\\]/gi;\nModuleFilenameHelpers.LOADERS_RESOURCE = \"[loaders][resource]\";\nModuleFilenameHelpers.REGEXP_LOADERS_RESOURCE = /\\[loaders\\]\\[resource\\]/gi;\nModuleFilenameHelpers.RESOURCE = \"[resource]\";\nModuleFilenameHelpers.REGEXP_RESOURCE = /\\[resource\\]/gi;\nModuleFilenameHelpers.ABSOLUTE_RESOURCE_PATH = \"[absolute-resource-path]\";\nModuleFilenameHelpers.REGEXP_ABSOLUTE_RESOURCE_PATH = /\\[abs(olute)?-?resource-?path\\]/gi;\nModuleFilenameHelpers.RESOURCE_PATH = \"[resource-path]\";\nModuleFilenameHelpers.REGEXP_RESOURCE_PATH = /\\[resource-?path\\]/gi;\nModuleFilenameHelpers.ALL_LOADERS = \"[all-loaders]\";\nModuleFilenameHelpers.REGEXP_ALL_LOADERS = /\\[all-?loaders\\]/gi;\nModuleFilenameHelpers.LOADERS = \"[loaders]\";\nModuleFilenameHelpers.REGEXP_LOADERS = /\\[loaders\\]/gi;\nModuleFilenameHelpers.QUERY = \"[query]\";\nModuleFilenameHelpers.REGEXP_QUERY = /\\[query\\]/gi;\nModuleFilenameHelpers.ID = \"[id]\";\nModuleFilenameHelpers.REGEXP_ID = /\\[id\\]/gi;\nModuleFilenameHelpers.HASH = \"[hash]\";\nModuleFilenameHelpers.REGEXP_HASH = /\\[hash\\]/gi;\nModuleFilenameHelpers.NAMESPACE = \"[namespace]\";\nModuleFilenameHelpers.REGEXP_NAMESPACE = /\\[namespace\\]/gi;\n\nconst getAfter = (str, token) => {\n\tconst idx = str.indexOf(token);\n\treturn idx < 0 ? \"\" : str.substr(idx);\n};\n\nconst getBefore = (str, token) => {\n\tconst idx = str.lastIndexOf(token);\n\treturn idx < 0 ? \"\" : str.substr(0, idx);\n};\n\nconst getHash = str => {\n\tconst hash = createHash(\"md4\");\n\thash.update(str);\n\tconst digest = /** @type {string} */ (hash.digest(\"hex\"));\n\treturn digest.substr(0, 4);\n};\n\nconst asRegExp = test => {\n\tif (typeof test === \"string\") {\n\t\ttest = new RegExp(\"^\" + test.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"));\n\t}\n\treturn test;\n};\n\nModuleFilenameHelpers.createFilename = (module, options, requestShortener) => {\n\tconst opts = Object.assign(\n\t\t{\n\t\t\tnamespace: \"\",\n\t\t\tmoduleFilenameTemplate: \"\"\n\t\t},\n\t\ttypeof options === \"object\"\n\t\t\t? options\n\t\t\t: {\n\t\t\t\t\tmoduleFilenameTemplate: options\n\t\t\t  }\n\t);\n\n\tlet absoluteResourcePath;\n\tlet hash;\n\tlet identifier;\n\tlet moduleId;\n\tlet shortIdentifier;\n\tif (module === undefined) module = \"\";\n\tif (typeof module === \"string\") {\n\t\tshortIdentifier = requestShortener.shorten(module);\n\t\tidentifier = shortIdentifier;\n\t\tmoduleId = \"\";\n\t\tabsoluteResourcePath = module.split(\"!\").pop();\n\t\thash = getHash(identifier);\n\t} else {\n\t\tshortIdentifier = module.readableIdentifier(requestShortener);\n\t\tidentifier = requestShortener.shorten(module.identifier());\n\t\tmoduleId = module.id;\n\t\tabsoluteResourcePath = module\n\t\t\t.identifier()\n\t\t\t.split(\"!\")\n\t\t\t.pop();\n\t\thash = getHash(identifier);\n\t}\n\tconst resource = shortIdentifier.split(\"!\").pop();\n\tconst loaders = getBefore(shortIdentifier, \"!\");\n\tconst allLoaders = getBefore(identifier, \"!\");\n\tconst query = getAfter(resource, \"?\");\n\tconst resourcePath = resource.substr(0, resource.length - query.length);\n\tif (typeof opts.moduleFilenameTemplate === \"function\") {\n\t\treturn opts.moduleFilenameTemplate({\n\t\t\tidentifier: identifier,\n\t\t\tshortIdentifier: shortIdentifier,\n\t\t\tresource: resource,\n\t\t\tresourcePath: resourcePath,\n\t\t\tabsoluteResourcePath: absoluteResourcePath,\n\t\t\tallLoaders: allLoaders,\n\t\t\tquery: query,\n\t\t\tmoduleId: moduleId,\n\t\t\thash: hash,\n\t\t\tnamespace: opts.namespace\n\t\t});\n\t}\n\treturn opts.moduleFilenameTemplate\n\t\t.replace(ModuleFilenameHelpers.REGEXP_ALL_LOADERS_RESOURCE, identifier)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_LOADERS_RESOURCE, shortIdentifier)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_RESOURCE, resource)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_RESOURCE_PATH, resourcePath)\n\t\t.replace(\n\t\t\tModuleFilenameHelpers.REGEXP_ABSOLUTE_RESOURCE_PATH,\n\t\t\tabsoluteResourcePath\n\t\t)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_ALL_LOADERS, allLoaders)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_LOADERS, loaders)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_QUERY, query)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_ID, moduleId)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_HASH, hash)\n\t\t.replace(ModuleFilenameHelpers.REGEXP_NAMESPACE, opts.namespace);\n};\n\nModuleFilenameHelpers.replaceDuplicates = (array, fn, comparator) => {\n\tconst countMap = Object.create(null);\n\tconst posMap = Object.create(null);\n\tarray.forEach((item, idx) => {\n\t\tcountMap[item] = countMap[item] || [];\n\t\tcountMap[item].push(idx);\n\t\tposMap[item] = 0;\n\t});\n\tif (comparator) {\n\t\tObject.keys(countMap).forEach(item => {\n\t\t\tcountMap[item].sort(comparator);\n\t\t});\n\t}\n\treturn array.map((item, i) => {\n\t\tif (countMap[item].length > 1) {\n\t\t\tif (comparator && countMap[item][0] === i) return item;\n\t\t\treturn fn(item, i, posMap[item]++);\n\t\t} else {\n\t\t\treturn item;\n\t\t}\n\t});\n};\n\nModuleFilenameHelpers.matchPart = (str, test) => {\n\tif (!test) return true;\n\ttest = asRegExp(test);\n\tif (Array.isArray(test)) {\n\t\treturn test.map(asRegExp).some(regExp => regExp.test(str));\n\t} else {\n\t\treturn test.test(str);\n\t}\n};\n\nModuleFilenameHelpers.matchObject = (obj, str) => {\n\tif (obj.test) {\n\t\tif (!ModuleFilenameHelpers.matchPart(str, obj.test)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (obj.include) {\n\t\tif (!ModuleFilenameHelpers.matchPart(str, obj.include)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (obj.exclude) {\n\t\tif (ModuleFilenameHelpers.matchPart(str, obj.exclude)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\nclass ModuleNotFoundError extends WebpackError {\n\tconstructor(module, err) {\n\t\tsuper(\"Module not found: \" + err);\n\n\t\tthis.name = \"ModuleNotFoundError\";\n\t\tthis.details = err.details;\n\t\tthis.missing = err.missing;\n\t\tthis.module = module;\n\t\tthis.error = err;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = ModuleNotFoundError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n\nclass ModuleParseError extends WebpackError {\n\t/**\n\t * @param {Module} module the errored module\n\t * @param {string} source source code\n\t * @param {Error&any} err the parse error\n\t * @param {string[]} loaders the loaders used\n\t */\n\tconstructor(module, source, err, loaders) {\n\t\tlet message = \"Module parse failed: \" + err.message;\n\t\tlet loc = undefined;\n\t\tif (loaders.length >= 1) {\n\t\t\tmessage += `\\nFile was processed with these loaders:${loaders\n\t\t\t\t.map(loader => `\\n * ${loader}`)\n\t\t\t\t.join(\"\")}`;\n\t\t\tmessage +=\n\t\t\t\t\"\\nYou may need an additional loader to handle the result of these loaders.\";\n\t\t} else {\n\t\t\tmessage +=\n\t\t\t\t\"\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\";\n\t\t}\n\t\tif (\n\t\t\terr.loc &&\n\t\t\ttypeof err.loc === \"object\" &&\n\t\t\ttypeof err.loc.line === \"number\"\n\t\t) {\n\t\t\tvar lineNumber = err.loc.line;\n\t\t\tif (/[\\0\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007]/.test(source)) {\n\t\t\t\t// binary file\n\t\t\t\tmessage += \"\\n(Source code omitted for this binary file)\";\n\t\t\t} else {\n\t\t\t\tconst sourceLines = source.split(/\\r?\\n/);\n\t\t\t\tconst start = Math.max(0, lineNumber - 3);\n\t\t\t\tconst linesBefore = sourceLines.slice(start, lineNumber - 1);\n\t\t\t\tconst theLine = sourceLines[lineNumber - 1];\n\t\t\t\tconst linesAfter = sourceLines.slice(lineNumber, lineNumber + 2);\n\t\t\t\tmessage +=\n\t\t\t\t\tlinesBefore.map(l => `\\n| ${l}`).join(\"\") +\n\t\t\t\t\t`\\n> ${theLine}` +\n\t\t\t\t\tlinesAfter.map(l => `\\n| ${l}`).join(\"\");\n\t\t\t}\n\t\t\tloc = err.loc;\n\t\t} else {\n\t\t\tmessage += \"\\n\" + err.stack;\n\t\t}\n\n\t\tsuper(message);\n\n\t\tthis.name = \"ModuleParseError\";\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\t\tthis.error = err;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = ModuleParseError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Dependency\")} Dependency */\n\nclass ModuleReason {\n\t/**\n\t * @param {Module} module the referencing module\n\t * @param {Dependency} dependency the referencing dependency\n\t * @param {string=} explanation some extra detail\n\t */\n\tconstructor(module, dependency, explanation) {\n\t\tthis.module = module;\n\t\tthis.dependency = dependency;\n\t\tthis.explanation = explanation;\n\t\tthis._chunks = null;\n\t}\n\n\thasChunk(chunk) {\n\t\tif (this._chunks) {\n\t\t\tif (this._chunks.has(chunk)) return true;\n\t\t} else if (this.module && this.module._chunks.has(chunk)) return true;\n\t\treturn false;\n\t}\n\n\trewriteChunks(oldChunk, newChunks) {\n\t\tif (!this._chunks) {\n\t\t\tif (this.module) {\n\t\t\t\tif (!this.module._chunks.has(oldChunk)) return;\n\t\t\t\tthis._chunks = new Set(this.module._chunks);\n\t\t\t} else {\n\t\t\t\tthis._chunks = new Set();\n\t\t\t}\n\t\t}\n\t\tif (this._chunks.has(oldChunk)) {\n\t\t\tthis._chunks.delete(oldChunk);\n\t\t\tfor (let i = 0; i < newChunks.length; i++) {\n\t\t\t\tthis._chunks.add(newChunks[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = ModuleReason;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable, SyncWaterfallHook, SyncHook } = require(\"tapable\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Module\")} Module */\n\nmodule.exports = class ModuleTemplate extends Tapable {\n\tconstructor(runtimeTemplate, type) {\n\t\tsuper();\n\t\tthis.runtimeTemplate = runtimeTemplate;\n\t\tthis.type = type;\n\t\tthis.hooks = {\n\t\t\tcontent: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"module\",\n\t\t\t\t\"options\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\tmodule: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"module\",\n\t\t\t\t\"options\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\trender: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"module\",\n\t\t\t\t\"options\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\tpackage: new SyncWaterfallHook([\n\t\t\t\t\"source\",\n\t\t\t\t\"module\",\n\t\t\t\t\"options\",\n\t\t\t\t\"dependencyTemplates\"\n\t\t\t]),\n\t\t\thash: new SyncHook([\"hash\"])\n\t\t};\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {TODO} dependencyTemplates templates for dependencies\n\t * @param {TODO} options render options\n\t * @returns {Source} the source\n\t */\n\trender(module, dependencyTemplates, options) {\n\t\ttry {\n\t\t\tconst moduleSource = module.source(\n\t\t\t\tdependencyTemplates,\n\t\t\t\tthis.runtimeTemplate,\n\t\t\t\tthis.type\n\t\t\t);\n\t\t\tconst moduleSourcePostContent = this.hooks.content.call(\n\t\t\t\tmoduleSource,\n\t\t\t\tmodule,\n\t\t\t\toptions,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t\tconst moduleSourcePostModule = this.hooks.module.call(\n\t\t\t\tmoduleSourcePostContent,\n\t\t\t\tmodule,\n\t\t\t\toptions,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t\tconst moduleSourcePostRender = this.hooks.render.call(\n\t\t\t\tmoduleSourcePostModule,\n\t\t\t\tmodule,\n\t\t\t\toptions,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t\treturn this.hooks.package.call(\n\t\t\t\tmoduleSourcePostRender,\n\t\t\t\tmodule,\n\t\t\t\toptions,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t} catch (e) {\n\t\t\te.message = `${module.identifier()}\\n${e.message}`;\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(\"1\");\n\t\tthis.hooks.hash.call(hash);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\nconst { cleanUp } = require(\"./ErrorHelpers\");\n\nclass ModuleWarning extends WebpackError {\n\tconstructor(module, warning, { from = null } = {}) {\n\t\tlet message = \"Module Warning\";\n\t\tif (from) {\n\t\t\tmessage += ` (from ${from}):\\n`;\n\t\t} else {\n\t\t\tmessage += \": \";\n\t\t}\n\t\tif (warning && typeof warning === \"object\" && warning.message) {\n\t\t\tmessage += warning.message;\n\t\t} else if (warning) {\n\t\t\tmessage += warning;\n\t\t}\n\t\tsuper(message);\n\t\tthis.name = \"ModuleWarning\";\n\t\tthis.module = module;\n\t\tthis.warning = warning;\n\t\tthis.details =\n\t\t\twarning && typeof warning === \"object\" && warning.stack\n\t\t\t\t? cleanUp(warning.stack, this.message)\n\t\t\t\t: undefined;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = ModuleWarning;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable, SyncHook, MultiHook } = require(\"tapable\");\nconst asyncLib = require(\"neo-async\");\nconst MultiWatching = require(\"./MultiWatching\");\nconst MultiStats = require(\"./MultiStats\");\nconst ConcurrentCompilationError = require(\"./ConcurrentCompilationError\");\n\nmodule.exports = class MultiCompiler extends Tapable {\n\tconstructor(compilers) {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\tdone: new SyncHook([\"stats\"]),\n\t\t\tinvalid: new MultiHook(compilers.map(c => c.hooks.invalid)),\n\t\t\trun: new MultiHook(compilers.map(c => c.hooks.run)),\n\t\t\twatchClose: new SyncHook([]),\n\t\t\twatchRun: new MultiHook(compilers.map(c => c.hooks.watchRun))\n\t\t};\n\t\tif (!Array.isArray(compilers)) {\n\t\t\tcompilers = Object.keys(compilers).map(name => {\n\t\t\t\tcompilers[name].name = name;\n\t\t\t\treturn compilers[name];\n\t\t\t});\n\t\t}\n\t\tthis.compilers = compilers;\n\t\tlet doneCompilers = 0;\n\t\tlet compilerStats = [];\n\t\tlet index = 0;\n\t\tfor (const compiler of this.compilers) {\n\t\t\tlet compilerDone = false;\n\t\t\tconst compilerIndex = index++;\n\t\t\t// eslint-disable-next-line no-loop-func\n\t\t\tcompiler.hooks.done.tap(\"MultiCompiler\", stats => {\n\t\t\t\tif (!compilerDone) {\n\t\t\t\t\tcompilerDone = true;\n\t\t\t\t\tdoneCompilers++;\n\t\t\t\t}\n\t\t\t\tcompilerStats[compilerIndex] = stats;\n\t\t\t\tif (doneCompilers === this.compilers.length) {\n\t\t\t\t\tthis.hooks.done.call(new MultiStats(compilerStats));\n\t\t\t\t}\n\t\t\t});\n\t\t\t// eslint-disable-next-line no-loop-func\n\t\t\tcompiler.hooks.invalid.tap(\"MultiCompiler\", () => {\n\t\t\t\tif (compilerDone) {\n\t\t\t\t\tcompilerDone = false;\n\t\t\t\t\tdoneCompilers--;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.running = false;\n\t}\n\n\tget outputPath() {\n\t\tlet commonPath = this.compilers[0].outputPath;\n\t\tfor (const compiler of this.compilers) {\n\t\t\twhile (\n\t\t\t\tcompiler.outputPath.indexOf(commonPath) !== 0 &&\n\t\t\t\t/[/\\\\]/.test(commonPath)\n\t\t\t) {\n\t\t\t\tcommonPath = commonPath.replace(/[/\\\\][^/\\\\]*$/, \"\");\n\t\t\t}\n\t\t}\n\n\t\tif (!commonPath && this.compilers[0].outputPath[0] === \"/\") return \"/\";\n\t\treturn commonPath;\n\t}\n\n\tget inputFileSystem() {\n\t\tthrow new Error(\"Cannot read inputFileSystem of a MultiCompiler\");\n\t}\n\n\tget outputFileSystem() {\n\t\tthrow new Error(\"Cannot read outputFileSystem of a MultiCompiler\");\n\t}\n\n\tset inputFileSystem(value) {\n\t\tfor (const compiler of this.compilers) {\n\t\t\tcompiler.inputFileSystem = value;\n\t\t}\n\t}\n\n\tset outputFileSystem(value) {\n\t\tfor (const compiler of this.compilers) {\n\t\t\tcompiler.outputFileSystem = value;\n\t\t}\n\t}\n\n\tvalidateDependencies(callback) {\n\t\tconst edges = new Set();\n\t\tconst missing = [];\n\t\tconst targetFound = compiler => {\n\t\t\tfor (const edge of edges) {\n\t\t\t\tif (edge.target === compiler) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst sortEdges = (e1, e2) => {\n\t\t\treturn (\n\t\t\t\te1.source.name.localeCompare(e2.source.name) ||\n\t\t\t\te1.target.name.localeCompare(e2.target.name)\n\t\t\t);\n\t\t};\n\t\tfor (const source of this.compilers) {\n\t\t\tif (source.dependencies) {\n\t\t\t\tfor (const dep of source.dependencies) {\n\t\t\t\t\tconst target = this.compilers.find(c => c.name === dep);\n\t\t\t\t\tif (!target) {\n\t\t\t\t\t\tmissing.push(dep);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tedges.add({\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\ttarget\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst errors = missing.map(m => `Compiler dependency \\`${m}\\` not found.`);\n\t\tconst stack = this.compilers.filter(c => !targetFound(c));\n\t\twhile (stack.length > 0) {\n\t\t\tconst current = stack.pop();\n\t\t\tfor (const edge of edges) {\n\t\t\t\tif (edge.source === current) {\n\t\t\t\t\tedges.delete(edge);\n\t\t\t\t\tconst target = edge.target;\n\t\t\t\t\tif (!targetFound(target)) {\n\t\t\t\t\t\tstack.push(target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (edges.size > 0) {\n\t\t\tconst lines = Array.from(edges)\n\t\t\t\t.sort(sortEdges)\n\t\t\t\t.map(edge => `${edge.source.name} -> ${edge.target.name}`);\n\t\t\tlines.unshift(\"Circular dependency found in compiler dependencies.\");\n\t\t\terrors.unshift(lines.join(\"\\n\"));\n\t\t}\n\t\tif (errors.length > 0) {\n\t\t\tconst message = errors.join(\"\\n\");\n\t\t\tcallback(new Error(message));\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\trunWithDependencies(compilers, fn, callback) {\n\t\tconst fulfilledNames = new Set();\n\t\tlet remainingCompilers = compilers;\n\t\tconst isDependencyFulfilled = d => fulfilledNames.has(d);\n\t\tconst getReadyCompilers = () => {\n\t\t\tlet readyCompilers = [];\n\t\t\tlet list = remainingCompilers;\n\t\t\tremainingCompilers = [];\n\t\t\tfor (const c of list) {\n\t\t\t\tconst ready =\n\t\t\t\t\t!c.dependencies || c.dependencies.every(isDependencyFulfilled);\n\t\t\t\tif (ready) {\n\t\t\t\t\treadyCompilers.push(c);\n\t\t\t\t} else {\n\t\t\t\t\tremainingCompilers.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn readyCompilers;\n\t\t};\n\t\tconst runCompilers = callback => {\n\t\t\tif (remainingCompilers.length === 0) return callback();\n\t\t\tasyncLib.map(\n\t\t\t\tgetReadyCompilers(),\n\t\t\t\t(compiler, callback) => {\n\t\t\t\t\tfn(compiler, err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tfulfilledNames.add(compiler.name);\n\t\t\t\t\t\trunCompilers(callback);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tcallback\n\t\t\t);\n\t\t};\n\t\trunCompilers(callback);\n\t}\n\n\twatch(watchOptions, handler) {\n\t\tif (this.running) return handler(new ConcurrentCompilationError());\n\n\t\tlet watchings = [];\n\t\tlet allStats = this.compilers.map(() => null);\n\t\tlet compilerStatus = this.compilers.map(() => false);\n\t\tif (this.validateDependencies(handler)) {\n\t\t\tthis.running = true;\n\t\t\tthis.runWithDependencies(\n\t\t\t\tthis.compilers,\n\t\t\t\t(compiler, callback) => {\n\t\t\t\t\tconst compilerIdx = this.compilers.indexOf(compiler);\n\t\t\t\t\tlet firstRun = true;\n\t\t\t\t\tlet watching = compiler.watch(\n\t\t\t\t\t\tArray.isArray(watchOptions)\n\t\t\t\t\t\t\t? watchOptions[compilerIdx]\n\t\t\t\t\t\t\t: watchOptions,\n\t\t\t\t\t\t(err, stats) => {\n\t\t\t\t\t\t\tif (err) handler(err);\n\t\t\t\t\t\t\tif (stats) {\n\t\t\t\t\t\t\t\tallStats[compilerIdx] = stats;\n\t\t\t\t\t\t\t\tcompilerStatus[compilerIdx] = \"new\";\n\t\t\t\t\t\t\t\tif (compilerStatus.every(Boolean)) {\n\t\t\t\t\t\t\t\t\tconst freshStats = allStats.filter((s, idx) => {\n\t\t\t\t\t\t\t\t\t\treturn compilerStatus[idx] === \"new\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tcompilerStatus.fill(true);\n\t\t\t\t\t\t\t\t\tconst multiStats = new MultiStats(freshStats);\n\t\t\t\t\t\t\t\t\thandler(null, multiStats);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (firstRun && !err) {\n\t\t\t\t\t\t\t\tfirstRun = false;\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\twatchings.push(watching);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn new MultiWatching(watchings, this);\n\t}\n\n\trun(callback) {\n\t\tif (this.running) {\n\t\t\treturn callback(new ConcurrentCompilationError());\n\t\t}\n\n\t\tconst finalCallback = (err, stats) => {\n\t\t\tthis.running = false;\n\n\t\t\tif (callback !== undefined) {\n\t\t\t\treturn callback(err, stats);\n\t\t\t}\n\t\t};\n\n\t\tconst allStats = this.compilers.map(() => null);\n\t\tif (this.validateDependencies(callback)) {\n\t\t\tthis.running = true;\n\t\t\tthis.runWithDependencies(\n\t\t\t\tthis.compilers,\n\t\t\t\t(compiler, callback) => {\n\t\t\t\t\tconst compilerIdx = this.compilers.indexOf(compiler);\n\t\t\t\t\tcompiler.run((err, stats) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallStats[compilerIdx] = stats;\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn finalCallback(err);\n\t\t\t\t\t}\n\t\t\t\t\tfinalCallback(null, new MultiStats(allStats));\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tpurgeInputFileSystem() {\n\t\tfor (const compiler of this.compilers) {\n\t\t\tif (compiler.inputFileSystem && compiler.inputFileSystem.purge) {\n\t\t\t\tcompiler.inputFileSystem.purge();\n\t\t\t}\n\t\t}\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst MultiEntryDependency = require(\"./dependencies/MultiEntryDependency\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\nconst MultiModuleFactory = require(\"./MultiModuleFactory\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass MultiEntryPlugin {\n\t/**\n\t * The MultiEntryPlugin is invoked whenever this.options.entry value is an array of paths\n\t * @param {string} context context path\n\t * @param {string[]} entries array of entry paths\n\t * @param {string} name entry key name\n\t */\n\tconstructor(context, entries, name) {\n\t\tthis.context = context;\n\t\tthis.entries = entries;\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"MultiEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst multiModuleFactory = new MultiModuleFactory();\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tMultiEntryDependency,\n\t\t\t\t\tmultiModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tSingleEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"MultiEntryPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tconst { context, entries, name } = this;\n\n\t\t\t\tconst dep = MultiEntryPlugin.createDependency(entries, name);\n\t\t\t\tcompilation.addEntry(context, dep, name, callback);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string[]} entries each entry path string\n\t * @param {string} name name of the entry\n\t * @returns {MultiEntryDependency} returns a constructed Dependency\n\t */\n\tstatic createDependency(entries, name) {\n\t\treturn new MultiEntryDependency(\n\t\t\tentries.map((e, idx) => {\n\t\t\t\tconst dep = new SingleEntryDependency(e);\n\t\t\t\t// Because entrypoints are not dependencies found in an\n\t\t\t\t// existing module, we give it a synthetic id\n\t\t\t\tdep.loc = {\n\t\t\t\t\tname,\n\t\t\t\t\tindex: idx\n\t\t\t\t};\n\t\t\t\treturn dep;\n\t\t\t}),\n\t\t\tname\n\t\t);\n\t}\n}\n\nmodule.exports = MultiEntryPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Module = require(\"./Module\");\nconst Template = require(\"./Template\");\nconst { RawSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass MultiModule extends Module {\n\tconstructor(context, dependencies, name) {\n\t\tsuper(\"javascript/dynamic\", context);\n\n\t\t// Info from Factory\n\t\tthis.dependencies = dependencies;\n\t\tthis.name = name;\n\t\tthis._identifier = `multi ${this.dependencies\n\t\t\t.map(d => d.request)\n\t\t\t.join(\" \")}`;\n\t}\n\n\tidentifier() {\n\t\treturn this._identifier;\n\t}\n\n\treadableIdentifier(requestShortener) {\n\t\treturn `multi ${this.dependencies\n\t\t\t.map(d => requestShortener.shorten(d.request))\n\t\t\t.join(\" \")}`;\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {};\n\t\treturn callback();\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tsize() {\n\t\treturn 16 + this.dependencies.length * 12;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(\"multi module\");\n\t\thash.update(this.name || \"\");\n\t\tsuper.updateHash(hash);\n\t}\n\n\tsource(dependencyTemplates, runtimeTemplate) {\n\t\tconst str = [];\n\t\tlet idx = 0;\n\t\tfor (const dep of this.dependencies) {\n\t\t\tif (dep.module) {\n\t\t\t\tif (idx === this.dependencies.length - 1) {\n\t\t\t\t\tstr.push(\"module.exports = \");\n\t\t\t\t}\n\t\t\t\tstr.push(\"__webpack_require__(\");\n\t\t\t\tif (runtimeTemplate.outputOptions.pathinfo) {\n\t\t\t\t\tstr.push(Template.toComment(dep.request));\n\t\t\t\t}\n\t\t\t\tstr.push(`${JSON.stringify(dep.module.id)}`);\n\t\t\t\tstr.push(\")\");\n\t\t\t} else {\n\t\t\t\tconst content = require(\"./dependencies/WebpackMissingModule\").module(\n\t\t\t\t\tdep.request\n\t\t\t\t);\n\t\t\t\tstr.push(content);\n\t\t\t}\n\t\t\tstr.push(\";\\n\");\n\t\t\tidx++;\n\t\t}\n\t\treturn new RawSource(str.join(\"\"));\n\t}\n}\n\nmodule.exports = MultiModule;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable } = require(\"tapable\");\nconst MultiModule = require(\"./MultiModule\");\n\nmodule.exports = class MultiModuleFactory extends Tapable {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.hooks = {};\n\t}\n\n\tcreate(data, callback) {\n\t\tconst dependency = data.dependencies[0];\n\t\tcallback(\n\t\t\tnull,\n\t\t\tnew MultiModule(data.context, dependency.dependencies, dependency.name)\n\t\t);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Stats = require(\"./Stats\");\n\nconst optionOrFallback = (optionValue, fallbackValue) =>\n\toptionValue !== undefined ? optionValue : fallbackValue;\n\nclass MultiStats {\n\tconstructor(stats) {\n\t\tthis.stats = stats;\n\t\tthis.hash = stats.map(stat => stat.hash).join(\"\");\n\t}\n\n\thasErrors() {\n\t\treturn this.stats\n\t\t\t.map(stat => stat.hasErrors())\n\t\t\t.reduce((a, b) => a || b, false);\n\t}\n\n\thasWarnings() {\n\t\treturn this.stats\n\t\t\t.map(stat => stat.hasWarnings())\n\t\t\t.reduce((a, b) => a || b, false);\n\t}\n\n\ttoJson(options, forToString) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\t\tconst jsons = this.stats.map((stat, idx) => {\n\t\t\tconst childOptions = Stats.getChildOptions(options, idx);\n\t\t\tconst obj = stat.toJson(childOptions, forToString);\n\t\t\tobj.name = stat.compilation && stat.compilation.name;\n\t\t\treturn obj;\n\t\t});\n\t\tconst showVersion =\n\t\t\toptions.version === undefined\n\t\t\t\t? jsons.every(j => j.version)\n\t\t\t\t: options.version !== false;\n\t\tconst showHash =\n\t\t\toptions.hash === undefined\n\t\t\t\t? jsons.every(j => j.hash)\n\t\t\t\t: options.hash !== false;\n\t\tif (showVersion) {\n\t\t\tfor (const j of jsons) {\n\t\t\t\tdelete j.version;\n\t\t\t}\n\t\t}\n\t\tconst obj = {\n\t\t\terrors: jsons.reduce((arr, j) => {\n\t\t\t\treturn arr.concat(\n\t\t\t\t\tj.errors.map(msg => {\n\t\t\t\t\t\treturn `(${j.name}) ${msg}`;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}, []),\n\t\t\twarnings: jsons.reduce((arr, j) => {\n\t\t\t\treturn arr.concat(\n\t\t\t\t\tj.warnings.map(msg => {\n\t\t\t\t\t\treturn `(${j.name}) ${msg}`;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}, [])\n\t\t};\n\t\tif (showVersion) obj.version = require(\"../package.json\").version;\n\t\tif (showHash) obj.hash = this.hash;\n\t\tif (options.children !== false) obj.children = jsons;\n\t\treturn obj;\n\t}\n\n\ttoString(options) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst useColors = optionOrFallback(options.colors, false);\n\n\t\tconst obj = this.toJson(options, true);\n\n\t\treturn Stats.jsonToString(obj, useColors);\n\t}\n}\n\nmodule.exports = MultiStats;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\nclass MultiWatching {\n\tconstructor(watchings, compiler) {\n\t\tthis.watchings = watchings;\n\t\tthis.compiler = compiler;\n\t}\n\n\tinvalidate() {\n\t\tfor (const watching of this.watchings) {\n\t\t\twatching.invalidate();\n\t\t}\n\t}\n\n\tsuspend() {\n\t\tfor (const watching of this.watchings) {\n\t\t\twatching.suspend();\n\t\t}\n\t}\n\n\tresume() {\n\t\tfor (const watching of this.watchings) {\n\t\t\twatching.resume();\n\t\t}\n\t}\n\n\tclose(callback) {\n\t\tasyncLib.forEach(\n\t\t\tthis.watchings,\n\t\t\t(watching, finishedCallback) => {\n\t\t\t\twatching.close(finishedCallback);\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tthis.compiler.hooks.watchClose.call();\n\t\t\t\tif (typeof callback === \"function\") {\n\t\t\t\t\tthis.compiler.running = false;\n\t\t\t\t\tcallback(err);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = MultiWatching;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass NamedChunksPlugin {\n\tstatic defaultNameResolver(chunk) {\n\t\treturn chunk.name || null;\n\t}\n\n\tconstructor(nameResolver) {\n\t\tthis.nameResolver = nameResolver || NamedChunksPlugin.defaultNameResolver;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NamedChunksPlugin\", compilation => {\n\t\t\tcompilation.hooks.beforeChunkIds.tap(\"NamedChunksPlugin\", chunks => {\n\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\tif (chunk.id === null) {\n\t\t\t\t\t\tchunk.id = this.nameResolver(chunk);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NamedChunksPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst createHash = require(\"./util/createHash\");\nconst RequestShortener = require(\"./RequestShortener\");\n\nconst getHash = str => {\n\tconst hash = createHash(\"md4\");\n\thash.update(str);\n\tconst digest = /** @type {string} */ (hash.digest(\"hex\"));\n\treturn digest.substr(0, 4);\n};\n\nclass NamedModulesPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NamedModulesPlugin\", compilation => {\n\t\t\tcompilation.hooks.beforeModuleIds.tap(\"NamedModulesPlugin\", modules => {\n\t\t\t\tconst namedModules = new Map();\n\t\t\t\tconst context = this.options.context || compiler.options.context;\n\n\t\t\t\tfor (const module of modules) {\n\t\t\t\t\tif (module.id === null && module.libIdent) {\n\t\t\t\t\t\tmodule.id = module.libIdent({ context });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (module.id !== null) {\n\t\t\t\t\t\tconst namedModule = namedModules.get(module.id);\n\t\t\t\t\t\tif (namedModule !== undefined) {\n\t\t\t\t\t\t\tnamedModule.push(module);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnamedModules.set(module.id, [module]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const namedModule of namedModules.values()) {\n\t\t\t\t\tif (namedModule.length > 1) {\n\t\t\t\t\t\tfor (const module of namedModule) {\n\t\t\t\t\t\t\tconst requestShortener = new RequestShortener(context);\n\t\t\t\t\t\t\tmodule.id = `${module.id}?${getHash(\n\t\t\t\t\t\t\t\trequestShortener.shorten(module.identifier())\n\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NamedModulesPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass NoEmitOnErrorsPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.shouldEmit.tap(\"NoEmitOnErrorsPlugin\", compilation => {\n\t\t\tif (compilation.getStats().hasErrors()) return false;\n\t\t});\n\t\tcompiler.hooks.compilation.tap(\"NoEmitOnErrorsPlugin\", compilation => {\n\t\t\tcompilation.hooks.shouldRecord.tap(\"NoEmitOnErrorsPlugin\", () => {\n\t\t\t\tif (compilation.getStats().hasErrors()) return false;\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NoEmitOnErrorsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\nmodule.exports = class NoModeWarning extends WebpackError {\n\tconstructor(modules) {\n\t\tsuper();\n\n\t\tthis.name = \"NoModeWarning\";\n\t\tthis.message =\n\t\t\t\"configuration\\n\" +\n\t\t\t\"The 'mode' option has not been set, webpack will fallback to 'production' for this value. \" +\n\t\t\t\"Set 'mode' option to 'development' or 'production' to enable defaults for each environment.\\n\" +\n\t\t\t\"You can also set it to 'none' to disable any default behavior. \" +\n\t\t\t\"Learn more: https://webpack.js.org/configuration/mode/\";\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst NullFactory = require(\"./NullFactory\");\n\nclass NodeStuffPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"NodeStuffPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.node === false) return;\n\n\t\t\t\t\tlet localOptions = options;\n\t\t\t\t\tif (parserOptions.node) {\n\t\t\t\t\t\tlocalOptions = Object.assign({}, localOptions, parserOptions.node);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst setConstant = (expressionName, value) => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(expressionName)\n\t\t\t\t\t\t\t.tap(\"NodeStuffPlugin\", () => {\n\t\t\t\t\t\t\t\tparser.state.current.addVariable(\n\t\t\t\t\t\t\t\t\texpressionName,\n\t\t\t\t\t\t\t\t\tJSON.stringify(value)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tconst setModuleConstant = (expressionName, fn) => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(expressionName)\n\t\t\t\t\t\t\t.tap(\"NodeStuffPlugin\", () => {\n\t\t\t\t\t\t\t\tparser.state.current.addVariable(\n\t\t\t\t\t\t\t\t\texpressionName,\n\t\t\t\t\t\t\t\t\tJSON.stringify(fn(parser.state.module))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tconst context = compiler.context;\n\t\t\t\t\tif (localOptions.__filename) {\n\t\t\t\t\t\tif (localOptions.__filename === \"mock\") {\n\t\t\t\t\t\t\tsetConstant(\"__filename\", \"/index.js\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetModuleConstant(\"__filename\", module =>\n\t\t\t\t\t\t\t\tpath.relative(context, module.resource)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t.for(\"__filename\")\n\t\t\t\t\t\t\t.tap(\"NodeStuffPlugin\", expr => {\n\t\t\t\t\t\t\t\tif (!parser.state.module) return;\n\t\t\t\t\t\t\t\tconst resource = parser.state.module.resource;\n\t\t\t\t\t\t\t\tconst i = resource.indexOf(\"?\");\n\t\t\t\t\t\t\t\treturn ParserHelpers.evaluateToString(\n\t\t\t\t\t\t\t\t\ti < 0 ? resource : resource.substr(0, i)\n\t\t\t\t\t\t\t\t)(expr);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (localOptions.__dirname) {\n\t\t\t\t\t\tif (localOptions.__dirname === \"mock\") {\n\t\t\t\t\t\t\tsetConstant(\"__dirname\", \"/\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetModuleConstant(\"__dirname\", module =>\n\t\t\t\t\t\t\t\tpath.relative(context, module.context)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t.for(\"__dirname\")\n\t\t\t\t\t\t\t.tap(\"NodeStuffPlugin\", expr => {\n\t\t\t\t\t\t\t\tif (!parser.state.module) return;\n\t\t\t\t\t\t\t\treturn ParserHelpers.evaluateToString(\n\t\t\t\t\t\t\t\t\tparser.state.module.context\n\t\t\t\t\t\t\t\t)(expr);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"require.extensions\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"NodeStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.expressionIsUnsupported(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\"require.extensions is not supported by webpack. Use a loader instead.\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"NodeStuffPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"NodeStuffPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = NodeStuffPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NativeModule = require(\"module\");\n\nconst {\n\tCachedSource,\n\tLineToLineMappedSource,\n\tOriginalSource,\n\tRawSource,\n\tSourceMapSource\n} = require(\"webpack-sources\");\nconst { getContext, runLoaders } = require(\"loader-runner\");\n\nconst WebpackError = require(\"./WebpackError\");\nconst Module = require(\"./Module\");\nconst ModuleParseError = require(\"./ModuleParseError\");\nconst ModuleBuildError = require(\"./ModuleBuildError\");\nconst ModuleError = require(\"./ModuleError\");\nconst ModuleWarning = require(\"./ModuleWarning\");\nconst createHash = require(\"./util/createHash\");\nconst contextify = require(\"./util/identifier\").contextify;\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nconst asString = buf => {\n\tif (Buffer.isBuffer(buf)) {\n\t\treturn buf.toString(\"utf-8\");\n\t}\n\treturn buf;\n};\n\nconst asBuffer = str => {\n\tif (!Buffer.isBuffer(str)) {\n\t\treturn Buffer.from(str, \"utf-8\");\n\t}\n\treturn str;\n};\n\nclass NonErrorEmittedError extends WebpackError {\n\tconstructor(error) {\n\t\tsuper();\n\n\t\tthis.name = \"NonErrorEmittedError\";\n\t\tthis.message = \"(Emitted value instead of an instance of Error) \" + error;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\n/**\n * @typedef {Object} CachedSourceEntry\n * @property {TODO} source the generated source\n * @property {string} hash the hash value\n */\n\nclass NormalModule extends Module {\n\tconstructor({\n\t\ttype,\n\t\trequest,\n\t\tuserRequest,\n\t\trawRequest,\n\t\tloaders,\n\t\tresource,\n\t\tmatchResource,\n\t\tparser,\n\t\tgenerator,\n\t\tresolveOptions\n\t}) {\n\t\tsuper(type, getContext(resource));\n\n\t\t// Info from Factory\n\t\tthis.request = request;\n\t\tthis.userRequest = userRequest;\n\t\tthis.rawRequest = rawRequest;\n\t\tthis.binary = type.startsWith(\"webassembly\");\n\t\tthis.parser = parser;\n\t\tthis.generator = generator;\n\t\tthis.resource = resource;\n\t\tthis.matchResource = matchResource;\n\t\tthis.loaders = loaders;\n\t\tif (resolveOptions !== undefined) this.resolveOptions = resolveOptions;\n\n\t\t// Info from Build\n\t\tthis.error = null;\n\t\tthis._source = null;\n\t\tthis._buildHash = \"\";\n\t\tthis.buildTimestamp = undefined;\n\t\t/** @private @type {Map<string, CachedSourceEntry>} */\n\t\tthis._cachedSources = new Map();\n\n\t\t// Options for the NormalModule set by plugins\n\t\t// TODO refactor this -> options object filled from Factory\n\t\tthis.useSourceMap = false;\n\t\tthis.lineToLine = false;\n\n\t\t// Cache\n\t\tthis._lastSuccessfulBuildMeta = {};\n\t}\n\n\tidentifier() {\n\t\treturn this.request;\n\t}\n\n\treadableIdentifier(requestShortener) {\n\t\treturn requestShortener.shorten(this.userRequest);\n\t}\n\n\tlibIdent(options) {\n\t\treturn contextify(options.context, this.userRequest);\n\t}\n\n\tnameForCondition() {\n\t\tconst resource = this.matchResource || this.resource;\n\t\tconst idx = resource.indexOf(\"?\");\n\t\tif (idx >= 0) return resource.substr(0, idx);\n\t\treturn resource;\n\t}\n\n\tupdateCacheModule(module) {\n\t\tthis.type = module.type;\n\t\tthis.request = module.request;\n\t\tthis.userRequest = module.userRequest;\n\t\tthis.rawRequest = module.rawRequest;\n\t\tthis.parser = module.parser;\n\t\tthis.generator = module.generator;\n\t\tthis.resource = module.resource;\n\t\tthis.matchResource = module.matchResource;\n\t\tthis.loaders = module.loaders;\n\t\tthis.resolveOptions = module.resolveOptions;\n\t}\n\n\tcreateSourceForAsset(name, content, sourceMap) {\n\t\tif (!sourceMap) {\n\t\t\treturn new RawSource(content);\n\t\t}\n\n\t\tif (typeof sourceMap === \"string\") {\n\t\t\treturn new OriginalSource(content, sourceMap);\n\t\t}\n\n\t\treturn new SourceMapSource(content, name, sourceMap);\n\t}\n\n\tcreateLoaderContext(resolver, options, compilation, fs) {\n\t\tconst requestShortener = compilation.runtimeTemplate.requestShortener;\n\t\tconst getCurrentLoaderName = () => {\n\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\tif (!currentLoader) return \"(not in loader scope)\";\n\t\t\treturn requestShortener.shorten(currentLoader.loader);\n\t\t};\n\t\tconst loaderContext = {\n\t\t\tversion: 2,\n\t\t\temitWarning: warning => {\n\t\t\t\tif (!(warning instanceof Error)) {\n\t\t\t\t\twarning = new NonErrorEmittedError(warning);\n\t\t\t\t}\n\t\t\t\tthis.warnings.push(\n\t\t\t\t\tnew ModuleWarning(this, warning, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\temitError: error => {\n\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\terror = new NonErrorEmittedError(error);\n\t\t\t\t}\n\t\t\t\tthis.errors.push(\n\t\t\t\t\tnew ModuleError(this, error, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\tgetLogger: name => {\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\treturn compilation.getLogger(() =>\n\t\t\t\t\t[currentLoader && currentLoader.loader, name, this.identifier()]\n\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t.join(\"|\")\n\t\t\t\t);\n\t\t\t},\n\t\t\t// TODO remove in webpack 5\n\t\t\texec: (code, filename) => {\n\t\t\t\t// @ts-ignore Argument of type 'this' is not assignable to parameter of type 'Module'.\n\t\t\t\tconst module = new NativeModule(filename, this);\n\t\t\t\t// @ts-ignore _nodeModulePaths is deprecated and undocumented Node.js API\n\t\t\t\tmodule.paths = NativeModule._nodeModulePaths(this.context);\n\t\t\t\tmodule.filename = filename;\n\t\t\t\tmodule._compile(code, filename);\n\t\t\t\treturn module.exports;\n\t\t\t},\n\t\t\tresolve(context, request, callback) {\n\t\t\t\tresolver.resolve({}, context, request, {}, callback);\n\t\t\t},\n\t\t\tgetResolve(options) {\n\t\t\t\tconst child = options ? resolver.withOptions(options) : resolver;\n\t\t\t\treturn (context, request, callback) => {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tchild.resolve({}, context, request, {}, callback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tchild.resolve({}, context, request, {}, (err, result) => {\n\t\t\t\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\t\t\t\telse resolve(result);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\temitFile: (name, content, sourceMap) => {\n\t\t\t\tif (!this.buildInfo.assets) {\n\t\t\t\t\tthis.buildInfo.assets = Object.create(null);\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.assets[name] = this.createSourceForAsset(\n\t\t\t\t\tname,\n\t\t\t\t\tcontent,\n\t\t\t\t\tsourceMap\n\t\t\t\t);\n\t\t\t},\n\t\t\trootContext: options.context,\n\t\t\twebpack: true,\n\t\t\tsourceMap: !!this.useSourceMap,\n\t\t\tmode: options.mode || \"production\",\n\t\t\t_module: this,\n\t\t\t_compilation: compilation,\n\t\t\t_compiler: compilation.compiler,\n\t\t\tfs: fs\n\t\t};\n\n\t\tcompilation.hooks.normalModuleLoader.call(loaderContext, this);\n\t\tif (options.loader) {\n\t\t\tObject.assign(loaderContext, options.loader);\n\t\t}\n\n\t\treturn loaderContext;\n\t}\n\n\tgetCurrentLoader(loaderContext, index = loaderContext.loaderIndex) {\n\t\tif (\n\t\t\tthis.loaders &&\n\t\t\tthis.loaders.length &&\n\t\t\tindex < this.loaders.length &&\n\t\t\tindex >= 0 &&\n\t\t\tthis.loaders[index]\n\t\t) {\n\t\t\treturn this.loaders[index];\n\t\t}\n\t\treturn null;\n\t}\n\n\tcreateSource(source, resourceBuffer, sourceMap) {\n\t\t// if there is no identifier return raw source\n\t\tif (!this.identifier) {\n\t\t\treturn new RawSource(source);\n\t\t}\n\n\t\t// from here on we assume we have an identifier\n\t\tconst identifier = this.identifier();\n\n\t\tif (this.lineToLine && resourceBuffer) {\n\t\t\treturn new LineToLineMappedSource(\n\t\t\t\tsource,\n\t\t\t\tidentifier,\n\t\t\t\tasString(resourceBuffer)\n\t\t\t);\n\t\t}\n\n\t\tif (this.useSourceMap && sourceMap) {\n\t\t\treturn new SourceMapSource(source, identifier, sourceMap);\n\t\t}\n\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\t// @ts-ignore\n\t\t\t// TODO We need to fix @types/webpack-sources to allow RawSource to take a Buffer | string\n\t\t\treturn new RawSource(source);\n\t\t}\n\n\t\treturn new OriginalSource(source, identifier);\n\t}\n\n\tdoBuild(options, compilation, resolver, fs, callback) {\n\t\tconst loaderContext = this.createLoaderContext(\n\t\t\tresolver,\n\t\t\toptions,\n\t\t\tcompilation,\n\t\t\tfs\n\t\t);\n\n\t\trunLoaders(\n\t\t\t{\n\t\t\t\tresource: this.resource,\n\t\t\t\tloaders: this.loaders,\n\t\t\t\tcontext: loaderContext,\n\t\t\t\treadResource: fs.readFile.bind(fs)\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\tthis.buildInfo.cacheable = result.cacheable;\n\t\t\t\t\tthis.buildInfo.fileDependencies = new Set(result.fileDependencies);\n\t\t\t\t\tthis.buildInfo.contextDependencies = new Set(\n\t\t\t\t\t\tresult.contextDependencies\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (err) {\n\t\t\t\t\tif (!(err instanceof Error)) {\n\t\t\t\t\t\terr = new NonErrorEmittedError(err);\n\t\t\t\t\t}\n\t\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\t\tconst error = new ModuleBuildError(this, err, {\n\t\t\t\t\t\tfrom:\n\t\t\t\t\t\t\tcurrentLoader &&\n\t\t\t\t\t\t\tcompilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t\t)\n\t\t\t\t\t});\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\n\t\t\t\tconst resourceBuffer = result.resourceBuffer;\n\t\t\t\tconst source = result.result[0];\n\t\t\t\tconst sourceMap = result.result.length >= 1 ? result.result[1] : null;\n\t\t\t\tconst extraInfo = result.result.length >= 2 ? result.result[2] : null;\n\n\t\t\t\tif (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n\t\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext, 0);\n\t\t\t\t\tconst err = new Error(\n\t\t\t\t\t\t`Final loader (${\n\t\t\t\t\t\t\tcurrentLoader\n\t\t\t\t\t\t\t\t? compilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: \"unknown\"\n\t\t\t\t\t\t}) didn't return a Buffer or String`\n\t\t\t\t\t);\n\t\t\t\t\tconst error = new ModuleBuildError(this, err);\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\n\t\t\t\tthis._source = this.createSource(\n\t\t\t\t\tthis.binary ? asBuffer(source) : asString(source),\n\t\t\t\t\tresourceBuffer,\n\t\t\t\t\tsourceMap\n\t\t\t\t);\n\t\t\t\tthis._ast =\n\t\t\t\t\ttypeof extraInfo === \"object\" &&\n\t\t\t\t\textraInfo !== null &&\n\t\t\t\t\textraInfo.webpackAST !== undefined\n\t\t\t\t\t\t? extraInfo.webpackAST\n\t\t\t\t\t\t: null;\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\t}\n\n\tmarkModuleAsErrored(error) {\n\t\t// Restore build meta from successful build to keep importing state\n\t\tthis.buildMeta = Object.assign({}, this._lastSuccessfulBuildMeta);\n\t\tthis.error = error;\n\t\tthis.errors.push(this.error);\n\t\tthis._source = new RawSource(\n\t\t\t\"throw new Error(\" + JSON.stringify(this.error.message) + \");\"\n\t\t);\n\t\tthis._ast = null;\n\t}\n\n\tapplyNoParseRule(rule, content) {\n\t\t// must start with \"rule\" if rule is a string\n\t\tif (typeof rule === \"string\") {\n\t\t\treturn content.indexOf(rule) === 0;\n\t\t}\n\n\t\tif (typeof rule === \"function\") {\n\t\t\treturn rule(content);\n\t\t}\n\t\t// we assume rule is a regexp\n\t\treturn rule.test(content);\n\t}\n\n\t// check if module should not be parsed\n\t// returns \"true\" if the module should !not! be parsed\n\t// returns \"false\" if the module !must! be parsed\n\tshouldPreventParsing(noParseRule, request) {\n\t\t// if no noParseRule exists, return false\n\t\t// the module !must! be parsed.\n\t\tif (!noParseRule) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// we only have one rule to check\n\t\tif (!Array.isArray(noParseRule)) {\n\t\t\t// returns \"true\" if the module is !not! to be parsed\n\t\t\treturn this.applyNoParseRule(noParseRule, request);\n\t\t}\n\n\t\tfor (let i = 0; i < noParseRule.length; i++) {\n\t\t\tconst rule = noParseRule[i];\n\t\t\t// early exit on first truthy match\n\t\t\t// this module is !not! to be parsed\n\t\t\tif (this.applyNoParseRule(rule, request)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// no match found, so this module !should! be parsed\n\t\treturn false;\n\t}\n\n\t_initBuildHash(compilation) {\n\t\tconst hash = createHash(compilation.outputOptions.hashFunction);\n\t\tif (this._source) {\n\t\t\thash.update(\"source\");\n\t\t\tthis._source.updateHash(hash);\n\t\t}\n\t\thash.update(\"meta\");\n\t\thash.update(JSON.stringify(this.buildMeta));\n\t\tthis._buildHash = /** @type {string} */ (hash.digest(\"hex\"));\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildTimestamp = Date.now();\n\t\tthis.built = true;\n\t\tthis._source = null;\n\t\tthis._ast = null;\n\t\tthis._buildHash = \"\";\n\t\tthis.error = null;\n\t\tthis.errors.length = 0;\n\t\tthis.warnings.length = 0;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: false,\n\t\t\tfileDependencies: new Set(),\n\t\t\tcontextDependencies: new Set()\n\t\t};\n\n\t\treturn this.doBuild(options, compilation, resolver, fs, err => {\n\t\t\tthis._cachedSources.clear();\n\n\t\t\t// if we have an error mark module as failed and exit\n\t\t\tif (err) {\n\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\t// check if this module should !not! be parsed.\n\t\t\t// if so, exit here;\n\t\t\tconst noParseRule = options.module && options.module.noParse;\n\t\t\tif (this.shouldPreventParsing(noParseRule, this.request)) {\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tconst handleParseError = e => {\n\t\t\t\tconst source = this._source.source();\n\t\t\t\tconst loaders = this.loaders.map(item =>\n\t\t\t\t\tcontextify(options.context, item.loader)\n\t\t\t\t);\n\t\t\t\tconst error = new ModuleParseError(this, source, e, loaders);\n\t\t\t\tthis.markModuleAsErrored(error);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t};\n\n\t\t\tconst handleParseResult = result => {\n\t\t\t\tthis._lastSuccessfulBuildMeta = this.buildMeta;\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tconst result = this.parser.parse(\n\t\t\t\t\tthis._ast || this._source.source(),\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrent: this,\n\t\t\t\t\t\tmodule: this,\n\t\t\t\t\t\tcompilation: compilation,\n\t\t\t\t\t\toptions: options\n\t\t\t\t\t},\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\thandleParseError(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thandleParseResult(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (result !== undefined) {\n\t\t\t\t\t// parse is sync\n\t\t\t\t\thandleParseResult(result);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\thandleParseError(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetHashDigest(dependencyTemplates) {\n\t\t// TODO webpack 5 refactor\n\t\tlet dtHash = dependencyTemplates.get(\"hash\");\n\t\treturn `${this.hash}-${dtHash}`;\n\t}\n\n\tsource(dependencyTemplates, runtimeTemplate, type = \"javascript\") {\n\t\tconst hashDigest = this.getHashDigest(dependencyTemplates);\n\t\tconst cacheEntry = this._cachedSources.get(type);\n\t\tif (cacheEntry !== undefined && cacheEntry.hash === hashDigest) {\n\t\t\t// We can reuse the cached source\n\t\t\treturn cacheEntry.source;\n\t\t}\n\n\t\tconst source = this.generator.generate(\n\t\t\tthis,\n\t\t\tdependencyTemplates,\n\t\t\truntimeTemplate,\n\t\t\ttype\n\t\t);\n\n\t\tconst cachedSource = new CachedSource(source);\n\t\tthis._cachedSources.set(type, {\n\t\t\tsource: cachedSource,\n\t\t\thash: hashDigest\n\t\t});\n\t\treturn cachedSource;\n\t}\n\n\toriginalSource() {\n\t\treturn this._source;\n\t}\n\n\tneedRebuild(fileTimestamps, contextTimestamps) {\n\t\t// always try to rebuild in case of an error\n\t\tif (this.error) return true;\n\n\t\t// always rebuild when module is not cacheable\n\t\tif (!this.buildInfo.cacheable) return true;\n\n\t\t// Check timestamps of all dependencies\n\t\t// Missing timestamp -> need rebuild\n\t\t// Timestamp bigger than buildTimestamp -> need rebuild\n\t\tfor (const file of this.buildInfo.fileDependencies) {\n\t\t\tconst timestamp = fileTimestamps.get(file);\n\t\t\tif (!timestamp) return true;\n\t\t\tif (timestamp >= this.buildTimestamp) return true;\n\t\t}\n\t\tfor (const file of this.buildInfo.contextDependencies) {\n\t\t\tconst timestamp = contextTimestamps.get(file);\n\t\t\tif (!timestamp) return true;\n\t\t\tif (timestamp >= this.buildTimestamp) return true;\n\t\t}\n\t\t// elsewise -> no rebuild needed\n\t\treturn false;\n\t}\n\n\tsize() {\n\t\treturn this._source ? this._source.size() : -1;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(this._buildHash);\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nmodule.exports = NormalModule;\n","/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nconst path = require(\"path\");\nconst asyncLib = require(\"neo-async\");\nconst {\n\tTapable,\n\tAsyncSeriesWaterfallHook,\n\tSyncWaterfallHook,\n\tSyncBailHook,\n\tSyncHook,\n\tHookMap\n} = require(\"tapable\");\nconst NormalModule = require(\"./NormalModule\");\nconst RawModule = require(\"./RawModule\");\nconst RuleSet = require(\"./RuleSet\");\nconst { cachedCleverMerge } = require(\"./util/cleverMerge\");\n\nconst EMPTY_RESOLVE_OPTIONS = {};\n\nconst MATCH_RESOURCE_REGEX = /^([^!]+)!=!/;\n\nconst loaderToIdent = data => {\n\tif (!data.options) {\n\t\treturn data.loader;\n\t}\n\tif (typeof data.options === \"string\") {\n\t\treturn data.loader + \"?\" + data.options;\n\t}\n\tif (typeof data.options !== \"object\") {\n\t\tthrow new Error(\"loader options must be string or object\");\n\t}\n\tif (data.ident) {\n\t\treturn data.loader + \"??\" + data.ident;\n\t}\n\treturn data.loader + \"?\" + JSON.stringify(data.options);\n};\n\nconst identToLoaderRequest = resultString => {\n\tconst idx = resultString.indexOf(\"?\");\n\tif (idx >= 0) {\n\t\tconst loader = resultString.substr(0, idx);\n\t\tconst options = resultString.substr(idx + 1);\n\t\treturn {\n\t\t\tloader,\n\t\t\toptions\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tloader: resultString,\n\t\t\toptions: undefined\n\t\t};\n\t}\n};\n\nconst dependencyCache = new WeakMap();\n\nclass NormalModuleFactory extends Tapable {\n\tconstructor(context, resolverFactory, options) {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\tresolver: new SyncWaterfallHook([\"resolver\"]),\n\t\t\tfactory: new SyncWaterfallHook([\"factory\"]),\n\t\t\tbeforeResolve: new AsyncSeriesWaterfallHook([\"data\"]),\n\t\t\tafterResolve: new AsyncSeriesWaterfallHook([\"data\"]),\n\t\t\tcreateModule: new SyncBailHook([\"data\"]),\n\t\t\tmodule: new SyncWaterfallHook([\"module\", \"data\"]),\n\t\t\tcreateParser: new HookMap(() => new SyncBailHook([\"parserOptions\"])),\n\t\t\tparser: new HookMap(() => new SyncHook([\"parser\", \"parserOptions\"])),\n\t\t\tcreateGenerator: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"generatorOptions\"])\n\t\t\t),\n\t\t\tgenerator: new HookMap(\n\t\t\t\t() => new SyncHook([\"generator\", \"generatorOptions\"])\n\t\t\t)\n\t\t};\n\t\tthis._pluginCompat.tap(\"NormalModuleFactory\", options => {\n\t\t\tswitch (options.name) {\n\t\t\t\tcase \"before-resolve\":\n\t\t\t\tcase \"after-resolve\":\n\t\t\t\t\toptions.async = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"parser\":\n\t\t\t\t\tthis.hooks.parser\n\t\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t\t.tap(options.fn.name || \"unnamed compat plugin\", options.fn);\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet match;\n\t\t\tmatch = /^parser (.+)$/.exec(options.name);\n\t\t\tif (match) {\n\t\t\t\tthis.hooks.parser\n\t\t\t\t\t.for(match[1])\n\t\t\t\t\t.tap(\n\t\t\t\t\t\toptions.fn.name || \"unnamed compat plugin\",\n\t\t\t\t\t\toptions.fn.bind(this)\n\t\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tmatch = /^create-parser (.+)$/.exec(options.name);\n\t\t\tif (match) {\n\t\t\t\tthis.hooks.createParser\n\t\t\t\t\t.for(match[1])\n\t\t\t\t\t.tap(\n\t\t\t\t\t\toptions.fn.name || \"unnamed compat plugin\",\n\t\t\t\t\t\toptions.fn.bind(this)\n\t\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tthis.resolverFactory = resolverFactory;\n\t\tthis.ruleSet = new RuleSet(options.defaultRules.concat(options.rules));\n\t\tthis.cachePredicate =\n\t\t\ttypeof options.unsafeCache === \"function\"\n\t\t\t\t? options.unsafeCache\n\t\t\t\t: Boolean.bind(null, options.unsafeCache);\n\t\tthis.context = context || \"\";\n\t\tthis.parserCache = Object.create(null);\n\t\tthis.generatorCache = Object.create(null);\n\t\tthis.hooks.factory.tap(\"NormalModuleFactory\", () => (result, callback) => {\n\t\t\tlet resolver = this.hooks.resolver.call(null);\n\n\t\t\t// Ignored\n\t\t\tif (!resolver) return callback();\n\n\t\t\tresolver(result, (err, data) => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t// Ignored\n\t\t\t\tif (!data) return callback();\n\n\t\t\t\t// direct module\n\t\t\t\tif (typeof data.source === \"function\") return callback(null, data);\n\n\t\t\t\tthis.hooks.afterResolve.callAsync(data, (err, result) => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t// Ignored\n\t\t\t\t\tif (!result) return callback();\n\n\t\t\t\t\tlet createdModule = this.hooks.createModule.call(result);\n\t\t\t\t\tif (!createdModule) {\n\t\t\t\t\t\tif (!result.request) {\n\t\t\t\t\t\t\treturn callback(new Error(\"Empty dependency (no request)\"));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcreatedModule = new NormalModule(result);\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedModule = this.hooks.module.call(createdModule, result);\n\n\t\t\t\t\treturn callback(null, createdModule);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tthis.hooks.resolver.tap(\"NormalModuleFactory\", () => (data, callback) => {\n\t\t\tconst contextInfo = data.contextInfo;\n\t\t\tconst context = data.context;\n\t\t\tconst request = data.request;\n\n\t\t\tconst loaderResolver = this.getResolver(\"loader\");\n\t\t\tconst normalResolver = this.getResolver(\"normal\", data.resolveOptions);\n\n\t\t\tlet matchResource = undefined;\n\t\t\tlet requestWithoutMatchResource = request;\n\t\t\tconst matchResourceMatch = MATCH_RESOURCE_REGEX.exec(request);\n\t\t\tif (matchResourceMatch) {\n\t\t\t\tmatchResource = matchResourceMatch[1];\n\t\t\t\tif (/^\\.\\.?\\//.test(matchResource)) {\n\t\t\t\t\tmatchResource = path.join(context, matchResource);\n\t\t\t\t}\n\t\t\t\trequestWithoutMatchResource = request.substr(\n\t\t\t\t\tmatchResourceMatch[0].length\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst noPreAutoLoaders = requestWithoutMatchResource.startsWith(\"-!\");\n\t\t\tconst noAutoLoaders =\n\t\t\t\tnoPreAutoLoaders || requestWithoutMatchResource.startsWith(\"!\");\n\t\t\tconst noPrePostAutoLoaders = requestWithoutMatchResource.startsWith(\"!!\");\n\t\t\tlet elements = requestWithoutMatchResource\n\t\t\t\t.replace(/^-?!+/, \"\")\n\t\t\t\t.replace(/!!+/g, \"!\")\n\t\t\t\t.split(\"!\");\n\t\t\tlet resource = elements.pop();\n\t\t\telements = elements.map(identToLoaderRequest);\n\n\t\t\tasyncLib.parallel(\n\t\t\t\t[\n\t\t\t\t\tcallback =>\n\t\t\t\t\t\tthis.resolveRequestArray(\n\t\t\t\t\t\t\tcontextInfo,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\telements,\n\t\t\t\t\t\t\tloaderResolver,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t),\n\t\t\t\t\tcallback => {\n\t\t\t\t\t\tif (resource === \"\" || resource[0] === \"?\") {\n\t\t\t\t\t\t\treturn callback(null, {\n\t\t\t\t\t\t\t\tresource\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnormalResolver.resolve(\n\t\t\t\t\t\t\tcontextInfo,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t(err, resource, resourceResolveData) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\t\t\t\tresourceResolveData,\n\t\t\t\t\t\t\t\t\tresource\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t(err, results) => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tlet loaders = results[0];\n\t\t\t\t\tconst resourceResolveData = results[1].resourceResolveData;\n\t\t\t\t\tresource = results[1].resource;\n\n\t\t\t\t\t// translate option idents\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (const item of loaders) {\n\t\t\t\t\t\t\tif (typeof item.options === \"string\" && item.options[0] === \"?\") {\n\t\t\t\t\t\t\t\tconst ident = item.options.substr(1);\n\t\t\t\t\t\t\t\titem.options = this.ruleSet.findOptionsByIdent(ident);\n\t\t\t\t\t\t\t\titem.ident = ident;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn callback(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (resource === false) {\n\t\t\t\t\t\t// ignored\n\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tnew RawModule(\n\t\t\t\t\t\t\t\t\"/* (ignored) */\",\n\t\t\t\t\t\t\t\t`ignored ${context} ${request}`,\n\t\t\t\t\t\t\t\t`${request} (ignored)`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst userRequest =\n\t\t\t\t\t\t(matchResource !== undefined ? `${matchResource}!=!` : \"\") +\n\t\t\t\t\t\tloaders\n\t\t\t\t\t\t\t.map(loaderToIdent)\n\t\t\t\t\t\t\t.concat([resource])\n\t\t\t\t\t\t\t.join(\"!\");\n\n\t\t\t\t\tlet resourcePath =\n\t\t\t\t\t\tmatchResource !== undefined ? matchResource : resource;\n\t\t\t\t\tlet resourceQuery = \"\";\n\t\t\t\t\tconst queryIndex = resourcePath.indexOf(\"?\");\n\t\t\t\t\tif (queryIndex >= 0) {\n\t\t\t\t\t\tresourceQuery = resourcePath.substr(queryIndex);\n\t\t\t\t\t\tresourcePath = resourcePath.substr(0, queryIndex);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this.ruleSet.exec({\n\t\t\t\t\t\tresource: resourcePath,\n\t\t\t\t\t\trealResource:\n\t\t\t\t\t\t\tmatchResource !== undefined\n\t\t\t\t\t\t\t\t? resource.replace(/\\?.*/, \"\")\n\t\t\t\t\t\t\t\t: resourcePath,\n\t\t\t\t\t\tresourceQuery,\n\t\t\t\t\t\tissuer: contextInfo.issuer,\n\t\t\t\t\t\tcompiler: contextInfo.compiler\n\t\t\t\t\t});\n\t\t\t\t\tconst settings = {};\n\t\t\t\t\tconst useLoadersPost = [];\n\t\t\t\t\tconst useLoaders = [];\n\t\t\t\t\tconst useLoadersPre = [];\n\t\t\t\t\tfor (const r of result) {\n\t\t\t\t\t\tif (r.type === \"use\") {\n\t\t\t\t\t\t\tif (r.enforce === \"post\" && !noPrePostAutoLoaders) {\n\t\t\t\t\t\t\t\tuseLoadersPost.push(r.value);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tr.enforce === \"pre\" &&\n\t\t\t\t\t\t\t\t!noPreAutoLoaders &&\n\t\t\t\t\t\t\t\t!noPrePostAutoLoaders\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tuseLoadersPre.push(r.value);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t!r.enforce &&\n\t\t\t\t\t\t\t\t!noAutoLoaders &&\n\t\t\t\t\t\t\t\t!noPrePostAutoLoaders\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tuseLoaders.push(r.value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\ttypeof r.value === \"object\" &&\n\t\t\t\t\t\t\tr.value !== null &&\n\t\t\t\t\t\t\ttypeof settings[r.type] === \"object\" &&\n\t\t\t\t\t\t\tsettings[r.type] !== null\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tsettings[r.type] = cachedCleverMerge(settings[r.type], r.value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsettings[r.type] = r.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tasyncLib.parallel(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tthis.resolveRequestArray.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tcontextInfo,\n\t\t\t\t\t\t\t\tthis.context,\n\t\t\t\t\t\t\t\tuseLoadersPost,\n\t\t\t\t\t\t\t\tloaderResolver\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tthis.resolveRequestArray.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tcontextInfo,\n\t\t\t\t\t\t\t\tthis.context,\n\t\t\t\t\t\t\t\tuseLoaders,\n\t\t\t\t\t\t\t\tloaderResolver\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tthis.resolveRequestArray.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tcontextInfo,\n\t\t\t\t\t\t\t\tthis.context,\n\t\t\t\t\t\t\t\tuseLoadersPre,\n\t\t\t\t\t\t\t\tloaderResolver\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t],\n\t\t\t\t\t\t(err, results) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (matchResource === undefined) {\n\t\t\t\t\t\t\t\tloaders = results[0].concat(loaders, results[1], results[2]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tloaders = results[0].concat(results[1], loaders, results[2]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\t\t\tconst type = settings.type;\n\t\t\t\t\t\t\t\tconst resolveOptions = settings.resolve;\n\t\t\t\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\t\t\t\tcontext: context,\n\t\t\t\t\t\t\t\t\trequest: loaders\n\t\t\t\t\t\t\t\t\t\t.map(loaderToIdent)\n\t\t\t\t\t\t\t\t\t\t.concat([resource])\n\t\t\t\t\t\t\t\t\t\t.join(\"!\"),\n\t\t\t\t\t\t\t\t\tdependencies: data.dependencies,\n\t\t\t\t\t\t\t\t\tuserRequest,\n\t\t\t\t\t\t\t\t\trawRequest: request,\n\t\t\t\t\t\t\t\t\tloaders,\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tmatchResource,\n\t\t\t\t\t\t\t\t\tresourceResolveData,\n\t\t\t\t\t\t\t\t\tsettings,\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\tparser: this.getParser(type, settings.parser),\n\t\t\t\t\t\t\t\t\tgenerator: this.getGenerator(type, settings.generator),\n\t\t\t\t\t\t\t\t\tresolveOptions\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tcreate(data, callback) {\n\t\tconst dependencies = data.dependencies;\n\t\tconst cacheEntry = dependencyCache.get(dependencies[0]);\n\t\tif (cacheEntry) return callback(null, cacheEntry);\n\t\tconst context = data.context || this.context;\n\t\tconst resolveOptions = data.resolveOptions || EMPTY_RESOLVE_OPTIONS;\n\t\tconst request = dependencies[0].request;\n\t\tconst contextInfo = data.contextInfo || {};\n\t\tthis.hooks.beforeResolve.callAsync(\n\t\t\t{\n\t\t\t\tcontextInfo,\n\t\t\t\tresolveOptions,\n\t\t\t\tcontext,\n\t\t\t\trequest,\n\t\t\t\tdependencies\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t// Ignored\n\t\t\t\tif (!result) return callback();\n\n\t\t\t\tconst factory = this.hooks.factory.call(null);\n\n\t\t\t\t// Ignored\n\t\t\t\tif (!factory) return callback();\n\n\t\t\t\tfactory(result, (err, module) => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tif (module && this.cachePredicate(module)) {\n\t\t\t\t\t\tfor (const d of dependencies) {\n\t\t\t\t\t\t\tdependencyCache.set(d, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(null, module);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tresolveRequestArray(contextInfo, context, array, resolver, callback) {\n\t\tif (array.length === 0) return callback(null, []);\n\t\tasyncLib.map(\n\t\t\tarray,\n\t\t\t(item, callback) => {\n\t\t\t\tresolver.resolve(\n\t\t\t\t\tcontextInfo,\n\t\t\t\t\tcontext,\n\t\t\t\t\titem.loader,\n\t\t\t\t\t{},\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\terr &&\n\t\t\t\t\t\t\t/^[^/]*$/.test(item.loader) &&\n\t\t\t\t\t\t\t!/-loader$/.test(item.loader)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn resolver.resolve(\n\t\t\t\t\t\t\t\tcontextInfo,\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\titem.loader + \"-loader\",\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\terr2 => {\n\t\t\t\t\t\t\t\t\tif (!err2) {\n\t\t\t\t\t\t\t\t\t\terr.message =\n\t\t\t\t\t\t\t\t\t\t\terr.message +\n\t\t\t\t\t\t\t\t\t\t\t\"\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t\"BREAKING CHANGE: It's no longer allowed to omit the '-loader' suffix when using loaders.\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t`                 You need to specify '${item.loader}-loader' instead of '${item.loader}',\\n` +\n\t\t\t\t\t\t\t\t\t\t\t\"                 see https://webpack.js.org/migrate/3/#automatic-loader-module-name-extension-removed\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\tconst optionsOnly = item.options\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\toptions: item.options\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tObject.assign({}, item, identToLoaderRequest(result), optionsOnly)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\tcallback\n\t\t);\n\t}\n\n\tgetParser(type, parserOptions) {\n\t\tlet ident = type;\n\t\tif (parserOptions) {\n\t\t\tif (parserOptions.ident) {\n\t\t\t\tident = `${type}|${parserOptions.ident}`;\n\t\t\t} else {\n\t\t\t\tident = JSON.stringify([type, parserOptions]);\n\t\t\t}\n\t\t}\n\t\tif (ident in this.parserCache) {\n\t\t\treturn this.parserCache[ident];\n\t\t}\n\t\treturn (this.parserCache[ident] = this.createParser(type, parserOptions));\n\t}\n\n\tcreateParser(type, parserOptions = {}) {\n\t\tconst parser = this.hooks.createParser.for(type).call(parserOptions);\n\t\tif (!parser) {\n\t\t\tthrow new Error(`No parser registered for ${type}`);\n\t\t}\n\t\tthis.hooks.parser.for(type).call(parser, parserOptions);\n\t\treturn parser;\n\t}\n\n\tgetGenerator(type, generatorOptions) {\n\t\tlet ident = type;\n\t\tif (generatorOptions) {\n\t\t\tif (generatorOptions.ident) {\n\t\t\t\tident = `${type}|${generatorOptions.ident}`;\n\t\t\t} else {\n\t\t\t\tident = JSON.stringify([type, generatorOptions]);\n\t\t\t}\n\t\t}\n\t\tif (ident in this.generatorCache) {\n\t\t\treturn this.generatorCache[ident];\n\t\t}\n\t\treturn (this.generatorCache[ident] = this.createGenerator(\n\t\t\ttype,\n\t\t\tgeneratorOptions\n\t\t));\n\t}\n\n\tcreateGenerator(type, generatorOptions = {}) {\n\t\tconst generator = this.hooks.createGenerator\n\t\t\t.for(type)\n\t\t\t.call(generatorOptions);\n\t\tif (!generator) {\n\t\t\tthrow new Error(`No generator registered for ${type}`);\n\t\t}\n\t\tthis.hooks.generator.for(type).call(generator, generatorOptions);\n\t\treturn generator;\n\t}\n\n\tgetResolver(type, resolveOptions) {\n\t\treturn this.resolverFactory.get(\n\t\t\ttype,\n\t\t\tresolveOptions || EMPTY_RESOLVE_OPTIONS\n\t\t);\n\t}\n}\n\nmodule.exports = NormalModuleFactory;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nclass NormalModuleReplacementPlugin {\n\tconstructor(resourceRegExp, newResource) {\n\t\tthis.resourceRegExp = resourceRegExp;\n\t\tthis.newResource = newResource;\n\t}\n\n\tapply(compiler) {\n\t\tconst resourceRegExp = this.resourceRegExp;\n\t\tconst newResource = this.newResource;\n\t\tcompiler.hooks.normalModuleFactory.tap(\n\t\t\t\"NormalModuleReplacementPlugin\",\n\t\t\tnmf => {\n\t\t\t\tnmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n\t\t\t\t\tif (!result) return;\n\t\t\t\t\tif (resourceRegExp.test(result.request)) {\n\t\t\t\t\t\tif (typeof newResource === \"function\") {\n\t\t\t\t\t\t\tnewResource(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.request = newResource;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t\tnmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n\t\t\t\t\tif (!result) return;\n\t\t\t\t\tif (resourceRegExp.test(result.resource)) {\n\t\t\t\t\t\tif (typeof newResource === \"function\") {\n\t\t\t\t\t\t\tnewResource(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.resource = path.resolve(\n\t\t\t\t\t\t\t\tpath.dirname(result.resource),\n\t\t\t\t\t\t\t\tnewResource\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = NormalModuleReplacementPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass NullFactory {\n\tcreate(data, callback) {\n\t\treturn callback();\n\t}\n}\nmodule.exports = NullFactory;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass OptionsApply {\n\tprocess(options, compiler) {}\n}\nmodule.exports = OptionsApply;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/**\n * Gets the value at path of object\n * @param {object} obj object to query\n * @param {string} path query path\n * @returns {any} - if {@param path} requests element from array, then `undefined` will be returned\n */\nconst getProperty = (obj, path) => {\n\tlet name = path.split(\".\");\n\tfor (let i = 0; i < name.length - 1; i++) {\n\t\tobj = obj[name[i]];\n\t\tif (typeof obj !== \"object\" || !obj || Array.isArray(obj)) return;\n\t}\n\treturn obj[name.pop()];\n};\n\n/**\n * Sets the value at path of object. Stops execution, if {@param path} requests element from array to be set\n * @param {object} obj object to query\n * @param {string} path query path\n * @param {any} value value to be set\n * @returns {void}\n */\nconst setProperty = (obj, path, value) => {\n\tlet name = path.split(\".\");\n\tfor (let i = 0; i < name.length - 1; i++) {\n\t\tif (typeof obj[name[i]] !== \"object\" && obj[name[i]] !== undefined) return;\n\t\tif (Array.isArray(obj[name[i]])) return;\n\t\tif (!obj[name[i]]) obj[name[i]] = {};\n\t\tobj = obj[name[i]];\n\t}\n\tobj[name.pop()] = value;\n};\n\n/**\n * @typedef {'call' | 'make' | 'append'} ConfigType\n */\n/**\n * @typedef {(options: object) => any} MakeConfigHandler\n */\n/**\n * @typedef {(value: any, options: object) => any} CallConfigHandler\n */\n/**\n * @typedef {any[]} AppendConfigValues\n */\n\nclass OptionsDefaulter {\n\tconstructor() {\n\t\t/**\n\t\t * Stores default options settings or functions for computing them\n\t\t */\n\t\tthis.defaults = {};\n\t\t/**\n\t\t * Stores configuration for options\n\t\t * @type {{[key: string]: ConfigType}}\n\t\t */\n\t\tthis.config = {};\n\t}\n\n\t/**\n\t * Enhancing {@param options} with default values\n\t * @param {object} options provided options\n\t * @returns {object} - enhanced options\n\t * @throws {Error} - will throw error, if configuration value is other then `undefined` or {@link ConfigType}\n\t */\n\tprocess(options) {\n\t\toptions = Object.assign({}, options);\n\t\tfor (let name in this.defaults) {\n\t\t\tswitch (this.config[name]) {\n\t\t\t\t/**\n\t\t\t\t * If {@link ConfigType} doesn't specified and current value is `undefined`, then default value will be assigned\n\t\t\t\t */\n\t\t\t\tcase undefined:\n\t\t\t\t\tif (getProperty(options, name) === undefined) {\n\t\t\t\t\t\tsetProperty(options, name, this.defaults[name]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t/**\n\t\t\t\t * Assign result of {@link CallConfigHandler}\n\t\t\t\t */\n\t\t\t\tcase \"call\":\n\t\t\t\t\tsetProperty(\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tthis.defaults[name].call(this, getProperty(options, name), options)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t/**\n\t\t\t\t * Assign result of {@link MakeConfigHandler}, if current value is `undefined`\n\t\t\t\t */\n\t\t\t\tcase \"make\":\n\t\t\t\t\tif (getProperty(options, name) === undefined) {\n\t\t\t\t\t\tsetProperty(options, name, this.defaults[name].call(this, options));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t/**\n\t\t\t\t * Adding {@link AppendConfigValues} at the end of the current array\n\t\t\t\t */\n\t\t\t\tcase \"append\": {\n\t\t\t\t\tlet oldValue = getProperty(options, name);\n\t\t\t\t\tif (!Array.isArray(oldValue)) {\n\t\t\t\t\t\toldValue = [];\n\t\t\t\t\t}\n\t\t\t\t\toldValue.push(...this.defaults[name]);\n\t\t\t\t\tsetProperty(options, name, oldValue);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"OptionsDefaulter cannot process \" + this.config[name]\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\n\t/**\n\t * Builds up default values\n\t * @param {string} name option path\n\t * @param {ConfigType | any} config if {@param def} is provided, then only {@link ConfigType} is allowed\n\t * @param {MakeConfigHandler | CallConfigHandler | AppendConfigValues} [def] defaults\n\t * @returns {void}\n\t */\n\tset(name, config, def) {\n\t\tif (def !== undefined) {\n\t\t\tthis.defaults[name] = def;\n\t\t\tthis.config[name] = config;\n\t\t} else {\n\t\t\tthis.defaults[name] = config;\n\t\t\tdelete this.config[name];\n\t\t}\n\t}\n}\n\nmodule.exports = OptionsDefaulter;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n// Syntax: https://developer.mozilla.org/en/SpiderMonkey/Parser_API\n\nconst acorn = require(\"acorn\");\nconst { Tapable, SyncBailHook, HookMap } = require(\"tapable\");\nconst util = require(\"util\");\nconst vm = require(\"vm\");\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\nconst StackedSetMap = require(\"./util/StackedSetMap\");\n\nconst acornParser = acorn.Parser;\n\nconst joinRanges = (startRange, endRange) => {\n\tif (!endRange) return startRange;\n\tif (!startRange) return endRange;\n\treturn [startRange[0], endRange[1]];\n};\n\nconst defaultParserOptions = {\n\tranges: true,\n\tlocations: true,\n\tecmaVersion: 11,\n\tsourceType: \"module\",\n\tonComment: null\n};\n\n// regexp to match at lease one \"magic comment\"\nconst webpackCommentRegExp = new RegExp(/(^|\\W)webpack[A-Z]{1,}[A-Za-z]{1,}:/);\n\nconst EMPTY_COMMENT_OPTIONS = {\n\toptions: null,\n\terrors: null\n};\n\nclass Parser extends Tapable {\n\tconstructor(options, sourceType = \"auto\") {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\tevaluateTypeof: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\tevaluate: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\tevaluateIdentifier: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\tevaluateDefinedIdentifier: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"expression\"])\n\t\t\t),\n\t\t\tevaluateCallExpressionMember: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"expression\", \"param\"])\n\t\t\t),\n\t\t\tstatement: new SyncBailHook([\"statement\"]),\n\t\t\tstatementIf: new SyncBailHook([\"statement\"]),\n\t\t\tlabel: new HookMap(() => new SyncBailHook([\"statement\"])),\n\t\t\timport: new SyncBailHook([\"statement\", \"source\"]),\n\t\t\timportSpecifier: new SyncBailHook([\n\t\t\t\t\"statement\",\n\t\t\t\t\"source\",\n\t\t\t\t\"exportName\",\n\t\t\t\t\"identifierName\"\n\t\t\t]),\n\t\t\texport: new SyncBailHook([\"statement\"]),\n\t\t\texportImport: new SyncBailHook([\"statement\", \"source\"]),\n\t\t\texportDeclaration: new SyncBailHook([\"statement\", \"declaration\"]),\n\t\t\texportExpression: new SyncBailHook([\"statement\", \"declaration\"]),\n\t\t\texportSpecifier: new SyncBailHook([\n\t\t\t\t\"statement\",\n\t\t\t\t\"identifierName\",\n\t\t\t\t\"exportName\",\n\t\t\t\t\"index\"\n\t\t\t]),\n\t\t\texportImportSpecifier: new SyncBailHook([\n\t\t\t\t\"statement\",\n\t\t\t\t\"source\",\n\t\t\t\t\"identifierName\",\n\t\t\t\t\"exportName\",\n\t\t\t\t\"index\"\n\t\t\t]),\n\t\t\tvarDeclaration: new HookMap(() => new SyncBailHook([\"declaration\"])),\n\t\t\tvarDeclarationLet: new HookMap(() => new SyncBailHook([\"declaration\"])),\n\t\t\tvarDeclarationConst: new HookMap(() => new SyncBailHook([\"declaration\"])),\n\t\t\tvarDeclarationVar: new HookMap(() => new SyncBailHook([\"declaration\"])),\n\t\t\tcanRename: new HookMap(() => new SyncBailHook([\"initExpression\"])),\n\t\t\trename: new HookMap(() => new SyncBailHook([\"initExpression\"])),\n\t\t\tassigned: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\tassign: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\ttypeof: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\timportCall: new SyncBailHook([\"expression\"]),\n\t\t\tcall: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\tcallAnyMember: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\tnew: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\texpression: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\texpressionAnyMember: new HookMap(() => new SyncBailHook([\"expression\"])),\n\t\t\texpressionConditionalOperator: new SyncBailHook([\"expression\"]),\n\t\t\texpressionLogicalOperator: new SyncBailHook([\"expression\"]),\n\t\t\tprogram: new SyncBailHook([\"ast\", \"comments\"])\n\t\t};\n\t\tconst HOOK_MAP_COMPAT_CONFIG = {\n\t\t\tevaluateTypeof: /^evaluate typeof (.+)$/,\n\t\t\tevaluateIdentifier: /^evaluate Identifier (.+)$/,\n\t\t\tevaluateDefinedIdentifier: /^evaluate defined Identifier (.+)$/,\n\t\t\tevaluateCallExpressionMember: /^evaluate CallExpression .(.+)$/,\n\t\t\tevaluate: /^evaluate (.+)$/,\n\t\t\tlabel: /^label (.+)$/,\n\t\t\tvarDeclarationLet: /^var-let (.+)$/,\n\t\t\tvarDeclarationConst: /^var-const (.+)$/,\n\t\t\tvarDeclarationVar: /^var-var (.+)$/,\n\t\t\tvarDeclaration: /^var (.+)$/,\n\t\t\tcanRename: /^can-rename (.+)$/,\n\t\t\trename: /^rename (.+)$/,\n\t\t\ttypeof: /^typeof (.+)$/,\n\t\t\tassigned: /^assigned (.+)$/,\n\t\t\tassign: /^assign (.+)$/,\n\t\t\tcallAnyMember: /^call (.+)\\.\\*$/,\n\t\t\tcall: /^call (.+)$/,\n\t\t\tnew: /^new (.+)$/,\n\t\t\texpressionConditionalOperator: /^expression \\?:$/,\n\t\t\texpressionAnyMember: /^expression (.+)\\.\\*$/,\n\t\t\texpression: /^expression (.+)$/\n\t\t};\n\t\tthis._pluginCompat.tap(\"Parser\", options => {\n\t\t\tfor (const name of Object.keys(HOOK_MAP_COMPAT_CONFIG)) {\n\t\t\t\tconst regexp = HOOK_MAP_COMPAT_CONFIG[name];\n\t\t\t\tconst match = regexp.exec(options.name);\n\t\t\t\tif (match) {\n\t\t\t\t\tif (match[1]) {\n\t\t\t\t\t\tthis.hooks[name].tap(\n\t\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\t\toptions.fn.name || \"unnamed compat plugin\",\n\t\t\t\t\t\t\toptions.fn.bind(this)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.hooks[name].tap(\n\t\t\t\t\t\t\toptions.fn.name || \"unnamed compat plugin\",\n\t\t\t\t\t\t\toptions.fn.bind(this)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.options = options;\n\t\tthis.sourceType = sourceType;\n\t\tthis.scope = undefined;\n\t\tthis.state = undefined;\n\t\tthis.comments = undefined;\n\t\tthis.initializeEvaluating();\n\t}\n\n\tinitializeEvaluating() {\n\t\tthis.hooks.evaluate.for(\"Literal\").tap(\"Parser\", expr => {\n\t\t\tswitch (typeof expr.value) {\n\t\t\t\tcase \"number\":\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setNumber(expr.value)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\tcase \"string\":\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(expr.value)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setBoolean(expr.value)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t}\n\t\t\tif (expr.value === null) {\n\t\t\t\treturn new BasicEvaluatedExpression().setNull().setRange(expr.range);\n\t\t\t}\n\t\t\tif (expr.value instanceof RegExp) {\n\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t.setRegExp(expr.value)\n\t\t\t\t\t.setRange(expr.range);\n\t\t\t}\n\t\t});\n\t\tthis.hooks.evaluate.for(\"LogicalExpression\").tap(\"Parser\", expr => {\n\t\t\tlet left;\n\t\t\tlet leftAsBool;\n\t\t\tlet right;\n\t\t\tif (expr.operator === \"&&\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tleftAsBool = left && left.asBool();\n\t\t\t\tif (leftAsBool === false) return left.setRange(expr.range);\n\t\t\t\tif (leftAsBool !== true) return;\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\treturn right.setRange(expr.range);\n\t\t\t} else if (expr.operator === \"||\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tleftAsBool = left && left.asBool();\n\t\t\t\tif (leftAsBool === true) return left.setRange(expr.range);\n\t\t\t\tif (leftAsBool !== false) return;\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\treturn right.setRange(expr.range);\n\t\t\t}\n\t\t});\n\t\tthis.hooks.evaluate.for(\"BinaryExpression\").tap(\"Parser\", expr => {\n\t\t\tlet left;\n\t\t\tlet right;\n\t\t\tlet res;\n\t\t\tif (expr.operator === \"+\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tif (left.isString()) {\n\t\t\t\t\tif (right.isString()) {\n\t\t\t\t\t\tres.setString(left.string + right.string);\n\t\t\t\t\t} else if (right.isNumber()) {\n\t\t\t\t\t\tres.setString(left.string + right.number);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tright.isWrapped() &&\n\t\t\t\t\t\tright.prefix &&\n\t\t\t\t\t\tright.prefix.isString()\n\t\t\t\t\t) {\n\t\t\t\t\t\t// \"left\" + (\"prefix\" + inner + \"postfix\")\n\t\t\t\t\t\t// => (\"leftprefix\" + inner + \"postfix\")\n\t\t\t\t\t\tres.setWrapped(\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(left.string + right.prefix.string)\n\t\t\t\t\t\t\t\t.setRange(joinRanges(left.range, right.prefix.range)),\n\t\t\t\t\t\t\tright.postfix,\n\t\t\t\t\t\t\tright.wrappedInnerExpressions\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (right.isWrapped()) {\n\t\t\t\t\t\t// \"left\" + ([null] + inner + \"postfix\")\n\t\t\t\t\t\t// => (\"left\" + inner + \"postfix\")\n\t\t\t\t\t\tres.setWrapped(left, right.postfix, right.wrappedInnerExpressions);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// \"left\" + expr\n\t\t\t\t\t\t// => (\"left\" + expr + \"\")\n\t\t\t\t\t\tres.setWrapped(left, null, [right]);\n\t\t\t\t\t}\n\t\t\t\t} else if (left.isNumber()) {\n\t\t\t\t\tif (right.isString()) {\n\t\t\t\t\t\tres.setString(left.number + right.string);\n\t\t\t\t\t} else if (right.isNumber()) {\n\t\t\t\t\t\tres.setNumber(left.number + right.number);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (left.isWrapped()) {\n\t\t\t\t\tif (left.postfix && left.postfix.isString() && right.isString()) {\n\t\t\t\t\t\t// (\"prefix\" + inner + \"postfix\") + \"right\"\n\t\t\t\t\t\t// => (\"prefix\" + inner + \"postfixright\")\n\t\t\t\t\t\tres.setWrapped(\n\t\t\t\t\t\t\tleft.prefix,\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(left.postfix.string + right.string)\n\t\t\t\t\t\t\t\t.setRange(joinRanges(left.postfix.range, right.range)),\n\t\t\t\t\t\t\tleft.wrappedInnerExpressions\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tleft.postfix &&\n\t\t\t\t\t\tleft.postfix.isString() &&\n\t\t\t\t\t\tright.isNumber()\n\t\t\t\t\t) {\n\t\t\t\t\t\t// (\"prefix\" + inner + \"postfix\") + 123\n\t\t\t\t\t\t// => (\"prefix\" + inner + \"postfix123\")\n\t\t\t\t\t\tres.setWrapped(\n\t\t\t\t\t\t\tleft.prefix,\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(left.postfix.string + right.number)\n\t\t\t\t\t\t\t\t.setRange(joinRanges(left.postfix.range, right.range)),\n\t\t\t\t\t\t\tleft.wrappedInnerExpressions\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (right.isString()) {\n\t\t\t\t\t\t// (\"prefix\" + inner + [null]) + \"right\"\n\t\t\t\t\t\t// => (\"prefix\" + inner + \"right\")\n\t\t\t\t\t\tres.setWrapped(left.prefix, right, left.wrappedInnerExpressions);\n\t\t\t\t\t} else if (right.isNumber()) {\n\t\t\t\t\t\t// (\"prefix\" + inner + [null]) + 123\n\t\t\t\t\t\t// => (\"prefix\" + inner + \"123\")\n\t\t\t\t\t\tres.setWrapped(\n\t\t\t\t\t\t\tleft.prefix,\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(right.number + \"\")\n\t\t\t\t\t\t\t\t.setRange(right.range),\n\t\t\t\t\t\t\tleft.wrappedInnerExpressions\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (right.isWrapped()) {\n\t\t\t\t\t\t// (\"prefix1\" + inner1 + \"postfix1\") + (\"prefix2\" + inner2 + \"postfix2\")\n\t\t\t\t\t\t// (\"prefix1\" + inner1 + \"postfix1\" + \"prefix2\" + inner2 + \"postfix2\")\n\t\t\t\t\t\tres.setWrapped(\n\t\t\t\t\t\t\tleft.prefix,\n\t\t\t\t\t\t\tright.postfix,\n\t\t\t\t\t\t\tleft.wrappedInnerExpressions &&\n\t\t\t\t\t\t\t\tright.wrappedInnerExpressions &&\n\t\t\t\t\t\t\t\tleft.wrappedInnerExpressions\n\t\t\t\t\t\t\t\t\t.concat(left.postfix ? [left.postfix] : [])\n\t\t\t\t\t\t\t\t\t.concat(right.prefix ? [right.prefix] : [])\n\t\t\t\t\t\t\t\t\t.concat(right.wrappedInnerExpressions)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// (\"prefix\" + inner + postfix) + expr\n\t\t\t\t\t\t// => (\"prefix\" + inner + postfix + expr + [null])\n\t\t\t\t\t\tres.setWrapped(\n\t\t\t\t\t\t\tleft.prefix,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tleft.wrappedInnerExpressions &&\n\t\t\t\t\t\t\t\tleft.wrappedInnerExpressions.concat(\n\t\t\t\t\t\t\t\t\tleft.postfix ? [left.postfix, right] : [right]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (right.isString()) {\n\t\t\t\t\t\t// left + \"right\"\n\t\t\t\t\t\t// => ([null] + left + \"right\")\n\t\t\t\t\t\tres.setWrapped(null, right, [left]);\n\t\t\t\t\t} else if (right.isWrapped()) {\n\t\t\t\t\t\t// left + (prefix + inner + \"postfix\")\n\t\t\t\t\t\t// => ([null] + left + prefix + inner + \"postfix\")\n\t\t\t\t\t\tres.setWrapped(\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tright.postfix,\n\t\t\t\t\t\t\tright.wrappedInnerExpressions &&\n\t\t\t\t\t\t\t\t(right.prefix ? [left, right.prefix] : [left]).concat(\n\t\t\t\t\t\t\t\t\tright.wrappedInnerExpressions\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \"-\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number - right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \"*\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number * right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \"/\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number / right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \"**\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(Math.pow(left.number, right.number));\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \"==\" || expr.operator === \"===\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\tif (left.isString() && right.isString()) {\n\t\t\t\t\treturn res.setBoolean(left.string === right.string);\n\t\t\t\t} else if (left.isNumber() && right.isNumber()) {\n\t\t\t\t\treturn res.setBoolean(left.number === right.number);\n\t\t\t\t} else if (left.isBoolean() && right.isBoolean()) {\n\t\t\t\t\treturn res.setBoolean(left.bool === right.bool);\n\t\t\t\t}\n\t\t\t} else if (expr.operator === \"!=\" || expr.operator === \"!==\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\tif (left.isString() && right.isString()) {\n\t\t\t\t\treturn res.setBoolean(left.string !== right.string);\n\t\t\t\t} else if (left.isNumber() && right.isNumber()) {\n\t\t\t\t\treturn res.setBoolean(left.number !== right.number);\n\t\t\t\t} else if (left.isBoolean() && right.isBoolean()) {\n\t\t\t\t\treturn res.setBoolean(left.bool !== right.bool);\n\t\t\t\t}\n\t\t\t} else if (expr.operator === \"&\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number & right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \"|\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number | right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \"^\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number ^ right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \">>>\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number >>> right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \">>\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number >> right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t} else if (expr.operator === \"<<\") {\n\t\t\t\tleft = this.evaluateExpression(expr.left);\n\t\t\t\tright = this.evaluateExpression(expr.right);\n\t\t\t\tif (!left || !right) return;\n\t\t\t\tif (!left.isNumber() || !right.isNumber()) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(left.number << right.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t\tthis.hooks.evaluate.for(\"UnaryExpression\").tap(\"Parser\", expr => {\n\t\t\tif (expr.operator === \"typeof\") {\n\t\t\t\tlet res;\n\t\t\t\tlet name;\n\t\t\t\tif (expr.argument.type === \"Identifier\") {\n\t\t\t\t\tname =\n\t\t\t\t\t\tthis.scope.renames.get(expr.argument.name) || expr.argument.name;\n\t\t\t\t\tif (!this.scope.definitions.has(name)) {\n\t\t\t\t\t\tconst hook = this.hooks.evaluateTypeof.get(name);\n\t\t\t\t\t\tif (hook !== undefined) {\n\t\t\t\t\t\t\tres = hook.call(expr);\n\t\t\t\t\t\t\tif (res !== undefined) return res;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (expr.argument.type === \"MemberExpression\") {\n\t\t\t\t\tconst exprName = this.getNameForExpression(expr.argument);\n\t\t\t\t\tif (exprName && exprName.free) {\n\t\t\t\t\t\tconst hook = this.hooks.evaluateTypeof.get(exprName.name);\n\t\t\t\t\t\tif (hook !== undefined) {\n\t\t\t\t\t\t\tres = hook.call(expr);\n\t\t\t\t\t\t\tif (res !== undefined) return res;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (expr.argument.type === \"FunctionExpression\") {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(\"function\")\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t\tconst arg = this.evaluateExpression(expr.argument);\n\t\t\t\tif (arg.isString() || arg.isWrapped()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(\"string\")\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t\tif (arg.isNumber()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(\"number\")\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t\tif (arg.isBoolean()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(\"boolean\")\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t\tif (arg.isArray() || arg.isConstArray() || arg.isRegExp()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(\"object\")\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t} else if (expr.operator === \"!\") {\n\t\t\t\tconst argument = this.evaluateExpression(expr.argument);\n\t\t\t\tif (!argument) return;\n\t\t\t\tif (argument.isBoolean()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setBoolean(!argument.bool)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t\tif (argument.isTruthy()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setBoolean(false)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t\tif (argument.isFalsy()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setBoolean(true)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t\tif (argument.isString()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setBoolean(!argument.string)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t\tif (argument.isNumber()) {\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setBoolean(!argument.number)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t} else if (expr.operator === \"~\") {\n\t\t\t\tconst argument = this.evaluateExpression(expr.argument);\n\t\t\t\tif (!argument) return;\n\t\t\t\tif (!argument.isNumber()) return;\n\t\t\t\tconst res = new BasicEvaluatedExpression();\n\t\t\t\tres.setNumber(~argument.number);\n\t\t\t\tres.setRange(expr.range);\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t\tthis.hooks.evaluateTypeof.for(\"undefined\").tap(\"Parser\", expr => {\n\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t.setString(\"undefined\")\n\t\t\t\t.setRange(expr.range);\n\t\t});\n\t\tthis.hooks.evaluate.for(\"Identifier\").tap(\"Parser\", expr => {\n\t\t\tconst name = this.scope.renames.get(expr.name) || expr.name;\n\t\t\tif (!this.scope.definitions.has(expr.name)) {\n\t\t\t\tconst hook = this.hooks.evaluateIdentifier.get(name);\n\t\t\t\tif (hook !== undefined) {\n\t\t\t\t\tconst result = hook.call(expr);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t.setIdentifier(name)\n\t\t\t\t\t.setRange(expr.range);\n\t\t\t} else {\n\t\t\t\tconst hook = this.hooks.evaluateDefinedIdentifier.get(name);\n\t\t\t\tif (hook !== undefined) {\n\t\t\t\t\treturn hook.call(expr);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.hooks.evaluate.for(\"ThisExpression\").tap(\"Parser\", expr => {\n\t\t\tconst name = this.scope.renames.get(\"this\");\n\t\t\tif (name) {\n\t\t\t\tconst hook = this.hooks.evaluateIdentifier.get(name);\n\t\t\t\tif (hook !== undefined) {\n\t\t\t\t\tconst result = hook.call(expr);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t.setIdentifier(name)\n\t\t\t\t\t.setRange(expr.range);\n\t\t\t}\n\t\t});\n\t\tthis.hooks.evaluate.for(\"MemberExpression\").tap(\"Parser\", expression => {\n\t\t\tlet exprName = this.getNameForExpression(expression);\n\t\t\tif (exprName) {\n\t\t\t\tif (exprName.free) {\n\t\t\t\t\tconst hook = this.hooks.evaluateIdentifier.get(exprName.name);\n\t\t\t\t\tif (hook !== undefined) {\n\t\t\t\t\t\tconst result = hook.call(expression);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setIdentifier(exprName.name)\n\t\t\t\t\t\t.setRange(expression.range);\n\t\t\t\t} else {\n\t\t\t\t\tconst hook = this.hooks.evaluateDefinedIdentifier.get(exprName.name);\n\t\t\t\t\tif (hook !== undefined) {\n\t\t\t\t\t\treturn hook.call(expression);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.hooks.evaluate.for(\"CallExpression\").tap(\"Parser\", expr => {\n\t\t\tif (expr.callee.type !== \"MemberExpression\") return;\n\t\t\tif (\n\t\t\t\texpr.callee.property.type !==\n\t\t\t\t(expr.callee.computed ? \"Literal\" : \"Identifier\")\n\t\t\t)\n\t\t\t\treturn;\n\t\t\tconst param = this.evaluateExpression(expr.callee.object);\n\t\t\tif (!param) return;\n\t\t\tconst property = expr.callee.property.name || expr.callee.property.value;\n\t\t\tconst hook = this.hooks.evaluateCallExpressionMember.get(property);\n\t\t\tif (hook !== undefined) {\n\t\t\t\treturn hook.call(expr, param);\n\t\t\t}\n\t\t});\n\t\tthis.hooks.evaluateCallExpressionMember\n\t\t\t.for(\"replace\")\n\t\t\t.tap(\"Parser\", (expr, param) => {\n\t\t\t\tif (!param.isString()) return;\n\t\t\t\tif (expr.arguments.length !== 2) return;\n\t\t\t\tlet arg1 = this.evaluateExpression(expr.arguments[0]);\n\t\t\t\tlet arg2 = this.evaluateExpression(expr.arguments[1]);\n\t\t\t\tif (!arg1.isString() && !arg1.isRegExp()) return;\n\t\t\t\targ1 = arg1.regExp || arg1.string;\n\t\t\t\tif (!arg2.isString()) return;\n\t\t\t\targ2 = arg2.string;\n\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t.setString(param.string.replace(arg1, arg2))\n\t\t\t\t\t.setRange(expr.range);\n\t\t\t});\n\t\t[\"substr\", \"substring\"].forEach(fn => {\n\t\t\tthis.hooks.evaluateCallExpressionMember\n\t\t\t\t.for(fn)\n\t\t\t\t.tap(\"Parser\", (expr, param) => {\n\t\t\t\t\tif (!param.isString()) return;\n\t\t\t\t\tlet arg1;\n\t\t\t\t\tlet result,\n\t\t\t\t\t\tstr = param.string;\n\t\t\t\t\tswitch (expr.arguments.length) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\targ1 = this.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\t\tif (!arg1.isNumber()) return;\n\t\t\t\t\t\t\tresult = str[fn](arg1.number);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: {\n\t\t\t\t\t\t\targ1 = this.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\t\tconst arg2 = this.evaluateExpression(expr.arguments[1]);\n\t\t\t\t\t\t\tif (!arg1.isNumber()) return;\n\t\t\t\t\t\t\tif (!arg2.isNumber()) return;\n\t\t\t\t\t\t\tresult = str[fn](arg1.number, arg2.number);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(result)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t});\n\t\t});\n\n\t\t/**\n\t\t * @param {string} kind \"cooked\" | \"raw\"\n\t\t * @param {TODO} templateLiteralExpr TemplateLiteral expr\n\t\t * @returns {{quasis: BasicEvaluatedExpression[], parts: BasicEvaluatedExpression[]}} Simplified template\n\t\t */\n\t\tconst getSimplifiedTemplateResult = (kind, templateLiteralExpr) => {\n\t\t\tconst quasis = [];\n\t\t\tconst parts = [];\n\n\t\t\tfor (let i = 0; i < templateLiteralExpr.quasis.length; i++) {\n\t\t\t\tconst quasiExpr = templateLiteralExpr.quasis[i];\n\t\t\t\tconst quasi = quasiExpr.value[kind];\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tconst prevExpr = parts[parts.length - 1];\n\t\t\t\t\tconst expr = this.evaluateExpression(\n\t\t\t\t\t\ttemplateLiteralExpr.expressions[i - 1]\n\t\t\t\t\t);\n\t\t\t\t\tconst exprAsString = expr.asString();\n\t\t\t\t\tif (typeof exprAsString === \"string\") {\n\t\t\t\t\t\t// We can merge quasi + expr + quasi when expr\n\t\t\t\t\t\t// is a const string\n\n\t\t\t\t\t\tprevExpr.setString(prevExpr.string + exprAsString + quasi);\n\t\t\t\t\t\tprevExpr.setRange([prevExpr.range[0], quasiExpr.range[1]]);\n\t\t\t\t\t\t// We unset the expression as it doesn't match to a single expression\n\t\t\t\t\t\tprevExpr.setExpression(undefined);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tparts.push(expr);\n\t\t\t\t}\n\n\t\t\t\tconst part = new BasicEvaluatedExpression()\n\t\t\t\t\t.setString(quasi)\n\t\t\t\t\t.setRange(quasiExpr.range)\n\t\t\t\t\t.setExpression(quasiExpr);\n\t\t\t\tquasis.push(part);\n\t\t\t\tparts.push(part);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tquasis,\n\t\t\t\tparts\n\t\t\t};\n\t\t};\n\n\t\tthis.hooks.evaluate.for(\"TemplateLiteral\").tap(\"Parser\", node => {\n\t\t\tconst { quasis, parts } = getSimplifiedTemplateResult(\"cooked\", node);\n\t\t\tif (parts.length === 1) {\n\t\t\t\treturn parts[0].setRange(node.range);\n\t\t\t}\n\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t.setTemplateString(quasis, parts, \"cooked\")\n\t\t\t\t.setRange(node.range);\n\t\t});\n\t\tthis.hooks.evaluate.for(\"TaggedTemplateExpression\").tap(\"Parser\", node => {\n\t\t\tif (this.evaluateExpression(node.tag).identifier !== \"String.raw\") return;\n\t\t\tconst { quasis, parts } = getSimplifiedTemplateResult(\"raw\", node.quasi);\n\t\t\tif (parts.length === 1) {\n\t\t\t\treturn parts[0].setRange(node.range);\n\t\t\t}\n\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t.setTemplateString(quasis, parts, \"raw\")\n\t\t\t\t.setRange(node.range);\n\t\t});\n\n\t\tthis.hooks.evaluateCallExpressionMember\n\t\t\t.for(\"concat\")\n\t\t\t.tap(\"Parser\", (expr, param) => {\n\t\t\t\tif (!param.isString() && !param.isWrapped()) return;\n\n\t\t\t\tlet stringSuffix = null;\n\t\t\t\tlet hasUnknownParams = false;\n\t\t\t\tfor (let i = expr.arguments.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst argExpr = this.evaluateExpression(expr.arguments[i]);\n\t\t\t\t\tif (!argExpr.isString() && !argExpr.isNumber()) {\n\t\t\t\t\t\thasUnknownParams = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value = argExpr.isString()\n\t\t\t\t\t\t? argExpr.string\n\t\t\t\t\t\t: \"\" + argExpr.number;\n\n\t\t\t\t\tconst newString = value + (stringSuffix ? stringSuffix.string : \"\");\n\t\t\t\t\tconst newRange = [\n\t\t\t\t\t\targExpr.range[0],\n\t\t\t\t\t\t(stringSuffix || argExpr).range[1]\n\t\t\t\t\t];\n\t\t\t\t\tstringSuffix = new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(newString)\n\t\t\t\t\t\t.setRange(newRange);\n\t\t\t\t}\n\n\t\t\t\tif (hasUnknownParams) {\n\t\t\t\t\tconst prefix = param.isString() ? param : param.prefix;\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setWrapped(prefix, stringSuffix)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t} else if (param.isWrapped()) {\n\t\t\t\t\tconst postfix = stringSuffix || param.postfix;\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setWrapped(param.prefix, postfix)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t} else {\n\t\t\t\t\tconst newString =\n\t\t\t\t\t\tparam.string + (stringSuffix ? stringSuffix.string : \"\");\n\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t.setString(newString)\n\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.hooks.evaluateCallExpressionMember\n\t\t\t.for(\"split\")\n\t\t\t.tap(\"Parser\", (expr, param) => {\n\t\t\t\tif (!param.isString()) return;\n\t\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\t\tlet result;\n\t\t\t\tconst arg = this.evaluateExpression(expr.arguments[0]);\n\t\t\t\tif (arg.isString()) {\n\t\t\t\t\tresult = param.string.split(arg.string);\n\t\t\t\t} else if (arg.isRegExp()) {\n\t\t\t\t\tresult = param.string.split(arg.regExp);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t.setArray(result)\n\t\t\t\t\t.setRange(expr.range);\n\t\t\t});\n\t\tthis.hooks.evaluate.for(\"ConditionalExpression\").tap(\"Parser\", expr => {\n\t\t\tconst condition = this.evaluateExpression(expr.test);\n\t\t\tconst conditionValue = condition.asBool();\n\t\t\tlet res;\n\t\t\tif (conditionValue === undefined) {\n\t\t\t\tconst consequent = this.evaluateExpression(expr.consequent);\n\t\t\t\tconst alternate = this.evaluateExpression(expr.alternate);\n\t\t\t\tif (!consequent || !alternate) return;\n\t\t\t\tres = new BasicEvaluatedExpression();\n\t\t\t\tif (consequent.isConditional()) {\n\t\t\t\t\tres.setOptions(consequent.options);\n\t\t\t\t} else {\n\t\t\t\t\tres.setOptions([consequent]);\n\t\t\t\t}\n\t\t\t\tif (alternate.isConditional()) {\n\t\t\t\t\tres.addOptions(alternate.options);\n\t\t\t\t} else {\n\t\t\t\t\tres.addOptions([alternate]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tres = this.evaluateExpression(\n\t\t\t\t\tconditionValue ? expr.consequent : expr.alternate\n\t\t\t\t);\n\t\t\t}\n\t\t\tres.setRange(expr.range);\n\t\t\treturn res;\n\t\t});\n\t\tthis.hooks.evaluate.for(\"ArrayExpression\").tap(\"Parser\", expr => {\n\t\t\tconst items = expr.elements.map(element => {\n\t\t\t\treturn element !== null && this.evaluateExpression(element);\n\t\t\t});\n\t\t\tif (!items.every(Boolean)) return;\n\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t.setItems(items)\n\t\t\t\t.setRange(expr.range);\n\t\t});\n\t}\n\n\tgetRenameIdentifier(expr) {\n\t\tconst result = this.evaluateExpression(expr);\n\t\tif (result && result.isIdentifier()) {\n\t\t\treturn result.identifier;\n\t\t}\n\t}\n\n\twalkClass(classy) {\n\t\tif (classy.superClass) this.walkExpression(classy.superClass);\n\t\tif (classy.body && classy.body.type === \"ClassBody\") {\n\t\t\tconst wasTopLevel = this.scope.topLevelScope;\n\t\t\tthis.scope.topLevelScope = false;\n\t\t\tfor (const methodDefinition of classy.body.body) {\n\t\t\t\tif (methodDefinition.type === \"MethodDefinition\") {\n\t\t\t\t\tthis.walkMethodDefinition(methodDefinition);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scope.topLevelScope = wasTopLevel;\n\t\t}\n\t}\n\n\twalkMethodDefinition(methodDefinition) {\n\t\tif (methodDefinition.computed && methodDefinition.key) {\n\t\t\tthis.walkExpression(methodDefinition.key);\n\t\t}\n\t\tif (methodDefinition.value) {\n\t\t\tthis.walkExpression(methodDefinition.value);\n\t\t}\n\t}\n\n\t// Prewalking iterates the scope for variable declarations\n\tprewalkStatements(statements) {\n\t\tfor (let index = 0, len = statements.length; index < len; index++) {\n\t\t\tconst statement = statements[index];\n\t\t\tthis.prewalkStatement(statement);\n\t\t}\n\t}\n\n\t// Block-Prewalking iterates the scope for block variable declarations\n\tblockPrewalkStatements(statements) {\n\t\tfor (let index = 0, len = statements.length; index < len; index++) {\n\t\t\tconst statement = statements[index];\n\t\t\tthis.blockPrewalkStatement(statement);\n\t\t}\n\t}\n\n\t// Walking iterates the statements and expressions and processes them\n\twalkStatements(statements) {\n\t\tfor (let index = 0, len = statements.length; index < len; index++) {\n\t\t\tconst statement = statements[index];\n\t\t\tthis.walkStatement(statement);\n\t\t}\n\t}\n\n\tprewalkStatement(statement) {\n\t\tswitch (statement.type) {\n\t\t\tcase \"BlockStatement\":\n\t\t\t\tthis.prewalkBlockStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"DoWhileStatement\":\n\t\t\t\tthis.prewalkDoWhileStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ExportAllDeclaration\":\n\t\t\t\tthis.prewalkExportAllDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ExportDefaultDeclaration\":\n\t\t\t\tthis.prewalkExportDefaultDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ExportNamedDeclaration\":\n\t\t\t\tthis.prewalkExportNamedDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ForInStatement\":\n\t\t\t\tthis.prewalkForInStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ForOfStatement\":\n\t\t\t\tthis.prewalkForOfStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ForStatement\":\n\t\t\t\tthis.prewalkForStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"FunctionDeclaration\":\n\t\t\t\tthis.prewalkFunctionDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"IfStatement\":\n\t\t\t\tthis.prewalkIfStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ImportDeclaration\":\n\t\t\t\tthis.prewalkImportDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"LabeledStatement\":\n\t\t\t\tthis.prewalkLabeledStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"SwitchStatement\":\n\t\t\t\tthis.prewalkSwitchStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"TryStatement\":\n\t\t\t\tthis.prewalkTryStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"VariableDeclaration\":\n\t\t\t\tthis.prewalkVariableDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"WhileStatement\":\n\t\t\t\tthis.prewalkWhileStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"WithStatement\":\n\t\t\t\tthis.prewalkWithStatement(statement);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tblockPrewalkStatement(statement) {\n\t\tswitch (statement.type) {\n\t\t\tcase \"VariableDeclaration\":\n\t\t\t\tthis.blockPrewalkVariableDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ExportDefaultDeclaration\":\n\t\t\t\tthis.blockPrewalkExportDefaultDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ExportNamedDeclaration\":\n\t\t\t\tthis.blockPrewalkExportNamedDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ClassDeclaration\":\n\t\t\t\tthis.blockPrewalkClassDeclaration(statement);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\twalkStatement(statement) {\n\t\tif (this.hooks.statement.call(statement) !== undefined) return;\n\t\tswitch (statement.type) {\n\t\t\tcase \"BlockStatement\":\n\t\t\t\tthis.walkBlockStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ClassDeclaration\":\n\t\t\t\tthis.walkClassDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"DoWhileStatement\":\n\t\t\t\tthis.walkDoWhileStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ExportDefaultDeclaration\":\n\t\t\t\tthis.walkExportDefaultDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ExportNamedDeclaration\":\n\t\t\t\tthis.walkExportNamedDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ExpressionStatement\":\n\t\t\t\tthis.walkExpressionStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ForInStatement\":\n\t\t\t\tthis.walkForInStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ForOfStatement\":\n\t\t\t\tthis.walkForOfStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ForStatement\":\n\t\t\t\tthis.walkForStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"FunctionDeclaration\":\n\t\t\t\tthis.walkFunctionDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"IfStatement\":\n\t\t\t\tthis.walkIfStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"LabeledStatement\":\n\t\t\t\tthis.walkLabeledStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ReturnStatement\":\n\t\t\t\tthis.walkReturnStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"SwitchStatement\":\n\t\t\t\tthis.walkSwitchStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"ThrowStatement\":\n\t\t\t\tthis.walkThrowStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"TryStatement\":\n\t\t\t\tthis.walkTryStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"VariableDeclaration\":\n\t\t\t\tthis.walkVariableDeclaration(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"WhileStatement\":\n\t\t\t\tthis.walkWhileStatement(statement);\n\t\t\t\tbreak;\n\t\t\tcase \"WithStatement\":\n\t\t\t\tthis.walkWithStatement(statement);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Real Statements\n\tprewalkBlockStatement(statement) {\n\t\tthis.prewalkStatements(statement.body);\n\t}\n\n\twalkBlockStatement(statement) {\n\t\tthis.inBlockScope(() => {\n\t\t\tconst body = statement.body;\n\t\t\tthis.blockPrewalkStatements(body);\n\t\t\tthis.walkStatements(body);\n\t\t});\n\t}\n\n\twalkExpressionStatement(statement) {\n\t\tthis.walkExpression(statement.expression);\n\t}\n\n\tprewalkIfStatement(statement) {\n\t\tthis.prewalkStatement(statement.consequent);\n\t\tif (statement.alternate) {\n\t\t\tthis.prewalkStatement(statement.alternate);\n\t\t}\n\t}\n\n\twalkIfStatement(statement) {\n\t\tconst result = this.hooks.statementIf.call(statement);\n\t\tif (result === undefined) {\n\t\t\tthis.walkExpression(statement.test);\n\t\t\tthis.walkStatement(statement.consequent);\n\t\t\tif (statement.alternate) {\n\t\t\t\tthis.walkStatement(statement.alternate);\n\t\t\t}\n\t\t} else {\n\t\t\tif (result) {\n\t\t\t\tthis.walkStatement(statement.consequent);\n\t\t\t} else if (statement.alternate) {\n\t\t\t\tthis.walkStatement(statement.alternate);\n\t\t\t}\n\t\t}\n\t}\n\n\tprewalkLabeledStatement(statement) {\n\t\tthis.prewalkStatement(statement.body);\n\t}\n\n\twalkLabeledStatement(statement) {\n\t\tconst hook = this.hooks.label.get(statement.label.name);\n\t\tif (hook !== undefined) {\n\t\t\tconst result = hook.call(statement);\n\t\t\tif (result === true) return;\n\t\t}\n\t\tthis.walkStatement(statement.body);\n\t}\n\n\tprewalkWithStatement(statement) {\n\t\tthis.prewalkStatement(statement.body);\n\t}\n\n\twalkWithStatement(statement) {\n\t\tthis.walkExpression(statement.object);\n\t\tthis.walkStatement(statement.body);\n\t}\n\n\tprewalkSwitchStatement(statement) {\n\t\tthis.prewalkSwitchCases(statement.cases);\n\t}\n\n\twalkSwitchStatement(statement) {\n\t\tthis.walkExpression(statement.discriminant);\n\t\tthis.walkSwitchCases(statement.cases);\n\t}\n\n\twalkTerminatingStatement(statement) {\n\t\tif (statement.argument) this.walkExpression(statement.argument);\n\t}\n\n\twalkReturnStatement(statement) {\n\t\tthis.walkTerminatingStatement(statement);\n\t}\n\n\twalkThrowStatement(statement) {\n\t\tthis.walkTerminatingStatement(statement);\n\t}\n\n\tprewalkTryStatement(statement) {\n\t\tthis.prewalkStatement(statement.block);\n\t}\n\n\twalkTryStatement(statement) {\n\t\tif (this.scope.inTry) {\n\t\t\tthis.walkStatement(statement.block);\n\t\t} else {\n\t\t\tthis.scope.inTry = true;\n\t\t\tthis.walkStatement(statement.block);\n\t\t\tthis.scope.inTry = false;\n\t\t}\n\t\tif (statement.handler) this.walkCatchClause(statement.handler);\n\t\tif (statement.finalizer) this.walkStatement(statement.finalizer);\n\t}\n\n\tprewalkWhileStatement(statement) {\n\t\tthis.prewalkStatement(statement.body);\n\t}\n\n\twalkWhileStatement(statement) {\n\t\tthis.walkExpression(statement.test);\n\t\tthis.walkStatement(statement.body);\n\t}\n\n\tprewalkDoWhileStatement(statement) {\n\t\tthis.prewalkStatement(statement.body);\n\t}\n\n\twalkDoWhileStatement(statement) {\n\t\tthis.walkStatement(statement.body);\n\t\tthis.walkExpression(statement.test);\n\t}\n\n\tprewalkForStatement(statement) {\n\t\tif (statement.init) {\n\t\t\tif (statement.init.type === \"VariableDeclaration\") {\n\t\t\t\tthis.prewalkStatement(statement.init);\n\t\t\t}\n\t\t}\n\t\tthis.prewalkStatement(statement.body);\n\t}\n\n\twalkForStatement(statement) {\n\t\tthis.inBlockScope(() => {\n\t\t\tif (statement.init) {\n\t\t\t\tif (statement.init.type === \"VariableDeclaration\") {\n\t\t\t\t\tthis.blockPrewalkVariableDeclaration(statement.init);\n\t\t\t\t\tthis.walkStatement(statement.init);\n\t\t\t\t} else {\n\t\t\t\t\tthis.walkExpression(statement.init);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (statement.test) {\n\t\t\t\tthis.walkExpression(statement.test);\n\t\t\t}\n\t\t\tif (statement.update) {\n\t\t\t\tthis.walkExpression(statement.update);\n\t\t\t}\n\t\t\tconst body = statement.body;\n\t\t\tif (body.type === \"BlockStatement\") {\n\t\t\t\t// no need to add additional scope\n\t\t\t\tthis.blockPrewalkStatements(body.body);\n\t\t\t\tthis.walkStatements(body.body);\n\t\t\t} else {\n\t\t\t\tthis.walkStatement(body);\n\t\t\t}\n\t\t});\n\t}\n\n\tprewalkForInStatement(statement) {\n\t\tif (statement.left.type === \"VariableDeclaration\") {\n\t\t\tthis.prewalkVariableDeclaration(statement.left);\n\t\t}\n\t\tthis.prewalkStatement(statement.body);\n\t}\n\n\twalkForInStatement(statement) {\n\t\tthis.inBlockScope(() => {\n\t\t\tif (statement.left.type === \"VariableDeclaration\") {\n\t\t\t\tthis.blockPrewalkVariableDeclaration(statement.left);\n\t\t\t\tthis.walkVariableDeclaration(statement.left);\n\t\t\t} else {\n\t\t\t\tthis.walkPattern(statement.left);\n\t\t\t}\n\t\t\tthis.walkExpression(statement.right);\n\t\t\tconst body = statement.body;\n\t\t\tif (body.type === \"BlockStatement\") {\n\t\t\t\t// no need to add additional scope\n\t\t\t\tthis.blockPrewalkStatements(body.body);\n\t\t\t\tthis.walkStatements(body.body);\n\t\t\t} else {\n\t\t\t\tthis.walkStatement(body);\n\t\t\t}\n\t\t});\n\t}\n\n\tprewalkForOfStatement(statement) {\n\t\tif (statement.left.type === \"VariableDeclaration\") {\n\t\t\tthis.prewalkVariableDeclaration(statement.left);\n\t\t}\n\t\tthis.prewalkStatement(statement.body);\n\t}\n\n\twalkForOfStatement(statement) {\n\t\tthis.inBlockScope(() => {\n\t\t\tif (statement.left.type === \"VariableDeclaration\") {\n\t\t\t\tthis.blockPrewalkVariableDeclaration(statement.left);\n\t\t\t\tthis.walkVariableDeclaration(statement.left);\n\t\t\t} else {\n\t\t\t\tthis.walkPattern(statement.left);\n\t\t\t}\n\t\t\tthis.walkExpression(statement.right);\n\t\t\tconst body = statement.body;\n\t\t\tif (body.type === \"BlockStatement\") {\n\t\t\t\t// no need to add additional scope\n\t\t\t\tthis.blockPrewalkStatements(body.body);\n\t\t\t\tthis.walkStatements(body.body);\n\t\t\t} else {\n\t\t\t\tthis.walkStatement(body);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Declarations\n\tprewalkFunctionDeclaration(statement) {\n\t\tif (statement.id) {\n\t\t\tthis.scope.renames.set(statement.id.name, null);\n\t\t\tthis.scope.definitions.add(statement.id.name);\n\t\t}\n\t}\n\n\twalkFunctionDeclaration(statement) {\n\t\tconst wasTopLevel = this.scope.topLevelScope;\n\t\tthis.scope.topLevelScope = false;\n\t\tthis.inFunctionScope(true, statement.params, () => {\n\t\t\tfor (const param of statement.params) {\n\t\t\t\tthis.walkPattern(param);\n\t\t\t}\n\t\t\tif (statement.body.type === \"BlockStatement\") {\n\t\t\t\tthis.detectStrictMode(statement.body.body);\n\t\t\t\tthis.prewalkStatement(statement.body);\n\t\t\t\tthis.walkStatement(statement.body);\n\t\t\t} else {\n\t\t\t\tthis.walkExpression(statement.body);\n\t\t\t}\n\t\t});\n\t\tthis.scope.topLevelScope = wasTopLevel;\n\t}\n\n\tprewalkImportDeclaration(statement) {\n\t\tconst source = statement.source.value;\n\t\tthis.hooks.import.call(statement, source);\n\t\tfor (const specifier of statement.specifiers) {\n\t\t\tconst name = specifier.local.name;\n\t\t\tthis.scope.renames.set(name, null);\n\t\t\tthis.scope.definitions.add(name);\n\t\t\tswitch (specifier.type) {\n\t\t\t\tcase \"ImportDefaultSpecifier\":\n\t\t\t\t\tthis.hooks.importSpecifier.call(statement, source, \"default\", name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ImportSpecifier\":\n\t\t\t\t\tthis.hooks.importSpecifier.call(\n\t\t\t\t\t\tstatement,\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\tspecifier.imported.name,\n\t\t\t\t\t\tname\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ImportNamespaceSpecifier\":\n\t\t\t\t\tthis.hooks.importSpecifier.call(statement, source, null, name);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tenterDeclaration(declaration, onIdent) {\n\t\tswitch (declaration.type) {\n\t\t\tcase \"VariableDeclaration\":\n\t\t\t\tfor (const declarator of declaration.declarations) {\n\t\t\t\t\tswitch (declarator.type) {\n\t\t\t\t\t\tcase \"VariableDeclarator\": {\n\t\t\t\t\t\t\tthis.enterPattern(declarator.id, onIdent);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"FunctionDeclaration\":\n\t\t\t\tthis.enterPattern(declaration.id, onIdent);\n\t\t\t\tbreak;\n\t\t\tcase \"ClassDeclaration\":\n\t\t\t\tthis.enterPattern(declaration.id, onIdent);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tblockPrewalkExportNamedDeclaration(statement) {\n\t\tif (statement.declaration) {\n\t\t\tthis.blockPrewalkStatement(statement.declaration);\n\t\t}\n\t}\n\n\tprewalkExportNamedDeclaration(statement) {\n\t\tlet source;\n\t\tif (statement.source) {\n\t\t\tsource = statement.source.value;\n\t\t\tthis.hooks.exportImport.call(statement, source);\n\t\t} else {\n\t\t\tthis.hooks.export.call(statement);\n\t\t}\n\t\tif (statement.declaration) {\n\t\t\tif (\n\t\t\t\t!this.hooks.exportDeclaration.call(statement, statement.declaration)\n\t\t\t) {\n\t\t\t\tthis.prewalkStatement(statement.declaration);\n\t\t\t\tlet index = 0;\n\t\t\t\tthis.enterDeclaration(statement.declaration, def => {\n\t\t\t\t\tthis.hooks.exportSpecifier.call(statement, def, def, index++);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (statement.specifiers) {\n\t\t\tfor (\n\t\t\t\tlet specifierIndex = 0;\n\t\t\t\tspecifierIndex < statement.specifiers.length;\n\t\t\t\tspecifierIndex++\n\t\t\t) {\n\t\t\t\tconst specifier = statement.specifiers[specifierIndex];\n\t\t\t\tswitch (specifier.type) {\n\t\t\t\t\tcase \"ExportSpecifier\": {\n\t\t\t\t\t\tconst name = specifier.exported.name;\n\t\t\t\t\t\tif (source) {\n\t\t\t\t\t\t\tthis.hooks.exportImportSpecifier.call(\n\t\t\t\t\t\t\t\tstatement,\n\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\tspecifier.local.name,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tspecifierIndex\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.hooks.exportSpecifier.call(\n\t\t\t\t\t\t\t\tstatement,\n\t\t\t\t\t\t\t\tspecifier.local.name,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tspecifierIndex\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\twalkExportNamedDeclaration(statement) {\n\t\tif (statement.declaration) {\n\t\t\tthis.walkStatement(statement.declaration);\n\t\t}\n\t}\n\n\tblockPrewalkExportDefaultDeclaration(statement) {\n\t\tif (statement.declaration.type === \"ClassDeclaration\") {\n\t\t\tthis.blockPrewalkClassDeclaration(statement.declaration);\n\t\t}\n\t}\n\n\tprewalkExportDefaultDeclaration(statement) {\n\t\tthis.prewalkStatement(statement.declaration);\n\t\tif (\n\t\t\tstatement.declaration.id &&\n\t\t\tstatement.declaration.type !== \"FunctionExpression\" &&\n\t\t\tstatement.declaration.type !== \"ClassExpression\"\n\t\t) {\n\t\t\tthis.hooks.exportSpecifier.call(\n\t\t\t\tstatement,\n\t\t\t\tstatement.declaration.id.name,\n\t\t\t\t\"default\"\n\t\t\t);\n\t\t}\n\t}\n\n\twalkExportDefaultDeclaration(statement) {\n\t\tthis.hooks.export.call(statement);\n\t\tif (\n\t\t\tstatement.declaration.id &&\n\t\t\tstatement.declaration.type !== \"FunctionExpression\" &&\n\t\t\tstatement.declaration.type !== \"ClassExpression\"\n\t\t) {\n\t\t\tif (\n\t\t\t\t!this.hooks.exportDeclaration.call(statement, statement.declaration)\n\t\t\t) {\n\t\t\t\tthis.walkStatement(statement.declaration);\n\t\t\t}\n\t\t} else {\n\t\t\t// Acorn parses `export default function() {}` as `FunctionDeclaration` and\n\t\t\t// `export default class {}` as `ClassDeclaration`, both with `id = null`.\n\t\t\t// These nodes must be treated as expressions.\n\t\t\tif (statement.declaration.type === \"FunctionDeclaration\") {\n\t\t\t\tthis.walkFunctionDeclaration(statement.declaration);\n\t\t\t} else if (statement.declaration.type === \"ClassDeclaration\") {\n\t\t\t\tthis.walkClassDeclaration(statement.declaration);\n\t\t\t} else {\n\t\t\t\tthis.walkExpression(statement.declaration);\n\t\t\t}\n\t\t\tif (!this.hooks.exportExpression.call(statement, statement.declaration)) {\n\t\t\t\tthis.hooks.exportSpecifier.call(\n\t\t\t\t\tstatement,\n\t\t\t\t\tstatement.declaration,\n\t\t\t\t\t\"default\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprewalkExportAllDeclaration(statement) {\n\t\tconst source = statement.source.value;\n\t\tthis.hooks.exportImport.call(statement, source);\n\t\tthis.hooks.exportImportSpecifier.call(statement, source, null, null, 0);\n\t}\n\n\tprewalkVariableDeclaration(statement) {\n\t\tif (statement.kind !== \"var\") return;\n\t\tthis._prewalkVariableDeclaration(statement, this.hooks.varDeclarationVar);\n\t}\n\n\tblockPrewalkVariableDeclaration(statement) {\n\t\tif (statement.kind === \"var\") return;\n\t\tconst hookMap =\n\t\t\tstatement.kind === \"const\"\n\t\t\t\t? this.hooks.varDeclarationConst\n\t\t\t\t: this.hooks.varDeclarationLet;\n\t\tthis._prewalkVariableDeclaration(statement, hookMap);\n\t}\n\n\t_prewalkVariableDeclaration(statement, hookMap) {\n\t\tfor (const declarator of statement.declarations) {\n\t\t\tswitch (declarator.type) {\n\t\t\t\tcase \"VariableDeclarator\": {\n\t\t\t\t\tthis.enterPattern(declarator.id, (name, decl) => {\n\t\t\t\t\t\tlet hook = hookMap.get(name);\n\t\t\t\t\t\tif (hook === undefined || !hook.call(decl)) {\n\t\t\t\t\t\t\thook = this.hooks.varDeclaration.get(name);\n\t\t\t\t\t\t\tif (hook === undefined || !hook.call(decl)) {\n\t\t\t\t\t\t\t\tthis.scope.renames.set(name, null);\n\t\t\t\t\t\t\t\tthis.scope.definitions.add(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\twalkVariableDeclaration(statement) {\n\t\tfor (const declarator of statement.declarations) {\n\t\t\tswitch (declarator.type) {\n\t\t\t\tcase \"VariableDeclarator\": {\n\t\t\t\t\tconst renameIdentifier =\n\t\t\t\t\t\tdeclarator.init && this.getRenameIdentifier(declarator.init);\n\t\t\t\t\tif (renameIdentifier && declarator.id.type === \"Identifier\") {\n\t\t\t\t\t\tconst hook = this.hooks.canRename.get(renameIdentifier);\n\t\t\t\t\t\tif (hook !== undefined && hook.call(declarator.init)) {\n\t\t\t\t\t\t\t// renaming with \"var a = b;\"\n\t\t\t\t\t\t\tconst hook = this.hooks.rename.get(renameIdentifier);\n\t\t\t\t\t\t\tif (hook === undefined || !hook.call(declarator.init)) {\n\t\t\t\t\t\t\t\tthis.scope.renames.set(\n\t\t\t\t\t\t\t\t\tdeclarator.id.name,\n\t\t\t\t\t\t\t\t\tthis.scope.renames.get(renameIdentifier) || renameIdentifier\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tthis.scope.definitions.delete(declarator.id.name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.walkPattern(declarator.id);\n\t\t\t\t\tif (declarator.init) this.walkExpression(declarator.init);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tblockPrewalkClassDeclaration(statement) {\n\t\tif (statement.id) {\n\t\t\tthis.scope.renames.set(statement.id.name, null);\n\t\t\tthis.scope.definitions.add(statement.id.name);\n\t\t}\n\t}\n\n\twalkClassDeclaration(statement) {\n\t\tthis.walkClass(statement);\n\t}\n\n\tprewalkSwitchCases(switchCases) {\n\t\tfor (let index = 0, len = switchCases.length; index < len; index++) {\n\t\t\tconst switchCase = switchCases[index];\n\t\t\tthis.prewalkStatements(switchCase.consequent);\n\t\t}\n\t}\n\n\twalkSwitchCases(switchCases) {\n\t\tfor (let index = 0, len = switchCases.length; index < len; index++) {\n\t\t\tconst switchCase = switchCases[index];\n\n\t\t\tif (switchCase.test) {\n\t\t\t\tthis.walkExpression(switchCase.test);\n\t\t\t}\n\t\t\tthis.walkStatements(switchCase.consequent);\n\t\t}\n\t}\n\n\twalkCatchClause(catchClause) {\n\t\tthis.inBlockScope(() => {\n\t\t\t// Error binding is optional in catch clause since ECMAScript 2019\n\t\t\tif (catchClause.param !== null) {\n\t\t\t\tthis.enterPattern(catchClause.param, ident => {\n\t\t\t\t\tthis.scope.renames.set(ident, null);\n\t\t\t\t\tthis.scope.definitions.add(ident);\n\t\t\t\t});\n\t\t\t\tthis.walkPattern(catchClause.param);\n\t\t\t}\n\t\t\tthis.prewalkStatement(catchClause.body);\n\t\t\tthis.walkStatement(catchClause.body);\n\t\t});\n\t}\n\n\twalkPattern(pattern) {\n\t\tswitch (pattern.type) {\n\t\t\tcase \"ArrayPattern\":\n\t\t\t\tthis.walkArrayPattern(pattern);\n\t\t\t\tbreak;\n\t\t\tcase \"AssignmentPattern\":\n\t\t\t\tthis.walkAssignmentPattern(pattern);\n\t\t\t\tbreak;\n\t\t\tcase \"MemberExpression\":\n\t\t\t\tthis.walkMemberExpression(pattern);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectPattern\":\n\t\t\t\tthis.walkObjectPattern(pattern);\n\t\t\t\tbreak;\n\t\t\tcase \"RestElement\":\n\t\t\t\tthis.walkRestElement(pattern);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\twalkAssignmentPattern(pattern) {\n\t\tthis.walkExpression(pattern.right);\n\t\tthis.walkPattern(pattern.left);\n\t}\n\n\twalkObjectPattern(pattern) {\n\t\tfor (let i = 0, len = pattern.properties.length; i < len; i++) {\n\t\t\tconst prop = pattern.properties[i];\n\t\t\tif (prop) {\n\t\t\t\tif (prop.computed) this.walkExpression(prop.key);\n\t\t\t\tif (prop.value) this.walkPattern(prop.value);\n\t\t\t}\n\t\t}\n\t}\n\n\twalkArrayPattern(pattern) {\n\t\tfor (let i = 0, len = pattern.elements.length; i < len; i++) {\n\t\t\tconst element = pattern.elements[i];\n\t\t\tif (element) this.walkPattern(element);\n\t\t}\n\t}\n\n\twalkRestElement(pattern) {\n\t\tthis.walkPattern(pattern.argument);\n\t}\n\n\twalkExpressions(expressions) {\n\t\tfor (const expression of expressions) {\n\t\t\tif (expression) {\n\t\t\t\tthis.walkExpression(expression);\n\t\t\t}\n\t\t}\n\t}\n\n\twalkExpression(expression) {\n\t\tswitch (expression.type) {\n\t\t\tcase \"ArrayExpression\":\n\t\t\t\tthis.walkArrayExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"ArrowFunctionExpression\":\n\t\t\t\tthis.walkArrowFunctionExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"AssignmentExpression\":\n\t\t\t\tthis.walkAssignmentExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"AwaitExpression\":\n\t\t\t\tthis.walkAwaitExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"BinaryExpression\":\n\t\t\t\tthis.walkBinaryExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"CallExpression\":\n\t\t\t\tthis.walkCallExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"ClassExpression\":\n\t\t\t\tthis.walkClassExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"ConditionalExpression\":\n\t\t\t\tthis.walkConditionalExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"FunctionExpression\":\n\t\t\t\tthis.walkFunctionExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"Identifier\":\n\t\t\t\tthis.walkIdentifier(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"LogicalExpression\":\n\t\t\t\tthis.walkLogicalExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"MemberExpression\":\n\t\t\t\tthis.walkMemberExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"NewExpression\":\n\t\t\t\tthis.walkNewExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectExpression\":\n\t\t\t\tthis.walkObjectExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"SequenceExpression\":\n\t\t\t\tthis.walkSequenceExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"SpreadElement\":\n\t\t\t\tthis.walkSpreadElement(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"TaggedTemplateExpression\":\n\t\t\t\tthis.walkTaggedTemplateExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"TemplateLiteral\":\n\t\t\t\tthis.walkTemplateLiteral(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"ThisExpression\":\n\t\t\t\tthis.walkThisExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"UnaryExpression\":\n\t\t\t\tthis.walkUnaryExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"UpdateExpression\":\n\t\t\t\tthis.walkUpdateExpression(expression);\n\t\t\t\tbreak;\n\t\t\tcase \"YieldExpression\":\n\t\t\t\tthis.walkYieldExpression(expression);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\twalkAwaitExpression(expression) {\n\t\tthis.walkExpression(expression.argument);\n\t}\n\n\twalkArrayExpression(expression) {\n\t\tif (expression.elements) {\n\t\t\tthis.walkExpressions(expression.elements);\n\t\t}\n\t}\n\n\twalkSpreadElement(expression) {\n\t\tif (expression.argument) {\n\t\t\tthis.walkExpression(expression.argument);\n\t\t}\n\t}\n\n\twalkObjectExpression(expression) {\n\t\tfor (\n\t\t\tlet propIndex = 0, len = expression.properties.length;\n\t\t\tpropIndex < len;\n\t\t\tpropIndex++\n\t\t) {\n\t\t\tconst prop = expression.properties[propIndex];\n\t\t\tif (prop.type === \"SpreadElement\") {\n\t\t\t\tthis.walkExpression(prop.argument);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (prop.computed) {\n\t\t\t\tthis.walkExpression(prop.key);\n\t\t\t}\n\t\t\tif (prop.shorthand) {\n\t\t\t\tthis.scope.inShorthand = true;\n\t\t\t}\n\t\t\tthis.walkExpression(prop.value);\n\t\t\tif (prop.shorthand) {\n\t\t\t\tthis.scope.inShorthand = false;\n\t\t\t}\n\t\t}\n\t}\n\n\twalkFunctionExpression(expression) {\n\t\tconst wasTopLevel = this.scope.topLevelScope;\n\t\tthis.scope.topLevelScope = false;\n\t\tconst scopeParams = expression.params;\n\n\t\t// Add function name in scope for recursive calls\n\t\tif (expression.id) {\n\t\t\tscopeParams.push(expression.id.name);\n\t\t}\n\n\t\tthis.inFunctionScope(true, scopeParams, () => {\n\t\t\tfor (const param of expression.params) {\n\t\t\t\tthis.walkPattern(param);\n\t\t\t}\n\t\t\tif (expression.body.type === \"BlockStatement\") {\n\t\t\t\tthis.detectStrictMode(expression.body.body);\n\t\t\t\tthis.prewalkStatement(expression.body);\n\t\t\t\tthis.walkStatement(expression.body);\n\t\t\t} else {\n\t\t\t\tthis.walkExpression(expression.body);\n\t\t\t}\n\t\t});\n\t\tthis.scope.topLevelScope = wasTopLevel;\n\t}\n\n\twalkArrowFunctionExpression(expression) {\n\t\tthis.inFunctionScope(false, expression.params, () => {\n\t\t\tfor (const param of expression.params) {\n\t\t\t\tthis.walkPattern(param);\n\t\t\t}\n\t\t\tif (expression.body.type === \"BlockStatement\") {\n\t\t\t\tthis.detectStrictMode(expression.body.body);\n\t\t\t\tthis.prewalkStatement(expression.body);\n\t\t\t\tthis.walkStatement(expression.body);\n\t\t\t} else {\n\t\t\t\tthis.walkExpression(expression.body);\n\t\t\t}\n\t\t});\n\t}\n\n\twalkSequenceExpression(expression) {\n\t\tif (expression.expressions) this.walkExpressions(expression.expressions);\n\t}\n\n\twalkUpdateExpression(expression) {\n\t\tthis.walkExpression(expression.argument);\n\t}\n\n\twalkUnaryExpression(expression) {\n\t\tif (expression.operator === \"typeof\") {\n\t\t\tconst exprName = this.getNameForExpression(expression.argument);\n\t\t\tif (exprName && exprName.free) {\n\t\t\t\tconst hook = this.hooks.typeof.get(exprName.name);\n\t\t\t\tif (hook !== undefined) {\n\t\t\t\t\tconst result = hook.call(expression);\n\t\t\t\t\tif (result === true) return;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.walkExpression(expression.argument);\n\t}\n\n\twalkLeftRightExpression(expression) {\n\t\tthis.walkExpression(expression.left);\n\t\tthis.walkExpression(expression.right);\n\t}\n\n\twalkBinaryExpression(expression) {\n\t\tthis.walkLeftRightExpression(expression);\n\t}\n\n\twalkLogicalExpression(expression) {\n\t\tconst result = this.hooks.expressionLogicalOperator.call(expression);\n\t\tif (result === undefined) {\n\t\t\tthis.walkLeftRightExpression(expression);\n\t\t} else {\n\t\t\tif (result) {\n\t\t\t\tthis.walkExpression(expression.right);\n\t\t\t}\n\t\t}\n\t}\n\n\twalkAssignmentExpression(expression) {\n\t\tconst renameIdentifier = this.getRenameIdentifier(expression.right);\n\t\tif (expression.left.type === \"Identifier\" && renameIdentifier) {\n\t\t\tconst hook = this.hooks.canRename.get(renameIdentifier);\n\t\t\tif (hook !== undefined && hook.call(expression.right)) {\n\t\t\t\t// renaming \"a = b;\"\n\t\t\t\tconst hook = this.hooks.rename.get(renameIdentifier);\n\t\t\t\tif (hook === undefined || !hook.call(expression.right)) {\n\t\t\t\t\tthis.scope.renames.set(expression.left.name, renameIdentifier);\n\t\t\t\t\tthis.scope.definitions.delete(expression.left.name);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (expression.left.type === \"Identifier\") {\n\t\t\tconst assignedHook = this.hooks.assigned.get(expression.left.name);\n\t\t\tif (assignedHook === undefined || !assignedHook.call(expression)) {\n\t\t\t\tthis.walkExpression(expression.right);\n\t\t\t}\n\t\t\tthis.scope.renames.set(expression.left.name, null);\n\t\t\tconst assignHook = this.hooks.assign.get(expression.left.name);\n\t\t\tif (assignHook === undefined || !assignHook.call(expression)) {\n\t\t\t\tthis.walkExpression(expression.left);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.walkExpression(expression.right);\n\t\tthis.walkPattern(expression.left);\n\t\tthis.enterPattern(expression.left, (name, decl) => {\n\t\t\tthis.scope.renames.set(name, null);\n\t\t});\n\t}\n\n\twalkConditionalExpression(expression) {\n\t\tconst result = this.hooks.expressionConditionalOperator.call(expression);\n\t\tif (result === undefined) {\n\t\t\tthis.walkExpression(expression.test);\n\t\t\tthis.walkExpression(expression.consequent);\n\t\t\tif (expression.alternate) {\n\t\t\t\tthis.walkExpression(expression.alternate);\n\t\t\t}\n\t\t} else {\n\t\t\tif (result) {\n\t\t\t\tthis.walkExpression(expression.consequent);\n\t\t\t} else if (expression.alternate) {\n\t\t\t\tthis.walkExpression(expression.alternate);\n\t\t\t}\n\t\t}\n\t}\n\n\twalkNewExpression(expression) {\n\t\tconst callee = this.evaluateExpression(expression.callee);\n\t\tif (callee.isIdentifier()) {\n\t\t\tconst hook = this.hooks.new.get(callee.identifier);\n\t\t\tif (hook !== undefined) {\n\t\t\t\tconst result = hook.call(expression);\n\t\t\t\tif (result === true) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.walkExpression(expression.callee);\n\t\tif (expression.arguments) {\n\t\t\tthis.walkExpressions(expression.arguments);\n\t\t}\n\t}\n\n\twalkYieldExpression(expression) {\n\t\tif (expression.argument) {\n\t\t\tthis.walkExpression(expression.argument);\n\t\t}\n\t}\n\n\twalkTemplateLiteral(expression) {\n\t\tif (expression.expressions) {\n\t\t\tthis.walkExpressions(expression.expressions);\n\t\t}\n\t}\n\n\twalkTaggedTemplateExpression(expression) {\n\t\tif (expression.tag) {\n\t\t\tthis.walkExpression(expression.tag);\n\t\t}\n\t\tif (expression.quasi && expression.quasi.expressions) {\n\t\t\tthis.walkExpressions(expression.quasi.expressions);\n\t\t}\n\t}\n\n\twalkClassExpression(expression) {\n\t\tthis.walkClass(expression);\n\t}\n\n\t_walkIIFE(functionExpression, options, currentThis) {\n\t\tconst renameArgOrThis = argOrThis => {\n\t\t\tconst renameIdentifier = this.getRenameIdentifier(argOrThis);\n\t\t\tif (renameIdentifier) {\n\t\t\t\tconst hook = this.hooks.canRename.get(renameIdentifier);\n\t\t\t\tif (hook !== undefined && hook.call(argOrThis)) {\n\t\t\t\t\tconst hook = this.hooks.rename.get(renameIdentifier);\n\t\t\t\t\tif (hook === undefined || !hook.call(argOrThis)) {\n\t\t\t\t\t\treturn renameIdentifier;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.walkExpression(argOrThis);\n\t\t};\n\t\tconst params = functionExpression.params;\n\t\tconst renameThis = currentThis ? renameArgOrThis(currentThis) : null;\n\t\tconst args = options.map(renameArgOrThis);\n\t\tconst wasTopLevel = this.scope.topLevelScope;\n\t\tthis.scope.topLevelScope = false;\n\t\tconst scopeParams = params.filter((identifier, idx) => !args[idx]);\n\n\t\t// Add function name in scope for recursive calls\n\t\tif (functionExpression.id) {\n\t\t\tscopeParams.push(functionExpression.id.name);\n\t\t}\n\n\t\tthis.inFunctionScope(true, scopeParams, () => {\n\t\t\tif (renameThis) {\n\t\t\t\tthis.scope.renames.set(\"this\", renameThis);\n\t\t\t}\n\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\tconst param = args[i];\n\t\t\t\tif (!param) continue;\n\t\t\t\tif (!params[i] || params[i].type !== \"Identifier\") continue;\n\t\t\t\tthis.scope.renames.set(params[i].name, param);\n\t\t\t}\n\t\t\tif (functionExpression.body.type === \"BlockStatement\") {\n\t\t\t\tthis.prewalkStatement(functionExpression.body);\n\t\t\t\tthis.walkStatement(functionExpression.body);\n\t\t\t} else {\n\t\t\t\tthis.walkExpression(functionExpression.body);\n\t\t\t}\n\t\t});\n\t\tthis.scope.topLevelScope = wasTopLevel;\n\t}\n\n\twalkCallExpression(expression) {\n\t\tif (\n\t\t\texpression.callee.type === \"MemberExpression\" &&\n\t\t\texpression.callee.object.type === \"FunctionExpression\" &&\n\t\t\t!expression.callee.computed &&\n\t\t\t(expression.callee.property.name === \"call\" ||\n\t\t\t\texpression.callee.property.name === \"bind\") &&\n\t\t\texpression.arguments.length > 0\n\t\t) {\n\t\t\t// (function(…) { }.call/bind(?, …))\n\t\t\tthis._walkIIFE(\n\t\t\t\texpression.callee.object,\n\t\t\t\texpression.arguments.slice(1),\n\t\t\t\texpression.arguments[0]\n\t\t\t);\n\t\t} else if (expression.callee.type === \"FunctionExpression\") {\n\t\t\t// (function(…) { }(…))\n\t\t\tthis._walkIIFE(expression.callee, expression.arguments, null);\n\t\t} else if (expression.callee.type === \"Import\") {\n\t\t\tlet result = this.hooks.importCall.call(expression);\n\t\t\tif (result === true) return;\n\n\t\t\tif (expression.arguments) this.walkExpressions(expression.arguments);\n\t\t} else {\n\t\t\tconst callee = this.evaluateExpression(expression.callee);\n\t\t\tif (callee.isIdentifier()) {\n\t\t\t\tconst callHook = this.hooks.call.get(callee.identifier);\n\t\t\t\tif (callHook !== undefined) {\n\t\t\t\t\tlet result = callHook.call(expression);\n\t\t\t\t\tif (result === true) return;\n\t\t\t\t}\n\t\t\t\tlet identifier = callee.identifier.replace(/\\.[^.]+$/, \"\");\n\t\t\t\tif (identifier !== callee.identifier) {\n\t\t\t\t\tconst callAnyHook = this.hooks.callAnyMember.get(identifier);\n\t\t\t\t\tif (callAnyHook !== undefined) {\n\t\t\t\t\t\tlet result = callAnyHook.call(expression);\n\t\t\t\t\t\tif (result === true) return;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expression.callee) this.walkExpression(expression.callee);\n\t\t\tif (expression.arguments) this.walkExpressions(expression.arguments);\n\t\t}\n\t}\n\n\twalkMemberExpression(expression) {\n\t\tconst exprName = this.getNameForExpression(expression);\n\t\tif (exprName && exprName.free) {\n\t\t\tconst expressionHook = this.hooks.expression.get(exprName.name);\n\t\t\tif (expressionHook !== undefined) {\n\t\t\t\tconst result = expressionHook.call(expression);\n\t\t\t\tif (result === true) return;\n\t\t\t}\n\t\t\tconst expressionAnyMemberHook = this.hooks.expressionAnyMember.get(\n\t\t\t\texprName.nameGeneral\n\t\t\t);\n\t\t\tif (expressionAnyMemberHook !== undefined) {\n\t\t\t\tconst result = expressionAnyMemberHook.call(expression);\n\t\t\t\tif (result === true) return;\n\t\t\t}\n\t\t}\n\t\tthis.walkExpression(expression.object);\n\t\tif (expression.computed === true) this.walkExpression(expression.property);\n\t}\n\n\twalkThisExpression(expression) {\n\t\tconst expressionHook = this.hooks.expression.get(\"this\");\n\t\tif (expressionHook !== undefined) {\n\t\t\texpressionHook.call(expression);\n\t\t}\n\t}\n\n\twalkIdentifier(expression) {\n\t\tif (!this.scope.definitions.has(expression.name)) {\n\t\t\tconst hook = this.hooks.expression.get(\n\t\t\t\tthis.scope.renames.get(expression.name) || expression.name\n\t\t\t);\n\t\t\tif (hook !== undefined) {\n\t\t\t\tconst result = hook.call(expression);\n\t\t\t\tif (result === true) return;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t * @param {any} params scope params\n\t * @param {function(): void} fn inner function\n\t * @returns {void}\n\t */\n\tinScope(params, fn) {\n\t\tconst oldScope = this.scope;\n\t\tthis.scope = {\n\t\t\ttopLevelScope: oldScope.topLevelScope,\n\t\t\tinTry: false,\n\t\t\tinShorthand: false,\n\t\t\tisStrict: oldScope.isStrict,\n\t\t\tdefinitions: oldScope.definitions.createChild(),\n\t\t\trenames: oldScope.renames.createChild()\n\t\t};\n\n\t\tthis.scope.renames.set(\"this\", null);\n\n\t\tthis.enterPatterns(params, ident => {\n\t\t\tthis.scope.renames.set(ident, null);\n\t\t\tthis.scope.definitions.add(ident);\n\t\t});\n\n\t\tfn();\n\n\t\tthis.scope = oldScope;\n\t}\n\n\tinFunctionScope(hasThis, params, fn) {\n\t\tconst oldScope = this.scope;\n\t\tthis.scope = {\n\t\t\ttopLevelScope: oldScope.topLevelScope,\n\t\t\tinTry: false,\n\t\t\tinShorthand: false,\n\t\t\tisStrict: oldScope.isStrict,\n\t\t\tdefinitions: oldScope.definitions.createChild(),\n\t\t\trenames: oldScope.renames.createChild()\n\t\t};\n\n\t\tif (hasThis) {\n\t\t\tthis.scope.renames.set(\"this\", null);\n\t\t}\n\n\t\tthis.enterPatterns(params, ident => {\n\t\t\tthis.scope.renames.set(ident, null);\n\t\t\tthis.scope.definitions.add(ident);\n\t\t});\n\n\t\tfn();\n\n\t\tthis.scope = oldScope;\n\t}\n\n\tinBlockScope(fn) {\n\t\tconst oldScope = this.scope;\n\t\tthis.scope = {\n\t\t\ttopLevelScope: oldScope.topLevelScope,\n\t\t\tinTry: oldScope.inTry,\n\t\t\tinShorthand: false,\n\t\t\tisStrict: oldScope.isStrict,\n\t\t\tdefinitions: oldScope.definitions.createChild(),\n\t\t\trenames: oldScope.renames.createChild()\n\t\t};\n\n\t\tfn();\n\n\t\tthis.scope = oldScope;\n\t}\n\n\tdetectStrictMode(statements) {\n\t\tconst isStrict =\n\t\t\tstatements.length >= 1 &&\n\t\t\tstatements[0].type === \"ExpressionStatement\" &&\n\t\t\tstatements[0].expression.type === \"Literal\" &&\n\t\t\tstatements[0].expression.value === \"use strict\";\n\t\tif (isStrict) {\n\t\t\tthis.scope.isStrict = true;\n\t\t}\n\t}\n\n\tenterPatterns(patterns, onIdent) {\n\t\tfor (const pattern of patterns) {\n\t\t\tif (typeof pattern !== \"string\") {\n\t\t\t\tthis.enterPattern(pattern, onIdent);\n\t\t\t} else if (pattern) {\n\t\t\t\tonIdent(pattern);\n\t\t\t}\n\t\t}\n\t}\n\n\tenterPattern(pattern, onIdent) {\n\t\tif (!pattern) return;\n\t\tswitch (pattern.type) {\n\t\t\tcase \"ArrayPattern\":\n\t\t\t\tthis.enterArrayPattern(pattern, onIdent);\n\t\t\t\tbreak;\n\t\t\tcase \"AssignmentPattern\":\n\t\t\t\tthis.enterAssignmentPattern(pattern, onIdent);\n\t\t\t\tbreak;\n\t\t\tcase \"Identifier\":\n\t\t\t\tthis.enterIdentifier(pattern, onIdent);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectPattern\":\n\t\t\t\tthis.enterObjectPattern(pattern, onIdent);\n\t\t\t\tbreak;\n\t\t\tcase \"RestElement\":\n\t\t\t\tthis.enterRestElement(pattern, onIdent);\n\t\t\t\tbreak;\n\t\t\tcase \"Property\":\n\t\t\t\tthis.enterPattern(pattern.value, onIdent);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tenterIdentifier(pattern, onIdent) {\n\t\tonIdent(pattern.name, pattern);\n\t}\n\n\tenterObjectPattern(pattern, onIdent) {\n\t\tfor (\n\t\t\tlet propIndex = 0, len = pattern.properties.length;\n\t\t\tpropIndex < len;\n\t\t\tpropIndex++\n\t\t) {\n\t\t\tconst prop = pattern.properties[propIndex];\n\t\t\tthis.enterPattern(prop, onIdent);\n\t\t}\n\t}\n\n\tenterArrayPattern(pattern, onIdent) {\n\t\tfor (\n\t\t\tlet elementIndex = 0, len = pattern.elements.length;\n\t\t\telementIndex < len;\n\t\t\telementIndex++\n\t\t) {\n\t\t\tconst element = pattern.elements[elementIndex];\n\t\t\tthis.enterPattern(element, onIdent);\n\t\t}\n\t}\n\n\tenterRestElement(pattern, onIdent) {\n\t\tthis.enterPattern(pattern.argument, onIdent);\n\t}\n\n\tenterAssignmentPattern(pattern, onIdent) {\n\t\tthis.enterPattern(pattern.left, onIdent);\n\t}\n\n\tevaluateExpression(expression) {\n\t\ttry {\n\t\t\tconst hook = this.hooks.evaluate.get(expression.type);\n\t\t\tif (hook !== undefined) {\n\t\t\t\tconst result = hook.call(expression);\n\t\t\t\tif (result !== undefined) {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tresult.setExpression(expression);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.warn(e);\n\t\t\t// ignore error\n\t\t}\n\t\treturn new BasicEvaluatedExpression()\n\t\t\t.setRange(expression.range)\n\t\t\t.setExpression(expression);\n\t}\n\n\tparseString(expression) {\n\t\tswitch (expression.type) {\n\t\t\tcase \"BinaryExpression\":\n\t\t\t\tif (expression.operator === \"+\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tthis.parseString(expression.left) +\n\t\t\t\t\t\tthis.parseString(expression.right)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Literal\":\n\t\t\t\treturn expression.value + \"\";\n\t\t}\n\t\tthrow new Error(\n\t\t\texpression.type + \" is not supported as parameter for require\"\n\t\t);\n\t}\n\n\tparseCalculatedString(expression) {\n\t\tswitch (expression.type) {\n\t\t\tcase \"BinaryExpression\":\n\t\t\t\tif (expression.operator === \"+\") {\n\t\t\t\t\tconst left = this.parseCalculatedString(expression.left);\n\t\t\t\t\tconst right = this.parseCalculatedString(expression.right);\n\t\t\t\t\tif (left.code) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\trange: left.range,\n\t\t\t\t\t\t\tvalue: left.value,\n\t\t\t\t\t\t\tcode: true,\n\t\t\t\t\t\t\tconditional: false\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (right.code) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\trange: [\n\t\t\t\t\t\t\t\tleft.range[0],\n\t\t\t\t\t\t\t\tright.range ? right.range[1] : left.range[1]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tvalue: left.value + right.value,\n\t\t\t\t\t\t\tcode: true,\n\t\t\t\t\t\t\tconditional: false\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\trange: [left.range[0], right.range[1]],\n\t\t\t\t\t\t\tvalue: left.value + right.value,\n\t\t\t\t\t\t\tcode: false,\n\t\t\t\t\t\t\tconditional: false\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"ConditionalExpression\": {\n\t\t\t\tconst consequent = this.parseCalculatedString(expression.consequent);\n\t\t\t\tconst alternate = this.parseCalculatedString(expression.alternate);\n\t\t\t\tconst items = [];\n\t\t\t\tif (consequent.conditional) {\n\t\t\t\t\titems.push(...consequent.conditional);\n\t\t\t\t} else if (!consequent.code) {\n\t\t\t\t\titems.push(consequent);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (alternate.conditional) {\n\t\t\t\t\titems.push(...alternate.conditional);\n\t\t\t\t} else if (!alternate.code) {\n\t\t\t\t\titems.push(alternate);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\trange: undefined,\n\t\t\t\t\tvalue: \"\",\n\t\t\t\t\tcode: true,\n\t\t\t\t\tconditional: items\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase \"Literal\":\n\t\t\t\treturn {\n\t\t\t\t\trange: expression.range,\n\t\t\t\t\tvalue: expression.value + \"\",\n\t\t\t\t\tcode: false,\n\t\t\t\t\tconditional: false\n\t\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\trange: undefined,\n\t\t\tvalue: \"\",\n\t\t\tcode: true,\n\t\t\tconditional: false\n\t\t};\n\t}\n\n\tparse(source, initialState) {\n\t\tlet ast;\n\t\tlet comments;\n\t\tif (typeof source === \"object\" && source !== null) {\n\t\t\tast = source;\n\t\t\tcomments = source.comments;\n\t\t} else {\n\t\t\tcomments = [];\n\t\t\tast = Parser.parse(source, {\n\t\t\t\tsourceType: this.sourceType,\n\t\t\t\tonComment: comments\n\t\t\t});\n\t\t}\n\n\t\tconst oldScope = this.scope;\n\t\tconst oldState = this.state;\n\t\tconst oldComments = this.comments;\n\t\tthis.scope = {\n\t\t\ttopLevelScope: true,\n\t\t\tinTry: false,\n\t\t\tinShorthand: false,\n\t\t\tisStrict: false,\n\t\t\tdefinitions: new StackedSetMap(),\n\t\t\trenames: new StackedSetMap()\n\t\t};\n\t\tconst state = (this.state = initialState || {});\n\t\tthis.comments = comments;\n\t\tif (this.hooks.program.call(ast, comments) === undefined) {\n\t\t\tthis.detectStrictMode(ast.body);\n\t\t\tthis.prewalkStatements(ast.body);\n\t\t\tthis.blockPrewalkStatements(ast.body);\n\t\t\tthis.walkStatements(ast.body);\n\t\t}\n\t\tthis.scope = oldScope;\n\t\tthis.state = oldState;\n\t\tthis.comments = oldComments;\n\t\treturn state;\n\t}\n\n\tevaluate(source) {\n\t\tconst ast = Parser.parse(\"(\" + source + \")\", {\n\t\t\tsourceType: this.sourceType,\n\t\t\tlocations: false\n\t\t});\n\t\t// TODO(https://github.com/acornjs/acorn/issues/741)\n\t\t// @ts-ignore\n\t\tif (ast.body.length !== 1 || ast.body[0].type !== \"ExpressionStatement\") {\n\t\t\tthrow new Error(\"evaluate: Source is not a expression\");\n\t\t}\n\t\t// TODO(https://github.com/acornjs/acorn/issues/741)\n\t\t// @ts-ignore\n\t\treturn this.evaluateExpression(ast.body[0].expression);\n\t}\n\n\tgetComments(range) {\n\t\treturn this.comments.filter(\n\t\t\tcomment => comment.range[0] >= range[0] && comment.range[1] <= range[1]\n\t\t);\n\t}\n\n\tparseCommentOptions(range) {\n\t\tconst comments = this.getComments(range);\n\t\tif (comments.length === 0) {\n\t\t\treturn EMPTY_COMMENT_OPTIONS;\n\t\t}\n\t\tlet options = {};\n\t\tlet errors = [];\n\t\tfor (const comment of comments) {\n\t\t\tconst { value } = comment;\n\t\t\tif (value && webpackCommentRegExp.test(value)) {\n\t\t\t\t// try compile only if webpack options comment is present\n\t\t\t\ttry {\n\t\t\t\t\tconst val = vm.runInNewContext(`(function(){return {${value}};})()`);\n\t\t\t\t\tObject.assign(options, val);\n\t\t\t\t} catch (e) {\n\t\t\t\t\te.comment = comment;\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { options, errors };\n\t}\n\n\tgetNameForExpression(expression) {\n\t\tlet expr = expression;\n\t\tconst exprName = [];\n\t\twhile (\n\t\t\texpr.type === \"MemberExpression\" &&\n\t\t\texpr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")\n\t\t) {\n\t\t\texprName.push(expr.computed ? expr.property.value : expr.property.name);\n\t\t\texpr = expr.object;\n\t\t}\n\t\tlet free;\n\t\tif (expr.type === \"Identifier\") {\n\t\t\tfree = !this.scope.definitions.has(expr.name);\n\t\t\texprName.push(this.scope.renames.get(expr.name) || expr.name);\n\t\t} else if (\n\t\t\texpr.type === \"ThisExpression\" &&\n\t\t\tthis.scope.renames.get(\"this\")\n\t\t) {\n\t\t\tfree = true;\n\t\t\texprName.push(this.scope.renames.get(\"this\"));\n\t\t} else if (expr.type === \"ThisExpression\") {\n\t\t\tfree = this.scope.topLevelScope;\n\t\t\texprName.push(\"this\");\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\tlet prefix = \"\";\n\t\tfor (let i = exprName.length - 1; i >= 2; i--) {\n\t\t\tprefix += exprName[i] + \".\";\n\t\t}\n\t\tif (exprName.length > 1) {\n\t\t\tprefix += exprName[1];\n\t\t}\n\t\tconst name = prefix ? prefix + \".\" + exprName[0] : exprName[0];\n\t\tconst nameGeneral = prefix;\n\t\treturn {\n\t\t\tname,\n\t\t\tnameGeneral,\n\t\t\tfree\n\t\t};\n\t}\n\n\tstatic parse(code, options) {\n\t\tconst type = options ? options.sourceType : \"module\";\n\t\tconst parserOptions = Object.assign(\n\t\t\tObject.create(null),\n\t\t\tdefaultParserOptions,\n\t\t\toptions\n\t\t);\n\n\t\tif (type === \"auto\") {\n\t\t\tparserOptions.sourceType = \"module\";\n\t\t} else if (parserOptions.sourceType === \"script\") {\n\t\t\tparserOptions.allowReturnOutsideFunction = true;\n\t\t}\n\n\t\tlet ast;\n\t\tlet error;\n\t\tlet threw = false;\n\t\ttry {\n\t\t\tast = acornParser.parse(code, parserOptions);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t\tthrew = true;\n\t\t}\n\n\t\tif (threw && type === \"auto\") {\n\t\t\tparserOptions.sourceType = \"script\";\n\t\t\tparserOptions.allowReturnOutsideFunction = true;\n\t\t\tif (Array.isArray(parserOptions.onComment)) {\n\t\t\t\tparserOptions.onComment.length = 0;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tast = acornParser.parse(code, parserOptions);\n\t\t\t\tthrew = false;\n\t\t\t} catch (e) {\n\t\t\t\tthrew = true;\n\t\t\t}\n\t\t}\n\n\t\tif (threw) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn ast;\n\t}\n}\n\n// TODO remove in webpack 5\nObject.defineProperty(Parser.prototype, \"getCommentOptions\", {\n\tconfigurable: false,\n\tvalue: util.deprecate(\n\t\t/**\n\t\t * @deprecated\n\t\t * @param {TODO} range Range\n\t\t * @returns {void}\n\t\t * @this {Parser}\n\t\t */\n\t\tfunction(range) {\n\t\t\treturn this.parseCommentOptions(range).options;\n\t\t},\n\t\t\"Parser.getCommentOptions: Use Parser.parseCommentOptions(range) instead\"\n\t)\n});\n\nmodule.exports = Parser;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst path = require(\"path\");\n\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst UnsupportedFeatureWarning = require(\"./UnsupportedFeatureWarning\");\n\nconst ParserHelpers = exports;\n\nParserHelpers.addParsedVariableToModule = (parser, name, expression) => {\n\tif (!parser.state.current.addVariable) return false;\n\tvar deps = [];\n\tparser.parse(expression, {\n\t\tcurrent: {\n\t\t\taddDependency: dep => {\n\t\t\t\tdep.userRequest = name;\n\t\t\t\tdeps.push(dep);\n\t\t\t}\n\t\t},\n\t\tmodule: parser.state.module\n\t});\n\tparser.state.current.addVariable(name, expression, deps);\n\treturn true;\n};\n\nParserHelpers.requireFileAsExpression = (context, pathToModule) => {\n\tvar moduleJsPath = path.relative(context, pathToModule);\n\tif (!/^[A-Z]:/i.test(moduleJsPath)) {\n\t\tmoduleJsPath = \"./\" + moduleJsPath.replace(/\\\\/g, \"/\");\n\t}\n\treturn \"require(\" + JSON.stringify(moduleJsPath) + \")\";\n};\n\nParserHelpers.toConstantDependency = (parser, value) => {\n\treturn function constDependency(expr) {\n\t\tvar dep = new ConstDependency(value, expr.range, false);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t};\n};\n\nParserHelpers.toConstantDependencyWithWebpackRequire = (parser, value) => {\n\treturn function constDependencyWithWebpackRequire(expr) {\n\t\tvar dep = new ConstDependency(value, expr.range, true);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t};\n};\n\nParserHelpers.evaluateToString = value => {\n\treturn function stringExpression(expr) {\n\t\treturn new BasicEvaluatedExpression().setString(value).setRange(expr.range);\n\t};\n};\n\nParserHelpers.evaluateToBoolean = value => {\n\treturn function booleanExpression(expr) {\n\t\treturn new BasicEvaluatedExpression()\n\t\t\t.setBoolean(value)\n\t\t\t.setRange(expr.range);\n\t};\n};\n\nParserHelpers.evaluateToIdentifier = (identifier, truthy) => {\n\treturn function identifierExpression(expr) {\n\t\tlet evex = new BasicEvaluatedExpression()\n\t\t\t.setIdentifier(identifier)\n\t\t\t.setRange(expr.range);\n\t\tif (truthy === true) {\n\t\t\tevex = evex.setTruthy();\n\t\t} else if (truthy === false) {\n\t\t\tevex = evex.setFalsy();\n\t\t}\n\t\treturn evex;\n\t};\n};\n\nParserHelpers.expressionIsUnsupported = (parser, message) => {\n\treturn function unsupportedExpression(expr) {\n\t\tvar dep = new ConstDependency(\"(void 0)\", expr.range, false);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.current.addDependency(dep);\n\t\tif (!parser.state.module) return;\n\t\tparser.state.module.warnings.push(\n\t\t\tnew UnsupportedFeatureWarning(parser.state.module, message, expr.loc)\n\t\t);\n\t\treturn true;\n\t};\n};\n\nParserHelpers.skipTraversal = function skipTraversal() {\n\treturn true;\n};\n\nParserHelpers.approve = function approve() {\n\treturn true;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\n\nclass PrefetchPlugin {\n\tconstructor(context, request) {\n\t\tif (!request) {\n\t\t\tthis.request = context;\n\t\t} else {\n\t\t\tthis.context = context;\n\t\t\tthis.request = request;\n\t\t}\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"PrefetchPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tPrefetchDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.make.tapAsync(\"PrefetchPlugin\", (compilation, callback) => {\n\t\t\tcompilation.prefetch(\n\t\t\t\tthis.context || compiler.context,\n\t\t\t\tnew PrefetchDependency(this.request),\n\t\t\t\tcallback\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = PrefetchPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/ProgressPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/ProgressPlugin\").ProgressPluginArgument} ProgressPluginArgument */\n/** @typedef {import(\"../declarations/plugins/ProgressPlugin\").ProgressPluginOptions} ProgressPluginOptions */\n\nconst createDefaultHandler = profile => {\n\tlet lineCaretPosition = 0;\n\tlet lastMessage = \"\";\n\tlet lastState;\n\tlet lastStateTime;\n\n\tconst defaultHandler = (percentage, msg, ...args) => {\n\t\tlet state = msg;\n\t\tconst details = args.filter(v => v.length);\n\t\tconst maxLineLength = process.stderr.columns || Infinity;\n\t\tif (percentage < 1) {\n\t\t\tpercentage = Math.floor(percentage * 100);\n\t\t\tmsg = `${percentage}% ${msg}`;\n\t\t\tif (percentage < 100) {\n\t\t\t\tmsg = ` ${msg}`;\n\t\t\t}\n\t\t\tif (percentage < 10) {\n\t\t\t\tmsg = ` ${msg}`;\n\t\t\t}\n\n\t\t\tif (details.length) {\n\t\t\t\tconst maxTotalDetailsLength = maxLineLength - msg.length;\n\t\t\t\tconst totalDetailsLength = details.reduce(\n\t\t\t\t\t(a, b) => a + b.length,\n\t\t\t\t\tdetails.length // account for added space before each detail text\n\t\t\t\t);\n\t\t\t\tconst maxDetailLength =\n\t\t\t\t\ttotalDetailsLength < maxTotalDetailsLength\n\t\t\t\t\t\t? Infinity\n\t\t\t\t\t\t: Math.floor(maxTotalDetailsLength / details.length);\n\n\t\t\t\tfor (let detail of details) {\n\t\t\t\t\tif (!detail) continue;\n\t\t\t\t\tif (detail.length + 1 > maxDetailLength) {\n\t\t\t\t\t\tconst truncatePrefix = \"...\";\n\t\t\t\t\t\tdetail = `${truncatePrefix}${detail.substr(\n\t\t\t\t\t\t\t-(maxDetailLength - truncatePrefix.length - 1)\n\t\t\t\t\t\t)}`;\n\t\t\t\t\t}\n\t\t\t\t\tmsg += ` ${detail}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (profile) {\n\t\t\tstate = state.replace(/^\\d+\\/\\d+\\s+/, \"\");\n\t\t\tif (percentage === 0) {\n\t\t\t\tlastState = null;\n\t\t\t\tlastStateTime = Date.now();\n\t\t\t} else if (state !== lastState || percentage === 1) {\n\t\t\t\tconst now = Date.now();\n\t\t\t\tif (lastState) {\n\t\t\t\t\tconst stateMsg = `${now - lastStateTime}ms ${lastState}`;\n\t\t\t\t\tgoToLineStart(stateMsg);\n\t\t\t\t\tprocess.stderr.write(stateMsg + \"\\n\");\n\t\t\t\t\tlineCaretPosition = 0;\n\t\t\t\t}\n\t\t\t\tlastState = state;\n\t\t\t\tlastStateTime = now;\n\t\t\t}\n\t\t}\n\t\tif (lastMessage !== msg) {\n\t\t\tgoToLineStart(msg);\n\t\t\tmsg = msg.substring(0, maxLineLength);\n\t\t\tprocess.stderr.write(msg);\n\t\t\tlastMessage = msg;\n\t\t}\n\t};\n\n\tconst goToLineStart = nextMessage => {\n\t\tlet str = \"\";\n\t\tfor (; lineCaretPosition > nextMessage.length; lineCaretPosition--) {\n\t\t\tstr += \"\\b \\b\";\n\t\t}\n\t\tfor (var i = 0; i < lineCaretPosition; i++) {\n\t\t\tstr += \"\\b\";\n\t\t}\n\t\tlineCaretPosition = nextMessage.length;\n\t\tif (str) process.stderr.write(str);\n\t};\n\n\treturn defaultHandler;\n};\n\nclass ProgressPlugin {\n\t/**\n\t * @param {ProgressPluginArgument} options options\n\t */\n\tconstructor(options) {\n\t\tif (typeof options === \"function\") {\n\t\t\toptions = {\n\t\t\t\thandler: options\n\t\t\t};\n\t\t}\n\n\t\toptions = options || {};\n\t\tvalidateOptions(schema, options, \"Progress Plugin\");\n\t\toptions = Object.assign({}, ProgressPlugin.defaultOptions, options);\n\n\t\tthis.profile = options.profile;\n\t\tthis.handler = options.handler;\n\t\tthis.modulesCount = options.modulesCount;\n\t\tthis.showEntries = options.entries;\n\t\tthis.showModules = options.modules;\n\t\tthis.showActiveModules = options.activeModules;\n\t}\n\n\tapply(compiler) {\n\t\tconst { modulesCount } = this;\n\t\tconst handler = this.handler || createDefaultHandler(this.profile);\n\t\tconst showEntries = this.showEntries;\n\t\tconst showModules = this.showModules;\n\t\tconst showActiveModules = this.showActiveModules;\n\t\tif (compiler.compilers) {\n\t\t\tconst states = new Array(compiler.compilers.length);\n\t\t\tcompiler.compilers.forEach((compiler, idx) => {\n\t\t\t\tnew ProgressPlugin((p, msg, ...args) => {\n\t\t\t\t\tstates[idx] = [p, msg, ...args];\n\t\t\t\t\thandler(\n\t\t\t\t\t\tstates\n\t\t\t\t\t\t\t.map(state => (state && state[0]) || 0)\n\t\t\t\t\t\t\t.reduce((a, b) => a + b) / states.length,\n\t\t\t\t\t\t`[${idx}] ${msg}`,\n\t\t\t\t\t\t...args\n\t\t\t\t\t);\n\t\t\t\t}).apply(compiler);\n\t\t\t});\n\t\t} else {\n\t\t\tlet lastModulesCount = 0;\n\t\t\tlet lastEntriesCount = 0;\n\t\t\tlet moduleCount = modulesCount;\n\t\t\tlet entriesCount = 1;\n\t\t\tlet doneModules = 0;\n\t\t\tlet doneEntries = 0;\n\t\t\tconst activeModules = new Set();\n\t\t\tlet lastActiveModule = \"\";\n\n\t\t\tconst update = () => {\n\t\t\t\tconst percentByModules =\n\t\t\t\t\tdoneModules / Math.max(lastModulesCount, moduleCount);\n\t\t\t\tconst percentByEntries =\n\t\t\t\t\tdoneEntries / Math.max(lastEntriesCount, entriesCount);\n\n\t\t\t\tconst items = [\n\t\t\t\t\t0.1 + Math.max(percentByModules, percentByEntries) * 0.6,\n\t\t\t\t\t\"building\"\n\t\t\t\t];\n\t\t\t\tif (showEntries) {\n\t\t\t\t\titems.push(`${doneEntries}/${entriesCount} entries`);\n\t\t\t\t}\n\t\t\t\tif (showModules) {\n\t\t\t\t\titems.push(`${doneModules}/${moduleCount} modules`);\n\t\t\t\t}\n\t\t\t\tif (showActiveModules) {\n\t\t\t\t\titems.push(`${activeModules.size} active`);\n\t\t\t\t\titems.push(lastActiveModule);\n\t\t\t\t}\n\t\t\t\thandler(...items);\n\t\t\t};\n\n\t\t\tconst moduleAdd = module => {\n\t\t\t\tmoduleCount++;\n\t\t\t\tif (showActiveModules) {\n\t\t\t\t\tconst ident = module.identifier();\n\t\t\t\t\tif (ident) {\n\t\t\t\t\t\tactiveModules.add(ident);\n\t\t\t\t\t\tlastActiveModule = ident;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tupdate();\n\t\t\t};\n\n\t\t\tconst entryAdd = (entry, name) => {\n\t\t\t\tentriesCount++;\n\t\t\t\tupdate();\n\t\t\t};\n\n\t\t\tconst moduleDone = module => {\n\t\t\t\tdoneModules++;\n\t\t\t\tif (showActiveModules) {\n\t\t\t\t\tconst ident = module.identifier();\n\t\t\t\t\tif (ident) {\n\t\t\t\t\t\tactiveModules.delete(ident);\n\t\t\t\t\t\tif (lastActiveModule === ident) {\n\t\t\t\t\t\t\tlastActiveModule = \"\";\n\t\t\t\t\t\t\tfor (const m of activeModules) {\n\t\t\t\t\t\t\t\tlastActiveModule = m;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tupdate();\n\t\t\t};\n\n\t\t\tconst entryDone = (entry, name) => {\n\t\t\t\tdoneEntries++;\n\t\t\t\tupdate();\n\t\t\t};\n\n\t\t\tcompiler.hooks.compilation.tap(\"ProgressPlugin\", compilation => {\n\t\t\t\tif (compilation.compiler.isChild()) return;\n\t\t\t\tlastModulesCount = moduleCount;\n\t\t\t\tlastEntriesCount = entriesCount;\n\t\t\t\tmoduleCount = entriesCount = 0;\n\t\t\t\tdoneModules = doneEntries = 0;\n\t\t\t\thandler(0, \"compiling\");\n\n\t\t\t\tcompilation.hooks.buildModule.tap(\"ProgressPlugin\", moduleAdd);\n\t\t\t\tcompilation.hooks.failedModule.tap(\"ProgressPlugin\", moduleDone);\n\t\t\t\tcompilation.hooks.succeedModule.tap(\"ProgressPlugin\", moduleDone);\n\n\t\t\t\tcompilation.hooks.addEntry.tap(\"ProgressPlugin\", entryAdd);\n\t\t\t\tcompilation.hooks.failedEntry.tap(\"ProgressPlugin\", entryDone);\n\t\t\t\tcompilation.hooks.succeedEntry.tap(\"ProgressPlugin\", entryDone);\n\n\t\t\t\tconst hooks = {\n\t\t\t\t\tfinishModules: \"finish module graph\",\n\t\t\t\t\tseal: \"sealing\",\n\t\t\t\t\tbeforeChunks: \"chunk graph\",\n\t\t\t\t\tafterChunks: \"after chunk graph\",\n\t\t\t\t\toptimizeDependenciesBasic: \"basic dependencies optimization\",\n\t\t\t\t\toptimizeDependencies: \"dependencies optimization\",\n\t\t\t\t\toptimizeDependenciesAdvanced: \"advanced dependencies optimization\",\n\t\t\t\t\tafterOptimizeDependencies: \"after dependencies optimization\",\n\t\t\t\t\toptimize: \"optimizing\",\n\t\t\t\t\toptimizeModulesBasic: \"basic module optimization\",\n\t\t\t\t\toptimizeModules: \"module optimization\",\n\t\t\t\t\toptimizeModulesAdvanced: \"advanced module optimization\",\n\t\t\t\t\tafterOptimizeModules: \"after module optimization\",\n\t\t\t\t\toptimizeChunksBasic: \"basic chunk optimization\",\n\t\t\t\t\toptimizeChunks: \"chunk optimization\",\n\t\t\t\t\toptimizeChunksAdvanced: \"advanced chunk optimization\",\n\t\t\t\t\tafterOptimizeChunks: \"after chunk optimization\",\n\t\t\t\t\toptimizeTree: \"module and chunk tree optimization\",\n\t\t\t\t\tafterOptimizeTree: \"after module and chunk tree optimization\",\n\t\t\t\t\toptimizeChunkModulesBasic: \"basic chunk modules optimization\",\n\t\t\t\t\toptimizeChunkModules: \"chunk modules optimization\",\n\t\t\t\t\toptimizeChunkModulesAdvanced: \"advanced chunk modules optimization\",\n\t\t\t\t\tafterOptimizeChunkModules: \"after chunk modules optimization\",\n\t\t\t\t\treviveModules: \"module reviving\",\n\t\t\t\t\toptimizeModuleOrder: \"module order optimization\",\n\t\t\t\t\tadvancedOptimizeModuleOrder: \"advanced module order optimization\",\n\t\t\t\t\tbeforeModuleIds: \"before module ids\",\n\t\t\t\t\tmoduleIds: \"module ids\",\n\t\t\t\t\toptimizeModuleIds: \"module id optimization\",\n\t\t\t\t\tafterOptimizeModuleIds: \"module id optimization\",\n\t\t\t\t\treviveChunks: \"chunk reviving\",\n\t\t\t\t\toptimizeChunkOrder: \"chunk order optimization\",\n\t\t\t\t\tbeforeChunkIds: \"before chunk ids\",\n\t\t\t\t\toptimizeChunkIds: \"chunk id optimization\",\n\t\t\t\t\tafterOptimizeChunkIds: \"after chunk id optimization\",\n\t\t\t\t\trecordModules: \"record modules\",\n\t\t\t\t\trecordChunks: \"record chunks\",\n\t\t\t\t\tbeforeHash: \"hashing\",\n\t\t\t\t\tafterHash: \"after hashing\",\n\t\t\t\t\trecordHash: \"record hash\",\n\t\t\t\t\tbeforeModuleAssets: \"module assets processing\",\n\t\t\t\t\tbeforeChunkAssets: \"chunk assets processing\",\n\t\t\t\t\tadditionalChunkAssets: \"additional chunk assets processing\",\n\t\t\t\t\trecord: \"recording\",\n\t\t\t\t\tadditionalAssets: \"additional asset processing\",\n\t\t\t\t\toptimizeChunkAssets: \"chunk asset optimization\",\n\t\t\t\t\tafterOptimizeChunkAssets: \"after chunk asset optimization\",\n\t\t\t\t\toptimizeAssets: \"asset optimization\",\n\t\t\t\t\tafterOptimizeAssets: \"after asset optimization\",\n\t\t\t\t\tafterSeal: \"after seal\"\n\t\t\t\t};\n\t\t\t\tconst numberOfHooks = Object.keys(hooks).length;\n\t\t\t\tObject.keys(hooks).forEach((name, idx) => {\n\t\t\t\t\tconst title = hooks[name];\n\t\t\t\t\tconst percentage = (idx / numberOfHooks) * 0.25 + 0.7;\n\t\t\t\t\tcompilation.hooks[name].intercept({\n\t\t\t\t\t\tname: \"ProgressPlugin\",\n\t\t\t\t\t\tcontext: true,\n\t\t\t\t\t\tcall: () => {\n\t\t\t\t\t\t\thandler(percentage, title);\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttap: (context, tap) => {\n\t\t\t\t\t\t\tif (context) {\n\t\t\t\t\t\t\t\t// p is percentage from 0 to 1\n\t\t\t\t\t\t\t\t// args is any number of messages in a hierarchical matter\n\t\t\t\t\t\t\t\tcontext.reportProgress = (p, ...args) => {\n\t\t\t\t\t\t\t\t\thandler(percentage, title, tap.name, ...args);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thandler(percentage, title, tap.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tcompiler.hooks.emit.intercept({\n\t\t\t\tname: \"ProgressPlugin\",\n\t\t\t\tcontext: true,\n\t\t\t\tcall: () => {\n\t\t\t\t\thandler(0.95, \"emitting\");\n\t\t\t\t},\n\t\t\t\ttap: (context, tap) => {\n\t\t\t\t\tif (context) {\n\t\t\t\t\t\tcontext.reportProgress = (p, ...args) => {\n\t\t\t\t\t\t\thandler(0.95, \"emitting\", tap.name, ...args);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandler(0.95, \"emitting\", tap.name);\n\t\t\t\t}\n\t\t\t});\n\t\t\tcompiler.hooks.afterEmit.intercept({\n\t\t\t\tname: \"ProgressPlugin\",\n\t\t\t\tcontext: true,\n\t\t\t\tcall: () => {\n\t\t\t\t\thandler(0.98, \"after emitting\");\n\t\t\t\t},\n\t\t\t\ttap: (context, tap) => {\n\t\t\t\t\tif (context) {\n\t\t\t\t\t\tcontext.reportProgress = (p, ...args) => {\n\t\t\t\t\t\t\thandler(0.98, \"after emitting\", tap.name, ...args);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandler(0.98, \"after emitting\", tap.name);\n\t\t\t\t}\n\t\t\t});\n\t\t\tcompiler.hooks.done.tap(\"ProgressPlugin\", () => {\n\t\t\t\thandler(1, \"\");\n\t\t\t});\n\t\t}\n\t}\n}\n\nProgressPlugin.defaultOptions = {\n\tprofile: false,\n\tmodulesCount: 500,\n\tmodules: true,\n\tactiveModules: true,\n\t// TODO webpack 5 default this to true\n\tentries: false\n};\n\nmodule.exports = ProgressPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst NullFactory = require(\"./NullFactory\");\n\nclass ProvidePlugin {\n\tconstructor(definitions) {\n\t\tthis.definitions = definitions;\n\t}\n\n\tapply(compiler) {\n\t\tconst definitions = this.definitions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvidePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tObject.keys(definitions).forEach(name => {\n\t\t\t\t\t\tvar request = [].concat(definitions[name]);\n\t\t\t\t\t\tvar splittedName = name.split(\".\");\n\t\t\t\t\t\tif (splittedName.length > 0) {\n\t\t\t\t\t\t\tsplittedName.slice(1).forEach((_, i) => {\n\t\t\t\t\t\t\t\tconst name = splittedName.slice(0, i + 1).join(\".\");\n\t\t\t\t\t\t\t\tparser.hooks.canRename\n\t\t\t\t\t\t\t\t\t.for(name)\n\t\t\t\t\t\t\t\t\t.tap(\"ProvidePlugin\", ParserHelpers.approve);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparser.hooks.expression.for(name).tap(\"ProvidePlugin\", expr => {\n\t\t\t\t\t\t\tlet nameIdentifier = name;\n\t\t\t\t\t\t\tconst scopedName = name.includes(\".\");\n\t\t\t\t\t\t\tlet expression = `require(${JSON.stringify(request[0])})`;\n\t\t\t\t\t\t\tif (scopedName) {\n\t\t\t\t\t\t\t\tnameIdentifier = `__webpack_provided_${name.replace(\n\t\t\t\t\t\t\t\t\t/\\./g,\n\t\t\t\t\t\t\t\t\t\"_dot_\"\n\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (request.length > 1) {\n\t\t\t\t\t\t\t\texpression += request\n\t\t\t\t\t\t\t\t\t.slice(1)\n\t\t\t\t\t\t\t\t\t.map(r => `[${JSON.stringify(r)}]`)\n\t\t\t\t\t\t\t\t\t.join(\"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!ParserHelpers.addParsedVariableToModule(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tnameIdentifier,\n\t\t\t\t\t\t\t\t\texpression\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (scopedName) {\n\t\t\t\t\t\t\t\tParserHelpers.toConstantDependency(parser, nameIdentifier)(\n\t\t\t\t\t\t\t\t\texpr\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ProvidePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ProvidePlugin\", handler);\n\n\t\t\t\t// Disable ProvidePlugin for javascript/esm, see https://github.com/webpack/webpack/issues/7032\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ProvidePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Module = require(\"./Module\");\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\n\nmodule.exports = class RawModule extends Module {\n\tconstructor(source, identifier, readableIdentifier) {\n\t\tsuper(\"javascript/dynamic\", null);\n\t\tthis.sourceStr = source;\n\t\tthis.identifierStr = identifier || this.sourceStr;\n\t\tthis.readableIdentifierStr = readableIdentifier || this.identifierStr;\n\t\tthis.built = false;\n\t}\n\n\tidentifier() {\n\t\treturn this.identifierStr;\n\t}\n\n\tsize() {\n\t\treturn this.sourceStr.length;\n\t}\n\n\treadableIdentifier(requestShortener) {\n\t\treturn requestShortener.shorten(this.readableIdentifierStr);\n\t}\n\n\tneedRebuild() {\n\t\treturn false;\n\t}\n\n\tbuild(options, compilations, resolver, fs, callback) {\n\t\tthis.built = true;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: true\n\t\t};\n\t\tcallback();\n\t}\n\n\tsource() {\n\t\tif (this.useSourceMap) {\n\t\t\treturn new OriginalSource(this.sourceStr, this.identifier());\n\t\t} else {\n\t\t\treturn new RawSource(this.sourceStr);\n\t\t}\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this.sourceStr);\n\t\tsuper.updateHash(hash);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst identifierUtils = require(\"./util/identifier\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @typedef {Object} RecordsChunks\n * @property {Record<string, number>=} byName\n * @property {Record<string, number>=} bySource\n * @property {number[]=} usedIds\n */\n\n/**\n * @typedef {Object} RecordsModules\n * @property {Record<string, number>=} byIdentifier\n * @property {Record<string, number>=} bySource\n * @property {Record<number, number>=} usedIds\n */\n\n/**\n * @typedef {Object} Records\n * @property {RecordsChunks=} chunks\n * @property {RecordsModules=} modules\n */\n\nclass RecordIdsPlugin {\n\t/**\n\t * @param {Object} options Options object\n\t * @param {boolean=} options.portableIds true, when ids need to be portable\n\t */\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst portableIds = this.options.portableIds;\n\t\tcompiler.hooks.compilation.tap(\"RecordIdsPlugin\", compilation => {\n\t\t\tcompilation.hooks.recordModules.tap(\n\t\t\t\t\"RecordIdsPlugin\",\n\t\t\t\t/**\n\t\t\t\t * @param {Module[]} modules the modules array\n\t\t\t\t * @param {Records} records the records object\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\t(modules, records) => {\n\t\t\t\t\tif (!records.modules) records.modules = {};\n\t\t\t\t\tif (!records.modules.byIdentifier) records.modules.byIdentifier = {};\n\t\t\t\t\tif (!records.modules.usedIds) records.modules.usedIds = {};\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tif (typeof module.id !== \"number\") continue;\n\t\t\t\t\t\tconst identifier = portableIds\n\t\t\t\t\t\t\t? identifierUtils.makePathsRelative(\n\t\t\t\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\t\t\t\tmodule.identifier(),\n\t\t\t\t\t\t\t\t\tcompilation.cache\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: module.identifier();\n\t\t\t\t\t\trecords.modules.byIdentifier[identifier] = module.id;\n\t\t\t\t\t\trecords.modules.usedIds[module.id] = module.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tcompilation.hooks.reviveModules.tap(\n\t\t\t\t\"RecordIdsPlugin\",\n\t\t\t\t/**\n\t\t\t\t * @param {Module[]} modules the modules array\n\t\t\t\t * @param {Records} records the records object\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\t(modules, records) => {\n\t\t\t\t\tif (!records.modules) return;\n\t\t\t\t\tif (records.modules.byIdentifier) {\n\t\t\t\t\t\t/** @type {Set<number>} */\n\t\t\t\t\t\tconst usedIds = new Set();\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\tif (module.id !== null) continue;\n\t\t\t\t\t\t\tconst identifier = portableIds\n\t\t\t\t\t\t\t\t? identifierUtils.makePathsRelative(\n\t\t\t\t\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\t\t\t\t\tmodule.identifier(),\n\t\t\t\t\t\t\t\t\t\tcompilation.cache\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: module.identifier();\n\t\t\t\t\t\t\tconst id = records.modules.byIdentifier[identifier];\n\t\t\t\t\t\t\tif (id === undefined) continue;\n\t\t\t\t\t\t\tif (usedIds.has(id)) continue;\n\t\t\t\t\t\t\tusedIds.add(id);\n\t\t\t\t\t\t\tmodule.id = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Array.isArray(records.modules.usedIds)) {\n\t\t\t\t\t\tcompilation.usedModuleIds = new Set(records.modules.usedIds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t/**\n\t\t\t * @param {Module} module the module\n\t\t\t * @returns {string} the (portable) identifier\n\t\t\t */\n\t\t\tconst getModuleIdentifier = module => {\n\t\t\t\tif (portableIds) {\n\t\t\t\t\treturn identifierUtils.makePathsRelative(\n\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\tmodule.identifier(),\n\t\t\t\t\t\tcompilation.cache\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn module.identifier();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * @param {Chunk} chunk the chunk\n\t\t\t * @returns {string[]} sources of the chunk\n\t\t\t */\n\t\t\tconst getChunkSources = chunk => {\n\t\t\t\t/** @type {string[]} */\n\t\t\t\tconst sources = [];\n\t\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\t\tconst index = chunkGroup.chunks.indexOf(chunk);\n\t\t\t\t\tfor (const origin of chunkGroup.origins) {\n\t\t\t\t\t\tif (origin.module) {\n\t\t\t\t\t\t\tif (origin.request) {\n\t\t\t\t\t\t\t\tsources.push(\n\t\t\t\t\t\t\t\t\t`${index} ${getModuleIdentifier(origin.module)} ${\n\t\t\t\t\t\t\t\t\t\torigin.request\n\t\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (typeof origin.loc === \"string\") {\n\t\t\t\t\t\t\t\tsources.push(\n\t\t\t\t\t\t\t\t\t`${index} ${getModuleIdentifier(origin.module)} ${origin.loc}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\torigin.loc &&\n\t\t\t\t\t\t\t\ttypeof origin.loc === \"object\" &&\n\t\t\t\t\t\t\t\torigin.loc.start\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsources.push(\n\t\t\t\t\t\t\t\t\t`${index} ${getModuleIdentifier(\n\t\t\t\t\t\t\t\t\t\torigin.module\n\t\t\t\t\t\t\t\t\t)} ${JSON.stringify(origin.loc.start)}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn sources;\n\t\t\t};\n\n\t\t\tcompilation.hooks.recordChunks.tap(\n\t\t\t\t\"RecordIdsPlugin\",\n\t\t\t\t/**\n\t\t\t\t * @param {Chunk[]} chunks the chunks array\n\t\t\t\t * @param {Records} records the records object\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\t(chunks, records) => {\n\t\t\t\t\tif (!records.chunks) records.chunks = {};\n\t\t\t\t\tif (!records.chunks.byName) records.chunks.byName = {};\n\t\t\t\t\tif (!records.chunks.bySource) records.chunks.bySource = {};\n\t\t\t\t\t/** @type {Set<number>} */\n\t\t\t\t\tconst usedIds = new Set();\n\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\tif (typeof chunk.id !== \"number\") continue;\n\t\t\t\t\t\tconst name = chunk.name;\n\t\t\t\t\t\tif (name) records.chunks.byName[name] = chunk.id;\n\t\t\t\t\t\tconst sources = getChunkSources(chunk);\n\t\t\t\t\t\tfor (const source of sources) {\n\t\t\t\t\t\t\trecords.chunks.bySource[source] = chunk.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tusedIds.add(chunk.id);\n\t\t\t\t\t}\n\t\t\t\t\trecords.chunks.usedIds = Array.from(usedIds).sort();\n\t\t\t\t}\n\t\t\t);\n\t\t\tcompilation.hooks.reviveChunks.tap(\n\t\t\t\t\"RecordIdsPlugin\",\n\t\t\t\t/**\n\t\t\t\t * @param {Chunk[]} chunks the chunks array\n\t\t\t\t * @param {Records} records the records object\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\t(chunks, records) => {\n\t\t\t\t\tif (!records.chunks) return;\n\t\t\t\t\t/** @type {Set<number>} */\n\t\t\t\t\tconst usedIds = new Set();\n\t\t\t\t\tif (records.chunks.byName) {\n\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\tif (chunk.id !== null) continue;\n\t\t\t\t\t\t\tif (!chunk.name) continue;\n\t\t\t\t\t\t\tconst id = records.chunks.byName[chunk.name];\n\t\t\t\t\t\t\tif (id === undefined) continue;\n\t\t\t\t\t\t\tif (usedIds.has(id)) continue;\n\t\t\t\t\t\t\tusedIds.add(id);\n\t\t\t\t\t\t\tchunk.id = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (records.chunks.bySource) {\n\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\tconst sources = getChunkSources(chunk);\n\t\t\t\t\t\t\tfor (const source of sources) {\n\t\t\t\t\t\t\t\tconst id = records.chunks.bySource[source];\n\t\t\t\t\t\t\t\tif (id === undefined) continue;\n\t\t\t\t\t\t\t\tif (usedIds.has(id)) continue;\n\t\t\t\t\t\t\t\tusedIds.add(id);\n\t\t\t\t\t\t\t\tchunk.id = id;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Array.isArray(records.chunks.usedIds)) {\n\t\t\t\t\t\tcompilation.usedChunkIds = new Set(records.chunks.usedIds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = RecordIdsPlugin;\n","\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\nmodule.exports = class RemovedPluginError extends WebpackError {\n\tconstructor(message) {\n\t\tsuper(message);\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst NORMALIZE_SLASH_DIRECTION_REGEXP = /\\\\/g;\nconst PATH_CHARS_REGEXP = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nconst SEPARATOR_REGEXP = /[/\\\\]$/;\nconst FRONT_OR_BACK_BANG_REGEXP = /^!|!$/g;\nconst INDEX_JS_REGEXP = /\\/index.js(!|\\?|\\(query\\))/g;\nconst MATCH_RESOURCE_REGEXP = /!=!/;\n\nconst normalizeBackSlashDirection = request => {\n\treturn request.replace(NORMALIZE_SLASH_DIRECTION_REGEXP, \"/\");\n};\n\nconst createRegExpForPath = path => {\n\tconst regexpTypePartial = path.replace(PATH_CHARS_REGEXP, \"\\\\$&\");\n\treturn new RegExp(`(^|!)${regexpTypePartial}`, \"g\");\n};\n\nclass RequestShortener {\n\tconstructor(directory) {\n\t\tdirectory = normalizeBackSlashDirection(directory);\n\t\tif (SEPARATOR_REGEXP.test(directory)) {\n\t\t\tdirectory = directory.substr(0, directory.length - 1);\n\t\t}\n\n\t\tif (directory) {\n\t\t\tthis.currentDirectoryRegExp = createRegExpForPath(directory);\n\t\t}\n\n\t\tconst dirname = path.dirname(directory);\n\t\tconst endsWithSeparator = SEPARATOR_REGEXP.test(dirname);\n\t\tconst parentDirectory = endsWithSeparator\n\t\t\t? dirname.substr(0, dirname.length - 1)\n\t\t\t: dirname;\n\t\tif (parentDirectory && parentDirectory !== directory) {\n\t\t\tthis.parentDirectoryRegExp = createRegExpForPath(parentDirectory);\n\t\t}\n\n\t\tif (__dirname.length >= 2) {\n\t\t\tconst buildins = normalizeBackSlashDirection(path.join(__dirname, \"..\"));\n\t\t\tconst buildinsAsModule =\n\t\t\t\tthis.currentDirectoryRegExp &&\n\t\t\t\tthis.currentDirectoryRegExp.test(buildins);\n\t\t\tthis.buildinsAsModule = buildinsAsModule;\n\t\t\tthis.buildinsRegExp = createRegExpForPath(buildins);\n\t\t}\n\n\t\tthis.cache = new Map();\n\t}\n\n\tshorten(request) {\n\t\tif (!request) return request;\n\t\tconst cacheEntry = this.cache.get(request);\n\t\tif (cacheEntry !== undefined) {\n\t\t\treturn cacheEntry;\n\t\t}\n\t\tlet result = normalizeBackSlashDirection(request);\n\t\tif (this.buildinsAsModule && this.buildinsRegExp) {\n\t\t\tresult = result.replace(this.buildinsRegExp, \"!(webpack)\");\n\t\t}\n\t\tif (this.currentDirectoryRegExp) {\n\t\t\tresult = result.replace(this.currentDirectoryRegExp, \"!.\");\n\t\t}\n\t\tif (this.parentDirectoryRegExp) {\n\t\t\tresult = result.replace(this.parentDirectoryRegExp, \"!..\");\n\t\t}\n\t\tif (!this.buildinsAsModule && this.buildinsRegExp) {\n\t\t\tresult = result.replace(this.buildinsRegExp, \"!(webpack)\");\n\t\t}\n\t\tresult = result.replace(INDEX_JS_REGEXP, \"$1\");\n\t\tresult = result.replace(FRONT_OR_BACK_BANG_REGEXP, \"\");\n\t\tresult = result.replace(MATCH_RESOURCE_REGEXP, \" = \");\n\t\tthis.cache.set(request, result);\n\t\treturn result;\n\t}\n}\n\nmodule.exports = RequestShortener;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst NullFactory = require(\"./NullFactory\");\n\nmodule.exports = class RequireJsStuffPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.requireJs !== undefined && !parserOptions.requireJs)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tparser.hooks.call\n\t\t\t\t\t\t.for(\"require.config\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(parser, \"undefined\")\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.call\n\t\t\t\t\t\t.for(\"requirejs.config\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(parser, \"undefined\")\n\t\t\t\t\t\t);\n\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"require.version\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"0.0.0\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"requirejs.onError\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireJsStuffPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\"__webpack_require__.oe\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireJsStuffPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireJsStuffPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n};\n","/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nconst { Tapable, HookMap, SyncHook, SyncWaterfallHook } = require(\"tapable\");\nconst Factory = require(\"enhanced-resolve\").ResolverFactory;\nconst { cachedCleverMerge } = require(\"./util/cleverMerge\");\n\n/** @typedef {import(\"enhanced-resolve\").Resolver} Resolver */\n\nconst EMTPY_RESOLVE_OPTIONS = {};\n\nmodule.exports = class ResolverFactory extends Tapable {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\tresolveOptions: new HookMap(\n\t\t\t\t() => new SyncWaterfallHook([\"resolveOptions\"])\n\t\t\t),\n\t\t\tresolver: new HookMap(() => new SyncHook([\"resolver\", \"resolveOptions\"]))\n\t\t};\n\t\tthis._pluginCompat.tap(\"ResolverFactory\", options => {\n\t\t\tlet match;\n\t\t\tmatch = /^resolve-options (.+)$/.exec(options.name);\n\t\t\tif (match) {\n\t\t\t\tthis.hooks.resolveOptions\n\t\t\t\t\t.for(match[1])\n\t\t\t\t\t.tap(options.fn.name || \"unnamed compat plugin\", options.fn);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tmatch = /^resolver (.+)$/.exec(options.name);\n\t\t\tif (match) {\n\t\t\t\tthis.hooks.resolver\n\t\t\t\t\t.for(match[1])\n\t\t\t\t\t.tap(options.fn.name || \"unnamed compat plugin\", options.fn);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tthis.cache2 = new Map();\n\t}\n\n\tget(type, resolveOptions) {\n\t\tresolveOptions = resolveOptions || EMTPY_RESOLVE_OPTIONS;\n\t\tconst ident = `${type}|${JSON.stringify(resolveOptions)}`;\n\t\tconst resolver = this.cache2.get(ident);\n\t\tif (resolver) return resolver;\n\t\tconst newResolver = this._create(type, resolveOptions);\n\t\tthis.cache2.set(ident, newResolver);\n\t\treturn newResolver;\n\t}\n\n\t_create(type, resolveOptions) {\n\t\tconst originalResolveOptions = Object.assign({}, resolveOptions);\n\t\tresolveOptions = this.hooks.resolveOptions.for(type).call(resolveOptions);\n\t\tconst resolver = Factory.createResolver(resolveOptions);\n\t\tif (!resolver) {\n\t\t\tthrow new Error(\"No resolver created\");\n\t\t}\n\t\t/** @type {Map<Object, Resolver>} */\n\t\tconst childCache = new Map();\n\t\tresolver.withOptions = options => {\n\t\t\tconst cacheEntry = childCache.get(options);\n\t\t\tif (cacheEntry !== undefined) return cacheEntry;\n\t\t\tconst mergedOptions = cachedCleverMerge(originalResolveOptions, options);\n\t\t\tconst resolver = this.get(type, mergedOptions);\n\t\t\tchildCache.set(options, resolver);\n\t\t\treturn resolver;\n\t\t};\n\t\tthis.hooks.resolver.for(type).call(resolver, resolveOptions);\n\t\treturn resolver;\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*\n<rules>: <rule>\n<rules>: [<rule>]\n<rule>: {\n\tresource: {\n\t\ttest: <condition>,\n\t\tinclude: <condition>,\n\t\texclude: <condition>,\n\t},\n\tresource: <condition>, -> resource.test\n\ttest: <condition>, -> resource.test\n\tinclude: <condition>, -> resource.include\n\texclude: <condition>, -> resource.exclude\n\tresourceQuery: <condition>,\n\tcompiler: <condition>,\n\tissuer: <condition>,\n\tuse: \"loader\", -> use[0].loader\n\tloader: <>, -> use[0].loader\n\tloaders: <>, -> use\n\toptions: {}, -> use[0].options,\n\tquery: {}, -> options\n\tparser: {},\n\tuse: [\n\t\t\"loader\" -> use[x].loader\n\t],\n\tuse: [\n\t\t{\n\t\t\tloader: \"loader\",\n\t\t\toptions: {}\n\t\t}\n\t],\n\trules: [\n\t\t<rule>\n\t],\n\toneOf: [\n\t\t<rule>\n\t]\n}\n\n<condition>: /regExp/\n<condition>: function(arg) {}\n<condition>: \"starting\"\n<condition>: [<condition>] // or\n<condition>: { and: [<condition>] }\n<condition>: { or: [<condition>] }\n<condition>: { not: [<condition>] }\n<condition>: { test: <condition>, include: <condition>, exclude: <condition> }\n\n\nnormalized:\n\n{\n\tresource: function(),\n\tresourceQuery: function(),\n\tcompiler: function(),\n\tissuer: function(),\n\tuse: [\n\t\t{\n\t\t\tloader: string,\n\t\t\toptions: string,\n\t\t\t<any>: <any>\n\t\t}\n\t],\n\trules: [<rule>],\n\toneOf: [<rule>],\n\t<any>: <any>,\n}\n\n*/\n\n\"use strict\";\n\nconst notMatcher = matcher => {\n\treturn str => {\n\t\treturn !matcher(str);\n\t};\n};\n\nconst orMatcher = items => {\n\treturn str => {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (items[i](str)) return true;\n\t\t}\n\t\treturn false;\n\t};\n};\n\nconst andMatcher = items => {\n\treturn str => {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (!items[i](str)) return false;\n\t\t}\n\t\treturn true;\n\t};\n};\n\nmodule.exports = class RuleSet {\n\tconstructor(rules) {\n\t\tthis.references = Object.create(null);\n\t\tthis.rules = RuleSet.normalizeRules(rules, this.references, \"ref-\");\n\t}\n\n\tstatic normalizeRules(rules, refs, ident) {\n\t\tif (Array.isArray(rules)) {\n\t\t\treturn rules.map((rule, idx) => {\n\t\t\t\treturn RuleSet.normalizeRule(rule, refs, `${ident}-${idx}`);\n\t\t\t});\n\t\t} else if (rules) {\n\t\t\treturn [RuleSet.normalizeRule(rules, refs, ident)];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tstatic normalizeRule(rule, refs, ident) {\n\t\tif (typeof rule === \"string\") {\n\t\t\treturn {\n\t\t\t\tuse: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: rule\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t\tif (!rule) {\n\t\t\tthrow new Error(\"Unexcepted null when object was expected as rule\");\n\t\t}\n\t\tif (typeof rule !== \"object\") {\n\t\t\tthrow new Error(\n\t\t\t\t\"Unexcepted \" +\n\t\t\t\t\ttypeof rule +\n\t\t\t\t\t\" when object was expected as rule (\" +\n\t\t\t\t\trule +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t}\n\n\t\tconst newRule = {};\n\t\tlet useSource;\n\t\tlet resourceSource;\n\t\tlet condition;\n\n\t\tconst checkUseSource = newSource => {\n\t\t\tif (useSource && useSource !== newSource) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\t\trule,\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\"Rule can only have one result source (provided \" +\n\t\t\t\t\t\t\t\tnewSource +\n\t\t\t\t\t\t\t\t\" and \" +\n\t\t\t\t\t\t\t\tuseSource +\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tuseSource = newSource;\n\t\t};\n\n\t\tconst checkResourceSource = newSource => {\n\t\t\tif (resourceSource && resourceSource !== newSource) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\t\trule,\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\"Rule can only have one resource source (provided \" +\n\t\t\t\t\t\t\t\tnewSource +\n\t\t\t\t\t\t\t\t\" and \" +\n\t\t\t\t\t\t\t\tresourceSource +\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tresourceSource = newSource;\n\t\t};\n\n\t\tif (rule.test || rule.include || rule.exclude) {\n\t\t\tcheckResourceSource(\"test + include + exclude\");\n\t\t\tcondition = {\n\t\t\t\ttest: rule.test,\n\t\t\t\tinclude: rule.include,\n\t\t\t\texclude: rule.exclude\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tnewRule.resource = RuleSet.normalizeCondition(condition);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(condition, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.resource) {\n\t\t\tcheckResourceSource(\"resource\");\n\t\t\ttry {\n\t\t\t\tnewRule.resource = RuleSet.normalizeCondition(rule.resource);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.resource, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.realResource) {\n\t\t\ttry {\n\t\t\t\tnewRule.realResource = RuleSet.normalizeCondition(rule.realResource);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.realResource, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.resourceQuery) {\n\t\t\ttry {\n\t\t\t\tnewRule.resourceQuery = RuleSet.normalizeCondition(rule.resourceQuery);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.resourceQuery, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.compiler) {\n\t\t\ttry {\n\t\t\t\tnewRule.compiler = RuleSet.normalizeCondition(rule.compiler);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.compiler, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.issuer) {\n\t\t\ttry {\n\t\t\t\tnewRule.issuer = RuleSet.normalizeCondition(rule.issuer);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.issuer, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.loader && rule.loaders) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"Provided loader and loaders for rule (use only one of them)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tconst loader = rule.loaders || rule.loader;\n\t\tif (typeof loader === \"string\" && !rule.options && !rule.query) {\n\t\t\tcheckUseSource(\"loader\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(loader.split(\"!\"), ident);\n\t\t} else if (typeof loader === \"string\" && (rule.options || rule.query)) {\n\t\t\tcheckUseSource(\"loader + options/query\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(\n\t\t\t\t{\n\t\t\t\t\tloader: loader,\n\t\t\t\t\toptions: rule.options,\n\t\t\t\t\tquery: rule.query\n\t\t\t\t},\n\t\t\t\tident\n\t\t\t);\n\t\t} else if (loader && (rule.options || rule.query)) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"options/query cannot be used with loaders (use options for each array item)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t} else if (loader) {\n\t\t\tcheckUseSource(\"loaders\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(loader, ident);\n\t\t} else if (rule.options || rule.query) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"options/query provided without loader (use loader + options)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif (rule.use) {\n\t\t\tcheckUseSource(\"use\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(rule.use, ident);\n\t\t}\n\n\t\tif (rule.rules) {\n\t\t\tnewRule.rules = RuleSet.normalizeRules(\n\t\t\t\trule.rules,\n\t\t\t\trefs,\n\t\t\t\t`${ident}-rules`\n\t\t\t);\n\t\t}\n\n\t\tif (rule.oneOf) {\n\t\t\tnewRule.oneOf = RuleSet.normalizeRules(\n\t\t\t\trule.oneOf,\n\t\t\t\trefs,\n\t\t\t\t`${ident}-oneOf`\n\t\t\t);\n\t\t}\n\n\t\tconst keys = Object.keys(rule).filter(key => {\n\t\t\treturn ![\n\t\t\t\t\"resource\",\n\t\t\t\t\"resourceQuery\",\n\t\t\t\t\"compiler\",\n\t\t\t\t\"test\",\n\t\t\t\t\"include\",\n\t\t\t\t\"exclude\",\n\t\t\t\t\"issuer\",\n\t\t\t\t\"loader\",\n\t\t\t\t\"options\",\n\t\t\t\t\"query\",\n\t\t\t\t\"loaders\",\n\t\t\t\t\"use\",\n\t\t\t\t\"rules\",\n\t\t\t\t\"oneOf\"\n\t\t\t].includes(key);\n\t\t});\n\t\tfor (const key of keys) {\n\t\t\tnewRule[key] = rule[key];\n\t\t}\n\n\t\tif (Array.isArray(newRule.use)) {\n\t\t\tfor (const item of newRule.use) {\n\t\t\t\tif (item.ident) {\n\t\t\t\t\trefs[item.ident] = item.options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn newRule;\n\t}\n\n\tstatic buildErrorMessage(condition, error) {\n\t\tconst conditionAsText = JSON.stringify(\n\t\t\tcondition,\n\t\t\t(key, value) => {\n\t\t\t\treturn value === undefined ? \"undefined\" : value;\n\t\t\t},\n\t\t\t2\n\t\t);\n\t\treturn error.message + \" in \" + conditionAsText;\n\t}\n\n\tstatic normalizeUse(use, ident) {\n\t\tif (typeof use === \"function\") {\n\t\t\treturn data => RuleSet.normalizeUse(use(data), ident);\n\t\t}\n\t\tif (Array.isArray(use)) {\n\t\t\treturn use\n\t\t\t\t.map((item, idx) => RuleSet.normalizeUse(item, `${ident}-${idx}`))\n\t\t\t\t.reduce((arr, items) => arr.concat(items), []);\n\t\t}\n\t\treturn [RuleSet.normalizeUseItem(use, ident)];\n\t}\n\n\tstatic normalizeUseItemString(useItemString) {\n\t\tconst idx = useItemString.indexOf(\"?\");\n\t\tif (idx >= 0) {\n\t\t\treturn {\n\t\t\t\tloader: useItemString.substr(0, idx),\n\t\t\t\toptions: useItemString.substr(idx + 1)\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tloader: useItemString,\n\t\t\toptions: undefined\n\t\t};\n\t}\n\n\tstatic normalizeUseItem(item, ident) {\n\t\tif (typeof item === \"string\") {\n\t\t\treturn RuleSet.normalizeUseItemString(item);\n\t\t}\n\n\t\tconst newItem = {};\n\n\t\tif (item.options && item.query) {\n\t\t\tthrow new Error(\"Provided options and query in use\");\n\t\t}\n\n\t\tif (!item.loader) {\n\t\t\tthrow new Error(\"No loader specified\");\n\t\t}\n\n\t\tnewItem.options = item.options || item.query;\n\n\t\tif (typeof newItem.options === \"object\" && newItem.options) {\n\t\t\tif (newItem.options.ident) {\n\t\t\t\tnewItem.ident = newItem.options.ident;\n\t\t\t} else {\n\t\t\t\tnewItem.ident = ident;\n\t\t\t}\n\t\t}\n\n\t\tconst keys = Object.keys(item).filter(function(key) {\n\t\t\treturn ![\"options\", \"query\"].includes(key);\n\t\t});\n\n\t\tfor (const key of keys) {\n\t\t\tnewItem[key] = item[key];\n\t\t}\n\n\t\treturn newItem;\n\t}\n\n\tstatic normalizeCondition(condition) {\n\t\tif (!condition) throw new Error(\"Expected condition but got falsy value\");\n\t\tif (typeof condition === \"string\") {\n\t\t\treturn str => str.indexOf(condition) === 0;\n\t\t}\n\t\tif (typeof condition === \"function\") {\n\t\t\treturn condition;\n\t\t}\n\t\tif (condition instanceof RegExp) {\n\t\t\treturn condition.test.bind(condition);\n\t\t}\n\t\tif (Array.isArray(condition)) {\n\t\t\tconst items = condition.map(c => RuleSet.normalizeCondition(c));\n\t\t\treturn orMatcher(items);\n\t\t}\n\t\tif (typeof condition !== \"object\") {\n\t\t\tthrow Error(\n\t\t\t\t\"Unexcepted \" +\n\t\t\t\t\ttypeof condition +\n\t\t\t\t\t\" when condition was expected (\" +\n\t\t\t\t\tcondition +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t}\n\n\t\tconst matchers = [];\n\t\tObject.keys(condition).forEach(key => {\n\t\t\tconst value = condition[key];\n\t\t\tswitch (key) {\n\t\t\t\tcase \"or\":\n\t\t\t\tcase \"include\":\n\t\t\t\tcase \"test\":\n\t\t\t\t\tif (value) matchers.push(RuleSet.normalizeCondition(value));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"and\":\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tconst items = value.map(c => RuleSet.normalizeCondition(c));\n\t\t\t\t\t\tmatchers.push(andMatcher(items));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"not\":\n\t\t\t\tcase \"exclude\":\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tconst matcher = RuleSet.normalizeCondition(value);\n\t\t\t\t\t\tmatchers.push(notMatcher(matcher));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unexcepted property \" + key + \" in condition\");\n\t\t\t}\n\t\t});\n\t\tif (matchers.length === 0) {\n\t\t\tthrow new Error(\"Excepted condition but got \" + condition);\n\t\t}\n\t\tif (matchers.length === 1) {\n\t\t\treturn matchers[0];\n\t\t}\n\t\treturn andMatcher(matchers);\n\t}\n\n\texec(data) {\n\t\tconst result = [];\n\t\tthis._run(\n\t\t\tdata,\n\t\t\t{\n\t\t\t\trules: this.rules\n\t\t\t},\n\t\t\tresult\n\t\t);\n\t\treturn result;\n\t}\n\n\t_run(data, rule, result) {\n\t\t// test conditions\n\t\tif (rule.resource && !data.resource) return false;\n\t\tif (rule.realResource && !data.realResource) return false;\n\t\tif (rule.resourceQuery && !data.resourceQuery) return false;\n\t\tif (rule.compiler && !data.compiler) return false;\n\t\tif (rule.issuer && !data.issuer) return false;\n\t\tif (rule.resource && !rule.resource(data.resource)) return false;\n\t\tif (rule.realResource && !rule.realResource(data.realResource))\n\t\t\treturn false;\n\t\tif (data.issuer && rule.issuer && !rule.issuer(data.issuer)) return false;\n\t\tif (\n\t\t\tdata.resourceQuery &&\n\t\t\trule.resourceQuery &&\n\t\t\t!rule.resourceQuery(data.resourceQuery)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (data.compiler && rule.compiler && !rule.compiler(data.compiler)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// apply\n\t\tconst keys = Object.keys(rule).filter(key => {\n\t\t\treturn ![\n\t\t\t\t\"resource\",\n\t\t\t\t\"realResource\",\n\t\t\t\t\"resourceQuery\",\n\t\t\t\t\"compiler\",\n\t\t\t\t\"issuer\",\n\t\t\t\t\"rules\",\n\t\t\t\t\"oneOf\",\n\t\t\t\t\"use\",\n\t\t\t\t\"enforce\"\n\t\t\t].includes(key);\n\t\t});\n\t\tfor (const key of keys) {\n\t\t\tresult.push({\n\t\t\t\ttype: key,\n\t\t\t\tvalue: rule[key]\n\t\t\t});\n\t\t}\n\n\t\tif (rule.use) {\n\t\t\tconst process = use => {\n\t\t\t\tif (typeof use === \"function\") {\n\t\t\t\t\tprocess(use(data));\n\t\t\t\t} else if (Array.isArray(use)) {\n\t\t\t\t\tuse.forEach(process);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: \"use\",\n\t\t\t\t\t\tvalue: use,\n\t\t\t\t\t\tenforce: rule.enforce\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tprocess(rule.use);\n\t\t}\n\n\t\tif (rule.rules) {\n\t\t\tfor (let i = 0; i < rule.rules.length; i++) {\n\t\t\t\tthis._run(data, rule.rules[i], result);\n\t\t\t}\n\t\t}\n\n\t\tif (rule.oneOf) {\n\t\t\tfor (let i = 0; i < rule.oneOf.length; i++) {\n\t\t\t\tif (this._run(data, rule.oneOf[i], result)) break;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfindOptionsByIdent(ident) {\n\t\tconst options = this.references[ident];\n\t\tif (!options) {\n\t\t\tthrow new Error(\"Can't find options with ident '\" + ident + \"'\");\n\t\t}\n\t\treturn options;\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"./Module\")} Module */\n\nmodule.exports = class RuntimeTemplate {\n\tconstructor(outputOptions, requestShortener) {\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.requestShortener = requestShortener;\n\t}\n\n\t/**\n\t * Add a comment\n\t * @param {object} options Information content of the comment\n\t * @param {string=} options.request request string used originally\n\t * @param {string=} options.chunkName name of the chunk referenced\n\t * @param {string=} options.chunkReason reason information of the chunk\n\t * @param {string=} options.message additional message\n\t * @param {string=} options.exportName name of the export\n\t * @returns {string} comment\n\t */\n\tcomment({ request, chunkName, chunkReason, message, exportName }) {\n\t\tlet content;\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\tcontent = [message, request, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t} else {\n\t\t\tcontent = [message, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t}\n\t\tif (!content) return \"\";\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\treturn Template.toComment(content) + \" \";\n\t\t} else {\n\t\t\treturn Template.toNormalComment(content) + \" \";\n\t\t}\n\t}\n\n\tthrowMissingModuleErrorFunction({ request }) {\n\t\tconst err = `Cannot find module '${request}'`;\n\t\treturn `function webpackMissingModule() { var e = new Error(${JSON.stringify(\n\t\t\terr\n\t\t)}); e.code = 'MODULE_NOT_FOUND'; throw e; }`;\n\t}\n\n\tmissingModule({ request }) {\n\t\treturn `!(${this.throwMissingModuleErrorFunction({ request })}())`;\n\t}\n\n\tmissingModuleStatement({ request }) {\n\t\treturn `${this.missingModule({ request })};\\n`;\n\t}\n\n\tmissingModulePromise({ request }) {\n\t\treturn `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n\t\t\trequest\n\t\t})})`;\n\t}\n\n\tmoduleId({ module, request }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (module.id === null) {\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): Module ${module.identifier()} has no id. This should not happen.`\n\t\t\t);\n\t\t}\n\t\treturn `${this.comment({ request })}${JSON.stringify(module.id)}`;\n\t}\n\n\tmoduleRaw({ module, request }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\treturn `__webpack_require__(${this.moduleId({ module, request })})`;\n\t}\n\n\tmoduleExports({ module, request }) {\n\t\treturn this.moduleRaw({\n\t\t\tmodule,\n\t\t\trequest\n\t\t});\n\t}\n\n\tmoduleNamespace({ module, request, strict }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\trequest\n\t\t});\n\t\tconst exportsType = module.buildMeta && module.buildMeta.exportsType;\n\t\tif (exportsType === \"namespace\") {\n\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\trequest\n\t\t\t});\n\t\t\treturn rawModule;\n\t\t} else if (exportsType === \"named\") {\n\t\t\treturn `__webpack_require__.t(${moduleId}, 3)`;\n\t\t} else if (strict) {\n\t\t\treturn `__webpack_require__.t(${moduleId}, 1)`;\n\t\t} else {\n\t\t\treturn `__webpack_require__.t(${moduleId}, 7)`;\n\t\t}\n\t}\n\n\tmoduleNamespacePromise({ block, module, request, message, strict, weak }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModulePromise({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (module.id === null) {\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespacePromise(): Module ${module.identifier()} has no id. This should not happen.`\n\t\t\t);\n\t\t}\n\t\tconst promise = this.blockPromise({\n\t\t\tblock,\n\t\t\tmessage\n\t\t});\n\n\t\tlet getModuleFunction;\n\t\tlet idExpr = JSON.stringify(module.id);\n\t\tconst comment = this.comment({\n\t\t\trequest\n\t\t});\n\t\tlet header = \"\";\n\t\tif (weak) {\n\t\t\tif (idExpr.length > 8) {\n\t\t\t\t// 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n\t\t\t\theader += `var id = ${idExpr}; `;\n\t\t\t\tidExpr = \"id\";\n\t\t\t}\n\t\t\theader += `if(!__webpack_require__.m[${idExpr}]) { var e = new Error(\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"); e.code = 'MODULE_NOT_FOUND'; throw e; } `;\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\trequest\n\t\t});\n\t\tconst exportsType = module.buildMeta && module.buildMeta.exportsType;\n\t\tif (exportsType === \"namespace\") {\n\t\t\tif (header) {\n\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\tmodule,\n\t\t\t\t\trequest\n\t\t\t\t});\n\t\t\t\tgetModuleFunction = `function() { ${header}return ${rawModule}; }`;\n\t\t\t} else {\n\t\t\t\tgetModuleFunction = `__webpack_require__.bind(null, ${comment}${idExpr})`;\n\t\t\t}\n\t\t} else if (exportsType === \"named\") {\n\t\t\tif (header) {\n\t\t\t\tgetModuleFunction = `function() { ${header}return __webpack_require__.t(${moduleId}, 3); }`;\n\t\t\t} else {\n\t\t\t\tgetModuleFunction = `__webpack_require__.t.bind(null, ${comment}${idExpr}, 3)`;\n\t\t\t}\n\t\t} else if (strict) {\n\t\t\tif (header) {\n\t\t\t\tgetModuleFunction = `function() { ${header}return __webpack_require__.t(${moduleId}, 1); }`;\n\t\t\t} else {\n\t\t\t\tgetModuleFunction = `__webpack_require__.t.bind(null, ${comment}${idExpr}, 1)`;\n\t\t\t}\n\t\t} else {\n\t\t\tif (header) {\n\t\t\t\tgetModuleFunction = `function() { ${header}return __webpack_require__.t(${moduleId}, 7); }`;\n\t\t\t} else {\n\t\t\t\tgetModuleFunction = `__webpack_require__.t.bind(null, ${comment}${idExpr}, 7)`;\n\t\t\t}\n\t\t}\n\n\t\treturn `${promise || \"Promise.resolve()\"}.then(${getModuleFunction})`;\n\t}\n\n\t/**\n\t *\n\t * @param {Object} options options object\n\t * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.importVar name of the import variable\n\t * @param {Module} options.originModule module in which the statement is emitted\n\t * @returns {string} the import statement\n\t */\n\timportStatement({ update, module, request, importVar, originModule }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModuleStatement({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\trequest\n\t\t});\n\t\tconst optDeclaration = update ? \"\" : \"var \";\n\n\t\tconst exportsType = module.buildMeta && module.buildMeta.exportsType;\n\t\tlet content = `/* harmony import */ ${optDeclaration}${importVar} = __webpack_require__(${moduleId});\\n`;\n\n\t\tif (!exportsType && !originModule.buildMeta.strictHarmonyModule) {\n\t\t\tcontent += `/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/__webpack_require__.n(${importVar});\\n`;\n\t\t}\n\t\tif (exportsType === \"named\") {\n\t\t\tif (Array.isArray(module.buildMeta.providedExports)) {\n\t\t\t\tcontent += `${optDeclaration}${importVar}_namespace = /*#__PURE__*/__webpack_require__.t(${moduleId}, 1);\\n`;\n\t\t\t} else {\n\t\t\t\tcontent += `${optDeclaration}${importVar}_namespace = /*#__PURE__*/__webpack_require__.t(${moduleId});\\n`;\n\t\t\t}\n\t\t}\n\t\treturn content;\n\t}\n\n\texportFromImport({\n\t\tmodule,\n\t\trequest,\n\t\texportName,\n\t\toriginModule,\n\t\tasiSafe,\n\t\tisCall,\n\t\tcallContext,\n\t\timportVar\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst exportsType = module.buildMeta && module.buildMeta.exportsType;\n\n\t\tif (!exportsType) {\n\t\t\tif (exportName === \"default\") {\n\t\t\t\tif (!originModule.buildMeta.strictHarmonyModule) {\n\t\t\t\t\tif (isCall) {\n\t\t\t\t\t\treturn `${importVar}_default()`;\n\t\t\t\t\t} else if (asiSafe) {\n\t\t\t\t\t\treturn `(${importVar}_default())`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn `${importVar}_default.a`;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn importVar;\n\t\t\t\t}\n\t\t\t} else if (originModule.buildMeta.strictHarmonyModule) {\n\t\t\t\tif (exportName) {\n\t\t\t\t\treturn \"/* non-default import from non-esm module */undefined\";\n\t\t\t\t} else {\n\t\t\t\t\treturn `/*#__PURE__*/__webpack_require__.t(${importVar})`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (exportsType === \"named\") {\n\t\t\tif (exportName === \"default\") {\n\t\t\t\treturn importVar;\n\t\t\t} else if (!exportName) {\n\t\t\t\treturn `${importVar}_namespace`;\n\t\t\t}\n\t\t}\n\n\t\tif (exportName) {\n\t\t\tconst used = module.isUsed(exportName);\n\t\t\tif (!used) {\n\t\t\t\tconst comment = Template.toNormalComment(`unused export ${exportName}`);\n\t\t\t\treturn `${comment} undefined`;\n\t\t\t}\n\t\t\tconst comment =\n\t\t\t\tused !== exportName ? Template.toNormalComment(exportName) + \" \" : \"\";\n\t\t\tconst access = `${importVar}[${comment}${JSON.stringify(used)}]`;\n\t\t\tif (isCall) {\n\t\t\t\tif (callContext === false && asiSafe) {\n\t\t\t\t\treturn `(0,${access})`;\n\t\t\t\t} else if (callContext === false) {\n\t\t\t\t\treturn `Object(${access})`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn access;\n\t\t} else {\n\t\t\treturn importVar;\n\t\t}\n\t}\n\n\tblockPromise({ block, message }) {\n\t\tif (!block || !block.chunkGroup || block.chunkGroup.chunks.length === 0) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunks = block.chunkGroup.chunks.filter(\n\t\t\tchunk => !chunk.hasRuntime() && chunk.id !== null\n\t\t);\n\t\tconst comment = this.comment({\n\t\t\tmessage,\n\t\t\tchunkName: block.chunkName,\n\t\t\tchunkReason: block.chunkReason\n\t\t});\n\t\tif (chunks.length === 1) {\n\t\t\tconst chunkId = JSON.stringify(chunks[0].id);\n\t\t\treturn `__webpack_require__.e(${comment}${chunkId})`;\n\t\t} else if (chunks.length > 0) {\n\t\t\tconst requireChunkId = chunk =>\n\t\t\t\t`__webpack_require__.e(${JSON.stringify(chunk.id)})`;\n\t\t\treturn `Promise.all(${comment.trim()}[${chunks\n\t\t\t\t.map(requireChunkId)\n\t\t\t\t.join(\", \")}])`;\n\t\t} else {\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t}\n\n\tonError() {\n\t\treturn \"__webpack_require__.oe\";\n\t}\n\n\tdefineEsModuleFlagStatement({ exportsArgument }) {\n\t\treturn `__webpack_require__.r(${exportsArgument});\\n`;\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\nclass SetVarMainTemplatePlugin {\n\t/**\n\t * @param {string} varExpression the accessor where the library is exported\n\t * @param {boolean} copyObject specify copying the exports\n\t */\n\tconstructor(varExpression, copyObject) {\n\t\t/** @type {string} */\n\t\tthis.varExpression = varExpression;\n\t\t/** @type {boolean} */\n\t\tthis.copyObject = copyObject;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation instance\n\t * @returns {void}\n\t */\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst varExpression = mainTemplate.getAssetPath(this.varExpression, {\n\t\t\t\thash,\n\t\t\t\tchunk\n\t\t\t});\n\t\t\tif (this.copyObject) {\n\t\t\t\treturn new ConcatSource(\n\t\t\t\t\t`(function(e, a) { for(var i in a) e[i] = a[i]; }(${varExpression}, `,\n\t\t\t\t\tsource,\n\t\t\t\t\t\"))\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst prefix = `${varExpression} =\\n`;\n\t\t\t\treturn new ConcatSource(prefix, source);\n\t\t\t}\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"SetVarMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\n\t\t\t\"SetVarMainTemplatePlugin\",\n\t\t\tpaths => {\n\t\t\t\tif (this.varExpression) paths.push(this.varExpression);\n\t\t\t\treturn paths;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hash.tap(\"SetVarMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"set var\");\n\t\t\thash.update(`${this.varExpression}`);\n\t\t\thash.update(`${this.copyObject}`);\n\t\t});\n\t}\n}\n\nmodule.exports = SetVarMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass SingleEntryPlugin {\n\t/**\n\t * An entry plugin which will handle\n\t * creation of the SingleEntryDependency\n\t *\n\t * @param {string} context context path\n\t * @param {string} entry entry path\n\t * @param {string} name entry key name\n\t */\n\tconstructor(context, entry, name) {\n\t\tthis.context = context;\n\t\tthis.entry = entry;\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SingleEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tSingleEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"SingleEntryPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tconst { entry, name, context } = this;\n\n\t\t\t\tconst dep = SingleEntryPlugin.createDependency(entry, name);\n\t\t\t\tcompilation.addEntry(context, dep, name, callback);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} entry entry request\n\t * @param {string} name entry name\n\t * @returns {SingleEntryDependency} the dependency\n\t */\n\tstatic createDependency(entry, name) {\n\t\tconst dep = new SingleEntryDependency(entry);\n\t\tdep.loc = { name };\n\t\treturn dep;\n\t}\n}\n\nmodule.exports = SingleEntryPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nconst SizeFormatHelpers = exports;\n\nSizeFormatHelpers.formatSize = size => {\n\tif (typeof size !== \"number\" || Number.isNaN(size) === true) {\n\t\treturn \"unknown size\";\n\t}\n\n\tif (size <= 0) {\n\t\treturn \"0 bytes\";\n\t}\n\n\tconst abbreviations = [\"bytes\", \"KiB\", \"MiB\", \"GiB\"];\n\tconst index = Math.floor(Math.log(size) / Math.log(1024));\n\n\treturn `${+(size / Math.pow(1024, index)).toPrecision(3)} ${\n\t\tabbreviations[index]\n\t}`;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\n\nclass SourceMapDevToolModuleOptionsPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compilation) {\n\t\tconst options = this.options;\n\t\tif (options.module !== false) {\n\t\t\tcompilation.hooks.buildModule.tap(\n\t\t\t\t\"SourceMapDevToolModuleOptionsPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tmodule.useSourceMap = true;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tif (options.lineToLine === true) {\n\t\t\tcompilation.hooks.buildModule.tap(\n\t\t\t\t\"SourceMapDevToolModuleOptionsPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tmodule.lineToLine = true;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (options.lineToLine) {\n\t\t\tcompilation.hooks.buildModule.tap(\n\t\t\t\t\"SourceMapDevToolModuleOptionsPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tif (!module.resource) return;\n\t\t\t\t\tlet resourcePath = module.resource;\n\t\t\t\t\tconst idx = resourcePath.indexOf(\"?\");\n\t\t\t\t\tif (idx >= 0) resourcePath = resourcePath.substr(0, idx);\n\t\t\t\t\tmodule.lineToLine = ModuleFilenameHelpers.matchObject(\n\t\t\t\t\t\toptions.lineToLine,\n\t\t\t\t\t\tresourcePath\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n}\n\nmodule.exports = SourceMapDevToolModuleOptionsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\nconst createHash = require(\"./util/createHash\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/SourceMapDevToolPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/SourceMapDevToolPlugin\").SourceMapDevToolPluginOptions} SourceMapDevToolPluginOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"source-map\").RawSourceMap} SourceMap */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Compilation\")} SourceMapDefinition */\n\n/**\n * @typedef {object} SourceMapTask\n * @property {Source} asset\n * @property {Array<string | Module>} [modules]\n * @property {string} source\n * @property {string} file\n * @property {SourceMap} sourceMap\n * @property {Chunk} chunk\n */\n\n/**\n * @param {string} name file path\n * @returns {string} file name\n */\nconst basename = name => {\n\tif (!name.includes(\"/\")) return name;\n\treturn name.substr(name.lastIndexOf(\"/\") + 1);\n};\n\n/**\n * @type {WeakMap<Source, {file: string, assets: {[k: string]: ConcatSource | RawSource}}>}\n */\nconst assetsCache = new WeakMap();\n\n/**\n * Creating {@link SourceMapTask} for given file\n * @param {string} file current compiled file\n * @param {Source} asset the asset\n * @param {Chunk} chunk related chunk\n * @param {SourceMapDevToolPluginOptions} options source map options\n * @param {Compilation} compilation compilation instance\n * @returns {SourceMapTask | undefined} created task instance or `undefined`\n */\nconst getTaskForFile = (file, asset, chunk, options, compilation) => {\n\tlet source, sourceMap;\n\t/**\n\t * Check if asset can build source map\n\t */\n\tif (asset.sourceAndMap) {\n\t\tconst sourceAndMap = asset.sourceAndMap(options);\n\t\tsourceMap = sourceAndMap.map;\n\t\tsource = sourceAndMap.source;\n\t} else {\n\t\tsourceMap = asset.map(options);\n\t\tsource = asset.source();\n\t}\n\tif (sourceMap) {\n\t\treturn {\n\t\t\tchunk,\n\t\t\tfile,\n\t\t\tasset,\n\t\t\tsource,\n\t\t\tsourceMap,\n\t\t\tmodules: undefined\n\t\t};\n\t}\n};\n\nclass SourceMapDevToolPlugin {\n\t/**\n\t * @param {SourceMapDevToolPluginOptions} [options] options object\n\t * @throws {Error} throws error, if got more than 1 arguments\n\t */\n\tconstructor(options) {\n\t\tif (arguments.length > 1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"SourceMapDevToolPlugin only takes one argument (pass an options object)\"\n\t\t\t);\n\t\t}\n\n\t\tif (!options) options = {};\n\n\t\tvalidateOptions(schema, options, \"SourceMap DevTool Plugin\");\n\n\t\t/** @type {string | false} */\n\t\tthis.sourceMapFilename = options.filename;\n\t\t/** @type {string | false} */\n\t\tthis.sourceMappingURLComment =\n\t\t\toptions.append === false\n\t\t\t\t? false\n\t\t\t\t: options.append || \"\\n//# sourceMappingURL=[url]\";\n\t\t/** @type {string | Function} */\n\t\tthis.moduleFilenameTemplate =\n\t\t\toptions.moduleFilenameTemplate || \"webpack://[namespace]/[resourcePath]\";\n\t\t/** @type {string | Function} */\n\t\tthis.fallbackModuleFilenameTemplate =\n\t\t\toptions.fallbackModuleFilenameTemplate ||\n\t\t\t\"webpack://[namespace]/[resourcePath]?[hash]\";\n\t\t/** @type {string} */\n\t\tthis.namespace = options.namespace || \"\";\n\t\t/** @type {SourceMapDevToolPluginOptions} */\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply compiler\n\t * @param {Compiler} compiler compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst sourceMapFilename = this.sourceMapFilename;\n\t\tconst sourceMappingURLComment = this.sourceMappingURLComment;\n\t\tconst moduleFilenameTemplate = this.moduleFilenameTemplate;\n\t\tconst namespace = this.namespace;\n\t\tconst fallbackModuleFilenameTemplate = this.fallbackModuleFilenameTemplate;\n\t\tconst requestShortener = compiler.requestShortener;\n\t\tconst options = this.options;\n\t\toptions.test = options.test || /\\.(m?js|css)($|\\?)/i;\n\n\t\tconst matchObject = ModuleFilenameHelpers.matchObject.bind(\n\t\t\tundefined,\n\t\t\toptions\n\t\t);\n\n\t\tcompiler.hooks.compilation.tap(\"SourceMapDevToolPlugin\", compilation => {\n\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n\n\t\t\tcompilation.hooks.afterOptimizeChunkAssets.tap(\n\t\t\t\t/** @type {TODO} */\n\t\t\t\t({ name: \"SourceMapDevToolPlugin\", context: true }),\n\t\t\t\t/**\n\t\t\t\t * @param {object} context hook context\n\t\t\t\t * @param {Array<Chunk>} chunks resulted chunks\n\t\t\t\t * @throws {Error} throws error, if `sourceMapFilename === false && sourceMappingURLComment === false`\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\t(context, chunks) => {\n\t\t\t\t\t/** @type {Map<string | Module, string>} */\n\t\t\t\t\tconst moduleToSourceNameMapping = new Map();\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {Function}\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst reportProgress =\n\t\t\t\t\t\tcontext && context.reportProgress\n\t\t\t\t\t\t\t? context.reportProgress\n\t\t\t\t\t\t\t: () => {};\n\n\t\t\t\t\tconst files = [];\n\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\tfor (const file of chunk.files) {\n\t\t\t\t\t\t\tif (matchObject(file)) {\n\t\t\t\t\t\t\t\tfiles.push({\n\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treportProgress(0.0);\n\t\t\t\t\tconst tasks = [];\n\t\t\t\t\tfiles.forEach(({ file, chunk }, idx) => {\n\t\t\t\t\t\tconst asset = compilation.assets[file];\n\t\t\t\t\t\tconst cache = assetsCache.get(asset);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * If presented in cache, reassigns assets. Cache assets already have source maps.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (cache && cache.file === file) {\n\t\t\t\t\t\t\tfor (const cachedFile in cache.assets) {\n\t\t\t\t\t\t\t\tcompilation.assets[cachedFile] = cache.assets[cachedFile];\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * Add file to chunk, if not presented there\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (cachedFile !== file) chunk.files.push(cachedFile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treportProgress(\n\t\t\t\t\t\t\t(0.5 * idx) / files.length,\n\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\"generate SourceMap\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\t/** @type {SourceMapTask | undefined} */\n\t\t\t\t\t\tconst task = getTaskForFile(\n\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\tasset,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tcompilation\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (task) {\n\t\t\t\t\t\t\tconst modules = task.sourceMap.sources.map(source => {\n\t\t\t\t\t\t\t\tconst module = compilation.findModule(source);\n\t\t\t\t\t\t\t\treturn module || source;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfor (let idx = 0; idx < modules.length; idx++) {\n\t\t\t\t\t\t\t\tconst module = modules[idx];\n\t\t\t\t\t\t\t\tif (!moduleToSourceNameMapping.get(module)) {\n\t\t\t\t\t\t\t\t\tmoduleToSourceNameMapping.set(\n\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\tModuleFilenameHelpers.createFilename(\n\t\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleFilenameTemplate: moduleFilenameTemplate,\n\t\t\t\t\t\t\t\t\t\t\t\tnamespace: namespace\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttask.modules = modules;\n\n\t\t\t\t\t\t\ttasks.push(task);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treportProgress(0.5, \"resolve sources\");\n\t\t\t\t\t/** @type {Set<string>} */\n\t\t\t\t\tconst usedNamesSet = new Set(moduleToSourceNameMapping.values());\n\t\t\t\t\t/** @type {Set<string>} */\n\t\t\t\t\tconst conflictDetectionSet = new Set();\n\n\t\t\t\t\t/**\n\t\t\t\t\t * all modules in defined order (longest identifier first)\n\t\t\t\t\t * @type {Array<string | Module>}\n\t\t\t\t\t */\n\t\t\t\t\tconst allModules = Array.from(moduleToSourceNameMapping.keys()).sort(\n\t\t\t\t\t\t(a, b) => {\n\t\t\t\t\t\t\tconst ai = typeof a === \"string\" ? a : a.identifier();\n\t\t\t\t\t\t\tconst bi = typeof b === \"string\" ? b : b.identifier();\n\t\t\t\t\t\t\treturn ai.length - bi.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// find modules with conflicting source names\n\t\t\t\t\tfor (let idx = 0; idx < allModules.length; idx++) {\n\t\t\t\t\t\tconst module = allModules[idx];\n\t\t\t\t\t\tlet sourceName = moduleToSourceNameMapping.get(module);\n\t\t\t\t\t\tlet hasName = conflictDetectionSet.has(sourceName);\n\t\t\t\t\t\tif (!hasName) {\n\t\t\t\t\t\t\tconflictDetectionSet.add(sourceName);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// try the fallback name first\n\t\t\t\t\t\tsourceName = ModuleFilenameHelpers.createFilename(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmoduleFilenameTemplate: fallbackModuleFilenameTemplate,\n\t\t\t\t\t\t\t\tnamespace: namespace\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t);\n\t\t\t\t\t\thasName = usedNamesSet.has(sourceName);\n\t\t\t\t\t\tif (!hasName) {\n\t\t\t\t\t\t\tmoduleToSourceNameMapping.set(module, sourceName);\n\t\t\t\t\t\t\tusedNamesSet.add(sourceName);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// elsewise just append stars until we have a valid name\n\t\t\t\t\t\twhile (hasName) {\n\t\t\t\t\t\t\tsourceName += \"*\";\n\t\t\t\t\t\t\thasName = usedNamesSet.has(sourceName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmoduleToSourceNameMapping.set(module, sourceName);\n\t\t\t\t\t\tusedNamesSet.add(sourceName);\n\t\t\t\t\t}\n\t\t\t\t\ttasks.forEach((task, index) => {\n\t\t\t\t\t\treportProgress(\n\t\t\t\t\t\t\t0.5 + (0.5 * index) / tasks.length,\n\t\t\t\t\t\t\ttask.file,\n\t\t\t\t\t\t\t\"attach SourceMap\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst assets = Object.create(null);\n\t\t\t\t\t\tconst chunk = task.chunk;\n\t\t\t\t\t\tconst file = task.file;\n\t\t\t\t\t\tconst asset = task.asset;\n\t\t\t\t\t\tconst sourceMap = task.sourceMap;\n\t\t\t\t\t\tconst source = task.source;\n\t\t\t\t\t\tconst modules = task.modules;\n\t\t\t\t\t\tconst moduleFilenames = modules.map(m =>\n\t\t\t\t\t\t\tmoduleToSourceNameMapping.get(m)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsourceMap.sources = moduleFilenames;\n\t\t\t\t\t\tif (options.noSources) {\n\t\t\t\t\t\t\tsourceMap.sourcesContent = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsourceMap.sourceRoot = options.sourceRoot || \"\";\n\t\t\t\t\t\tsourceMap.file = file;\n\t\t\t\t\t\tassetsCache.set(asset, { file, assets });\n\t\t\t\t\t\t/** @type {string | false} */\n\t\t\t\t\t\tlet currentSourceMappingURLComment = sourceMappingURLComment;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcurrentSourceMappingURLComment !== false &&\n\t\t\t\t\t\t\t/\\.css($|\\?)/i.test(file)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcurrentSourceMappingURLComment = currentSourceMappingURLComment.replace(\n\t\t\t\t\t\t\t\t/^\\n\\/\\/(.*)$/,\n\t\t\t\t\t\t\t\t\"\\n/*$1*/\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst sourceMapString = JSON.stringify(sourceMap);\n\t\t\t\t\t\tif (sourceMapFilename) {\n\t\t\t\t\t\t\tlet filename = file;\n\t\t\t\t\t\t\tlet query = \"\";\n\t\t\t\t\t\t\tconst idx = filename.indexOf(\"?\");\n\t\t\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t\t\tquery = filename.substr(idx);\n\t\t\t\t\t\t\t\tfilename = filename.substr(0, idx);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst pathParams = {\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tfilename: options.fileContext\n\t\t\t\t\t\t\t\t\t? path.relative(options.fileContext, filename)\n\t\t\t\t\t\t\t\t\t: filename,\n\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\tbasename: basename(filename),\n\t\t\t\t\t\t\t\tcontentHash: createHash(\"md4\")\n\t\t\t\t\t\t\t\t\t.update(sourceMapString)\n\t\t\t\t\t\t\t\t\t.digest(\"hex\")\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tlet sourceMapFile = compilation.getPath(\n\t\t\t\t\t\t\t\tsourceMapFilename,\n\t\t\t\t\t\t\t\tpathParams\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst sourceMapUrl = options.publicPath\n\t\t\t\t\t\t\t\t? options.publicPath + sourceMapFile.replace(/\\\\/g, \"/\")\n\t\t\t\t\t\t\t\t: path\n\t\t\t\t\t\t\t\t\t\t.relative(path.dirname(file), sourceMapFile)\n\t\t\t\t\t\t\t\t\t\t.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Add source map url to compilation asset, if {@link currentSourceMappingURLComment} presented\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif (currentSourceMappingURLComment !== false) {\n\t\t\t\t\t\t\t\tassets[file] = compilation.assets[file] = new ConcatSource(\n\t\t\t\t\t\t\t\t\tnew RawSource(source),\n\t\t\t\t\t\t\t\t\tcompilation.getPath(\n\t\t\t\t\t\t\t\t\t\tcurrentSourceMappingURLComment,\n\t\t\t\t\t\t\t\t\t\tObject.assign({ url: sourceMapUrl }, pathParams)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Add source map file to compilation assets and chunk files\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tassets[sourceMapFile] = compilation.assets[\n\t\t\t\t\t\t\t\tsourceMapFile\n\t\t\t\t\t\t\t] = new RawSource(sourceMapString);\n\t\t\t\t\t\t\tchunk.files.push(sourceMapFile);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (currentSourceMappingURLComment === false) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"SourceMapDevToolPlugin: append can't be false when no filename is provided\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Add source map as data url to asset\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tassets[file] = compilation.assets[file] = new ConcatSource(\n\t\t\t\t\t\t\t\tnew RawSource(source),\n\t\t\t\t\t\t\t\tcurrentSourceMappingURLComment\n\t\t\t\t\t\t\t\t\t.replace(/\\[map\\]/g, () => sourceMapString)\n\t\t\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t\t\t/\\[url\\]/g,\n\t\t\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t\t\t`data:application/json;charset=utf-8;base64,${Buffer.from(\n\t\t\t\t\t\t\t\t\t\t\t\tsourceMapString,\n\t\t\t\t\t\t\t\t\t\t\t\t\"utf-8\"\n\t\t\t\t\t\t\t\t\t\t\t).toString(\"base64\")}`\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treportProgress(1.0);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = SourceMapDevToolPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequestShortener = require(\"./RequestShortener\");\nconst SizeFormatHelpers = require(\"./SizeFormatHelpers\");\nconst formatLocation = require(\"./formatLocation\");\nconst identifierUtils = require(\"./util/identifier\");\nconst compareLocations = require(\"./compareLocations\");\nconst { LogType } = require(\"./logging/Logger\");\n\nconst optionsOrFallback = (...args) => {\n\tlet optionValues = [];\n\toptionValues.push(...args);\n\treturn optionValues.find(optionValue => optionValue !== undefined);\n};\n\nconst compareId = (a, b) => {\n\tif (typeof a !== typeof b) {\n\t\treturn typeof a < typeof b ? -1 : 1;\n\t}\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\n\nclass Stats {\n\tconstructor(compilation) {\n\t\tthis.compilation = compilation;\n\t\tthis.hash = compilation.hash;\n\t\tthis.startTime = undefined;\n\t\tthis.endTime = undefined;\n\t}\n\n\tstatic filterWarnings(warnings, warningsFilter) {\n\t\t// we dont have anything to filter so all warnings can be shown\n\t\tif (!warningsFilter) {\n\t\t\treturn warnings;\n\t\t}\n\n\t\t// create a chain of filters\n\t\t// if they return \"true\" a warning should be suppressed\n\t\tconst normalizedWarningsFilters = [].concat(warningsFilter).map(filter => {\n\t\t\tif (typeof filter === \"string\") {\n\t\t\t\treturn warning => warning.includes(filter);\n\t\t\t}\n\n\t\t\tif (filter instanceof RegExp) {\n\t\t\t\treturn warning => filter.test(warning);\n\t\t\t}\n\n\t\t\tif (typeof filter === \"function\") {\n\t\t\t\treturn filter;\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t`Can only filter warnings with Strings or RegExps. (Given: ${filter})`\n\t\t\t);\n\t\t});\n\t\treturn warnings.filter(warning => {\n\t\t\treturn !normalizedWarningsFilters.some(check => check(warning));\n\t\t});\n\t}\n\n\tformatFilePath(filePath) {\n\t\tconst OPTIONS_REGEXP = /^(\\s|\\S)*!/;\n\t\treturn filePath.includes(\"!\")\n\t\t\t? `${filePath.replace(OPTIONS_REGEXP, \"\")} (${filePath})`\n\t\t\t: `${filePath}`;\n\t}\n\n\thasWarnings() {\n\t\treturn (\n\t\t\tthis.compilation.warnings.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasWarnings())\n\t\t);\n\t}\n\n\thasErrors() {\n\t\treturn (\n\t\t\tthis.compilation.errors.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasErrors())\n\t\t);\n\t}\n\n\t// remove a prefixed \"!\" that can be specified to reverse sort order\n\tnormalizeFieldKey(field) {\n\t\tif (field[0] === \"!\") {\n\t\t\treturn field.substr(1);\n\t\t}\n\t\treturn field;\n\t}\n\n\t// if a field is prefixed by a \"!\" reverse sort order\n\tsortOrderRegular(field) {\n\t\tif (field[0] === \"!\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\ttoJson(options, forToString) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst optionOrLocalFallback = (v, def) =>\n\t\t\tv !== undefined ? v : options.all !== undefined ? options.all : def;\n\n\t\tconst testAgainstGivenOption = item => {\n\t\t\tif (typeof item === \"string\") {\n\t\t\t\tconst regExp = new RegExp(\n\t\t\t\t\t`[\\\\\\\\/]${item.replace(\n\t\t\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t\t\t/[-[\\]{}()*+?.\\\\^$|]/g,\n\t\t\t\t\t\t\"\\\\$&\"\n\t\t\t\t\t)}([\\\\\\\\/]|$|!|\\\\?)`\n\t\t\t\t);\n\t\t\t\treturn ident => regExp.test(ident);\n\t\t\t}\n\t\t\tif (item && typeof item === \"object\" && typeof item.test === \"function\") {\n\t\t\t\treturn ident => item.test(ident);\n\t\t\t}\n\t\t\tif (typeof item === \"function\") {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t\tif (typeof item === \"boolean\") {\n\t\t\t\treturn () => item;\n\t\t\t}\n\t\t};\n\n\t\tconst compilation = this.compilation;\n\t\tconst context = optionsOrFallback(\n\t\t\toptions.context,\n\t\t\tcompilation.compiler.context\n\t\t);\n\t\tconst requestShortener =\n\t\t\tcompilation.compiler.context === context\n\t\t\t\t? compilation.requestShortener\n\t\t\t\t: new RequestShortener(context);\n\t\tconst showPerformance = optionOrLocalFallback(options.performance, true);\n\t\tconst showHash = optionOrLocalFallback(options.hash, true);\n\t\tconst showEnv = optionOrLocalFallback(options.env, false);\n\t\tconst showVersion = optionOrLocalFallback(options.version, true);\n\t\tconst showTimings = optionOrLocalFallback(options.timings, true);\n\t\tconst showBuiltAt = optionOrLocalFallback(options.builtAt, true);\n\t\tconst showAssets = optionOrLocalFallback(options.assets, true);\n\t\tconst showEntrypoints = optionOrLocalFallback(options.entrypoints, true);\n\t\tconst showChunkGroups = optionOrLocalFallback(\n\t\t\toptions.chunkGroups,\n\t\t\t!forToString\n\t\t);\n\t\tconst showChunks = optionOrLocalFallback(options.chunks, !forToString);\n\t\tconst showChunkModules = optionOrLocalFallback(options.chunkModules, true);\n\t\tconst showChunkOrigins = optionOrLocalFallback(\n\t\t\toptions.chunkOrigins,\n\t\t\t!forToString\n\t\t);\n\t\tconst showModules = optionOrLocalFallback(options.modules, true);\n\t\tconst showNestedModules = optionOrLocalFallback(\n\t\t\toptions.nestedModules,\n\t\t\ttrue\n\t\t);\n\t\tconst showModuleAssets = optionOrLocalFallback(\n\t\t\toptions.moduleAssets,\n\t\t\t!forToString\n\t\t);\n\t\tconst showDepth = optionOrLocalFallback(options.depth, !forToString);\n\t\tconst showCachedModules = optionOrLocalFallback(options.cached, true);\n\t\tconst showCachedAssets = optionOrLocalFallback(options.cachedAssets, true);\n\t\tconst showReasons = optionOrLocalFallback(options.reasons, !forToString);\n\t\tconst showUsedExports = optionOrLocalFallback(\n\t\t\toptions.usedExports,\n\t\t\t!forToString\n\t\t);\n\t\tconst showProvidedExports = optionOrLocalFallback(\n\t\t\toptions.providedExports,\n\t\t\t!forToString\n\t\t);\n\t\tconst showOptimizationBailout = optionOrLocalFallback(\n\t\t\toptions.optimizationBailout,\n\t\t\t!forToString\n\t\t);\n\t\tconst showChildren = optionOrLocalFallback(options.children, true);\n\t\tconst showSource = optionOrLocalFallback(options.source, !forToString);\n\t\tconst showModuleTrace = optionOrLocalFallback(options.moduleTrace, true);\n\t\tconst showErrors = optionOrLocalFallback(options.errors, true);\n\t\tconst showErrorDetails = optionOrLocalFallback(\n\t\t\toptions.errorDetails,\n\t\t\t!forToString\n\t\t);\n\t\tconst showWarnings = optionOrLocalFallback(options.warnings, true);\n\t\tconst warningsFilter = optionsOrFallback(options.warningsFilter, null);\n\t\tconst showPublicPath = optionOrLocalFallback(\n\t\t\toptions.publicPath,\n\t\t\t!forToString\n\t\t);\n\t\tconst showLogging = optionOrLocalFallback(\n\t\t\toptions.logging,\n\t\t\tforToString ? \"info\" : true\n\t\t);\n\t\tconst showLoggingTrace = optionOrLocalFallback(\n\t\t\toptions.loggingTrace,\n\t\t\t!forToString\n\t\t);\n\t\tconst loggingDebug = []\n\t\t\t.concat(optionsOrFallback(options.loggingDebug, []))\n\t\t\t.map(testAgainstGivenOption);\n\n\t\tconst excludeModules = []\n\t\t\t.concat(optionsOrFallback(options.excludeModules, options.exclude, []))\n\t\t\t.map(testAgainstGivenOption);\n\t\tconst excludeAssets = []\n\t\t\t.concat(optionsOrFallback(options.excludeAssets, []))\n\t\t\t.map(testAgainstGivenOption);\n\t\tconst maxModules = optionsOrFallback(\n\t\t\toptions.maxModules,\n\t\t\tforToString ? 15 : Infinity\n\t\t);\n\t\tconst sortModules = optionsOrFallback(options.modulesSort, \"id\");\n\t\tconst sortChunks = optionsOrFallback(options.chunksSort, \"id\");\n\t\tconst sortAssets = optionsOrFallback(options.assetsSort, \"\");\n\t\tconst showOutputPath = optionOrLocalFallback(\n\t\t\toptions.outputPath,\n\t\t\t!forToString\n\t\t);\n\n\t\tif (!showCachedModules) {\n\t\t\texcludeModules.push((ident, module) => !module.built);\n\t\t}\n\n\t\tconst createModuleFilter = () => {\n\t\t\tlet i = 0;\n\t\t\treturn module => {\n\t\t\t\tif (excludeModules.length > 0) {\n\t\t\t\t\tconst ident = requestShortener.shorten(module.resource);\n\t\t\t\t\tconst excluded = excludeModules.some(fn => fn(ident, module));\n\t\t\t\t\tif (excluded) return false;\n\t\t\t\t}\n\t\t\t\tconst result = i < maxModules;\n\t\t\t\ti++;\n\t\t\t\treturn result;\n\t\t\t};\n\t\t};\n\n\t\tconst createAssetFilter = () => {\n\t\t\treturn asset => {\n\t\t\t\tif (excludeAssets.length > 0) {\n\t\t\t\t\tconst ident = asset.name;\n\t\t\t\t\tconst excluded = excludeAssets.some(fn => fn(ident, asset));\n\t\t\t\t\tif (excluded) return false;\n\t\t\t\t}\n\t\t\t\treturn showCachedAssets || asset.emitted;\n\t\t\t};\n\t\t};\n\n\t\tconst sortByFieldAndOrder = (fieldKey, a, b) => {\n\t\t\tif (a[fieldKey] === null && b[fieldKey] === null) return 0;\n\t\t\tif (a[fieldKey] === null) return 1;\n\t\t\tif (b[fieldKey] === null) return -1;\n\t\t\tif (a[fieldKey] === b[fieldKey]) return 0;\n\t\t\tif (typeof a[fieldKey] !== typeof b[fieldKey])\n\t\t\t\treturn typeof a[fieldKey] < typeof b[fieldKey] ? -1 : 1;\n\t\t\treturn a[fieldKey] < b[fieldKey] ? -1 : 1;\n\t\t};\n\n\t\tconst sortByField = (field, originalArray) => {\n\t\t\tconst originalMap = originalArray.reduce((map, v, i) => {\n\t\t\t\tmap.set(v, i);\n\t\t\t\treturn map;\n\t\t\t}, new Map());\n\t\t\treturn (a, b) => {\n\t\t\t\tif (field) {\n\t\t\t\t\tconst fieldKey = this.normalizeFieldKey(field);\n\n\t\t\t\t\t// if a field is prefixed with a \"!\" the sort is reversed!\n\t\t\t\t\tconst sortIsRegular = this.sortOrderRegular(field);\n\n\t\t\t\t\tconst cmp = sortByFieldAndOrder(\n\t\t\t\t\t\tfieldKey,\n\t\t\t\t\t\tsortIsRegular ? a : b,\n\t\t\t\t\t\tsortIsRegular ? b : a\n\t\t\t\t\t);\n\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t}\n\t\t\t\treturn originalMap.get(a) - originalMap.get(b);\n\t\t\t};\n\t\t};\n\n\t\tconst formatError = e => {\n\t\t\tlet text = \"\";\n\t\t\tif (typeof e === \"string\") {\n\t\t\t\te = { message: e };\n\t\t\t}\n\t\t\tif (e.chunk) {\n\t\t\t\ttext += `chunk ${e.chunk.name || e.chunk.id}${\n\t\t\t\t\te.chunk.hasRuntime()\n\t\t\t\t\t\t? \" [entry]\"\n\t\t\t\t\t\t: e.chunk.canBeInitial()\n\t\t\t\t\t\t? \" [initial]\"\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}\\n`;\n\t\t\t}\n\t\t\tif (e.file) {\n\t\t\t\ttext += `${e.file}\\n`;\n\t\t\t}\n\t\t\tif (\n\t\t\t\te.module &&\n\t\t\t\te.module.readableIdentifier &&\n\t\t\t\ttypeof e.module.readableIdentifier === \"function\"\n\t\t\t) {\n\t\t\t\ttext += this.formatFilePath(\n\t\t\t\t\te.module.readableIdentifier(requestShortener)\n\t\t\t\t);\n\t\t\t\tif (typeof e.loc === \"object\") {\n\t\t\t\t\tconst locInfo = formatLocation(e.loc);\n\t\t\t\t\tif (locInfo) text += ` ${locInfo}`;\n\t\t\t\t}\n\t\t\t\ttext += \"\\n\";\n\t\t\t}\n\t\t\ttext += e.message;\n\t\t\tif (showErrorDetails && e.details) {\n\t\t\t\ttext += `\\n${e.details}`;\n\t\t\t}\n\t\t\tif (showErrorDetails && e.missing) {\n\t\t\t\ttext += e.missing.map(item => `\\n[${item}]`).join(\"\");\n\t\t\t}\n\t\t\tif (showModuleTrace && e.origin) {\n\t\t\t\ttext += `\\n @ ${this.formatFilePath(\n\t\t\t\t\te.origin.readableIdentifier(requestShortener)\n\t\t\t\t)}`;\n\t\t\t\tif (typeof e.originLoc === \"object\") {\n\t\t\t\t\tconst locInfo = formatLocation(e.originLoc);\n\t\t\t\t\tif (locInfo) text += ` ${locInfo}`;\n\t\t\t\t}\n\t\t\t\tif (e.dependencies) {\n\t\t\t\t\tfor (const dep of e.dependencies) {\n\t\t\t\t\t\tif (!dep.loc) continue;\n\t\t\t\t\t\tif (typeof dep.loc === \"string\") continue;\n\t\t\t\t\t\tconst locInfo = formatLocation(dep.loc);\n\t\t\t\t\t\tif (!locInfo) continue;\n\t\t\t\t\t\ttext += ` ${locInfo}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet current = e.origin;\n\t\t\t\twhile (current.issuer) {\n\t\t\t\t\tcurrent = current.issuer;\n\t\t\t\t\ttext += `\\n @ ${current.readableIdentifier(requestShortener)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text;\n\t\t};\n\n\t\tconst obj = {\n\t\t\terrors: compilation.errors.map(formatError),\n\t\t\twarnings: Stats.filterWarnings(\n\t\t\t\tcompilation.warnings.map(formatError),\n\t\t\t\twarningsFilter\n\t\t\t)\n\t\t};\n\n\t\t//We just hint other renderers since actually omitting\n\t\t//errors/warnings from the JSON would be kind of weird.\n\t\tObject.defineProperty(obj, \"_showWarnings\", {\n\t\t\tvalue: showWarnings,\n\t\t\tenumerable: false\n\t\t});\n\t\tObject.defineProperty(obj, \"_showErrors\", {\n\t\t\tvalue: showErrors,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tif (showVersion) {\n\t\t\tobj.version = require(\"../package.json\").version;\n\t\t}\n\n\t\tif (showHash) obj.hash = this.hash;\n\t\tif (showTimings && this.startTime && this.endTime) {\n\t\t\tobj.time = this.endTime - this.startTime;\n\t\t}\n\n\t\tif (showBuiltAt && this.endTime) {\n\t\t\tobj.builtAt = this.endTime;\n\t\t}\n\n\t\tif (showEnv && options._env) {\n\t\t\tobj.env = options._env;\n\t\t}\n\n\t\tif (compilation.needAdditionalPass) {\n\t\t\tobj.needAdditionalPass = true;\n\t\t}\n\t\tif (showPublicPath) {\n\t\t\tobj.publicPath = this.compilation.mainTemplate.getPublicPath({\n\t\t\t\thash: this.compilation.hash\n\t\t\t});\n\t\t}\n\t\tif (showOutputPath) {\n\t\t\tobj.outputPath = this.compilation.mainTemplate.outputOptions.path;\n\t\t}\n\t\tif (showAssets) {\n\t\t\tconst assetsByFile = {};\n\t\t\tconst compilationAssets = Object.keys(compilation.assets).sort();\n\t\t\tobj.assetsByChunkName = {};\n\t\t\tobj.assets = compilationAssets\n\t\t\t\t.map(asset => {\n\t\t\t\t\tconst obj = {\n\t\t\t\t\t\tname: asset,\n\t\t\t\t\t\tsize: compilation.assets[asset].size(),\n\t\t\t\t\t\tchunks: [],\n\t\t\t\t\t\tchunkNames: [],\n\t\t\t\t\t\t// TODO webpack 5: remove .emitted\n\t\t\t\t\t\temitted:\n\t\t\t\t\t\t\tcompilation.assets[asset].emitted ||\n\t\t\t\t\t\t\tcompilation.emittedAssets.has(asset)\n\t\t\t\t\t};\n\n\t\t\t\t\tif (showPerformance) {\n\t\t\t\t\t\tobj.isOverSizeLimit = compilation.assets[asset].isOverSizeLimit;\n\t\t\t\t\t}\n\n\t\t\t\t\tassetsByFile[asset] = obj;\n\t\t\t\t\treturn obj;\n\t\t\t\t})\n\t\t\t\t.filter(createAssetFilter());\n\t\t\tobj.filteredAssets = compilationAssets.length - obj.assets.length;\n\n\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\tfor (const asset of chunk.files) {\n\t\t\t\t\tif (assetsByFile[asset]) {\n\t\t\t\t\t\tfor (const id of chunk.ids) {\n\t\t\t\t\t\t\tassetsByFile[asset].chunks.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (chunk.name) {\n\t\t\t\t\t\t\tassetsByFile[asset].chunkNames.push(chunk.name);\n\t\t\t\t\t\t\tif (obj.assetsByChunkName[chunk.name]) {\n\t\t\t\t\t\t\t\tobj.assetsByChunkName[chunk.name] = []\n\t\t\t\t\t\t\t\t\t.concat(obj.assetsByChunkName[chunk.name])\n\t\t\t\t\t\t\t\t\t.concat([asset]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tobj.assetsByChunkName[chunk.name] = asset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.assets.sort(sortByField(sortAssets, obj.assets));\n\t\t}\n\n\t\tconst fnChunkGroup = groupMap => {\n\t\t\tconst obj = {};\n\t\t\tfor (const keyValuePair of groupMap) {\n\t\t\t\tconst name = keyValuePair[0];\n\t\t\t\tconst cg = keyValuePair[1];\n\t\t\t\tconst children = cg.getChildrenByOrders();\n\t\t\t\tobj[name] = {\n\t\t\t\t\tchunks: cg.chunks.map(c => c.id),\n\t\t\t\t\tassets: cg.chunks.reduce(\n\t\t\t\t\t\t(array, c) => array.concat(c.files || []),\n\t\t\t\t\t\t[]\n\t\t\t\t\t),\n\t\t\t\t\tchildren: Object.keys(children).reduce((obj, key) => {\n\t\t\t\t\t\tconst groups = children[key];\n\t\t\t\t\t\tobj[key] = groups.map(group => ({\n\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\tchunks: group.chunks.map(c => c.id),\n\t\t\t\t\t\t\tassets: group.chunks.reduce(\n\t\t\t\t\t\t\t\t(array, c) => array.concat(c.files || []),\n\t\t\t\t\t\t\t\t[]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}));\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}, Object.create(null)),\n\t\t\t\t\tchildAssets: Object.keys(children).reduce((obj, key) => {\n\t\t\t\t\t\tconst groups = children[key];\n\t\t\t\t\t\tobj[key] = Array.from(\n\t\t\t\t\t\t\tgroups.reduce((set, group) => {\n\t\t\t\t\t\t\t\tfor (const chunk of group.chunks) {\n\t\t\t\t\t\t\t\t\tfor (const asset of chunk.files) {\n\t\t\t\t\t\t\t\t\t\tset.add(asset);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn set;\n\t\t\t\t\t\t\t}, new Set())\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}, Object.create(null))\n\t\t\t\t};\n\t\t\t\tif (showPerformance) {\n\t\t\t\t\tobj[name].isOverSizeLimit = cg.isOverSizeLimit;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t};\n\n\t\tif (showEntrypoints) {\n\t\t\tobj.entrypoints = fnChunkGroup(compilation.entrypoints);\n\t\t}\n\n\t\tif (showChunkGroups) {\n\t\t\tobj.namedChunkGroups = fnChunkGroup(compilation.namedChunkGroups);\n\t\t}\n\n\t\tconst fnModule = module => {\n\t\t\tconst path = [];\n\t\t\tlet current = module;\n\t\t\twhile (current.issuer) {\n\t\t\t\tpath.push((current = current.issuer));\n\t\t\t}\n\t\t\tpath.reverse();\n\t\t\tconst obj = {\n\t\t\t\tid: module.id,\n\t\t\t\tidentifier: module.identifier(),\n\t\t\t\tname: module.readableIdentifier(requestShortener),\n\t\t\t\tindex: module.index,\n\t\t\t\tindex2: module.index2,\n\t\t\t\tsize: module.size(),\n\t\t\t\tcacheable: module.buildInfo.cacheable,\n\t\t\t\tbuilt: !!module.built,\n\t\t\t\toptional: module.optional,\n\t\t\t\tprefetched: module.prefetched,\n\t\t\t\tchunks: Array.from(module.chunksIterable, chunk => chunk.id),\n\t\t\t\tissuer: module.issuer && module.issuer.identifier(),\n\t\t\t\tissuerId: module.issuer && module.issuer.id,\n\t\t\t\tissuerName:\n\t\t\t\t\tmodule.issuer && module.issuer.readableIdentifier(requestShortener),\n\t\t\t\tissuerPath:\n\t\t\t\t\tmodule.issuer &&\n\t\t\t\t\tpath.map(module => ({\n\t\t\t\t\t\tid: module.id,\n\t\t\t\t\t\tidentifier: module.identifier(),\n\t\t\t\t\t\tname: module.readableIdentifier(requestShortener),\n\t\t\t\t\t\tprofile: module.profile\n\t\t\t\t\t})),\n\t\t\t\tprofile: module.profile,\n\t\t\t\tfailed: !!module.error,\n\t\t\t\terrors: module.errors ? module.errors.length : 0,\n\t\t\t\twarnings: module.warnings ? module.warnings.length : 0\n\t\t\t};\n\t\t\tif (showModuleAssets) {\n\t\t\t\tobj.assets = Object.keys(module.buildInfo.assets || {});\n\t\t\t}\n\t\t\tif (showReasons) {\n\t\t\t\tobj.reasons = module.reasons\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\tif (a.module && !b.module) return -1;\n\t\t\t\t\t\tif (!a.module && b.module) return 1;\n\t\t\t\t\t\tif (a.module && b.module) {\n\t\t\t\t\t\t\tconst cmp = compareId(a.module.id, b.module.id);\n\t\t\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (a.dependency && !b.dependency) return -1;\n\t\t\t\t\t\tif (!a.dependency && b.dependency) return 1;\n\t\t\t\t\t\tif (a.dependency && b.dependency) {\n\t\t\t\t\t\t\tconst cmp = compareLocations(a.dependency.loc, b.dependency.loc);\n\t\t\t\t\t\t\tif (cmp) return cmp;\n\t\t\t\t\t\t\tif (a.dependency.type < b.dependency.type) return -1;\n\t\t\t\t\t\t\tif (a.dependency.type > b.dependency.type) return 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t})\n\t\t\t\t\t.map(reason => {\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tmoduleId: reason.module ? reason.module.id : null,\n\t\t\t\t\t\t\tmoduleIdentifier: reason.module\n\t\t\t\t\t\t\t\t? reason.module.identifier()\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tmodule: reason.module\n\t\t\t\t\t\t\t\t? reason.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tmoduleName: reason.module\n\t\t\t\t\t\t\t\t? reason.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\ttype: reason.dependency ? reason.dependency.type : null,\n\t\t\t\t\t\t\texplanation: reason.explanation,\n\t\t\t\t\t\t\tuserRequest: reason.dependency\n\t\t\t\t\t\t\t\t? reason.dependency.userRequest\n\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (reason.dependency) {\n\t\t\t\t\t\t\tconst locInfo = formatLocation(reason.dependency.loc);\n\t\t\t\t\t\t\tif (locInfo) {\n\t\t\t\t\t\t\t\tobj.loc = locInfo;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tif (showUsedExports) {\n\t\t\t\tif (module.used === true) {\n\t\t\t\t\tobj.usedExports = module.usedExports;\n\t\t\t\t} else if (module.used === false) {\n\t\t\t\t\tobj.usedExports = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showProvidedExports) {\n\t\t\t\tobj.providedExports = Array.isArray(module.buildMeta.providedExports)\n\t\t\t\t\t? module.buildMeta.providedExports\n\t\t\t\t\t: null;\n\t\t\t}\n\t\t\tif (showOptimizationBailout) {\n\t\t\t\tobj.optimizationBailout = module.optimizationBailout.map(item => {\n\t\t\t\t\tif (typeof item === \"function\") return item(requestShortener);\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (showDepth) {\n\t\t\t\tobj.depth = module.depth;\n\t\t\t}\n\t\t\tif (showNestedModules) {\n\t\t\t\tif (module.modules) {\n\t\t\t\t\tconst modules = module.modules;\n\t\t\t\t\tobj.modules = modules\n\t\t\t\t\t\t.sort(sortByField(\"depth\", modules))\n\t\t\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t\t\t.map(fnModule);\n\t\t\t\t\tobj.filteredModules = modules.length - obj.modules.length;\n\t\t\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showSource && module._source) {\n\t\t\t\tobj.source = module._source.source();\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\tif (showChunks) {\n\t\t\tobj.chunks = compilation.chunks.map(chunk => {\n\t\t\t\tconst parents = new Set();\n\t\t\t\tconst children = new Set();\n\t\t\t\tconst siblings = new Set();\n\t\t\t\tconst childIdByOrder = chunk.getChildIdsByOrders();\n\t\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\t\tfor (const parentGroup of chunkGroup.parentsIterable) {\n\t\t\t\t\t\tfor (const chunk of parentGroup.chunks) {\n\t\t\t\t\t\t\tparents.add(chunk.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const childGroup of chunkGroup.childrenIterable) {\n\t\t\t\t\t\tfor (const chunk of childGroup.chunks) {\n\t\t\t\t\t\t\tchildren.add(chunk.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const sibling of chunkGroup.chunks) {\n\t\t\t\t\t\tif (sibling !== chunk) siblings.add(sibling.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst obj = {\n\t\t\t\t\tid: chunk.id,\n\t\t\t\t\trendered: chunk.rendered,\n\t\t\t\t\tinitial: chunk.canBeInitial(),\n\t\t\t\t\tentry: chunk.hasRuntime(),\n\t\t\t\t\trecorded: chunk.recorded,\n\t\t\t\t\treason: chunk.chunkReason,\n\t\t\t\t\tsize: chunk.modulesSize(),\n\t\t\t\t\tnames: chunk.name ? [chunk.name] : [],\n\t\t\t\t\tfiles: chunk.files.slice(),\n\t\t\t\t\thash: chunk.renderedHash,\n\t\t\t\t\tsiblings: Array.from(siblings).sort(compareId),\n\t\t\t\t\tparents: Array.from(parents).sort(compareId),\n\t\t\t\t\tchildren: Array.from(children).sort(compareId),\n\t\t\t\t\tchildrenByOrder: childIdByOrder\n\t\t\t\t};\n\t\t\t\tif (showChunkModules) {\n\t\t\t\t\tconst modules = chunk.getModules();\n\t\t\t\t\tobj.modules = modules\n\t\t\t\t\t\t.slice()\n\t\t\t\t\t\t.sort(sortByField(\"depth\", modules))\n\t\t\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t\t\t.map(fnModule);\n\t\t\t\t\tobj.filteredModules = chunk.getNumberOfModules() - obj.modules.length;\n\t\t\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t\t\t}\n\t\t\t\tif (showChunkOrigins) {\n\t\t\t\t\tobj.origins = Array.from(chunk.groupsIterable, g => g.origins)\n\t\t\t\t\t\t.reduce((a, b) => a.concat(b), [])\n\t\t\t\t\t\t.map(origin => ({\n\t\t\t\t\t\t\tmoduleId: origin.module ? origin.module.id : undefined,\n\t\t\t\t\t\t\tmodule: origin.module ? origin.module.identifier() : \"\",\n\t\t\t\t\t\t\tmoduleIdentifier: origin.module ? origin.module.identifier() : \"\",\n\t\t\t\t\t\t\tmoduleName: origin.module\n\t\t\t\t\t\t\t\t? origin.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\tloc: formatLocation(origin.loc),\n\t\t\t\t\t\t\trequest: origin.request,\n\t\t\t\t\t\t\treasons: origin.reasons || []\n\t\t\t\t\t\t}))\n\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\tconst cmp1 = compareId(a.moduleId, b.moduleId);\n\t\t\t\t\t\t\tif (cmp1) return cmp1;\n\t\t\t\t\t\t\tconst cmp2 = compareId(a.loc, b.loc);\n\t\t\t\t\t\t\tif (cmp2) return cmp2;\n\t\t\t\t\t\t\tconst cmp3 = compareId(a.request, b.request);\n\t\t\t\t\t\t\tif (cmp3) return cmp3;\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t});\n\t\t\tobj.chunks.sort(sortByField(sortChunks, obj.chunks));\n\t\t}\n\t\tif (showModules) {\n\t\t\tobj.modules = compilation.modules\n\t\t\t\t.slice()\n\t\t\t\t.sort(sortByField(\"depth\", compilation.modules))\n\t\t\t\t.filter(createModuleFilter())\n\t\t\t\t.map(fnModule);\n\t\t\tobj.filteredModules = compilation.modules.length - obj.modules.length;\n\t\t\tobj.modules.sort(sortByField(sortModules, obj.modules));\n\t\t}\n\t\tif (showLogging) {\n\t\t\tconst util = require(\"util\");\n\t\t\tobj.logging = {};\n\t\t\tlet acceptedTypes;\n\t\t\tlet collapsedGroups = false;\n\t\t\tswitch (showLogging) {\n\t\t\t\tcase \"none\":\n\t\t\t\t\tacceptedTypes = new Set([]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"error\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"warn\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error, LogType.warn]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"info\":\n\t\t\t\t\tacceptedTypes = new Set([LogType.error, LogType.warn, LogType.info]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase true:\n\t\t\t\tcase \"log\":\n\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\tLogType.info,\n\t\t\t\t\t\tLogType.log,\n\t\t\t\t\t\tLogType.group,\n\t\t\t\t\t\tLogType.groupEnd,\n\t\t\t\t\t\tLogType.groupCollapsed,\n\t\t\t\t\t\tLogType.clear\n\t\t\t\t\t]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"verbose\":\n\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\tLogType.info,\n\t\t\t\t\t\tLogType.log,\n\t\t\t\t\t\tLogType.group,\n\t\t\t\t\t\tLogType.groupEnd,\n\t\t\t\t\t\tLogType.groupCollapsed,\n\t\t\t\t\t\tLogType.profile,\n\t\t\t\t\t\tLogType.profileEnd,\n\t\t\t\t\t\tLogType.time,\n\t\t\t\t\t\tLogType.clear\n\t\t\t\t\t]);\n\t\t\t\t\tcollapsedGroups = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (const [origin, logEntries] of compilation.logging) {\n\t\t\t\tconst debugMode = loggingDebug.some(fn => fn(origin));\n\t\t\t\tlet collapseCounter = 0;\n\t\t\t\tlet processedLogEntries = logEntries;\n\t\t\t\tif (!debugMode) {\n\t\t\t\t\tprocessedLogEntries = processedLogEntries.filter(entry => {\n\t\t\t\t\t\tif (!acceptedTypes.has(entry.type)) return false;\n\t\t\t\t\t\tif (!collapsedGroups) {\n\t\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\t\tcase LogType.groupCollapsed:\n\t\t\t\t\t\t\t\t\tcollapseCounter++;\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 1;\n\t\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\t\tif (collapseCounter > 0) collapseCounter++;\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 0;\n\t\t\t\t\t\t\t\tcase LogType.groupEnd:\n\t\t\t\t\t\t\t\t\tif (collapseCounter > 0) {\n\t\t\t\t\t\t\t\t\t\tcollapseCounter--;\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn collapseCounter === 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tprocessedLogEntries = processedLogEntries.map(entry => {\n\t\t\t\t\tlet message = undefined;\n\t\t\t\t\tif (entry.type === LogType.time) {\n\t\t\t\t\t\tmessage = `${entry.args[0]}: ${entry.args[1] * 1000 +\n\t\t\t\t\t\t\tentry.args[2] / 1000000}ms`;\n\t\t\t\t\t} else if (entry.args && entry.args.length > 0) {\n\t\t\t\t\t\tmessage = util.format(entry.args[0], ...entry.args.slice(1));\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\t(debugMode || collapsedGroups) &&\n\t\t\t\t\t\t\tentry.type === LogType.groupCollapsed\n\t\t\t\t\t\t\t\t? LogType.group\n\t\t\t\t\t\t\t\t: entry.type,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\ttrace: showLoggingTrace && entry.trace ? entry.trace : undefined\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tlet name = identifierUtils\n\t\t\t\t\t.makePathsRelative(context, origin, compilation.cache)\n\t\t\t\t\t.replace(/\\|/g, \" \");\n\t\t\t\tif (name in obj.logging) {\n\t\t\t\t\tlet i = 1;\n\t\t\t\t\twhile (`${name}#${i}` in obj.logging) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tname = `${name}#${i}`;\n\t\t\t\t}\n\t\t\t\tobj.logging[name] = {\n\t\t\t\t\tentries: processedLogEntries,\n\t\t\t\t\tfilteredEntries: logEntries.length - processedLogEntries.length,\n\t\t\t\t\tdebug: debugMode\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tif (showChildren) {\n\t\t\tobj.children = compilation.children.map((child, idx) => {\n\t\t\t\tconst childOptions = Stats.getChildOptions(options, idx);\n\t\t\t\tconst obj = new Stats(child).toJson(childOptions, forToString);\n\t\t\t\tdelete obj.hash;\n\t\t\t\tdelete obj.version;\n\t\t\t\tif (child.name) {\n\t\t\t\t\tobj.name = identifierUtils.makePathsRelative(\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tchild.name,\n\t\t\t\t\t\tcompilation.cache\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t});\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\ttoString(options) {\n\t\tif (typeof options === \"boolean\" || typeof options === \"string\") {\n\t\t\toptions = Stats.presetToOptions(options);\n\t\t} else if (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst useColors = optionsOrFallback(options.colors, false);\n\n\t\tconst obj = this.toJson(options, true);\n\n\t\treturn Stats.jsonToString(obj, useColors);\n\t}\n\n\tstatic jsonToString(obj, useColors) {\n\t\tconst buf = [];\n\n\t\tconst defaultColors = {\n\t\t\tbold: \"\\u001b[1m\",\n\t\t\tyellow: \"\\u001b[1m\\u001b[33m\",\n\t\t\tred: \"\\u001b[1m\\u001b[31m\",\n\t\t\tgreen: \"\\u001b[1m\\u001b[32m\",\n\t\t\tcyan: \"\\u001b[1m\\u001b[36m\",\n\t\t\tmagenta: \"\\u001b[1m\\u001b[35m\"\n\t\t};\n\n\t\tconst colors = Object.keys(defaultColors).reduce(\n\t\t\t(obj, color) => {\n\t\t\t\tobj[color] = str => {\n\t\t\t\t\tif (useColors) {\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\tuseColors === true || useColors[color] === undefined\n\t\t\t\t\t\t\t\t? defaultColors[color]\n\t\t\t\t\t\t\t\t: useColors[color]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbuf.push(str);\n\t\t\t\t\tif (useColors) {\n\t\t\t\t\t\tbuf.push(\"\\u001b[39m\\u001b[22m\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t{\n\t\t\t\tnormal: str => buf.push(str)\n\t\t\t}\n\t\t);\n\n\t\tconst coloredTime = time => {\n\t\t\tlet times = [800, 400, 200, 100];\n\t\t\tif (obj.time) {\n\t\t\t\ttimes = [obj.time / 2, obj.time / 4, obj.time / 8, obj.time / 16];\n\t\t\t}\n\t\t\tif (time < times[3]) colors.normal(`${time}ms`);\n\t\t\telse if (time < times[2]) colors.bold(`${time}ms`);\n\t\t\telse if (time < times[1]) colors.green(`${time}ms`);\n\t\t\telse if (time < times[0]) colors.yellow(`${time}ms`);\n\t\t\telse colors.red(`${time}ms`);\n\t\t};\n\n\t\tconst newline = () => buf.push(\"\\n\");\n\n\t\tconst getText = (arr, row, col) => {\n\t\t\treturn arr[row][col].value;\n\t\t};\n\n\t\tconst table = (array, align, splitter) => {\n\t\t\tconst rows = array.length;\n\t\t\tconst cols = array[0].length;\n\t\t\tconst colSizes = new Array(cols);\n\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\tcolSizes[col] = 0;\n\t\t\t}\n\t\t\tfor (let row = 0; row < rows; row++) {\n\t\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\t\tconst value = `${getText(array, row, col)}`;\n\t\t\t\t\tif (value.length > colSizes[col]) {\n\t\t\t\t\t\tcolSizes[col] = value.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let row = 0; row < rows; row++) {\n\t\t\t\tfor (let col = 0; col < cols; col++) {\n\t\t\t\t\tconst format = array[row][col].color;\n\t\t\t\t\tconst value = `${getText(array, row, col)}`;\n\t\t\t\t\tlet l = value.length;\n\t\t\t\t\tif (align[col] === \"l\") {\n\t\t\t\t\t\tformat(value);\n\t\t\t\t\t}\n\t\t\t\t\tfor (; l < colSizes[col] && col !== cols - 1; l++) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (align[col] === \"r\") {\n\t\t\t\t\t\tformat(value);\n\t\t\t\t\t}\n\t\t\t\t\tif (col + 1 < cols && colSizes[col] !== 0) {\n\t\t\t\t\t\tcolors.normal(splitter || \"  \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t};\n\n\t\tconst getAssetColor = (asset, defaultColor) => {\n\t\t\tif (asset.isOverSizeLimit) {\n\t\t\t\treturn colors.yellow;\n\t\t\t}\n\n\t\t\treturn defaultColor;\n\t\t};\n\n\t\tif (obj.hash) {\n\t\t\tcolors.normal(\"Hash: \");\n\t\t\tcolors.bold(obj.hash);\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.version) {\n\t\t\tcolors.normal(\"Version: webpack \");\n\t\t\tcolors.bold(obj.version);\n\t\t\tnewline();\n\t\t}\n\t\tif (typeof obj.time === \"number\") {\n\t\t\tcolors.normal(\"Time: \");\n\t\t\tcolors.bold(obj.time);\n\t\t\tcolors.normal(\"ms\");\n\t\t\tnewline();\n\t\t}\n\t\tif (typeof obj.builtAt === \"number\") {\n\t\t\tconst builtAtDate = new Date(obj.builtAt);\n\t\t\tcolors.normal(\"Built at: \");\n\t\t\tcolors.normal(\n\t\t\t\tbuiltAtDate.toLocaleDateString(undefined, {\n\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\tmonth: \"2-digit\",\n\t\t\t\t\tyear: \"numeric\"\n\t\t\t\t})\n\t\t\t);\n\t\t\tcolors.normal(\" \");\n\t\t\tcolors.bold(builtAtDate.toLocaleTimeString());\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.env) {\n\t\t\tcolors.normal(\"Environment (--env): \");\n\t\t\tcolors.bold(JSON.stringify(obj.env, null, 2));\n\t\t\tnewline();\n\t\t}\n\t\tif (obj.publicPath) {\n\t\t\tcolors.normal(\"PublicPath: \");\n\t\t\tcolors.bold(obj.publicPath);\n\t\t\tnewline();\n\t\t}\n\n\t\tif (obj.assets && obj.assets.length > 0) {\n\t\t\tconst t = [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Asset\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Size\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Chunks\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Chunk Names\",\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t];\n\t\t\tfor (const asset of obj.assets) {\n\t\t\t\tt.push([\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.name,\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.green)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: SizeFormatHelpers.formatSize(asset.size),\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.normal)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.chunks.join(\", \"),\n\t\t\t\t\t\tcolor: colors.bold\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.emitted ? \"[emitted]\" : \"\",\n\t\t\t\t\t\tcolor: colors.green\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.isOverSizeLimit ? \"[big]\" : \"\",\n\t\t\t\t\t\tcolor: getAssetColor(asset, colors.normal)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: asset.chunkNames.join(\", \"),\n\t\t\t\t\t\tcolor: colors.normal\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}\n\t\t\ttable(t, \"rrrlll\");\n\t\t}\n\t\tif (obj.filteredAssets > 0) {\n\t\t\tcolors.normal(\" \");\n\t\t\tif (obj.assets.length > 0) colors.normal(\"+ \");\n\t\t\tcolors.normal(obj.filteredAssets);\n\t\t\tif (obj.assets.length > 0) colors.normal(\" hidden\");\n\t\t\tcolors.normal(obj.filteredAssets !== 1 ? \" assets\" : \" asset\");\n\t\t\tnewline();\n\t\t}\n\n\t\tconst processChunkGroups = (namedGroups, prefix) => {\n\t\t\tfor (const name of Object.keys(namedGroups)) {\n\t\t\t\tconst cg = namedGroups[name];\n\t\t\t\tcolors.normal(`${prefix} `);\n\t\t\t\tcolors.bold(name);\n\t\t\t\tif (cg.isOverSizeLimit) {\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tcolors.yellow(\"[big]\");\n\t\t\t\t}\n\t\t\t\tcolors.normal(\" =\");\n\t\t\t\tfor (const asset of cg.assets) {\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tcolors.green(asset);\n\t\t\t\t}\n\t\t\t\tfor (const name of Object.keys(cg.childAssets)) {\n\t\t\t\t\tconst assets = cg.childAssets[name];\n\t\t\t\t\tif (assets && assets.length > 0) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(`(${name}:`);\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t\tcolors.green(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.magenta(\")\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t};\n\n\t\tif (obj.entrypoints) {\n\t\t\tprocessChunkGroups(obj.entrypoints, \"Entrypoint\");\n\t\t}\n\n\t\tif (obj.namedChunkGroups) {\n\t\t\tlet outputChunkGroups = obj.namedChunkGroups;\n\t\t\tif (obj.entrypoints) {\n\t\t\t\toutputChunkGroups = Object.keys(outputChunkGroups)\n\t\t\t\t\t.filter(name => !obj.entrypoints[name])\n\t\t\t\t\t.reduce((result, name) => {\n\t\t\t\t\t\tresult[name] = obj.namedChunkGroups[name];\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}, {});\n\t\t\t}\n\t\t\tprocessChunkGroups(outputChunkGroups, \"Chunk Group\");\n\t\t}\n\n\t\tconst modulesByIdentifier = {};\n\t\tif (obj.modules) {\n\t\t\tfor (const module of obj.modules) {\n\t\t\t\tmodulesByIdentifier[`$${module.identifier}`] = module;\n\t\t\t}\n\t\t} else if (obj.chunks) {\n\t\t\tfor (const chunk of obj.chunks) {\n\t\t\t\tif (chunk.modules) {\n\t\t\t\t\tfor (const module of chunk.modules) {\n\t\t\t\t\t\tmodulesByIdentifier[`$${module.identifier}`] = module;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst processModuleAttributes = module => {\n\t\t\tcolors.normal(\" \");\n\t\t\tcolors.normal(SizeFormatHelpers.formatSize(module.size));\n\t\t\tif (module.chunks) {\n\t\t\t\tfor (const chunk of module.chunks) {\n\t\t\t\t\tcolors.normal(\" {\");\n\t\t\t\t\tcolors.yellow(chunk);\n\t\t\t\t\tcolors.normal(\"}\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof module.depth === \"number\") {\n\t\t\t\tcolors.normal(` [depth ${module.depth}]`);\n\t\t\t}\n\t\t\tif (module.cacheable === false) {\n\t\t\t\tcolors.red(\" [not cacheable]\");\n\t\t\t}\n\t\t\tif (module.optional) {\n\t\t\t\tcolors.yellow(\" [optional]\");\n\t\t\t}\n\t\t\tif (module.built) {\n\t\t\t\tcolors.green(\" [built]\");\n\t\t\t}\n\t\t\tif (module.assets && module.assets.length) {\n\t\t\t\tcolors.magenta(\n\t\t\t\t\t` [${module.assets.length} asset${\n\t\t\t\t\t\tmodule.assets.length === 1 ? \"\" : \"s\"\n\t\t\t\t\t}]`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (module.prefetched) {\n\t\t\t\tcolors.magenta(\" [prefetched]\");\n\t\t\t}\n\t\t\tif (module.failed) colors.red(\" [failed]\");\n\t\t\tif (module.warnings) {\n\t\t\t\tcolors.yellow(\n\t\t\t\t\t` [${module.warnings} warning${module.warnings === 1 ? \"\" : \"s\"}]`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (module.errors) {\n\t\t\t\tcolors.red(\n\t\t\t\t\t` [${module.errors} error${module.errors === 1 ? \"\" : \"s\"}]`\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tconst processModuleContent = (module, prefix) => {\n\t\t\tif (Array.isArray(module.providedExports)) {\n\t\t\t\tcolors.normal(prefix);\n\t\t\t\tif (module.providedExports.length === 0) {\n\t\t\t\t\tcolors.cyan(\"[no exports]\");\n\t\t\t\t} else {\n\t\t\t\t\tcolors.cyan(`[exports: ${module.providedExports.join(\", \")}]`);\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t}\n\t\t\tif (module.usedExports !== undefined) {\n\t\t\t\tif (module.usedExports !== true) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tif (module.usedExports === null) {\n\t\t\t\t\t\tcolors.cyan(\"[used exports unknown]\");\n\t\t\t\t\t} else if (module.usedExports === false) {\n\t\t\t\t\t\tcolors.cyan(\"[no exports used]\");\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tArray.isArray(module.usedExports) &&\n\t\t\t\t\t\tmodule.usedExports.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tcolors.cyan(\"[no exports used]\");\n\t\t\t\t\t} else if (Array.isArray(module.usedExports)) {\n\t\t\t\t\t\tconst providedExportsCount = Array.isArray(module.providedExports)\n\t\t\t\t\t\t\t? module.providedExports.length\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tprovidedExportsCount !== null &&\n\t\t\t\t\t\t\tprovidedExportsCount === module.usedExports.length\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcolors.cyan(\"[all exports used]\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolors.cyan(\n\t\t\t\t\t\t\t\t`[only some exports used: ${module.usedExports.join(\", \")}]`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(module.optimizationBailout)) {\n\t\t\t\tfor (const item of module.optimizationBailout) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tcolors.yellow(item);\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.reasons) {\n\t\t\t\tfor (const reason of module.reasons) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tif (reason.type) {\n\t\t\t\t\t\tcolors.normal(reason.type);\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.userRequest) {\n\t\t\t\t\t\tcolors.cyan(reason.userRequest);\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.moduleId !== null) {\n\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\tcolors.normal(reason.moduleId);\n\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.module && reason.module !== reason.moduleId) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(reason.module);\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.loc) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.normal(reason.loc);\n\t\t\t\t\t}\n\t\t\t\t\tif (reason.explanation) {\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.cyan(reason.explanation);\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.profile) {\n\t\t\t\tcolors.normal(prefix);\n\t\t\t\tlet sum = 0;\n\t\t\t\tif (module.issuerPath) {\n\t\t\t\t\tfor (const m of module.issuerPath) {\n\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\tcolors.normal(m.id);\n\t\t\t\t\t\tcolors.normal(\"] \");\n\t\t\t\t\t\tif (m.profile) {\n\t\t\t\t\t\t\tconst time = (m.profile.factory || 0) + (m.profile.building || 0);\n\t\t\t\t\t\t\tcoloredTime(time);\n\t\t\t\t\t\t\tsum += time;\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.normal(\"-> \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const key of Object.keys(module.profile)) {\n\t\t\t\t\tcolors.normal(`${key}:`);\n\t\t\t\t\tconst time = module.profile[key];\n\t\t\t\t\tcoloredTime(time);\n\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\tsum += time;\n\t\t\t\t}\n\t\t\t\tcolors.normal(\"= \");\n\t\t\t\tcoloredTime(sum);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t\tif (module.modules) {\n\t\t\t\tprocessModulesList(module, prefix + \"| \");\n\t\t\t}\n\t\t};\n\n\t\tconst processModulesList = (obj, prefix) => {\n\t\t\tif (obj.modules) {\n\t\t\t\tlet maxModuleId = 0;\n\t\t\t\tfor (const module of obj.modules) {\n\t\t\t\t\tif (typeof module.id === \"number\") {\n\t\t\t\t\t\tif (maxModuleId < module.id) maxModuleId = module.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet contentPrefix = prefix + \"    \";\n\t\t\t\tif (maxModuleId >= 10) contentPrefix += \" \";\n\t\t\t\tif (maxModuleId >= 100) contentPrefix += \" \";\n\t\t\t\tif (maxModuleId >= 1000) contentPrefix += \" \";\n\t\t\t\tfor (const module of obj.modules) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tconst name = module.name || module.identifier;\n\t\t\t\t\tif (typeof module.id === \"string\" || typeof module.id === \"number\") {\n\t\t\t\t\t\tif (typeof module.id === \"number\") {\n\t\t\t\t\t\t\tif (module.id < 1000 && maxModuleId >= 1000) colors.normal(\" \");\n\t\t\t\t\t\t\tif (module.id < 100 && maxModuleId >= 100) colors.normal(\" \");\n\t\t\t\t\t\t\tif (module.id < 10 && maxModuleId >= 10) colors.normal(\" \");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (maxModuleId >= 1000) colors.normal(\" \");\n\t\t\t\t\t\t\tif (maxModuleId >= 100) colors.normal(\" \");\n\t\t\t\t\t\t\tif (maxModuleId >= 10) colors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (name !== module.id) {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.normal(module.id);\n\t\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.bold(module.id);\n\t\t\t\t\t\t\tcolors.normal(\"]\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (name !== module.id) {\n\t\t\t\t\t\tcolors.bold(name);\n\t\t\t\t\t}\n\t\t\t\t\tprocessModuleAttributes(module);\n\t\t\t\t\tnewline();\n\t\t\t\t\tprocessModuleContent(module, contentPrefix);\n\t\t\t\t}\n\t\t\t\tif (obj.filteredModules > 0) {\n\t\t\t\t\tcolors.normal(prefix);\n\t\t\t\t\tcolors.normal(\"   \");\n\t\t\t\t\tif (obj.modules.length > 0) colors.normal(\" + \");\n\t\t\t\t\tcolors.normal(obj.filteredModules);\n\t\t\t\t\tif (obj.modules.length > 0) colors.normal(\" hidden\");\n\t\t\t\t\tcolors.normal(obj.filteredModules !== 1 ? \" modules\" : \" module\");\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (obj.chunks) {\n\t\t\tfor (const chunk of obj.chunks) {\n\t\t\t\tcolors.normal(\"chunk \");\n\t\t\t\tif (chunk.id < 1000) colors.normal(\" \");\n\t\t\t\tif (chunk.id < 100) colors.normal(\" \");\n\t\t\t\tif (chunk.id < 10) colors.normal(\" \");\n\t\t\t\tcolors.normal(\"{\");\n\t\t\t\tcolors.yellow(chunk.id);\n\t\t\t\tcolors.normal(\"} \");\n\t\t\t\tcolors.green(chunk.files.join(\", \"));\n\t\t\t\tif (chunk.names && chunk.names.length > 0) {\n\t\t\t\t\tcolors.normal(\" (\");\n\t\t\t\t\tcolors.normal(chunk.names.join(\", \"));\n\t\t\t\t\tcolors.normal(\")\");\n\t\t\t\t}\n\t\t\t\tcolors.normal(\" \");\n\t\t\t\tcolors.normal(SizeFormatHelpers.formatSize(chunk.size));\n\t\t\t\tfor (const id of chunk.parents) {\n\t\t\t\t\tcolors.normal(\" <{\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}>\");\n\t\t\t\t}\n\t\t\t\tfor (const id of chunk.siblings) {\n\t\t\t\t\tcolors.normal(\" ={\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}=\");\n\t\t\t\t}\n\t\t\t\tfor (const id of chunk.children) {\n\t\t\t\t\tcolors.normal(\" >{\");\n\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\tcolors.normal(\"}<\");\n\t\t\t\t}\n\t\t\t\tif (chunk.childrenByOrder) {\n\t\t\t\t\tfor (const name of Object.keys(chunk.childrenByOrder)) {\n\t\t\t\t\t\tconst children = chunk.childrenByOrder[name];\n\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\tcolors.magenta(`(${name}:`);\n\t\t\t\t\t\tfor (const id of children) {\n\t\t\t\t\t\t\tcolors.normal(\" {\");\n\t\t\t\t\t\t\tcolors.yellow(id);\n\t\t\t\t\t\t\tcolors.normal(\"}\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolors.magenta(\")\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (chunk.entry) {\n\t\t\t\t\tcolors.yellow(\" [entry]\");\n\t\t\t\t} else if (chunk.initial) {\n\t\t\t\t\tcolors.yellow(\" [initial]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.rendered) {\n\t\t\t\t\tcolors.green(\" [rendered]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.recorded) {\n\t\t\t\t\tcolors.green(\" [recorded]\");\n\t\t\t\t}\n\t\t\t\tif (chunk.reason) {\n\t\t\t\t\tcolors.yellow(` ${chunk.reason}`);\n\t\t\t\t}\n\t\t\t\tnewline();\n\t\t\t\tif (chunk.origins) {\n\t\t\t\t\tfor (const origin of chunk.origins) {\n\t\t\t\t\t\tcolors.normal(\"    > \");\n\t\t\t\t\t\tif (origin.reasons && origin.reasons.length) {\n\t\t\t\t\t\t\tcolors.yellow(origin.reasons.join(\" \"));\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.request) {\n\t\t\t\t\t\t\tcolors.normal(origin.request);\n\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.module) {\n\t\t\t\t\t\t\tcolors.normal(\"[\");\n\t\t\t\t\t\t\tcolors.normal(origin.moduleId);\n\t\t\t\t\t\t\tcolors.normal(\"] \");\n\t\t\t\t\t\t\tconst module = modulesByIdentifier[`$${origin.module}`];\n\t\t\t\t\t\t\tif (module) {\n\t\t\t\t\t\t\t\tcolors.bold(module.name);\n\t\t\t\t\t\t\t\tcolors.normal(\" \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (origin.loc) {\n\t\t\t\t\t\t\tcolors.normal(origin.loc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewline();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprocessModulesList(chunk, \" \");\n\t\t\t}\n\t\t}\n\n\t\tprocessModulesList(obj, \"\");\n\n\t\tif (obj.logging) {\n\t\t\tfor (const origin of Object.keys(obj.logging)) {\n\t\t\t\tconst logData = obj.logging[origin];\n\t\t\t\tif (logData.entries.length > 0) {\n\t\t\t\t\tnewline();\n\t\t\t\t\tif (logData.debug) {\n\t\t\t\t\t\tcolors.red(\"DEBUG \");\n\t\t\t\t\t}\n\t\t\t\t\tcolors.bold(\"LOG from \" + origin);\n\t\t\t\t\tnewline();\n\t\t\t\t\tlet indent = \"\";\n\t\t\t\t\tfor (const entry of logData.entries) {\n\t\t\t\t\t\tlet color = colors.normal;\n\t\t\t\t\t\tlet prefix = \"\";\n\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\tcase LogType.clear:\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}-------`);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tcase LogType.error:\n\t\t\t\t\t\t\t\tcolor = colors.red;\n\t\t\t\t\t\t\t\tprefix = \"<e> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.warn:\n\t\t\t\t\t\t\t\tcolor = colors.yellow;\n\t\t\t\t\t\t\t\tprefix = \"<w> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.info:\n\t\t\t\t\t\t\t\tcolor = colors.green;\n\t\t\t\t\t\t\t\tprefix = \"<i> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.log:\n\t\t\t\t\t\t\t\tcolor = colors.bold;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.trace:\n\t\t\t\t\t\t\tcase LogType.debug:\n\t\t\t\t\t\t\t\tcolor = colors.normal;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.profile:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"<p> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.profileEnd:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"</p> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.time:\n\t\t\t\t\t\t\t\tcolor = colors.magenta;\n\t\t\t\t\t\t\t\tprefix = \"<t> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\tcolor = colors.cyan;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.groupCollapsed:\n\t\t\t\t\t\t\t\tcolor = colors.cyan;\n\t\t\t\t\t\t\t\tprefix = \"<+> \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase LogType.groupEnd:\n\t\t\t\t\t\t\t\tif (indent.length > 2)\n\t\t\t\t\t\t\t\t\tindent = indent.slice(0, indent.length - 2);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (entry.message) {\n\t\t\t\t\t\t\tfor (const line of entry.message.split(\"\\n\")) {\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}${prefix}`);\n\t\t\t\t\t\t\t\tcolor(line);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (entry.trace) {\n\t\t\t\t\t\t\tfor (const line of entry.trace) {\n\t\t\t\t\t\t\t\tcolors.normal(`${indent}| ${line}`);\n\t\t\t\t\t\t\t\tnewline();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (entry.type) {\n\t\t\t\t\t\t\tcase LogType.group:\n\t\t\t\t\t\t\t\tindent += \"  \";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (logData.filteredEntries) {\n\t\t\t\t\t\tcolors.normal(`+ ${logData.filteredEntries} hidden lines`);\n\t\t\t\t\t\tnewline();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj._showWarnings && obj.warnings) {\n\t\t\tfor (const warning of obj.warnings) {\n\t\t\t\tnewline();\n\t\t\t\tcolors.yellow(`WARNING in ${warning}`);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t}\n\t\tif (obj._showErrors && obj.errors) {\n\t\t\tfor (const error of obj.errors) {\n\t\t\t\tnewline();\n\t\t\t\tcolors.red(`ERROR in ${error}`);\n\t\t\t\tnewline();\n\t\t\t}\n\t\t}\n\t\tif (obj.children) {\n\t\t\tfor (const child of obj.children) {\n\t\t\t\tconst childString = Stats.jsonToString(child, useColors);\n\t\t\t\tif (childString) {\n\t\t\t\t\tif (child.name) {\n\t\t\t\t\t\tcolors.normal(\"Child \");\n\t\t\t\t\t\tcolors.bold(child.name);\n\t\t\t\t\t\tcolors.normal(\":\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors.normal(\"Child\");\n\t\t\t\t\t}\n\t\t\t\t\tnewline();\n\t\t\t\t\tbuf.push(\"    \");\n\t\t\t\t\tbuf.push(childString.replace(/\\n/g, \"\\n    \"));\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (obj.needAdditionalPass) {\n\t\t\tcolors.yellow(\n\t\t\t\t\"Compilation needs an additional pass and will compile again.\"\n\t\t\t);\n\t\t}\n\n\t\twhile (buf[buf.length - 1] === \"\\n\") {\n\t\t\tbuf.pop();\n\t\t}\n\t\treturn buf.join(\"\");\n\t}\n\n\tstatic presetToOptions(name) {\n\t\t// Accepted values: none, errors-only, minimal, normal, detailed, verbose\n\t\t// Any other falsy value will behave as 'none', truthy values as 'normal'\n\t\tconst pn =\n\t\t\t(typeof name === \"string\" && name.toLowerCase()) || name || \"none\";\n\t\tswitch (pn) {\n\t\t\tcase \"none\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false\n\t\t\t\t};\n\t\t\tcase \"verbose\":\n\t\t\t\treturn {\n\t\t\t\t\tentrypoints: true,\n\t\t\t\t\tchunkGroups: true,\n\t\t\t\t\tmodules: false,\n\t\t\t\t\tchunks: true,\n\t\t\t\t\tchunkModules: true,\n\t\t\t\t\tchunkOrigins: true,\n\t\t\t\t\tdepth: true,\n\t\t\t\t\tenv: true,\n\t\t\t\t\treasons: true,\n\t\t\t\t\tusedExports: true,\n\t\t\t\t\tprovidedExports: true,\n\t\t\t\t\toptimizationBailout: true,\n\t\t\t\t\terrorDetails: true,\n\t\t\t\t\tpublicPath: true,\n\t\t\t\t\tlogging: \"verbose\",\n\t\t\t\t\texclude: false,\n\t\t\t\t\tmaxModules: Infinity\n\t\t\t\t};\n\t\t\tcase \"detailed\":\n\t\t\t\treturn {\n\t\t\t\t\tentrypoints: true,\n\t\t\t\t\tchunkGroups: true,\n\t\t\t\t\tchunks: true,\n\t\t\t\t\tchunkModules: false,\n\t\t\t\t\tchunkOrigins: true,\n\t\t\t\t\tdepth: true,\n\t\t\t\t\tusedExports: true,\n\t\t\t\t\tprovidedExports: true,\n\t\t\t\t\toptimizationBailout: true,\n\t\t\t\t\terrorDetails: true,\n\t\t\t\t\tpublicPath: true,\n\t\t\t\t\tlogging: true,\n\t\t\t\t\texclude: false,\n\t\t\t\t\tmaxModules: Infinity\n\t\t\t\t};\n\t\t\tcase \"minimal\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\tmodules: true,\n\t\t\t\t\tmaxModules: 0,\n\t\t\t\t\terrors: true,\n\t\t\t\t\twarnings: true,\n\t\t\t\t\tlogging: \"warn\"\n\t\t\t\t};\n\t\t\tcase \"errors-only\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\terrors: true,\n\t\t\t\t\tmoduleTrace: true,\n\t\t\t\t\tlogging: \"error\"\n\t\t\t\t};\n\t\t\tcase \"errors-warnings\":\n\t\t\t\treturn {\n\t\t\t\t\tall: false,\n\t\t\t\t\terrors: true,\n\t\t\t\t\twarnings: true,\n\t\t\t\t\tlogging: \"warn\"\n\t\t\t\t};\n\t\t\tdefault:\n\t\t\t\treturn {};\n\t\t}\n\t}\n\n\tstatic getChildOptions(options, idx) {\n\t\tlet innerOptions;\n\t\tif (Array.isArray(options.children)) {\n\t\t\tif (idx < options.children.length) {\n\t\t\t\tinnerOptions = options.children[idx];\n\t\t\t}\n\t\t} else if (typeof options.children === \"object\" && options.children) {\n\t\t\tinnerOptions = options.children;\n\t\t}\n\t\tif (typeof innerOptions === \"boolean\" || typeof innerOptions === \"string\") {\n\t\t\tinnerOptions = Stats.presetToOptions(innerOptions);\n\t\t}\n\t\tif (!innerOptions) {\n\t\t\treturn options;\n\t\t}\n\t\tconst childOptions = Object.assign({}, options);\n\t\tdelete childOptions.children; // do not inherit children\n\t\treturn Object.assign(childOptions, innerOptions);\n\t}\n}\n\nmodule.exports = Stats;\n","/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Joel Denning @joeldenning\n */\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @typedef {Object} SystemMainTemplatePluginOptions\n * @param {string=} name the library name\n */\n\nclass SystemMainTemplatePlugin {\n\t/**\n\t * @param {SystemMainTemplatePluginOptions} options the plugin options\n\t */\n\tconstructor(options) {\n\t\tthis.name = options.name;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation instance\n\t * @returns {void}\n\t */\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst externals = chunk.getModules().filter(m => m.external);\n\n\t\t\t// The name this bundle should be registered as with System\n\t\t\tconst name = this.name ? `${JSON.stringify(this.name)}, ` : \"\";\n\n\t\t\t// The array of dependencies that are external to webpack and will be provided by System\n\t\t\tconst systemDependencies = JSON.stringify(\n\t\t\t\texternals.map(m =>\n\t\t\t\t\ttypeof m.request === \"object\" ? m.request.amd : m.request\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// The name of the variable provided by System for exporting\n\t\t\tconst dynamicExport = \"__WEBPACK_DYNAMIC_EXPORT__\";\n\n\t\t\t// An array of the internal variable names for the webpack externals\n\t\t\tconst externalWebpackNames = externals.map(\n\t\t\t\tm => `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${m.id}`)}__`\n\t\t\t);\n\n\t\t\t// Declaring variables for the internal variable names for the webpack externals\n\t\t\tconst externalVarDeclarations =\n\t\t\t\texternalWebpackNames.length > 0\n\t\t\t\t\t? `var ${externalWebpackNames.join(\", \")};`\n\t\t\t\t\t: \"\";\n\n\t\t\t// The system.register format requires an array of setter functions for externals.\n\t\t\tconst setters =\n\t\t\t\texternalWebpackNames.length === 0\n\t\t\t\t\t? \"\"\n\t\t\t\t\t: Template.asString([\n\t\t\t\t\t\t\t\"setters: [\",\n\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\texternalWebpackNames\n\t\t\t\t\t\t\t\t\t.map(external =>\n\t\t\t\t\t\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\t\t\t\t\t\"function(module) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent(`${external} = module;`),\n\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.join(\",\\n\")\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"],\"\n\t\t\t\t\t  ]);\n\n\t\t\treturn new ConcatSource(\n\t\t\t\tTemplate.asString([\n\t\t\t\t\t`System.register(${name}${systemDependencies}, function(${dynamicExport}) {`,\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\texternalVarDeclarations,\n\t\t\t\t\t\t\"return {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\tsetters,\n\t\t\t\t\t\t\t\"execute: function() {\",\n\t\t\t\t\t\t\tTemplate.indent(`${dynamicExport}(`)\n\t\t\t\t\t\t])\n\t\t\t\t\t])\n\t\t\t\t]) + \"\\n\",\n\t\t\t\tsource,\n\t\t\t\t\"\\n\" +\n\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\tTemplate.indent([Template.indent([\");\"]), \"}\"]),\n\t\t\t\t\t\t\t\"};\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"})\"\n\t\t\t\t\t])\n\t\t\t);\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"SystemMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\n\t\t\t\"SystemMainTemplatePlugin\",\n\t\t\tpaths => {\n\t\t\t\tif (this.name) {\n\t\t\t\t\tpaths.push(this.name);\n\t\t\t\t}\n\t\t\t\treturn paths;\n\t\t\t}\n\t\t);\n\n\t\tmainTemplate.hooks.hash.tap(\"SystemMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"exports system\");\n\t\t\tif (this.name) {\n\t\t\t\thash.update(this.name);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = SystemMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"webpack-sources\").ConcatSource} ConcatSource */\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst HotUpdateChunk = require(\"./HotUpdateChunk\");\n\nconst START_LOWERCASE_ALPHABET_CODE = \"a\".charCodeAt(0);\nconst START_UPPERCASE_ALPHABET_CODE = \"A\".charCodeAt(0);\nconst DELTA_A_TO_Z = \"z\".charCodeAt(0) - START_LOWERCASE_ALPHABET_CODE + 1;\nconst FUNCTION_CONTENT_REGEX = /^function\\s?\\(\\)\\s?\\{\\r?\\n?|\\r?\\n?\\}$/g;\nconst INDENT_MULTILINE_REGEX = /^\\t/gm;\nconst LINE_SEPARATOR_REGEX = /\\r?\\n/g;\nconst IDENTIFIER_NAME_REPLACE_REGEX = /^([^a-zA-Z$_])/;\nconst IDENTIFIER_ALPHA_NUMERIC_NAME_REPLACE_REGEX = /[^a-zA-Z0-9$]+/g;\nconst COMMENT_END_REGEX = /\\*\\//g;\nconst PATH_NAME_NORMALIZE_REPLACE_REGEX = /[^a-zA-Z0-9_!§$()=\\-^°]+/g;\nconst MATCH_PADDED_HYPHENS_REPLACE_REGEX = /^-|-$/g;\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/**\n * @typedef {Object} HasId\n * @property {number | string} id\n */\n\n/**\n * @typedef {function(Module, number): boolean} ModuleFilterPredicate\n */\n\n/**\n * @param {HasId} a first id object to be sorted\n * @param {HasId} b second id object to be sorted against\n * @returns {-1|0|1} the sort value\n */\nconst stringifyIdSortPredicate = (a, b) => {\n\tconst aId = a.id + \"\";\n\tconst bId = b.id + \"\";\n\tif (aId < bId) return -1;\n\tif (aId > bId) return 1;\n\treturn 0;\n};\n\nclass Template {\n\t/**\n\t *\n\t * @param {Function} fn a runtime function (.runtime.js) \"template\"\n\t * @returns {string} the updated and normalized function string\n\t */\n\tstatic getFunctionContent(fn) {\n\t\treturn fn\n\t\t\t.toString()\n\t\t\t.replace(FUNCTION_CONTENT_REGEX, \"\")\n\t\t\t.replace(INDENT_MULTILINE_REGEX, \"\")\n\t\t\t.replace(LINE_SEPARATOR_REGEX, \"\\n\");\n\t}\n\n\t/**\n\t * @param {string} str the string converted to identifier\n\t * @returns {string} created identifier\n\t */\n\tstatic toIdentifier(str) {\n\t\tif (typeof str !== \"string\") return \"\";\n\t\treturn str\n\t\t\t.replace(IDENTIFIER_NAME_REPLACE_REGEX, \"_$1\")\n\t\t\t.replace(IDENTIFIER_ALPHA_NUMERIC_NAME_REPLACE_REGEX, \"_\");\n\t}\n\t/**\n\t *\n\t * @param {string} str string to be converted to commented in bundle code\n\t * @returns {string} returns a commented version of string\n\t */\n\tstatic toComment(str) {\n\t\tif (!str) return \"\";\n\t\treturn `/*! ${str.replace(COMMENT_END_REGEX, \"* /\")} */`;\n\t}\n\n\t/**\n\t *\n\t * @param {string} str string to be converted to \"normal comment\"\n\t * @returns {string} returns a commented version of string\n\t */\n\tstatic toNormalComment(str) {\n\t\tif (!str) return \"\";\n\t\treturn `/* ${str.replace(COMMENT_END_REGEX, \"* /\")} */`;\n\t}\n\n\t/**\n\t * @param {string} str string path to be normalized\n\t * @returns {string} normalized bundle-safe path\n\t */\n\tstatic toPath(str) {\n\t\tif (typeof str !== \"string\") return \"\";\n\t\treturn str\n\t\t\t.replace(PATH_NAME_NORMALIZE_REPLACE_REGEX, \"-\")\n\t\t\t.replace(MATCH_PADDED_HYPHENS_REPLACE_REGEX, \"\");\n\t}\n\n\t// map number to a single character a-z, A-Z or <_ + number> if number is too big\n\t/**\n\t *\n\t * @param {number} n number to convert to ident\n\t * @returns {string} returns single character ident\n\t */\n\tstatic numberToIdentifer(n) {\n\t\t// lower case\n\t\tif (n < DELTA_A_TO_Z) {\n\t\t\treturn String.fromCharCode(START_LOWERCASE_ALPHABET_CODE + n);\n\t\t}\n\n\t\t// upper case\n\t\tif (n < DELTA_A_TO_Z * 2) {\n\t\t\treturn String.fromCharCode(\n\t\t\t\tSTART_UPPERCASE_ALPHABET_CODE + n - DELTA_A_TO_Z\n\t\t\t);\n\t\t}\n\n\t\t// use multiple letters\n\t\treturn (\n\t\t\tTemplate.numberToIdentifer(n % (2 * DELTA_A_TO_Z)) +\n\t\t\tTemplate.numberToIdentifer(Math.floor(n / (2 * DELTA_A_TO_Z)))\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param {string | string[]} s string to convert to identity\n\t * @returns {string} converted identity\n\t */\n\tstatic indent(s) {\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(Template.indent).join(\"\\n\");\n\t\t} else {\n\t\t\tconst str = s.trimRight();\n\t\t\tif (!str) return \"\";\n\t\t\tconst ind = str[0] === \"\\n\" ? \"\" : \"\\t\";\n\t\t\treturn ind + str.replace(/\\n([^\\n])/g, \"\\n\\t$1\");\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {string|string[]} s string to create prefix for\n\t * @param {string} prefix prefix to compose\n\t * @returns {string} returns new prefix string\n\t */\n\tstatic prefix(s, prefix) {\n\t\tconst str = Template.asString(s).trim();\n\t\tif (!str) return \"\";\n\t\tconst ind = str[0] === \"\\n\" ? \"\" : prefix;\n\t\treturn ind + str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n\t}\n\n\t/**\n\t *\n\t * @param {string|string[]} str string or string collection\n\t * @returns {string} returns a single string from array\n\t */\n\tstatic asString(str) {\n\t\tif (Array.isArray(str)) {\n\t\t\treturn str.join(\"\\n\");\n\t\t}\n\t\treturn str;\n\t}\n\n\t/**\n\t * @typedef {Object} WithId\n\t * @property {string|number} id\n\t */\n\n\t/**\n\t * @param {WithId[]} modules a collection of modules to get array bounds for\n\t * @returns {[number, number] | false} returns the upper and lower array bounds\n\t * or false if not every module has a number based id\n\t */\n\tstatic getModulesArrayBounds(modules) {\n\t\tlet maxId = -Infinity;\n\t\tlet minId = Infinity;\n\t\tfor (const module of modules) {\n\t\t\tif (typeof module.id !== \"number\") return false;\n\t\t\tif (maxId < module.id) maxId = /** @type {number} */ (module.id);\n\t\t\tif (minId > module.id) minId = /** @type {number} */ (module.id);\n\t\t}\n\t\tif (minId < 16 + (\"\" + minId).length) {\n\t\t\t// add minId x ',' instead of 'Array(minId).concat(…)'\n\t\t\tminId = 0;\n\t\t}\n\t\tconst objectOverhead = modules\n\t\t\t.map(module => (module.id + \"\").length + 2)\n\t\t\t.reduce((a, b) => a + b, -1);\n\t\tconst arrayOverhead =\n\t\t\tminId === 0 ? maxId : 16 + (\"\" + minId).length + maxId;\n\t\treturn arrayOverhead < objectOverhead ? [minId, maxId] : false;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk chunk whose modules will be rendered\n\t * @param {ModuleFilterPredicate} filterFn function used to filter modules from chunk to render\n\t * @param {ModuleTemplate} moduleTemplate ModuleTemplate instance used to render modules\n\t * @param {TODO | TODO[]} dependencyTemplates templates needed for each module to render dependencies\n\t * @param {string=} prefix applying prefix strings\n\t * @returns {ConcatSource} rendered chunk modules in a Source object\n\t */\n\tstatic renderChunkModules(\n\t\tchunk,\n\t\tfilterFn,\n\t\tmoduleTemplate,\n\t\tdependencyTemplates,\n\t\tprefix = \"\"\n\t) {\n\t\tconst source = new ConcatSource();\n\t\tconst modules = chunk.getModules().filter(filterFn);\n\t\tlet removedModules;\n\t\tif (chunk instanceof HotUpdateChunk) {\n\t\t\tremovedModules = chunk.removedModules;\n\t\t}\n\t\tif (\n\t\t\tmodules.length === 0 &&\n\t\t\t(!removedModules || removedModules.length === 0)\n\t\t) {\n\t\t\tsource.add(\"[]\");\n\t\t\treturn source;\n\t\t}\n\t\t/** @type {{id: string|number, source: Source|string}[]} */\n\t\tconst allModules = modules.map(module => {\n\t\t\treturn {\n\t\t\t\tid: module.id,\n\t\t\t\tsource: moduleTemplate.render(module, dependencyTemplates, {\n\t\t\t\t\tchunk\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\t\tif (removedModules && removedModules.length > 0) {\n\t\t\tfor (const id of removedModules) {\n\t\t\t\tallModules.push({\n\t\t\t\t\tid,\n\t\t\t\t\tsource: \"false\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst bounds = Template.getModulesArrayBounds(allModules);\n\t\tif (bounds) {\n\t\t\t// Render a spare array\n\t\t\tconst minId = bounds[0];\n\t\t\tconst maxId = bounds[1];\n\t\t\tif (minId !== 0) {\n\t\t\t\tsource.add(`Array(${minId}).concat(`);\n\t\t\t}\n\t\t\tsource.add(\"[\\n\");\n\t\t\t/** @type {Map<string|number, {id: string|number, source: Source|string}>} */\n\t\t\tconst modules = new Map();\n\t\t\tfor (const module of allModules) {\n\t\t\t\tmodules.set(module.id, module);\n\t\t\t}\n\t\t\tfor (let idx = minId; idx <= maxId; idx++) {\n\t\t\t\tconst module = modules.get(idx);\n\t\t\t\tif (idx !== minId) {\n\t\t\t\t\tsource.add(\",\\n\");\n\t\t\t\t}\n\t\t\t\tsource.add(`/* ${idx} */`);\n\t\t\t\tif (module) {\n\t\t\t\t\tsource.add(\"\\n\");\n\t\t\t\t\tsource.add(module.source);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource.add(\"\\n\" + prefix + \"]\");\n\t\t\tif (minId !== 0) {\n\t\t\t\tsource.add(\")\");\n\t\t\t}\n\t\t} else {\n\t\t\t// Render an object\n\t\t\tsource.add(\"{\\n\");\n\t\t\tallModules.sort(stringifyIdSortPredicate).forEach((module, idx) => {\n\t\t\t\tif (idx !== 0) {\n\t\t\t\t\tsource.add(\",\\n\");\n\t\t\t\t}\n\t\t\t\tsource.add(`\\n/***/ ${JSON.stringify(module.id)}:\\n`);\n\t\t\t\tsource.add(module.source);\n\t\t\t});\n\t\t\tsource.add(`\\n\\n${prefix}}`);\n\t\t}\n\t\treturn source;\n\t}\n}\n\nmodule.exports = Template;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Jason Anderson @diurnalist\n*/\n\"use strict\";\n\nconst REGEXP_HASH = /\\[hash(?::(\\d+))?\\]/gi,\n\tREGEXP_CHUNKHASH = /\\[chunkhash(?::(\\d+))?\\]/gi,\n\tREGEXP_MODULEHASH = /\\[modulehash(?::(\\d+))?\\]/gi,\n\tREGEXP_CONTENTHASH = /\\[contenthash(?::(\\d+))?\\]/gi,\n\tREGEXP_NAME = /\\[name\\]/gi,\n\tREGEXP_ID = /\\[id\\]/gi,\n\tREGEXP_MODULEID = /\\[moduleid\\]/gi,\n\tREGEXP_FILE = /\\[file\\]/gi,\n\tREGEXP_QUERY = /\\[query\\]/gi,\n\tREGEXP_FILEBASE = /\\[filebase\\]/gi,\n\tREGEXP_URL = /\\[url\\]/gi;\n\n// Using global RegExp for .test is dangerous\n// We use a normal RegExp instead of .test\nconst REGEXP_HASH_FOR_TEST = new RegExp(REGEXP_HASH.source, \"i\"),\n\tREGEXP_CHUNKHASH_FOR_TEST = new RegExp(REGEXP_CHUNKHASH.source, \"i\"),\n\tREGEXP_CONTENTHASH_FOR_TEST = new RegExp(REGEXP_CONTENTHASH.source, \"i\"),\n\tREGEXP_NAME_FOR_TEST = new RegExp(REGEXP_NAME.source, \"i\");\n\nconst withHashLength = (replacer, handlerFn) => {\n\tconst fn = (match, hashLength, ...args) => {\n\t\tconst length = hashLength && parseInt(hashLength, 10);\n\t\tif (length && handlerFn) {\n\t\t\treturn handlerFn(length);\n\t\t}\n\t\tconst hash = replacer(match, hashLength, ...args);\n\t\treturn length ? hash.slice(0, length) : hash;\n\t};\n\treturn fn;\n};\n\nconst getReplacer = (value, allowEmpty) => {\n\tconst fn = (match, ...args) => {\n\t\t// last argument in replacer is the entire input string\n\t\tconst input = args[args.length - 1];\n\t\tif (value === null || value === undefined) {\n\t\t\tif (!allowEmpty) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Path variable ${match} not implemented in this context: ${input}`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn \"\";\n\t\t} else {\n\t\t\treturn `${value}`;\n\t\t}\n\t};\n\treturn fn;\n};\n\nconst replacePathVariables = (path, data) => {\n\tconst chunk = data.chunk;\n\tconst chunkId = chunk && chunk.id;\n\tconst chunkName = chunk && (chunk.name || chunk.id);\n\tconst chunkHash = chunk && (chunk.renderedHash || chunk.hash);\n\tconst chunkHashWithLength = chunk && chunk.hashWithLength;\n\tconst contentHashType = data.contentHashType;\n\tconst contentHash =\n\t\t(chunk && chunk.contentHash && chunk.contentHash[contentHashType]) ||\n\t\tdata.contentHash;\n\tconst contentHashWithLength =\n\t\t(chunk &&\n\t\t\tchunk.contentHashWithLength &&\n\t\t\tchunk.contentHashWithLength[contentHashType]) ||\n\t\tdata.contentHashWithLength;\n\tconst module = data.module;\n\tconst moduleId = module && module.id;\n\tconst moduleHash = module && (module.renderedHash || module.hash);\n\tconst moduleHashWithLength = module && module.hashWithLength;\n\n\tif (typeof path === \"function\") {\n\t\tpath = path(data);\n\t}\n\n\tif (\n\t\tdata.noChunkHash &&\n\t\t(REGEXP_CHUNKHASH_FOR_TEST.test(path) ||\n\t\t\tREGEXP_CONTENTHASH_FOR_TEST.test(path))\n\t) {\n\t\tthrow new Error(\n\t\t\t`Cannot use [chunkhash] or [contenthash] for chunk in '${path}' (use [hash] instead)`\n\t\t);\n\t}\n\n\treturn (\n\t\tpath\n\t\t\t.replace(\n\t\t\t\tREGEXP_HASH,\n\t\t\t\twithHashLength(getReplacer(data.hash), data.hashWithLength)\n\t\t\t)\n\t\t\t.replace(\n\t\t\t\tREGEXP_CHUNKHASH,\n\t\t\t\twithHashLength(getReplacer(chunkHash), chunkHashWithLength)\n\t\t\t)\n\t\t\t.replace(\n\t\t\t\tREGEXP_CONTENTHASH,\n\t\t\t\twithHashLength(getReplacer(contentHash), contentHashWithLength)\n\t\t\t)\n\t\t\t.replace(\n\t\t\t\tREGEXP_MODULEHASH,\n\t\t\t\twithHashLength(getReplacer(moduleHash), moduleHashWithLength)\n\t\t\t)\n\t\t\t.replace(REGEXP_ID, getReplacer(chunkId))\n\t\t\t.replace(REGEXP_MODULEID, getReplacer(moduleId))\n\t\t\t.replace(REGEXP_NAME, getReplacer(chunkName))\n\t\t\t.replace(REGEXP_FILE, getReplacer(data.filename))\n\t\t\t.replace(REGEXP_FILEBASE, getReplacer(data.basename))\n\t\t\t// query is optional, it's OK if it's in a path but there's nothing to replace it with\n\t\t\t.replace(REGEXP_QUERY, getReplacer(data.query, true))\n\t\t\t// only available in sourceMappingURLComment\n\t\t\t.replace(REGEXP_URL, getReplacer(data.url))\n\t);\n};\n\nclass TemplatedPathPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"TemplatedPathPlugin\", compilation => {\n\t\t\tconst mainTemplate = compilation.mainTemplate;\n\n\t\t\tmainTemplate.hooks.assetPath.tap(\n\t\t\t\t\"TemplatedPathPlugin\",\n\t\t\t\treplacePathVariables\n\t\t\t);\n\n\t\t\tmainTemplate.hooks.globalHash.tap(\n\t\t\t\t\"TemplatedPathPlugin\",\n\t\t\t\t(chunk, paths) => {\n\t\t\t\t\tconst outputOptions = mainTemplate.outputOptions;\n\t\t\t\t\tconst publicPath = outputOptions.publicPath || \"\";\n\t\t\t\t\tconst filename = outputOptions.filename || \"\";\n\t\t\t\t\tconst chunkFilename =\n\t\t\t\t\t\toutputOptions.chunkFilename || outputOptions.filename;\n\t\t\t\t\tif (\n\t\t\t\t\t\tREGEXP_HASH_FOR_TEST.test(publicPath) ||\n\t\t\t\t\t\tREGEXP_CHUNKHASH_FOR_TEST.test(publicPath) ||\n\t\t\t\t\t\tREGEXP_CONTENTHASH_FOR_TEST.test(publicPath) ||\n\t\t\t\t\t\tREGEXP_NAME_FOR_TEST.test(publicPath)\n\t\t\t\t\t)\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif (REGEXP_HASH_FOR_TEST.test(filename)) return true;\n\t\t\t\t\tif (REGEXP_HASH_FOR_TEST.test(chunkFilename)) return true;\n\t\t\t\t\tif (REGEXP_HASH_FOR_TEST.test(paths.join(\"|\"))) return true;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tmainTemplate.hooks.hashForChunk.tap(\n\t\t\t\t\"TemplatedPathPlugin\",\n\t\t\t\t(hash, chunk) => {\n\t\t\t\t\tconst outputOptions = mainTemplate.outputOptions;\n\t\t\t\t\tconst chunkFilename =\n\t\t\t\t\t\toutputOptions.chunkFilename || outputOptions.filename;\n\t\t\t\t\tif (REGEXP_CHUNKHASH_FOR_TEST.test(chunkFilename)) {\n\t\t\t\t\t\thash.update(JSON.stringify(chunk.getChunkMaps(true).hash));\n\t\t\t\t\t}\n\t\t\t\t\tif (REGEXP_CONTENTHASH_FOR_TEST.test(chunkFilename)) {\n\t\t\t\t\t\thash.update(\n\t\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\t\tchunk.getChunkMaps(true).contentHash.javascript || {}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (REGEXP_NAME_FOR_TEST.test(chunkFilename)) {\n\t\t\t\t\t\thash.update(JSON.stringify(chunk.getChunkMaps(true).name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = TemplatedPathPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource, OriginalSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]} accessor the accessor\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, joinWith = \", \") => {\n\tconst accessors = Array.isArray(accessor) ? accessor : [accessor];\n\treturn accessors\n\t\t.map((_, idx) => {\n\t\t\tconst a = base\n\t\t\t\t? base + accessorToObjectAccess(accessors.slice(0, idx + 1))\n\t\t\t\t: accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n\t\t\tif (idx === accessors.length - 1) return a;\n\t\t\tif (idx === 0 && base === undefined)\n\t\t\t\treturn `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n\t\t\treturn `${a} = ${a} || {}`;\n\t\t})\n\t\t.join(joinWith);\n};\n\n/** @typedef {string | string[] | LibraryCustomUmdObject} UmdMainTemplatePluginName */\n\n/**\n * @typedef {Object} AuxiliaryCommentObject\n * @property {string} root\n * @property {string} commonjs\n * @property {string} commonjs2\n * @property {string} amd\n */\n\n/**\n * @typedef {Object} UmdMainTemplatePluginOption\n * @property {boolean=} optionalAmdExternalAsGlobal\n * @property {boolean} namedDefine\n * @property {string | AuxiliaryCommentObject} auxiliaryComment\n */\n\nclass UmdMainTemplatePlugin {\n\t/**\n\t * @param {UmdMainTemplatePluginName} name the name of the UMD library\n\t * @param {UmdMainTemplatePluginOption} options the plugin option\n\t */\n\tconstructor(name, options) {\n\t\tif (typeof name === \"object\" && !Array.isArray(name)) {\n\t\t\tthis.name = name.root || name.amd || name.commonjs;\n\t\t\tthis.names = name;\n\t\t} else {\n\t\t\tthis.name = name;\n\t\t\tthis.names = {\n\t\t\t\tcommonjs: name,\n\t\t\t\troot: name,\n\t\t\t\tamd: name\n\t\t\t};\n\t\t}\n\t\tthis.optionalAmdExternalAsGlobal = options.optionalAmdExternalAsGlobal;\n\t\tthis.namedDefine = options.namedDefine;\n\t\tthis.auxiliaryComment = options.auxiliaryComment;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation instance\n\t * @returns {void}\n\t */\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate, runtimeTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tlet externals = chunk\n\t\t\t\t.getModules()\n\t\t\t\t.filter(\n\t\t\t\t\tm =>\n\t\t\t\t\t\tm.external &&\n\t\t\t\t\t\t(m.externalType === \"umd\" || m.externalType === \"umd2\")\n\t\t\t\t);\n\t\t\tconst optionalExternals = [];\n\t\t\tlet requiredExternals = [];\n\t\t\tif (this.optionalAmdExternalAsGlobal) {\n\t\t\t\tfor (const m of externals) {\n\t\t\t\t\tif (m.optional) {\n\t\t\t\t\t\toptionalExternals.push(m);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequiredExternals.push(m);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texternals = requiredExternals.concat(optionalExternals);\n\t\t\t} else {\n\t\t\t\trequiredExternals = externals;\n\t\t\t}\n\n\t\t\tconst replaceKeys = str => {\n\t\t\t\treturn mainTemplate.getAssetPath(str, {\n\t\t\t\t\thash,\n\t\t\t\t\tchunk\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst externalsDepsArray = modules => {\n\t\t\t\treturn `[${replaceKeys(\n\t\t\t\t\tmodules\n\t\t\t\t\t\t.map(m =>\n\t\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\t\ttypeof m.request === \"object\" ? m.request.amd : m.request\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.join(\", \")\n\t\t\t\t)}]`;\n\t\t\t};\n\n\t\t\tconst externalsRootArray = modules => {\n\t\t\t\treturn replaceKeys(\n\t\t\t\t\tmodules\n\t\t\t\t\t\t.map(m => {\n\t\t\t\t\t\t\tlet request = m.request;\n\t\t\t\t\t\t\tif (typeof request === \"object\") request = request.root;\n\t\t\t\t\t\t\treturn `root${accessorToObjectAccess([].concat(request))}`;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\", \")\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst externalsRequireArray = type => {\n\t\t\t\treturn replaceKeys(\n\t\t\t\t\texternals\n\t\t\t\t\t\t.map(m => {\n\t\t\t\t\t\t\tlet expr;\n\t\t\t\t\t\t\tlet request = m.request;\n\t\t\t\t\t\t\tif (typeof request === \"object\") {\n\t\t\t\t\t\t\t\trequest = request[type];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (request === undefined) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"Missing external configuration for type:\" + type\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Array.isArray(request)) {\n\t\t\t\t\t\t\t\texpr = `require(${JSON.stringify(\n\t\t\t\t\t\t\t\t\trequest[0]\n\t\t\t\t\t\t\t\t)})${accessorToObjectAccess(request.slice(1))}`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\texpr = `require(${JSON.stringify(request)})`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m.optional) {\n\t\t\t\t\t\t\t\texpr = `(function webpackLoadOptionalExternalModule() { try { return ${expr}; } catch(e) {} }())`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn expr;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\", \")\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst externalsArguments = modules => {\n\t\t\t\treturn modules\n\t\t\t\t\t.map(\n\t\t\t\t\t\tm =>\n\t\t\t\t\t\t\t`__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${m.id}`)}__`\n\t\t\t\t\t)\n\t\t\t\t\t.join(\", \");\n\t\t\t};\n\n\t\t\tconst libraryName = library => {\n\t\t\t\treturn JSON.stringify(replaceKeys([].concat(library).pop()));\n\t\t\t};\n\n\t\t\tlet amdFactory;\n\t\t\tif (optionalExternals.length > 0) {\n\t\t\t\tconst wrapperArguments = externalsArguments(requiredExternals);\n\t\t\t\tconst factoryArguments =\n\t\t\t\t\trequiredExternals.length > 0\n\t\t\t\t\t\t? externalsArguments(requiredExternals) +\n\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t  externalsRootArray(optionalExternals)\n\t\t\t\t\t\t: externalsRootArray(optionalExternals);\n\t\t\t\tamdFactory =\n\t\t\t\t\t`function webpackLoadOptionalExternalModuleAmd(${wrapperArguments}) {\\n` +\n\t\t\t\t\t`\t\t\treturn factory(${factoryArguments});\\n` +\n\t\t\t\t\t\"\t\t}\";\n\t\t\t} else {\n\t\t\t\tamdFactory = \"factory\";\n\t\t\t}\n\n\t\t\tconst auxiliaryComment = this.auxiliaryComment;\n\n\t\t\tconst getAuxilaryComment = type => {\n\t\t\t\tif (auxiliaryComment) {\n\t\t\t\t\tif (typeof auxiliaryComment === \"string\")\n\t\t\t\t\t\treturn \"\\t//\" + auxiliaryComment + \"\\n\";\n\t\t\t\t\tif (auxiliaryComment[type])\n\t\t\t\t\t\treturn \"\\t//\" + auxiliaryComment[type] + \"\\n\";\n\t\t\t\t}\n\t\t\t\treturn \"\";\n\t\t\t};\n\n\t\t\treturn new ConcatSource(\n\t\t\t\tnew OriginalSource(\n\t\t\t\t\t\"(function webpackUniversalModuleDefinition(root, factory) {\\n\" +\n\t\t\t\t\t\tgetAuxilaryComment(\"commonjs2\") +\n\t\t\t\t\t\t\"\tif(typeof exports === 'object' && typeof module === 'object')\\n\" +\n\t\t\t\t\t\t\"\t\tmodule.exports = factory(\" +\n\t\t\t\t\t\texternalsRequireArray(\"commonjs2\") +\n\t\t\t\t\t\t\");\\n\" +\n\t\t\t\t\t\tgetAuxilaryComment(\"amd\") +\n\t\t\t\t\t\t\"\telse if(typeof define === 'function' && define.amd)\\n\" +\n\t\t\t\t\t\t(requiredExternals.length > 0\n\t\t\t\t\t\t\t? this.names.amd && this.namedDefine === true\n\t\t\t\t\t\t\t\t? \"\t\tdefine(\" +\n\t\t\t\t\t\t\t\t  libraryName(this.names.amd) +\n\t\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t\t  externalsDepsArray(requiredExternals) +\n\t\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t\t: \"\t\tdefine(\" +\n\t\t\t\t\t\t\t\t  externalsDepsArray(requiredExternals) +\n\t\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t: this.names.amd && this.namedDefine === true\n\t\t\t\t\t\t\t? \"\t\tdefine(\" +\n\t\t\t\t\t\t\t  libraryName(this.names.amd) +\n\t\t\t\t\t\t\t  \", [], \" +\n\t\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t: \"\t\tdefine([], \" + amdFactory + \");\\n\") +\n\t\t\t\t\t\t(this.names.root || this.names.commonjs\n\t\t\t\t\t\t\t? getAuxilaryComment(\"commonjs\") +\n\t\t\t\t\t\t\t  \"\telse if(typeof exports === 'object')\\n\" +\n\t\t\t\t\t\t\t  \"\t\texports[\" +\n\t\t\t\t\t\t\t  libraryName(this.names.commonjs || this.names.root) +\n\t\t\t\t\t\t\t  \"] = factory(\" +\n\t\t\t\t\t\t\t  externalsRequireArray(\"commonjs\") +\n\t\t\t\t\t\t\t  \");\\n\" +\n\t\t\t\t\t\t\t  getAuxilaryComment(\"root\") +\n\t\t\t\t\t\t\t  \"\telse\\n\" +\n\t\t\t\t\t\t\t  \"\t\t\" +\n\t\t\t\t\t\t\t  replaceKeys(\n\t\t\t\t\t\t\t\t\taccessorAccess(\"root\", this.names.root || this.names.commonjs)\n\t\t\t\t\t\t\t  ) +\n\t\t\t\t\t\t\t  \" = factory(\" +\n\t\t\t\t\t\t\t  externalsRootArray(externals) +\n\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t: \"\telse {\\n\" +\n\t\t\t\t\t\t\t  (externals.length > 0\n\t\t\t\t\t\t\t\t\t? \"\t\tvar a = typeof exports === 'object' ? factory(\" +\n\t\t\t\t\t\t\t\t\t  externalsRequireArray(\"commonjs\") +\n\t\t\t\t\t\t\t\t\t  \") : factory(\" +\n\t\t\t\t\t\t\t\t\t  externalsRootArray(externals) +\n\t\t\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t\t\t: \"\t\tvar a = factory();\\n\") +\n\t\t\t\t\t\t\t  \"\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\\n\" +\n\t\t\t\t\t\t\t  \"\t}\\n\") +\n\t\t\t\t\t\t`})(${\n\t\t\t\t\t\t\truntimeTemplate.outputOptions.globalObject\n\t\t\t\t\t\t}, function(${externalsArguments(externals)}) {\\nreturn `,\n\t\t\t\t\t\"webpack/universalModuleDefinition\"\n\t\t\t\t),\n\t\t\t\tsource,\n\t\t\t\t\";\\n})\"\n\t\t\t);\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"UmdMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\"UmdMainTemplatePlugin\", paths => {\n\t\t\tif (this.names.root) paths = paths.concat(this.names.root);\n\t\t\tif (this.names.amd) paths = paths.concat(this.names.amd);\n\t\t\tif (this.names.commonjs) paths = paths.concat(this.names.commonjs);\n\t\t\treturn paths;\n\t\t});\n\n\t\tmainTemplate.hooks.hash.tap(\"UmdMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"umd\");\n\t\t\thash.update(`${this.names.root}`);\n\t\t\thash.update(`${this.names.amd}`);\n\t\t\thash.update(`${this.names.commonjs}`);\n\t\t});\n\t}\n}\n\nmodule.exports = UmdMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n\nclass UnsupportedFeatureWarning extends WebpackError {\n\t/**\n\t * @param {Module} module module relevant to warning\n\t * @param {string} message description of warning\n\t * @param {DependencyLocation} loc location start and end positions of the module\n\t */\n\tconstructor(module, message, loc) {\n\t\tsuper(message);\n\n\t\tthis.name = \"UnsupportedFeatureWarning\";\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\t\tthis.hideStack = true;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = UnsupportedFeatureWarning;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass UseStrictPlugin {\n\t/**\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"UseStrictPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tparser.hooks.program.tap(\"UseStrictPlugin\", ast => {\n\t\t\t\t\t\tconst firstNode = ast.body[0];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tfirstNode &&\n\t\t\t\t\t\t\tfirstNode.type === \"ExpressionStatement\" &&\n\t\t\t\t\t\t\tfirstNode.expression.type === \"Literal\" &&\n\t\t\t\t\t\t\tfirstNode.expression.value === \"use strict\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Remove \"use strict\" expression. It will be added later by the renderer again.\n\t\t\t\t\t\t\t// This is necessary in order to not break the strict mode when webpack prepends code.\n\t\t\t\t\t\t\t// @see https://github.com/webpack/webpack/issues/1970\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", firstNode.range);\n\t\t\t\t\t\t\tdep.loc = firstNode.loc;\n\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\tparser.state.module.buildInfo.strict = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = UseStrictPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CaseSensitiveModulesWarning = require(\"./CaseSensitiveModulesWarning\");\n\nclass WarnCaseSensitiveModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"WarnCaseSensitiveModulesPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.seal.tap(\"WarnCaseSensitiveModulesPlugin\", () => {\n\t\t\t\t\tconst moduleWithoutCase = new Map();\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tconst identifier = module.identifier().toLowerCase();\n\t\t\t\t\t\tconst array = moduleWithoutCase.get(identifier);\n\t\t\t\t\t\tif (array) {\n\t\t\t\t\t\t\tarray.push(module);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmoduleWithoutCase.set(identifier, [module]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const pair of moduleWithoutCase) {\n\t\t\t\t\t\tconst array = pair[1];\n\t\t\t\t\t\tif (array.length > 1) {\n\t\t\t\t\t\t\tcompilation.warnings.push(new CaseSensitiveModulesWarning(array));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = WarnCaseSensitiveModulesPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NoModeWarning = require(\"./NoModeWarning\");\n\nclass WarnNoModeSetPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"WarnNoModeSetPlugin\", compilation => {\n\t\t\tcompilation.warnings.push(new NoModeWarning());\n\t\t});\n\t}\n}\n\nmodule.exports = WarnNoModeSetPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/WatchIgnorePlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/WatchIgnorePlugin\").WatchIgnorePluginOptions} WatchIgnorePluginOptions */\n\nclass IgnoringWatchFileSystem {\n\tconstructor(wfs, paths) {\n\t\tthis.wfs = wfs;\n\t\tthis.paths = paths;\n\t}\n\n\twatch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n\t\tconst ignored = path =>\n\t\t\tthis.paths.some(p =>\n\t\t\t\tp instanceof RegExp ? p.test(path) : path.indexOf(p) === 0\n\t\t\t);\n\n\t\tconst notIgnored = path => !ignored(path);\n\n\t\tconst ignoredFiles = files.filter(ignored);\n\t\tconst ignoredDirs = dirs.filter(ignored);\n\n\t\tconst watcher = this.wfs.watch(\n\t\t\tfiles.filter(notIgnored),\n\t\t\tdirs.filter(notIgnored),\n\t\t\tmissing,\n\t\t\tstartTime,\n\t\t\toptions,\n\t\t\t(\n\t\t\t\terr,\n\t\t\t\tfilesModified,\n\t\t\t\tdirsModified,\n\t\t\t\tmissingModified,\n\t\t\t\tfileTimestamps,\n\t\t\t\tdirTimestamps,\n\t\t\t\tremovedFiles\n\t\t\t) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\tfileTimestamps.set(path, 1);\n\t\t\t\t}\n\n\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\tdirTimestamps.set(path, 1);\n\t\t\t\t}\n\n\t\t\t\tcallback(\n\t\t\t\t\terr,\n\t\t\t\t\tfilesModified,\n\t\t\t\t\tdirsModified,\n\t\t\t\t\tmissingModified,\n\t\t\t\t\tfileTimestamps,\n\t\t\t\t\tdirTimestamps,\n\t\t\t\t\tremovedFiles\n\t\t\t\t);\n\t\t\t},\n\t\t\tcallbackUndelayed\n\t\t);\n\n\t\treturn {\n\t\t\tclose: () => watcher.close(),\n\t\t\tpause: () => watcher.pause(),\n\t\t\tgetContextTimestamps: () => {\n\t\t\t\tconst dirTimestamps = watcher.getContextTimestamps();\n\t\t\t\tfor (const path of ignoredDirs) {\n\t\t\t\t\tdirTimestamps.set(path, 1);\n\t\t\t\t}\n\t\t\t\treturn dirTimestamps;\n\t\t\t},\n\t\t\tgetFileTimestamps: () => {\n\t\t\t\tconst fileTimestamps = watcher.getFileTimestamps();\n\t\t\t\tfor (const path of ignoredFiles) {\n\t\t\t\t\tfileTimestamps.set(path, 1);\n\t\t\t\t}\n\t\t\t\treturn fileTimestamps;\n\t\t\t}\n\t\t};\n\t}\n}\n\nclass WatchIgnorePlugin {\n\t/**\n\t * @param {WatchIgnorePluginOptions} paths list of paths\n\t */\n\tconstructor(paths) {\n\t\tvalidateOptions(schema, paths, \"Watch Ignore Plugin\");\n\t\tthis.paths = paths;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.afterEnvironment.tap(\"WatchIgnorePlugin\", () => {\n\t\t\tcompiler.watchFileSystem = new IgnoringWatchFileSystem(\n\t\t\t\tcompiler.watchFileSystem,\n\t\t\t\tthis.paths\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = WatchIgnorePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Stats = require(\"./Stats\");\n\nclass Watching {\n\tconstructor(compiler, watchOptions, handler) {\n\t\tthis.startTime = null;\n\t\tthis.invalid = false;\n\t\tthis.handler = handler;\n\t\tthis.callbacks = [];\n\t\tthis.closed = false;\n\t\tthis.suspended = false;\n\t\tif (typeof watchOptions === \"number\") {\n\t\t\tthis.watchOptions = {\n\t\t\t\taggregateTimeout: watchOptions\n\t\t\t};\n\t\t} else if (watchOptions && typeof watchOptions === \"object\") {\n\t\t\tthis.watchOptions = Object.assign({}, watchOptions);\n\t\t} else {\n\t\t\tthis.watchOptions = {};\n\t\t}\n\t\tthis.watchOptions.aggregateTimeout =\n\t\t\tthis.watchOptions.aggregateTimeout || 200;\n\t\tthis.compiler = compiler;\n\t\tthis.running = true;\n\t\tthis.compiler.readRecords(err => {\n\t\t\tif (err) return this._done(err);\n\n\t\t\tthis._go();\n\t\t});\n\t}\n\n\t_go() {\n\t\tthis.startTime = Date.now();\n\t\tthis.running = true;\n\t\tthis.invalid = false;\n\t\tthis.compiler.hooks.watchRun.callAsync(this.compiler, err => {\n\t\t\tif (err) return this._done(err);\n\t\t\tconst onCompiled = (err, compilation) => {\n\t\t\t\tif (err) return this._done(err);\n\t\t\t\tif (this.invalid) return this._done();\n\n\t\t\t\tif (this.compiler.hooks.shouldEmit.call(compilation) === false) {\n\t\t\t\t\treturn this._done(null, compilation);\n\t\t\t\t}\n\n\t\t\t\tthis.compiler.emitAssets(compilation, err => {\n\t\t\t\t\tif (err) return this._done(err);\n\t\t\t\t\tif (this.invalid) return this._done();\n\t\t\t\t\tthis.compiler.emitRecords(err => {\n\t\t\t\t\t\tif (err) return this._done(err);\n\n\t\t\t\t\t\tif (compilation.hooks.needAdditionalPass.call()) {\n\t\t\t\t\t\t\tcompilation.needAdditionalPass = true;\n\n\t\t\t\t\t\t\tconst stats = new Stats(compilation);\n\t\t\t\t\t\t\tstats.startTime = this.startTime;\n\t\t\t\t\t\t\tstats.endTime = Date.now();\n\t\t\t\t\t\t\tthis.compiler.hooks.done.callAsync(stats, err => {\n\t\t\t\t\t\t\t\tif (err) return this._done(err);\n\n\t\t\t\t\t\t\t\tthis.compiler.hooks.additionalPass.callAsync(err => {\n\t\t\t\t\t\t\t\t\tif (err) return this._done(err);\n\t\t\t\t\t\t\t\t\tthis.compiler.compile(onCompiled);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this._done(null, compilation);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\t\t\tthis.compiler.compile(onCompiled);\n\t\t});\n\t}\n\n\t_getStats(compilation) {\n\t\tconst stats = new Stats(compilation);\n\t\tstats.startTime = this.startTime;\n\t\tstats.endTime = Date.now();\n\t\treturn stats;\n\t}\n\n\t_done(err, compilation) {\n\t\tthis.running = false;\n\t\tif (this.invalid) return this._go();\n\n\t\tconst stats = compilation ? this._getStats(compilation) : null;\n\t\tif (err) {\n\t\t\tthis.compiler.hooks.failed.call(err);\n\t\t\tthis.handler(err, stats);\n\t\t\treturn;\n\t\t}\n\t\tthis.compiler.hooks.done.callAsync(stats, () => {\n\t\t\tthis.handler(null, stats);\n\t\t\tif (!this.closed) {\n\t\t\t\tthis.watch(\n\t\t\t\t\tArray.from(compilation.fileDependencies),\n\t\t\t\t\tArray.from(compilation.contextDependencies),\n\t\t\t\t\tArray.from(compilation.missingDependencies)\n\t\t\t\t);\n\t\t\t}\n\t\t\tfor (const cb of this.callbacks) cb();\n\t\t\tthis.callbacks.length = 0;\n\t\t});\n\t}\n\n\twatch(files, dirs, missing) {\n\t\tthis.pausedWatcher = null;\n\t\tthis.watcher = this.compiler.watchFileSystem.watch(\n\t\t\tfiles,\n\t\t\tdirs,\n\t\t\tmissing,\n\t\t\tthis.startTime,\n\t\t\tthis.watchOptions,\n\t\t\t(\n\t\t\t\terr,\n\t\t\t\tfilesModified,\n\t\t\t\tcontextModified,\n\t\t\t\tmissingModified,\n\t\t\t\tfileTimestamps,\n\t\t\t\tcontextTimestamps,\n\t\t\t\tremovedFiles\n\t\t\t) => {\n\t\t\t\tthis.pausedWatcher = this.watcher;\n\t\t\t\tthis.watcher = null;\n\t\t\t\tif (err) {\n\t\t\t\t\treturn this.handler(err);\n\t\t\t\t}\n\t\t\t\tthis.compiler.fileTimestamps = fileTimestamps;\n\t\t\t\tthis.compiler.contextTimestamps = contextTimestamps;\n\t\t\t\tthis.compiler.removedFiles = removedFiles;\n\t\t\t\tif (!this.suspended) {\n\t\t\t\t\tthis._invalidate();\n\t\t\t\t}\n\t\t\t},\n\t\t\t(fileName, changeTime) => {\n\t\t\t\tthis.compiler.hooks.invalid.call(fileName, changeTime);\n\t\t\t}\n\t\t);\n\t}\n\n\tinvalidate(callback) {\n\t\tif (callback) {\n\t\t\tthis.callbacks.push(callback);\n\t\t}\n\t\tif (this.watcher) {\n\t\t\tthis.compiler.fileTimestamps = this.watcher.getFileTimestamps();\n\t\t\tthis.compiler.contextTimestamps = this.watcher.getContextTimestamps();\n\t\t}\n\t\treturn this._invalidate();\n\t}\n\n\t_invalidate() {\n\t\tif (this.watcher) {\n\t\t\tthis.pausedWatcher = this.watcher;\n\t\t\tthis.watcher.pause();\n\t\t\tthis.watcher = null;\n\t\t}\n\n\t\tif (this.running) {\n\t\t\tthis.invalid = true;\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthis._go();\n\t\t}\n\t}\n\n\tsuspend() {\n\t\tthis.suspended = true;\n\t\tthis.invalid = false;\n\t}\n\n\tresume() {\n\t\tif (this.suspended) {\n\t\t\tthis.suspended = false;\n\t\t\tthis._invalidate();\n\t\t}\n\t}\n\n\tclose(callback) {\n\t\tconst finalCallback = () => {\n\t\t\tthis.compiler.hooks.watchClose.call();\n\t\t\tthis.compiler.running = false;\n\t\t\tthis.compiler.watchMode = false;\n\t\t\tif (callback !== undefined) callback();\n\t\t};\n\n\t\tthis.closed = true;\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t\tif (this.pausedWatcher) {\n\t\t\tthis.pausedWatcher.close();\n\t\t\tthis.pausedWatcher = null;\n\t\t}\n\t\tif (this.running) {\n\t\t\tthis.invalid = true;\n\t\t\tthis._done = finalCallback;\n\t\t} else {\n\t\t\tfinalCallback();\n\t\t}\n\t}\n}\n\nmodule.exports = Watching;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Jarid Margolin @jaridmargolin\n*/\n\"use strict\";\n\nconst inspect = require(\"util\").inspect.custom;\n\nclass WebpackError extends Error {\n\t/**\n\t * Creates an instance of WebpackError.\n\t * @param {string=} message error message\n\t */\n\tconstructor(message) {\n\t\tsuper(message);\n\n\t\tthis.details = undefined;\n\t\tthis.missing = undefined;\n\t\tthis.origin = undefined;\n\t\tthis.dependencies = undefined;\n\t\tthis.module = undefined;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n\n\t[inspect]() {\n\t\treturn this.stack + (this.details ? `\\n${this.details}` : \"\");\n\t}\n}\n\nmodule.exports = WebpackError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst OptionsApply = require(\"./OptionsApply\");\n\nconst JavascriptModulesPlugin = require(\"./JavascriptModulesPlugin\");\nconst JsonModulesPlugin = require(\"./JsonModulesPlugin\");\nconst WebAssemblyModulesPlugin = require(\"./wasm/WebAssemblyModulesPlugin\");\n\nconst LoaderTargetPlugin = require(\"./LoaderTargetPlugin\");\nconst FunctionModulePlugin = require(\"./FunctionModulePlugin\");\nconst EvalDevToolModulePlugin = require(\"./EvalDevToolModulePlugin\");\nconst SourceMapDevToolPlugin = require(\"./SourceMapDevToolPlugin\");\nconst EvalSourceMapDevToolPlugin = require(\"./EvalSourceMapDevToolPlugin\");\n\nconst EntryOptionPlugin = require(\"./EntryOptionPlugin\");\nconst RecordIdsPlugin = require(\"./RecordIdsPlugin\");\n\nconst APIPlugin = require(\"./APIPlugin\");\nconst ConstPlugin = require(\"./ConstPlugin\");\nconst CommonJsStuffPlugin = require(\"./CommonJsStuffPlugin\");\nconst CompatibilityPlugin = require(\"./CompatibilityPlugin\");\n\nconst TemplatedPathPlugin = require(\"./TemplatedPathPlugin\");\nconst WarnCaseSensitiveModulesPlugin = require(\"./WarnCaseSensitiveModulesPlugin\");\nconst UseStrictPlugin = require(\"./UseStrictPlugin\");\n\nconst LoaderPlugin = require(\"./dependencies/LoaderPlugin\");\nconst CommonJsPlugin = require(\"./dependencies/CommonJsPlugin\");\nconst HarmonyModulesPlugin = require(\"./dependencies/HarmonyModulesPlugin\");\nconst SystemPlugin = require(\"./dependencies/SystemPlugin\");\nconst ImportPlugin = require(\"./dependencies/ImportPlugin\");\nconst RequireContextPlugin = require(\"./dependencies/RequireContextPlugin\");\nconst RequireEnsurePlugin = require(\"./dependencies/RequireEnsurePlugin\");\nconst RequireIncludePlugin = require(\"./dependencies/RequireIncludePlugin\");\n\nconst { cachedCleverMerge } = require(\"./util/cleverMerge\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptions} WebpackOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass WebpackOptionsApply extends OptionsApply {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options options object\n\t * @param {Compiler} compiler compiler object\n\t * @returns {WebpackOptions} options object\n\t */\n\tprocess(options, compiler) {\n\t\tlet ExternalsPlugin;\n\t\tcompiler.outputPath = options.output.path;\n\t\tcompiler.recordsInputPath = options.recordsInputPath || options.recordsPath;\n\t\tcompiler.recordsOutputPath =\n\t\t\toptions.recordsOutputPath || options.recordsPath;\n\t\tcompiler.name = options.name;\n\t\t// TODO webpack 5 refactor this to MultiCompiler.setDependencies() with a WeakMap\n\t\t// @ts-ignore TODO\n\t\tcompiler.dependencies = options.dependencies;\n\t\tif (typeof options.target === \"string\") {\n\t\t\tlet JsonpTemplatePlugin;\n\t\t\tlet FetchCompileWasmTemplatePlugin;\n\t\t\tlet ReadFileCompileWasmTemplatePlugin;\n\t\t\tlet NodeSourcePlugin;\n\t\t\tlet NodeTargetPlugin;\n\t\t\tlet NodeTemplatePlugin;\n\n\t\t\tswitch (options.target) {\n\t\t\t\tcase \"web\":\n\t\t\t\t\tJsonpTemplatePlugin = require(\"./web/JsonpTemplatePlugin\");\n\t\t\t\t\tFetchCompileWasmTemplatePlugin = require(\"./web/FetchCompileWasmTemplatePlugin\");\n\t\t\t\t\tNodeSourcePlugin = require(\"./node/NodeSourcePlugin\");\n\t\t\t\t\tnew JsonpTemplatePlugin().apply(compiler);\n\t\t\t\t\tnew FetchCompileWasmTemplatePlugin({\n\t\t\t\t\t\tmangleImports: options.optimization.mangleWasmImports\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tnew FunctionModulePlugin().apply(compiler);\n\t\t\t\t\tnew NodeSourcePlugin(options.node).apply(compiler);\n\t\t\t\t\tnew LoaderTargetPlugin(options.target).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"webworker\": {\n\t\t\t\t\tlet WebWorkerTemplatePlugin = require(\"./webworker/WebWorkerTemplatePlugin\");\n\t\t\t\t\tFetchCompileWasmTemplatePlugin = require(\"./web/FetchCompileWasmTemplatePlugin\");\n\t\t\t\t\tNodeSourcePlugin = require(\"./node/NodeSourcePlugin\");\n\t\t\t\t\tnew WebWorkerTemplatePlugin().apply(compiler);\n\t\t\t\t\tnew FetchCompileWasmTemplatePlugin({\n\t\t\t\t\t\tmangleImports: options.optimization.mangleWasmImports\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tnew FunctionModulePlugin().apply(compiler);\n\t\t\t\t\tnew NodeSourcePlugin(options.node).apply(compiler);\n\t\t\t\t\tnew LoaderTargetPlugin(options.target).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"node\":\n\t\t\t\tcase \"async-node\":\n\t\t\t\t\tNodeTemplatePlugin = require(\"./node/NodeTemplatePlugin\");\n\t\t\t\t\tReadFileCompileWasmTemplatePlugin = require(\"./node/ReadFileCompileWasmTemplatePlugin\");\n\t\t\t\t\tNodeTargetPlugin = require(\"./node/NodeTargetPlugin\");\n\t\t\t\t\tnew NodeTemplatePlugin({\n\t\t\t\t\t\tasyncChunkLoading: options.target === \"async-node\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tnew ReadFileCompileWasmTemplatePlugin({\n\t\t\t\t\t\tmangleImports: options.optimization.mangleWasmImports\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tnew FunctionModulePlugin().apply(compiler);\n\t\t\t\t\tnew NodeTargetPlugin().apply(compiler);\n\t\t\t\t\tnew LoaderTargetPlugin(\"node\").apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"node-webkit\":\n\t\t\t\t\tJsonpTemplatePlugin = require(\"./web/JsonpTemplatePlugin\");\n\t\t\t\t\tNodeTargetPlugin = require(\"./node/NodeTargetPlugin\");\n\t\t\t\t\tExternalsPlugin = require(\"./ExternalsPlugin\");\n\t\t\t\t\tnew JsonpTemplatePlugin().apply(compiler);\n\t\t\t\t\tnew FunctionModulePlugin().apply(compiler);\n\t\t\t\t\tnew NodeTargetPlugin().apply(compiler);\n\t\t\t\t\tnew ExternalsPlugin(\"commonjs\", \"nw.gui\").apply(compiler);\n\t\t\t\t\tnew LoaderTargetPlugin(options.target).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"electron-main\":\n\t\t\t\t\tNodeTemplatePlugin = require(\"./node/NodeTemplatePlugin\");\n\t\t\t\t\tNodeTargetPlugin = require(\"./node/NodeTargetPlugin\");\n\t\t\t\t\tExternalsPlugin = require(\"./ExternalsPlugin\");\n\t\t\t\t\tnew NodeTemplatePlugin({\n\t\t\t\t\t\tasyncChunkLoading: true\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tnew FunctionModulePlugin().apply(compiler);\n\t\t\t\t\tnew NodeTargetPlugin().apply(compiler);\n\t\t\t\t\tnew ExternalsPlugin(\"commonjs\", [\n\t\t\t\t\t\t\"app\",\n\t\t\t\t\t\t\"auto-updater\",\n\t\t\t\t\t\t\"browser-window\",\n\t\t\t\t\t\t\"clipboard\",\n\t\t\t\t\t\t\"content-tracing\",\n\t\t\t\t\t\t\"crash-reporter\",\n\t\t\t\t\t\t\"dialog\",\n\t\t\t\t\t\t\"electron\",\n\t\t\t\t\t\t\"global-shortcut\",\n\t\t\t\t\t\t\"ipc\",\n\t\t\t\t\t\t\"ipc-main\",\n\t\t\t\t\t\t\"menu\",\n\t\t\t\t\t\t\"menu-item\",\n\t\t\t\t\t\t\"native-image\",\n\t\t\t\t\t\t\"original-fs\",\n\t\t\t\t\t\t\"power-monitor\",\n\t\t\t\t\t\t\"power-save-blocker\",\n\t\t\t\t\t\t\"protocol\",\n\t\t\t\t\t\t\"screen\",\n\t\t\t\t\t\t\"session\",\n\t\t\t\t\t\t\"shell\",\n\t\t\t\t\t\t\"tray\",\n\t\t\t\t\t\t\"web-contents\"\n\t\t\t\t\t]).apply(compiler);\n\t\t\t\t\tnew LoaderTargetPlugin(options.target).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"electron-renderer\":\n\t\t\t\tcase \"electron-preload\":\n\t\t\t\t\tFetchCompileWasmTemplatePlugin = require(\"./web/FetchCompileWasmTemplatePlugin\");\n\t\t\t\t\tNodeTargetPlugin = require(\"./node/NodeTargetPlugin\");\n\t\t\t\t\tExternalsPlugin = require(\"./ExternalsPlugin\");\n\t\t\t\t\tif (options.target === \"electron-renderer\") {\n\t\t\t\t\t\tJsonpTemplatePlugin = require(\"./web/JsonpTemplatePlugin\");\n\t\t\t\t\t\tnew JsonpTemplatePlugin().apply(compiler);\n\t\t\t\t\t} else if (options.target === \"electron-preload\") {\n\t\t\t\t\t\tNodeTemplatePlugin = require(\"./node/NodeTemplatePlugin\");\n\t\t\t\t\t\tnew NodeTemplatePlugin({\n\t\t\t\t\t\t\tasyncChunkLoading: true\n\t\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\t}\n\t\t\t\t\tnew FetchCompileWasmTemplatePlugin({\n\t\t\t\t\t\tmangleImports: options.optimization.mangleWasmImports\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tnew FunctionModulePlugin().apply(compiler);\n\t\t\t\t\tnew NodeTargetPlugin().apply(compiler);\n\t\t\t\t\tnew ExternalsPlugin(\"commonjs\", [\n\t\t\t\t\t\t\"clipboard\",\n\t\t\t\t\t\t\"crash-reporter\",\n\t\t\t\t\t\t\"desktop-capturer\",\n\t\t\t\t\t\t\"electron\",\n\t\t\t\t\t\t\"ipc\",\n\t\t\t\t\t\t\"ipc-renderer\",\n\t\t\t\t\t\t\"native-image\",\n\t\t\t\t\t\t\"original-fs\",\n\t\t\t\t\t\t\"remote\",\n\t\t\t\t\t\t\"screen\",\n\t\t\t\t\t\t\"shell\",\n\t\t\t\t\t\t\"web-frame\"\n\t\t\t\t\t]).apply(compiler);\n\t\t\t\t\tnew LoaderTargetPlugin(options.target).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unsupported target '\" + options.target + \"'.\");\n\t\t\t}\n\t\t}\n\t\t// @ts-ignore This is always true, which is good this way\n\t\telse if (options.target !== false) {\n\t\t\toptions.target(compiler);\n\t\t} else {\n\t\t\tthrow new Error(\"Unsupported target '\" + options.target + \"'.\");\n\t\t}\n\n\t\tif (options.output.library || options.output.libraryTarget !== \"var\") {\n\t\t\tconst LibraryTemplatePlugin = require(\"./LibraryTemplatePlugin\");\n\t\t\tnew LibraryTemplatePlugin(\n\t\t\t\toptions.output.library,\n\t\t\t\toptions.output.libraryTarget,\n\t\t\t\toptions.output.umdNamedDefine,\n\t\t\t\toptions.output.auxiliaryComment || \"\",\n\t\t\t\toptions.output.libraryExport\n\t\t\t).apply(compiler);\n\t\t}\n\t\tif (options.externals) {\n\t\t\tExternalsPlugin = require(\"./ExternalsPlugin\");\n\t\t\tnew ExternalsPlugin(\n\t\t\t\toptions.output.libraryTarget,\n\t\t\t\toptions.externals\n\t\t\t).apply(compiler);\n\t\t}\n\n\t\tlet noSources;\n\t\tlet legacy;\n\t\tlet modern;\n\t\tlet comment;\n\t\tif (\n\t\t\toptions.devtool &&\n\t\t\t(options.devtool.includes(\"sourcemap\") ||\n\t\t\t\toptions.devtool.includes(\"source-map\"))\n\t\t) {\n\t\t\tconst hidden = options.devtool.includes(\"hidden\");\n\t\t\tconst inline = options.devtool.includes(\"inline\");\n\t\t\tconst evalWrapped = options.devtool.includes(\"eval\");\n\t\t\tconst cheap = options.devtool.includes(\"cheap\");\n\t\t\tconst moduleMaps = options.devtool.includes(\"module\");\n\t\t\tnoSources = options.devtool.includes(\"nosources\");\n\t\t\tlegacy = options.devtool.includes(\"@\");\n\t\t\tmodern = options.devtool.includes(\"#\");\n\t\t\tcomment =\n\t\t\t\tlegacy && modern\n\t\t\t\t\t? \"\\n/*\\n//@ source\" +\n\t\t\t\t\t  \"MappingURL=[url]\\n//# source\" +\n\t\t\t\t\t  \"MappingURL=[url]\\n*/\"\n\t\t\t\t\t: legacy\n\t\t\t\t\t? \"\\n/*\\n//@ source\" + \"MappingURL=[url]\\n*/\"\n\t\t\t\t\t: modern\n\t\t\t\t\t? \"\\n//# source\" + \"MappingURL=[url]\"\n\t\t\t\t\t: null;\n\t\t\tconst Plugin = evalWrapped\n\t\t\t\t? EvalSourceMapDevToolPlugin\n\t\t\t\t: SourceMapDevToolPlugin;\n\t\t\tnew Plugin({\n\t\t\t\tfilename: inline ? null : options.output.sourceMapFilename,\n\t\t\t\tmoduleFilenameTemplate: options.output.devtoolModuleFilenameTemplate,\n\t\t\t\tfallbackModuleFilenameTemplate:\n\t\t\t\t\toptions.output.devtoolFallbackModuleFilenameTemplate,\n\t\t\t\tappend: hidden ? false : comment,\n\t\t\t\tmodule: moduleMaps ? true : cheap ? false : true,\n\t\t\t\tcolumns: cheap ? false : true,\n\t\t\t\tlineToLine: options.output.devtoolLineToLine,\n\t\t\t\tnoSources: noSources,\n\t\t\t\tnamespace: options.output.devtoolNamespace\n\t\t\t}).apply(compiler);\n\t\t} else if (options.devtool && options.devtool.includes(\"eval\")) {\n\t\t\tlegacy = options.devtool.includes(\"@\");\n\t\t\tmodern = options.devtool.includes(\"#\");\n\t\t\tcomment =\n\t\t\t\tlegacy && modern\n\t\t\t\t\t? \"\\n//@ sourceURL=[url]\\n//# sourceURL=[url]\"\n\t\t\t\t\t: legacy\n\t\t\t\t\t? \"\\n//@ sourceURL=[url]\"\n\t\t\t\t\t: modern\n\t\t\t\t\t? \"\\n//# sourceURL=[url]\"\n\t\t\t\t\t: null;\n\t\t\tnew EvalDevToolModulePlugin({\n\t\t\t\tsourceUrlComment: comment,\n\t\t\t\tmoduleFilenameTemplate: options.output.devtoolModuleFilenameTemplate,\n\t\t\t\tnamespace: options.output.devtoolNamespace\n\t\t\t}).apply(compiler);\n\t\t}\n\n\t\tnew JavascriptModulesPlugin().apply(compiler);\n\t\tnew JsonModulesPlugin().apply(compiler);\n\t\tnew WebAssemblyModulesPlugin({\n\t\t\tmangleImports: options.optimization.mangleWasmImports\n\t\t}).apply(compiler);\n\n\t\tnew EntryOptionPlugin().apply(compiler);\n\t\tcompiler.hooks.entryOption.call(options.context, options.entry);\n\n\t\tnew CompatibilityPlugin().apply(compiler);\n\t\tnew HarmonyModulesPlugin(options.module).apply(compiler);\n\t\tif (options.amd !== false) {\n\t\t\tconst AMDPlugin = require(\"./dependencies/AMDPlugin\");\n\t\t\tconst RequireJsStuffPlugin = require(\"./RequireJsStuffPlugin\");\n\t\t\tnew AMDPlugin(options.module, options.amd || {}).apply(compiler);\n\t\t\tnew RequireJsStuffPlugin().apply(compiler);\n\t\t}\n\t\tnew CommonJsPlugin(options.module).apply(compiler);\n\t\tnew LoaderPlugin().apply(compiler);\n\t\tif (options.node !== false) {\n\t\t\tconst NodeStuffPlugin = require(\"./NodeStuffPlugin\");\n\t\t\tnew NodeStuffPlugin(options.node).apply(compiler);\n\t\t}\n\t\tnew CommonJsStuffPlugin().apply(compiler);\n\t\tnew APIPlugin().apply(compiler);\n\t\tnew ConstPlugin().apply(compiler);\n\t\tnew UseStrictPlugin().apply(compiler);\n\t\tnew RequireIncludePlugin().apply(compiler);\n\t\tnew RequireEnsurePlugin().apply(compiler);\n\t\tnew RequireContextPlugin(\n\t\t\toptions.resolve.modules,\n\t\t\toptions.resolve.extensions,\n\t\t\toptions.resolve.mainFiles\n\t\t).apply(compiler);\n\t\tnew ImportPlugin(options.module).apply(compiler);\n\t\tnew SystemPlugin(options.module).apply(compiler);\n\n\t\tif (typeof options.mode !== \"string\") {\n\t\t\tconst WarnNoModeSetPlugin = require(\"./WarnNoModeSetPlugin\");\n\t\t\tnew WarnNoModeSetPlugin().apply(compiler);\n\t\t}\n\n\t\tconst EnsureChunkConditionsPlugin = require(\"./optimize/EnsureChunkConditionsPlugin\");\n\t\tnew EnsureChunkConditionsPlugin().apply(compiler);\n\t\tif (options.optimization.removeAvailableModules) {\n\t\t\tconst RemoveParentModulesPlugin = require(\"./optimize/RemoveParentModulesPlugin\");\n\t\t\tnew RemoveParentModulesPlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.removeEmptyChunks) {\n\t\t\tconst RemoveEmptyChunksPlugin = require(\"./optimize/RemoveEmptyChunksPlugin\");\n\t\t\tnew RemoveEmptyChunksPlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.mergeDuplicateChunks) {\n\t\t\tconst MergeDuplicateChunksPlugin = require(\"./optimize/MergeDuplicateChunksPlugin\");\n\t\t\tnew MergeDuplicateChunksPlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.flagIncludedChunks) {\n\t\t\tconst FlagIncludedChunksPlugin = require(\"./optimize/FlagIncludedChunksPlugin\");\n\t\t\tnew FlagIncludedChunksPlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.sideEffects) {\n\t\t\tconst SideEffectsFlagPlugin = require(\"./optimize/SideEffectsFlagPlugin\");\n\t\t\tnew SideEffectsFlagPlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.providedExports) {\n\t\t\tconst FlagDependencyExportsPlugin = require(\"./FlagDependencyExportsPlugin\");\n\t\t\tnew FlagDependencyExportsPlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.usedExports) {\n\t\t\tconst FlagDependencyUsagePlugin = require(\"./FlagDependencyUsagePlugin\");\n\t\t\tnew FlagDependencyUsagePlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.concatenateModules) {\n\t\t\tconst ModuleConcatenationPlugin = require(\"./optimize/ModuleConcatenationPlugin\");\n\t\t\tnew ModuleConcatenationPlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.splitChunks) {\n\t\t\tconst SplitChunksPlugin = require(\"./optimize/SplitChunksPlugin\");\n\t\t\tnew SplitChunksPlugin(options.optimization.splitChunks).apply(compiler);\n\t\t}\n\t\tif (options.optimization.runtimeChunk) {\n\t\t\tconst RuntimeChunkPlugin = require(\"./optimize/RuntimeChunkPlugin\");\n\t\t\tnew RuntimeChunkPlugin(options.optimization.runtimeChunk).apply(compiler);\n\t\t}\n\t\tif (options.optimization.noEmitOnErrors) {\n\t\t\tconst NoEmitOnErrorsPlugin = require(\"./NoEmitOnErrorsPlugin\");\n\t\t\tnew NoEmitOnErrorsPlugin().apply(compiler);\n\t\t}\n\t\tif (options.optimization.checkWasmTypes) {\n\t\t\tconst WasmFinalizeExportsPlugin = require(\"./wasm/WasmFinalizeExportsPlugin\");\n\t\t\tnew WasmFinalizeExportsPlugin().apply(compiler);\n\t\t}\n\t\tlet moduleIds = options.optimization.moduleIds;\n\t\tif (moduleIds === undefined) {\n\t\t\t// TODO webpack 5 remove all these options\n\t\t\tif (options.optimization.occurrenceOrder) {\n\t\t\t\tmoduleIds = \"size\";\n\t\t\t}\n\t\t\tif (options.optimization.namedModules) {\n\t\t\t\tmoduleIds = \"named\";\n\t\t\t}\n\t\t\tif (options.optimization.hashedModuleIds) {\n\t\t\t\tmoduleIds = \"hashed\";\n\t\t\t}\n\t\t\tif (moduleIds === undefined) {\n\t\t\t\tmoduleIds = \"natural\";\n\t\t\t}\n\t\t}\n\t\tif (moduleIds) {\n\t\t\tconst NamedModulesPlugin = require(\"./NamedModulesPlugin\");\n\t\t\tconst HashedModuleIdsPlugin = require(\"./HashedModuleIdsPlugin\");\n\t\t\tconst OccurrenceModuleOrderPlugin = require(\"./optimize/OccurrenceModuleOrderPlugin\");\n\t\t\tswitch (moduleIds) {\n\t\t\t\tcase \"natural\":\n\t\t\t\t\t// TODO webpack 5: see hint in Compilation.sortModules\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"named\":\n\t\t\t\t\tnew NamedModulesPlugin().apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"hashed\":\n\t\t\t\t\tnew HashedModuleIdsPlugin().apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"size\":\n\t\t\t\t\tnew OccurrenceModuleOrderPlugin({\n\t\t\t\t\t\tprioritiseInitial: true\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"total-size\":\n\t\t\t\t\tnew OccurrenceModuleOrderPlugin({\n\t\t\t\t\t\tprioritiseInitial: false\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`webpack bug: moduleIds: ${moduleIds} is not implemented`\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlet chunkIds = options.optimization.chunkIds;\n\t\tif (chunkIds === undefined) {\n\t\t\t// TODO webpack 5 remove all these options\n\t\t\tif (options.optimization.occurrenceOrder) {\n\t\t\t\t// This looks weird but it's for backward-compat\n\t\t\t\t// This bug already existed before adding this feature\n\t\t\t\tchunkIds = \"total-size\";\n\t\t\t}\n\t\t\tif (options.optimization.namedChunks) {\n\t\t\t\tchunkIds = \"named\";\n\t\t\t}\n\t\t\tif (chunkIds === undefined) {\n\t\t\t\tchunkIds = \"natural\";\n\t\t\t}\n\t\t}\n\t\tif (chunkIds) {\n\t\t\tconst NaturalChunkOrderPlugin = require(\"./optimize/NaturalChunkOrderPlugin\");\n\t\t\tconst NamedChunksPlugin = require(\"./NamedChunksPlugin\");\n\t\t\tconst OccurrenceChunkOrderPlugin = require(\"./optimize/OccurrenceChunkOrderPlugin\");\n\t\t\tswitch (chunkIds) {\n\t\t\t\tcase \"natural\":\n\t\t\t\t\tnew NaturalChunkOrderPlugin().apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"named\":\n\t\t\t\t\t// TODO webapck 5: for backward-compat this need to have OccurrenceChunkOrderPlugin too\n\t\t\t\t\t// The NamedChunksPlugin doesn't give every chunk a name\n\t\t\t\t\t// This should be fixed, and the OccurrenceChunkOrderPlugin should be removed here.\n\t\t\t\t\tnew OccurrenceChunkOrderPlugin({\n\t\t\t\t\t\tprioritiseInitial: false\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tnew NamedChunksPlugin().apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"size\":\n\t\t\t\t\tnew OccurrenceChunkOrderPlugin({\n\t\t\t\t\t\tprioritiseInitial: true\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"total-size\":\n\t\t\t\t\tnew OccurrenceChunkOrderPlugin({\n\t\t\t\t\t\tprioritiseInitial: false\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`webpack bug: chunkIds: ${chunkIds} is not implemented`\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (options.optimization.nodeEnv) {\n\t\t\tconst DefinePlugin = require(\"./DefinePlugin\");\n\t\t\tnew DefinePlugin({\n\t\t\t\t\"process.env.NODE_ENV\": JSON.stringify(options.optimization.nodeEnv)\n\t\t\t}).apply(compiler);\n\t\t}\n\t\tif (options.optimization.minimize) {\n\t\t\tfor (const minimizer of options.optimization.minimizer) {\n\t\t\t\tif (typeof minimizer === \"function\") {\n\t\t\t\t\tminimizer.call(compiler, compiler);\n\t\t\t\t} else {\n\t\t\t\t\tminimizer.apply(compiler);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.performance) {\n\t\t\tconst SizeLimitsPlugin = require(\"./performance/SizeLimitsPlugin\");\n\t\t\tnew SizeLimitsPlugin(options.performance).apply(compiler);\n\t\t}\n\n\t\tnew TemplatedPathPlugin().apply(compiler);\n\n\t\tnew RecordIdsPlugin({\n\t\t\tportableIds: options.optimization.portableRecords\n\t\t}).apply(compiler);\n\n\t\tnew WarnCaseSensitiveModulesPlugin().apply(compiler);\n\n\t\tif (options.cache) {\n\t\t\tconst CachePlugin = require(\"./CachePlugin\");\n\t\t\tnew CachePlugin(\n\t\t\t\ttypeof options.cache === \"object\" ? options.cache : null\n\t\t\t).apply(compiler);\n\t\t}\n\n\t\tcompiler.hooks.afterPlugins.call(compiler);\n\t\tif (!compiler.inputFileSystem) {\n\t\t\tthrow new Error(\"No input filesystem provided\");\n\t\t}\n\t\tcompiler.resolverFactory.hooks.resolveOptions\n\t\t\t.for(\"normal\")\n\t\t\t.tap(\"WebpackOptionsApply\", resolveOptions => {\n\t\t\t\treturn Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tfileSystem: compiler.inputFileSystem\n\t\t\t\t\t},\n\t\t\t\t\tcachedCleverMerge(options.resolve, resolveOptions)\n\t\t\t\t);\n\t\t\t});\n\t\tcompiler.resolverFactory.hooks.resolveOptions\n\t\t\t.for(\"context\")\n\t\t\t.tap(\"WebpackOptionsApply\", resolveOptions => {\n\t\t\t\treturn Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tfileSystem: compiler.inputFileSystem,\n\t\t\t\t\t\tresolveToContext: true\n\t\t\t\t\t},\n\t\t\t\t\tcachedCleverMerge(options.resolve, resolveOptions)\n\t\t\t\t);\n\t\t\t});\n\t\tcompiler.resolverFactory.hooks.resolveOptions\n\t\t\t.for(\"loader\")\n\t\t\t.tap(\"WebpackOptionsApply\", resolveOptions => {\n\t\t\t\treturn Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tfileSystem: compiler.inputFileSystem\n\t\t\t\t\t},\n\t\t\t\t\tcachedCleverMerge(options.resolveLoader, resolveOptions)\n\t\t\t\t);\n\t\t\t});\n\t\tcompiler.hooks.afterResolvers.call(compiler);\n\t\treturn options;\n\t}\n}\n\nmodule.exports = WebpackOptionsApply;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nconst OptionsDefaulter = require(\"./OptionsDefaulter\");\nconst Template = require(\"./Template\");\n\nconst isProductionLikeMode = options => {\n\treturn options.mode === \"production\" || !options.mode;\n};\n\nconst isWebLikeTarget = options => {\n\treturn options.target === \"web\" || options.target === \"webworker\";\n};\n\nconst getDevtoolNamespace = library => {\n\t// if options.output.library is a string\n\tif (Array.isArray(library)) {\n\t\treturn library.join(\".\");\n\t} else if (typeof library === \"object\") {\n\t\treturn getDevtoolNamespace(library.root);\n\t}\n\treturn library || \"\";\n};\n\nclass WebpackOptionsDefaulter extends OptionsDefaulter {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.set(\"entry\", \"./src\");\n\n\t\tthis.set(\"devtool\", \"make\", options =>\n\t\t\toptions.mode === \"development\" ? \"eval\" : false\n\t\t);\n\t\tthis.set(\"cache\", \"make\", options => options.mode === \"development\");\n\n\t\tthis.set(\"context\", process.cwd());\n\t\tthis.set(\"target\", \"web\");\n\n\t\tthis.set(\"module\", \"call\", value => Object.assign({}, value));\n\t\tthis.set(\"module.unknownContextRequest\", \".\");\n\t\tthis.set(\"module.unknownContextRegExp\", false);\n\t\tthis.set(\"module.unknownContextRecursive\", true);\n\t\tthis.set(\"module.unknownContextCritical\", true);\n\t\tthis.set(\"module.exprContextRequest\", \".\");\n\t\tthis.set(\"module.exprContextRegExp\", false);\n\t\tthis.set(\"module.exprContextRecursive\", true);\n\t\tthis.set(\"module.exprContextCritical\", true);\n\t\tthis.set(\"module.wrappedContextRegExp\", /.*/);\n\t\tthis.set(\"module.wrappedContextRecursive\", true);\n\t\tthis.set(\"module.wrappedContextCritical\", false);\n\t\tthis.set(\"module.strictExportPresence\", false);\n\t\tthis.set(\"module.strictThisContextOnImports\", false);\n\t\tthis.set(\"module.unsafeCache\", \"make\", options => !!options.cache);\n\t\tthis.set(\"module.rules\", []);\n\t\tthis.set(\"module.defaultRules\", \"make\", options => [\n\t\t\t{\n\t\t\t\ttype: \"javascript/auto\",\n\t\t\t\tresolve: {}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.mjs$/i,\n\t\t\t\ttype: \"javascript/esm\",\n\t\t\t\tresolve: {\n\t\t\t\t\tmainFields:\n\t\t\t\t\t\toptions.target === \"web\" ||\n\t\t\t\t\t\toptions.target === \"webworker\" ||\n\t\t\t\t\t\toptions.target === \"electron-renderer\"\n\t\t\t\t\t\t\t? [\"browser\", \"main\"]\n\t\t\t\t\t\t\t: [\"main\"]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.json$/i,\n\t\t\t\ttype: \"json\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.wasm$/i,\n\t\t\t\ttype: \"webassembly/experimental\"\n\t\t\t}\n\t\t]);\n\n\t\tthis.set(\"output\", \"call\", (value, options) => {\n\t\t\tif (typeof value === \"string\") {\n\t\t\t\treturn {\n\t\t\t\t\tfilename: value\n\t\t\t\t};\n\t\t\t} else if (typeof value !== \"object\") {\n\t\t\t\treturn {};\n\t\t\t} else {\n\t\t\t\treturn Object.assign({}, value);\n\t\t\t}\n\t\t});\n\n\t\tthis.set(\"output.filename\", \"[name].js\");\n\t\tthis.set(\"output.chunkFilename\", \"make\", options => {\n\t\t\tconst filename = options.output.filename;\n\t\t\tif (typeof filename !== \"function\") {\n\t\t\t\tconst hasName = filename.includes(\"[name]\");\n\t\t\t\tconst hasId = filename.includes(\"[id]\");\n\t\t\t\tconst hasChunkHash = filename.includes(\"[chunkhash]\");\n\t\t\t\t// Anything changing depending on chunk is fine\n\t\t\t\tif (hasChunkHash || hasName || hasId) return filename;\n\t\t\t\t// Elsewise prefix \"[id].\" in front of the basename to make it changing\n\t\t\t\treturn filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, \"$1[id].$2\");\n\t\t\t}\n\t\t\treturn \"[id].js\";\n\t\t});\n\t\tthis.set(\"output.webassemblyModuleFilename\", \"[modulehash].module.wasm\");\n\t\tthis.set(\"output.library\", \"\");\n\t\tthis.set(\"output.hotUpdateFunction\", \"make\", options => {\n\t\t\treturn Template.toIdentifier(\n\t\t\t\t\"webpackHotUpdate\" + Template.toIdentifier(options.output.library)\n\t\t\t);\n\t\t});\n\t\tthis.set(\"output.jsonpFunction\", \"make\", options => {\n\t\t\treturn Template.toIdentifier(\n\t\t\t\t\"webpackJsonp\" + Template.toIdentifier(options.output.library)\n\t\t\t);\n\t\t});\n\t\tthis.set(\"output.chunkCallbackName\", \"make\", options => {\n\t\t\treturn Template.toIdentifier(\n\t\t\t\t\"webpackChunk\" + Template.toIdentifier(options.output.library)\n\t\t\t);\n\t\t});\n\t\tthis.set(\"output.globalObject\", \"make\", options => {\n\t\t\tswitch (options.target) {\n\t\t\t\tcase \"web\":\n\t\t\t\tcase \"electron-renderer\":\n\t\t\t\tcase \"node-webkit\":\n\t\t\t\t\treturn \"window\";\n\t\t\t\tcase \"webworker\":\n\t\t\t\t\treturn \"self\";\n\t\t\t\tcase \"node\":\n\t\t\t\tcase \"async-node\":\n\t\t\t\tcase \"electron-main\":\n\t\t\t\t\treturn \"global\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn \"self\";\n\t\t\t}\n\t\t});\n\t\tthis.set(\"output.devtoolNamespace\", \"make\", options => {\n\t\t\treturn getDevtoolNamespace(options.output.library);\n\t\t});\n\t\tthis.set(\"output.libraryTarget\", \"var\");\n\t\tthis.set(\"output.path\", path.join(process.cwd(), \"dist\"));\n\t\tthis.set(\n\t\t\t\"output.pathinfo\",\n\t\t\t\"make\",\n\t\t\toptions => options.mode === \"development\"\n\t\t);\n\t\tthis.set(\"output.sourceMapFilename\", \"[file].map[query]\");\n\t\tthis.set(\"output.hotUpdateChunkFilename\", \"[id].[hash].hot-update.js\");\n\t\tthis.set(\"output.hotUpdateMainFilename\", \"[hash].hot-update.json\");\n\t\tthis.set(\"output.crossOriginLoading\", false);\n\t\tthis.set(\"output.jsonpScriptType\", false);\n\t\tthis.set(\"output.chunkLoadTimeout\", 120000);\n\t\tthis.set(\"output.hashFunction\", \"md4\");\n\t\tthis.set(\"output.hashDigest\", \"hex\");\n\t\tthis.set(\"output.hashDigestLength\", 20);\n\t\tthis.set(\"output.devtoolLineToLine\", false);\n\t\tthis.set(\"output.strictModuleExceptionHandling\", false);\n\n\t\tthis.set(\"node\", \"call\", value => {\n\t\t\tif (typeof value === \"boolean\") {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn Object.assign({}, value);\n\t\t\t}\n\t\t});\n\t\tthis.set(\"node.console\", false);\n\t\tthis.set(\"node.process\", true);\n\t\tthis.set(\"node.global\", true);\n\t\tthis.set(\"node.Buffer\", true);\n\t\tthis.set(\"node.setImmediate\", true);\n\t\tthis.set(\"node.__filename\", \"mock\");\n\t\tthis.set(\"node.__dirname\", \"mock\");\n\n\t\tthis.set(\"performance\", \"call\", (value, options) => {\n\t\t\tif (value === false) return false;\n\t\t\tif (\n\t\t\t\tvalue === undefined &&\n\t\t\t\t(!isProductionLikeMode(options) || !isWebLikeTarget(options))\n\t\t\t)\n\t\t\t\treturn false;\n\t\t\treturn Object.assign({}, value);\n\t\t});\n\t\tthis.set(\"performance.maxAssetSize\", 250000);\n\t\tthis.set(\"performance.maxEntrypointSize\", 250000);\n\t\tthis.set(\"performance.hints\", \"make\", options =>\n\t\t\tisProductionLikeMode(options) ? \"warning\" : false\n\t\t);\n\n\t\tthis.set(\"optimization\", \"call\", value => Object.assign({}, value));\n\t\t// TODO webpack 5: Disable by default in a modes\n\t\tthis.set(\n\t\t\t\"optimization.removeAvailableModules\",\n\t\t\t\"make\",\n\t\t\toptions => options.mode !== \"development\"\n\t\t);\n\t\tthis.set(\"optimization.removeEmptyChunks\", true);\n\t\tthis.set(\"optimization.mergeDuplicateChunks\", true);\n\t\tthis.set(\"optimization.flagIncludedChunks\", \"make\", options =>\n\t\t\tisProductionLikeMode(options)\n\t\t);\n\t\t// TODO webpack 5 add `moduleIds: \"named\"` default for development\n\t\t// TODO webpack 5 add `moduleIds: \"size\"` default for production\n\t\t// TODO webpack 5 remove optimization.occurrenceOrder\n\t\tthis.set(\"optimization.occurrenceOrder\", \"make\", options =>\n\t\t\tisProductionLikeMode(options)\n\t\t);\n\t\tthis.set(\"optimization.sideEffects\", \"make\", options =>\n\t\t\tisProductionLikeMode(options)\n\t\t);\n\t\tthis.set(\"optimization.providedExports\", true);\n\t\tthis.set(\"optimization.usedExports\", \"make\", options =>\n\t\t\tisProductionLikeMode(options)\n\t\t);\n\t\tthis.set(\"optimization.concatenateModules\", \"make\", options =>\n\t\t\tisProductionLikeMode(options)\n\t\t);\n\t\tthis.set(\"optimization.splitChunks\", {});\n\t\tthis.set(\"optimization.splitChunks.hidePathInfo\", \"make\", options => {\n\t\t\treturn isProductionLikeMode(options);\n\t\t});\n\t\tthis.set(\"optimization.splitChunks.chunks\", \"async\");\n\t\tthis.set(\"optimization.splitChunks.minSize\", \"make\", options => {\n\t\t\treturn isProductionLikeMode(options) ? 30000 : 10000;\n\t\t});\n\t\tthis.set(\"optimization.splitChunks.minChunks\", 1);\n\t\tthis.set(\"optimization.splitChunks.maxAsyncRequests\", \"make\", options => {\n\t\t\treturn isProductionLikeMode(options) ? 5 : Infinity;\n\t\t});\n\t\tthis.set(\"optimization.splitChunks.automaticNameDelimiter\", \"~\");\n\t\tthis.set(\"optimization.splitChunks.automaticNameMaxLength\", 109);\n\t\tthis.set(\"optimization.splitChunks.maxInitialRequests\", \"make\", options => {\n\t\t\treturn isProductionLikeMode(options) ? 3 : Infinity;\n\t\t});\n\t\tthis.set(\"optimization.splitChunks.name\", true);\n\t\tthis.set(\"optimization.splitChunks.cacheGroups\", {});\n\t\tthis.set(\"optimization.splitChunks.cacheGroups.default\", {\n\t\t\tautomaticNamePrefix: \"\",\n\t\t\treuseExistingChunk: true,\n\t\t\tminChunks: 2,\n\t\t\tpriority: -20\n\t\t});\n\t\tthis.set(\"optimization.splitChunks.cacheGroups.vendors\", {\n\t\t\tautomaticNamePrefix: \"vendors\",\n\t\t\ttest: /[\\\\/]node_modules[\\\\/]/,\n\t\t\tpriority: -10\n\t\t});\n\t\tthis.set(\"optimization.runtimeChunk\", \"call\", value => {\n\t\t\tif (value === \"single\") {\n\t\t\t\treturn {\n\t\t\t\t\tname: \"runtime\"\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (value === true || value === \"multiple\") {\n\t\t\t\treturn {\n\t\t\t\t\tname: entrypoint => `runtime~${entrypoint.name}`\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t\tthis.set(\"optimization.noEmitOnErrors\", \"make\", options =>\n\t\t\tisProductionLikeMode(options)\n\t\t);\n\t\tthis.set(\"optimization.checkWasmTypes\", \"make\", options =>\n\t\t\tisProductionLikeMode(options)\n\t\t);\n\t\tthis.set(\"optimization.mangleWasmImports\", false);\n\t\t// TODO webpack 5 remove optimization.namedModules\n\t\tthis.set(\n\t\t\t\"optimization.namedModules\",\n\t\t\t\"make\",\n\t\t\toptions => options.mode === \"development\"\n\t\t);\n\t\tthis.set(\"optimization.hashedModuleIds\", false);\n\t\t// TODO webpack 5 add `chunkIds: \"named\"` default for development\n\t\t// TODO webpack 5 add `chunkIds: \"size\"` default for production\n\t\t// TODO webpack 5 remove optimization.namedChunks\n\t\tthis.set(\n\t\t\t\"optimization.namedChunks\",\n\t\t\t\"make\",\n\t\t\toptions => options.mode === \"development\"\n\t\t);\n\t\tthis.set(\n\t\t\t\"optimization.portableRecords\",\n\t\t\t\"make\",\n\t\t\toptions =>\n\t\t\t\t!!(\n\t\t\t\t\toptions.recordsInputPath ||\n\t\t\t\t\toptions.recordsOutputPath ||\n\t\t\t\t\toptions.recordsPath\n\t\t\t\t)\n\t\t);\n\t\tthis.set(\"optimization.minimize\", \"make\", options =>\n\t\t\tisProductionLikeMode(options)\n\t\t);\n\t\tthis.set(\"optimization.minimizer\", \"make\", options => [\n\t\t\t{\n\t\t\t\tapply: compiler => {\n\t\t\t\t\t// Lazy load the Terser plugin\n\t\t\t\t\tconst TerserPlugin = require(\"terser-webpack-plugin\");\n\t\t\t\t\tconst SourceMapDevToolPlugin = require(\"./SourceMapDevToolPlugin\");\n\t\t\t\t\tnew TerserPlugin({\n\t\t\t\t\t\tcache: true,\n\t\t\t\t\t\tparallel: true,\n\t\t\t\t\t\tsourceMap:\n\t\t\t\t\t\t\t(options.devtool && /source-?map/.test(options.devtool)) ||\n\t\t\t\t\t\t\t(options.plugins &&\n\t\t\t\t\t\t\t\toptions.plugins.some(p => p instanceof SourceMapDevToolPlugin))\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t}\n\t\t\t}\n\t\t]);\n\t\tthis.set(\"optimization.nodeEnv\", \"make\", options => {\n\t\t\t// TODO: In webpack 5, it should return `false` when mode is `none`\n\t\t\treturn options.mode || \"production\";\n\t\t});\n\n\t\tthis.set(\"resolve\", \"call\", value => Object.assign({}, value));\n\t\tthis.set(\"resolve.unsafeCache\", true);\n\t\tthis.set(\"resolve.modules\", [\"node_modules\"]);\n\t\tthis.set(\"resolve.extensions\", [\".wasm\", \".mjs\", \".js\", \".json\"]);\n\t\tthis.set(\"resolve.mainFiles\", [\"index\"]);\n\t\tthis.set(\"resolve.aliasFields\", \"make\", options => {\n\t\t\tif (\n\t\t\t\toptions.target === \"web\" ||\n\t\t\t\toptions.target === \"webworker\" ||\n\t\t\t\toptions.target === \"electron-renderer\"\n\t\t\t) {\n\t\t\t\treturn [\"browser\"];\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t});\n\t\tthis.set(\"resolve.mainFields\", \"make\", options => {\n\t\t\tif (\n\t\t\t\toptions.target === \"web\" ||\n\t\t\t\toptions.target === \"webworker\" ||\n\t\t\t\toptions.target === \"electron-renderer\"\n\t\t\t) {\n\t\t\t\treturn [\"browser\", \"module\", \"main\"];\n\t\t\t} else {\n\t\t\t\treturn [\"module\", \"main\"];\n\t\t\t}\n\t\t});\n\t\tthis.set(\"resolve.cacheWithContext\", \"make\", options => {\n\t\t\treturn (\n\t\t\t\tArray.isArray(options.resolve.plugins) &&\n\t\t\t\toptions.resolve.plugins.length > 0\n\t\t\t);\n\t\t});\n\n\t\tthis.set(\"resolveLoader\", \"call\", value => Object.assign({}, value));\n\t\tthis.set(\"resolveLoader.unsafeCache\", true);\n\t\tthis.set(\"resolveLoader.mainFields\", [\"loader\", \"main\"]);\n\t\tthis.set(\"resolveLoader.extensions\", [\".js\", \".json\"]);\n\t\tthis.set(\"resolveLoader.mainFiles\", [\"index\"]);\n\t\tthis.set(\"resolveLoader.cacheWithContext\", \"make\", options => {\n\t\t\treturn (\n\t\t\t\tArray.isArray(options.resolveLoader.plugins) &&\n\t\t\t\toptions.resolveLoader.plugins.length > 0\n\t\t\t);\n\t\t});\n\n\t\tthis.set(\"infrastructureLogging\", \"call\", value =>\n\t\t\tObject.assign({}, value)\n\t\t);\n\t\tthis.set(\"infrastructureLogging.level\", \"info\");\n\t\tthis.set(\"infrastructureLogging.debug\", false);\n\t}\n}\n\nmodule.exports = WebpackOptionsDefaulter;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Gajus Kuizinas @gajus\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\nconst webpackOptionsSchema = require(\"../schemas/WebpackOptions.json\");\n\nconst getSchemaPart = (path, parents, additionalPath) => {\n\tparents = parents || 0;\n\tpath = path.split(\"/\");\n\tpath = path.slice(0, path.length - parents);\n\tif (additionalPath) {\n\t\tadditionalPath = additionalPath.split(\"/\");\n\t\tpath = path.concat(additionalPath);\n\t}\n\tlet schemaPart = webpackOptionsSchema;\n\tfor (let i = 1; i < path.length; i++) {\n\t\tconst inner = schemaPart[path[i]];\n\t\tif (inner) schemaPart = inner;\n\t}\n\treturn schemaPart;\n};\n\nconst getSchemaPartText = (schemaPart, additionalPath) => {\n\tif (additionalPath) {\n\t\tfor (let i = 0; i < additionalPath.length; i++) {\n\t\t\tconst inner = schemaPart[additionalPath[i]];\n\t\t\tif (inner) schemaPart = inner;\n\t\t}\n\t}\n\twhile (schemaPart.$ref) {\n\t\tschemaPart = getSchemaPart(schemaPart.$ref);\n\t}\n\tlet schemaText = WebpackOptionsValidationError.formatSchema(schemaPart);\n\tif (schemaPart.description) {\n\t\tschemaText += `\\n-> ${schemaPart.description}`;\n\t}\n\treturn schemaText;\n};\n\nconst getSchemaPartDescription = schemaPart => {\n\twhile (schemaPart.$ref) {\n\t\tschemaPart = getSchemaPart(schemaPart.$ref);\n\t}\n\tif (schemaPart.description) {\n\t\treturn `\\n-> ${schemaPart.description}`;\n\t}\n\treturn \"\";\n};\n\nconst SPECIFICITY = {\n\ttype: 1,\n\toneOf: 1,\n\tanyOf: 1,\n\tallOf: 1,\n\tadditionalProperties: 2,\n\tenum: 1,\n\tinstanceof: 1,\n\trequired: 2,\n\tminimum: 2,\n\tuniqueItems: 2,\n\tminLength: 2,\n\tminItems: 2,\n\tminProperties: 2,\n\tabsolutePath: 2\n};\n\nconst filterMax = (array, fn) => {\n\tconst max = array.reduce((max, item) => Math.max(max, fn(item)), 0);\n\treturn array.filter(item => fn(item) === max);\n};\n\nconst filterChildren = children => {\n\tchildren = filterMax(children, err =>\n\t\terr.dataPath ? err.dataPath.length : 0\n\t);\n\tchildren = filterMax(children, err => SPECIFICITY[err.keyword] || 2);\n\treturn children;\n};\n\nconst indent = (str, prefix, firstLine) => {\n\tif (firstLine) {\n\t\treturn prefix + str.replace(/\\n(?!$)/g, \"\\n\" + prefix);\n\t} else {\n\t\treturn str.replace(/\\n(?!$)/g, `\\n${prefix}`);\n\t}\n};\n\nclass WebpackOptionsValidationError extends WebpackError {\n\tconstructor(validationErrors) {\n\t\tsuper(\n\t\t\t\"Invalid configuration object. \" +\n\t\t\t\t\"Webpack has been initialised using a configuration object that does not match the API schema.\\n\" +\n\t\t\t\tvalidationErrors\n\t\t\t\t\t.map(\n\t\t\t\t\t\terr =>\n\t\t\t\t\t\t\t\" - \" +\n\t\t\t\t\t\t\tindent(\n\t\t\t\t\t\t\t\tWebpackOptionsValidationError.formatValidationError(err),\n\t\t\t\t\t\t\t\t\"   \",\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.join(\"\\n\")\n\t\t);\n\n\t\tthis.name = \"WebpackOptionsValidationError\";\n\t\tthis.validationErrors = validationErrors;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n\n\tstatic formatSchema(schema, prevSchemas) {\n\t\tprevSchemas = prevSchemas || [];\n\n\t\tconst formatInnerSchema = (innerSchema, addSelf) => {\n\t\t\tif (!addSelf) {\n\t\t\t\treturn WebpackOptionsValidationError.formatSchema(\n\t\t\t\t\tinnerSchema,\n\t\t\t\t\tprevSchemas\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (prevSchemas.includes(innerSchema)) {\n\t\t\t\treturn \"(recursive)\";\n\t\t\t}\n\t\t\treturn WebpackOptionsValidationError.formatSchema(\n\t\t\t\tinnerSchema,\n\t\t\t\tprevSchemas.concat(schema)\n\t\t\t);\n\t\t};\n\n\t\tif (schema.type === \"string\") {\n\t\t\tif (schema.minLength === 1) {\n\t\t\t\treturn \"non-empty string\";\n\t\t\t}\n\t\t\tif (schema.minLength > 1) {\n\t\t\t\treturn `string (min length ${schema.minLength})`;\n\t\t\t}\n\t\t\treturn \"string\";\n\t\t}\n\t\tif (schema.type === \"boolean\") {\n\t\t\treturn \"boolean\";\n\t\t}\n\t\tif (schema.type === \"number\") {\n\t\t\treturn \"number\";\n\t\t}\n\t\tif (schema.type === \"object\") {\n\t\t\tif (schema.properties) {\n\t\t\t\tconst required = schema.required || [];\n\t\t\t\treturn `object { ${Object.keys(schema.properties)\n\t\t\t\t\t.map(property => {\n\t\t\t\t\t\tif (!required.includes(property)) return property + \"?\";\n\t\t\t\t\t\treturn property;\n\t\t\t\t\t})\n\t\t\t\t\t.concat(schema.additionalProperties ? [\"…\"] : [])\n\t\t\t\t\t.join(\", \")} }`;\n\t\t\t}\n\t\t\tif (schema.additionalProperties) {\n\t\t\t\treturn `object { <key>: ${formatInnerSchema(\n\t\t\t\t\tschema.additionalProperties\n\t\t\t\t)} }`;\n\t\t\t}\n\t\t\treturn \"object\";\n\t\t}\n\t\tif (schema.type === \"array\") {\n\t\t\treturn `[${formatInnerSchema(schema.items)}]`;\n\t\t}\n\n\t\tswitch (schema.instanceof) {\n\t\t\tcase \"Function\":\n\t\t\t\treturn \"function\";\n\t\t\tcase \"RegExp\":\n\t\t\t\treturn \"RegExp\";\n\t\t}\n\n\t\tif (schema.enum) {\n\t\t\treturn schema.enum.map(item => JSON.stringify(item)).join(\" | \");\n\t\t}\n\n\t\tif (schema.$ref) {\n\t\t\treturn formatInnerSchema(getSchemaPart(schema.$ref), true);\n\t\t}\n\t\tif (schema.allOf) {\n\t\t\treturn schema.allOf.map(formatInnerSchema).join(\" & \");\n\t\t}\n\t\tif (schema.oneOf) {\n\t\t\treturn schema.oneOf.map(formatInnerSchema).join(\" | \");\n\t\t}\n\t\tif (schema.anyOf) {\n\t\t\treturn schema.anyOf.map(formatInnerSchema).join(\" | \");\n\t\t}\n\t\treturn JSON.stringify(schema, null, 2);\n\t}\n\n\tstatic formatValidationError(err) {\n\t\tconst dataPath = `configuration${err.dataPath}`;\n\t\tif (err.keyword === \"additionalProperties\") {\n\t\t\tconst baseMessage = `${dataPath} has an unknown property '${\n\t\t\t\terr.params.additionalProperty\n\t\t\t}'. These properties are valid:\\n${getSchemaPartText(err.parentSchema)}`;\n\t\t\tif (!err.dataPath) {\n\t\t\t\tswitch (err.params.additionalProperty) {\n\t\t\t\t\tcase \"debug\":\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t`${baseMessage}\\n` +\n\t\t\t\t\t\t\t\"The 'debug' property was removed in webpack 2.0.0.\\n\" +\n\t\t\t\t\t\t\t\"Loaders should be updated to allow passing this option via loader options in module.rules.\\n\" +\n\t\t\t\t\t\t\t\"Until loaders are updated one can use the LoaderOptionsPlugin to switch loaders into debug mode:\\n\" +\n\t\t\t\t\t\t\t\"plugins: [\\n\" +\n\t\t\t\t\t\t\t\"  new webpack.LoaderOptionsPlugin({\\n\" +\n\t\t\t\t\t\t\t\"    debug: true\\n\" +\n\t\t\t\t\t\t\t\"  })\\n\" +\n\t\t\t\t\t\t\t\"]\"\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t`${baseMessage}\\n` +\n\t\t\t\t\t\"For typos: please correct them.\\n\" +\n\t\t\t\t\t\"For loader options: webpack >= v2.0.0 no longer allows custom properties in configuration.\\n\" +\n\t\t\t\t\t\"  Loaders should be updated to allow passing options via loader options in module.rules.\\n\" +\n\t\t\t\t\t\"  Until loaders are updated one can use the LoaderOptionsPlugin to pass these options to the loader:\\n\" +\n\t\t\t\t\t\"  plugins: [\\n\" +\n\t\t\t\t\t\"    new webpack.LoaderOptionsPlugin({\\n\" +\n\t\t\t\t\t\"      // test: /\\\\.xxx$/, // may apply this only for some modules\\n\" +\n\t\t\t\t\t\"      options: {\\n\" +\n\t\t\t\t\t`        ${err.params.additionalProperty}: …\\n` +\n\t\t\t\t\t\"      }\\n\" +\n\t\t\t\t\t\"    })\\n\" +\n\t\t\t\t\t\"  ]\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn baseMessage;\n\t\t} else if (err.keyword === \"oneOf\" || err.keyword === \"anyOf\") {\n\t\t\tif (err.children && err.children.length > 0) {\n\t\t\t\tif (err.schema.length === 1) {\n\t\t\t\t\tconst lastChild = err.children[err.children.length - 1];\n\t\t\t\t\tconst remainingChildren = err.children.slice(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\terr.children.length - 1\n\t\t\t\t\t);\n\t\t\t\t\treturn WebpackOptionsValidationError.formatValidationError(\n\t\t\t\t\t\tObject.assign({}, lastChild, {\n\t\t\t\t\t\t\tchildren: remainingChildren,\n\t\t\t\t\t\t\tparentSchema: Object.assign(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\terr.parentSchema,\n\t\t\t\t\t\t\t\tlastChild.parentSchema\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst children = filterChildren(err.children);\n\t\t\t\tif (children.length === 1) {\n\t\t\t\t\treturn WebpackOptionsValidationError.formatValidationError(\n\t\t\t\t\t\tchildren[0]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t`${dataPath} should be one of these:\\n${getSchemaPartText(\n\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t)}\\n` +\n\t\t\t\t\t`Details:\\n${children\n\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\terr =>\n\t\t\t\t\t\t\t\t\" * \" +\n\t\t\t\t\t\t\t\tindent(\n\t\t\t\t\t\t\t\t\tWebpackOptionsValidationError.formatValidationError(err),\n\t\t\t\t\t\t\t\t\t\"   \",\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.join(\"\\n\")}`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn `${dataPath} should be one of these:\\n${getSchemaPartText(\n\t\t\t\terr.parentSchema\n\t\t\t)}`;\n\t\t} else if (err.keyword === \"enum\") {\n\t\t\tif (\n\t\t\t\terr.parentSchema &&\n\t\t\t\terr.parentSchema.enum &&\n\t\t\t\terr.parentSchema.enum.length === 1\n\t\t\t) {\n\t\t\t\treturn `${dataPath} should be ${getSchemaPartText(err.parentSchema)}`;\n\t\t\t}\n\t\t\treturn `${dataPath} should be one of these:\\n${getSchemaPartText(\n\t\t\t\terr.parentSchema\n\t\t\t)}`;\n\t\t} else if (err.keyword === \"allOf\") {\n\t\t\treturn `${dataPath} should be:\\n${getSchemaPartText(err.parentSchema)}`;\n\t\t} else if (err.keyword === \"type\") {\n\t\t\tswitch (err.params.type) {\n\t\t\t\tcase \"object\":\n\t\t\t\t\treturn `${dataPath} should be an object.${getSchemaPartDescription(\n\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t)}`;\n\t\t\t\tcase \"string\":\n\t\t\t\t\treturn `${dataPath} should be a string.${getSchemaPartDescription(\n\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t)}`;\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\treturn `${dataPath} should be a boolean.${getSchemaPartDescription(\n\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t)}`;\n\t\t\t\tcase \"number\":\n\t\t\t\t\treturn `${dataPath} should be a number.${getSchemaPartDescription(\n\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t)}`;\n\t\t\t\tcase \"array\":\n\t\t\t\t\treturn `${dataPath} should be an array:\\n${getSchemaPartText(\n\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t)}`;\n\t\t\t}\n\t\t\treturn `${dataPath} should be ${err.params.type}:\\n${getSchemaPartText(\n\t\t\t\terr.parentSchema\n\t\t\t)}`;\n\t\t} else if (err.keyword === \"instanceof\") {\n\t\t\treturn `${dataPath} should be an instance of ${getSchemaPartText(\n\t\t\t\terr.parentSchema\n\t\t\t)}`;\n\t\t} else if (err.keyword === \"required\") {\n\t\t\tconst missingProperty = err.params.missingProperty.replace(/^\\./, \"\");\n\t\t\treturn `${dataPath} misses the property '${missingProperty}'.\\n${getSchemaPartText(\n\t\t\t\terr.parentSchema,\n\t\t\t\t[\"properties\", missingProperty]\n\t\t\t)}`;\n\t\t} else if (err.keyword === \"minimum\") {\n\t\t\treturn `${dataPath} ${err.message}.${getSchemaPartDescription(\n\t\t\t\terr.parentSchema\n\t\t\t)}`;\n\t\t} else if (err.keyword === \"uniqueItems\") {\n\t\t\treturn `${dataPath} should not contain the item '${\n\t\t\t\terr.data[err.params.i]\n\t\t\t}' twice.${getSchemaPartDescription(err.parentSchema)}`;\n\t\t} else if (\n\t\t\terr.keyword === \"minLength\" ||\n\t\t\terr.keyword === \"minItems\" ||\n\t\t\terr.keyword === \"minProperties\"\n\t\t) {\n\t\t\tif (err.params.limit === 1) {\n\t\t\t\tswitch (err.keyword) {\n\t\t\t\t\tcase \"minLength\":\n\t\t\t\t\t\treturn `${dataPath} should be an non-empty string.${getSchemaPartDescription(\n\t\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t\t)}`;\n\t\t\t\t\tcase \"minItems\":\n\t\t\t\t\t\treturn `${dataPath} should be an non-empty array.${getSchemaPartDescription(\n\t\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t\t)}`;\n\t\t\t\t\tcase \"minProperties\":\n\t\t\t\t\t\treturn `${dataPath} should be an non-empty object.${getSchemaPartDescription(\n\t\t\t\t\t\t\terr.parentSchema\n\t\t\t\t\t\t)}`;\n\t\t\t\t}\n\t\t\t\treturn `${dataPath} should be not empty.${getSchemaPartDescription(\n\t\t\t\t\terr.parentSchema\n\t\t\t\t)}`;\n\t\t\t} else {\n\t\t\t\treturn `${dataPath} ${err.message}${getSchemaPartDescription(\n\t\t\t\t\terr.parentSchema\n\t\t\t\t)}`;\n\t\t\t}\n\t\t} else if (err.keyword === \"absolutePath\") {\n\t\t\tconst baseMessage = `${dataPath}: ${\n\t\t\t\terr.message\n\t\t\t}${getSchemaPartDescription(err.parentSchema)}`;\n\t\t\tif (dataPath === \"configuration.output.filename\") {\n\t\t\t\treturn (\n\t\t\t\t\t`${baseMessage}\\n` +\n\t\t\t\t\t\"Please use output.path to specify absolute path and output.filename for the file name.\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn baseMessage;\n\t\t} else {\n\t\t\treturn `${dataPath} ${err.message} (${JSON.stringify(\n\t\t\t\terr,\n\t\t\t\tnull,\n\t\t\t\t2\n\t\t\t)}).\\n${getSchemaPartText(err.parentSchema)}`;\n\t\t}\n\t}\n}\n\nmodule.exports = WebpackOptionsValidationError;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst AsyncDependencyToInitialChunkError = require(\"./AsyncDependencyToInitialChunkError\");\nconst GraphHelpers = require(\"./GraphHelpers\");\n\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Entrypoint\")} Entrypoint */\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @typedef {Object} QueueItem\n * @property {number} action\n * @property {DependenciesBlock} block\n * @property {Module} module\n * @property {Chunk} chunk\n * @property {ChunkGroup} chunkGroup\n */\n\n/**\n * @typedef {Object} ChunkGroupInfo\n * @property {Set<Module>} minAvailableModules current minimal set of modules available at this point\n * @property {boolean} minAvailableModulesOwned true, if minAvailableModules is owned and can be modified\n * @property {Set<Module>[]} availableModulesToBeMerged enqueued updates to the minimal set of available modules\n * @property {QueueItem[]} skippedItems queue items that were skipped because module is already available in parent chunks (need to reconsider when minAvailableModules is shrinking)\n * @property {Set<Module>} resultingAvailableModules set of modules available including modules from this chunk group\n */\n\n/**\n * @typedef {Object} ChunkGroupDep\n * @property {AsyncDependenciesBlock} block referencing block\n * @property {ChunkGroup} chunkGroup referenced chunk group\n */\n\n/**\n * @template T\n * @param {Set<T>} a first set\n * @param {Set<T>} b second set\n * @returns {number} cmp\n */\nconst bySetSize = (a, b) => {\n\treturn b.size - a.size;\n};\n\n/**\n * Extracts simplified info from the modules and their dependencies\n * @param {Compilation} compilation the compilation\n * @returns {Map<DependenciesBlock, { modules: Iterable<Module>, blocks: AsyncDependenciesBlock[]}>} the mapping block to modules and inner blocks\n */\nconst extraceBlockInfoMap = compilation => {\n\t/** @type {Map<DependenciesBlock, { modules: Iterable<Module>, blocks: AsyncDependenciesBlock[]}>} */\n\tconst blockInfoMap = new Map();\n\n\t/**\n\t * @param {Dependency} d dependency to iterate over\n\t * @returns {void}\n\t */\n\tconst iteratorDependency = d => {\n\t\t// We skip Dependencies without Reference\n\t\tconst ref = compilation.getDependencyReference(currentModule, d);\n\t\tif (!ref) {\n\t\t\treturn;\n\t\t}\n\t\t// We skip Dependencies without Module pointer\n\t\tconst refModule = ref.module;\n\t\tif (!refModule) {\n\t\t\treturn;\n\t\t}\n\t\t// We skip weak Dependencies\n\t\tif (ref.weak) {\n\t\t\treturn;\n\t\t}\n\n\t\tblockInfoModules.add(refModule);\n\t};\n\n\t/**\n\t * @param {AsyncDependenciesBlock} b blocks to prepare\n\t * @returns {void}\n\t */\n\tconst iteratorBlockPrepare = b => {\n\t\tblockInfoBlocks.push(b);\n\t\tblockQueue.push(b);\n\t};\n\n\t/** @type {Module} */\n\tlet currentModule;\n\t/** @type {DependenciesBlock} */\n\tlet block;\n\t/** @type {DependenciesBlock[]} */\n\tlet blockQueue;\n\t/** @type {Set<Module>} */\n\tlet blockInfoModules;\n\t/** @type {AsyncDependenciesBlock[]} */\n\tlet blockInfoBlocks;\n\n\tfor (const module of compilation.modules) {\n\t\tblockQueue = [module];\n\t\tcurrentModule = module;\n\t\twhile (blockQueue.length > 0) {\n\t\t\tblock = blockQueue.pop();\n\t\t\tblockInfoModules = new Set();\n\t\t\tblockInfoBlocks = [];\n\n\t\t\tif (block.variables) {\n\t\t\t\tfor (const variable of block.variables) {\n\t\t\t\t\tfor (const dep of variable.dependencies) iteratorDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (block.dependencies) {\n\t\t\t\tfor (const dep of block.dependencies) iteratorDependency(dep);\n\t\t\t}\n\n\t\t\tif (block.blocks) {\n\t\t\t\tfor (const b of block.blocks) iteratorBlockPrepare(b);\n\t\t\t}\n\n\t\t\tconst blockInfo = {\n\t\t\t\tmodules: blockInfoModules,\n\t\t\t\tblocks: blockInfoBlocks\n\t\t\t};\n\t\t\tblockInfoMap.set(block, blockInfo);\n\t\t}\n\t}\n\n\treturn blockInfoMap;\n};\n\n/**\n *\n * @param {Compilation} compilation the compilation\n * @param {Entrypoint[]} inputChunkGroups input groups\n * @param {Map<ChunkGroup, ChunkGroupInfo>} chunkGroupInfoMap mapping from chunk group to available modules\n * @param {Map<ChunkGroup, ChunkGroupDep[]>} chunkDependencies dependencies for chunk groups\n * @param {Set<DependenciesBlock>} blocksWithNestedBlocks flag for blocks that have nested blocks\n * @param {Set<ChunkGroup>} allCreatedChunkGroups filled with all chunk groups that are created here\n */\nconst visitModules = (\n\tcompilation,\n\tinputChunkGroups,\n\tchunkGroupInfoMap,\n\tchunkDependencies,\n\tblocksWithNestedBlocks,\n\tallCreatedChunkGroups\n) => {\n\tconst logger = compilation.getLogger(\"webpack.buildChunkGraph.visitModules\");\n\tconst { namedChunkGroups } = compilation;\n\n\tlogger.time(\"prepare\");\n\tconst blockInfoMap = extraceBlockInfoMap(compilation);\n\n\t/** @type {Map<ChunkGroup, { index: number, index2: number }>} */\n\tconst chunkGroupCounters = new Map();\n\tfor (const chunkGroup of inputChunkGroups) {\n\t\tchunkGroupCounters.set(chunkGroup, {\n\t\t\tindex: 0,\n\t\t\tindex2: 0\n\t\t});\n\t}\n\n\tlet nextFreeModuleIndex = 0;\n\tlet nextFreeModuleIndex2 = 0;\n\n\t/** @type {Map<DependenciesBlock, ChunkGroup>} */\n\tconst blockChunkGroups = new Map();\n\n\tconst ADD_AND_ENTER_MODULE = 0;\n\tconst ENTER_MODULE = 1;\n\tconst PROCESS_BLOCK = 2;\n\tconst LEAVE_MODULE = 3;\n\n\t/**\n\t * @param {QueueItem[]} queue the queue array (will be mutated)\n\t * @param {ChunkGroup} chunkGroup chunk group\n\t * @returns {QueueItem[]} the queue array again\n\t */\n\tconst reduceChunkGroupToQueueItem = (queue, chunkGroup) => {\n\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\tconst module = chunk.entryModule;\n\t\t\tqueue.push({\n\t\t\t\taction: ENTER_MODULE,\n\t\t\t\tblock: module,\n\t\t\t\tmodule,\n\t\t\t\tchunk,\n\t\t\t\tchunkGroup\n\t\t\t});\n\t\t}\n\t\tchunkGroupInfoMap.set(chunkGroup, {\n\t\t\tminAvailableModules: new Set(),\n\t\t\tminAvailableModulesOwned: true,\n\t\t\tavailableModulesToBeMerged: [],\n\t\t\tskippedItems: [],\n\t\t\tresultingAvailableModules: undefined\n\t\t});\n\t\treturn queue;\n\t};\n\n\t// Start with the provided modules/chunks\n\t/** @type {QueueItem[]} */\n\tlet queue = inputChunkGroups\n\t\t.reduce(reduceChunkGroupToQueueItem, [])\n\t\t.reverse();\n\t/** @type {Map<ChunkGroup, Set<ChunkGroup>>} */\n\tconst queueConnect = new Map();\n\t/** @type {Set<ChunkGroupInfo>} */\n\tconst outdatedChunkGroupInfo = new Set();\n\t/** @type {QueueItem[]} */\n\tlet queueDelayed = [];\n\n\tlogger.timeEnd(\"prepare\");\n\n\t/** @type {Module} */\n\tlet module;\n\t/** @type {Chunk} */\n\tlet chunk;\n\t/** @type {ChunkGroup} */\n\tlet chunkGroup;\n\t/** @type {DependenciesBlock} */\n\tlet block;\n\t/** @type {Set<Module>} */\n\tlet minAvailableModules;\n\t/** @type {QueueItem[]} */\n\tlet skippedItems;\n\n\t// For each async Block in graph\n\t/**\n\t * @param {AsyncDependenciesBlock} b iterating over each Async DepBlock\n\t * @returns {void}\n\t */\n\tconst iteratorBlock = b => {\n\t\t// 1. We create a chunk for this Block\n\t\t// but only once (blockChunkGroups map)\n\t\tlet c = blockChunkGroups.get(b);\n\t\tif (c === undefined) {\n\t\t\tc = namedChunkGroups.get(b.chunkName);\n\t\t\tif (c && c.isInitial()) {\n\t\t\t\tcompilation.errors.push(\n\t\t\t\t\tnew AsyncDependencyToInitialChunkError(b.chunkName, module, b.loc)\n\t\t\t\t);\n\t\t\t\tc = chunkGroup;\n\t\t\t} else {\n\t\t\t\tc = compilation.addChunkInGroup(\n\t\t\t\t\tb.groupOptions || b.chunkName,\n\t\t\t\t\tmodule,\n\t\t\t\t\tb.loc,\n\t\t\t\t\tb.request\n\t\t\t\t);\n\t\t\t\tchunkGroupCounters.set(c, { index: 0, index2: 0 });\n\t\t\t\tblockChunkGroups.set(b, c);\n\t\t\t\tallCreatedChunkGroups.add(c);\n\t\t\t}\n\t\t} else {\n\t\t\t// TODO webpack 5 remove addOptions check\n\t\t\tif (c.addOptions) c.addOptions(b.groupOptions);\n\t\t\tc.addOrigin(module, b.loc, b.request);\n\t\t}\n\n\t\t// 2. We store the Block+Chunk mapping as dependency for the chunk\n\t\tlet deps = chunkDependencies.get(chunkGroup);\n\t\tif (!deps) chunkDependencies.set(chunkGroup, (deps = []));\n\t\tdeps.push({\n\t\t\tblock: b,\n\t\t\tchunkGroup: c\n\t\t});\n\n\t\t// 3. We create/update the chunk group info\n\t\tlet connectList = queueConnect.get(chunkGroup);\n\t\tif (connectList === undefined) {\n\t\t\tconnectList = new Set();\n\t\t\tqueueConnect.set(chunkGroup, connectList);\n\t\t}\n\t\tconnectList.add(c);\n\n\t\t// 4. We enqueue the DependenciesBlock for traversal\n\t\tqueueDelayed.push({\n\t\t\taction: PROCESS_BLOCK,\n\t\t\tblock: b,\n\t\t\tmodule: module,\n\t\t\tchunk: c.chunks[0],\n\t\t\tchunkGroup: c\n\t\t});\n\t};\n\n\t// Iterative traversal of the Module graph\n\t// Recursive would be simpler to write but could result in Stack Overflows\n\twhile (queue.length) {\n\t\tlogger.time(\"visiting\");\n\t\twhile (queue.length) {\n\t\t\tconst queueItem = queue.pop();\n\t\t\tmodule = queueItem.module;\n\t\t\tblock = queueItem.block;\n\t\t\tchunk = queueItem.chunk;\n\t\t\tif (chunkGroup !== queueItem.chunkGroup) {\n\t\t\t\tchunkGroup = queueItem.chunkGroup;\n\t\t\t\tconst chunkGroupInfo = chunkGroupInfoMap.get(chunkGroup);\n\t\t\t\tminAvailableModules = chunkGroupInfo.minAvailableModules;\n\t\t\t\tskippedItems = chunkGroupInfo.skippedItems;\n\t\t\t}\n\n\t\t\tswitch (queueItem.action) {\n\t\t\t\tcase ADD_AND_ENTER_MODULE: {\n\t\t\t\t\tif (minAvailableModules.has(module)) {\n\t\t\t\t\t\t// already in parent chunks\n\t\t\t\t\t\t// skip it for now, but enqueue for rechecking when minAvailableModules shrinks\n\t\t\t\t\t\tskippedItems.push(queueItem);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// We connect Module and Chunk when not already done\n\t\t\t\t\tif (chunk.addModule(module)) {\n\t\t\t\t\t\tmodule.addChunk(chunk);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// already connected, skip it\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// fallthrough\n\t\t\t\tcase ENTER_MODULE: {\n\t\t\t\t\tif (chunkGroup !== undefined) {\n\t\t\t\t\t\tconst index = chunkGroup.getModuleIndex(module);\n\t\t\t\t\t\tif (index === undefined) {\n\t\t\t\t\t\t\tchunkGroup.setModuleIndex(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tchunkGroupCounters.get(chunkGroup).index++\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (module.index === null) {\n\t\t\t\t\t\tmodule.index = nextFreeModuleIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\taction: LEAVE_MODULE,\n\t\t\t\t\t\tblock,\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tchunkGroup\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// fallthrough\n\t\t\t\tcase PROCESS_BLOCK: {\n\t\t\t\t\t// get prepared block info\n\t\t\t\t\tconst blockInfo = blockInfoMap.get(block);\n\n\t\t\t\t\t// Buffer items because order need to be reverse to get indicies correct\n\t\t\t\t\tconst skipBuffer = [];\n\t\t\t\t\tconst queueBuffer = [];\n\t\t\t\t\t// Traverse all referenced modules\n\t\t\t\t\tfor (const refModule of blockInfo.modules) {\n\t\t\t\t\t\tif (chunk.containsModule(refModule)) {\n\t\t\t\t\t\t\t// skip early if already connected\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (minAvailableModules.has(refModule)) {\n\t\t\t\t\t\t\t// already in parent chunks, skip it for now\n\t\t\t\t\t\t\tskipBuffer.push({\n\t\t\t\t\t\t\t\taction: ADD_AND_ENTER_MODULE,\n\t\t\t\t\t\t\t\tblock: refModule,\n\t\t\t\t\t\t\t\tmodule: refModule,\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tchunkGroup\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// enqueue the add and enter to enter in the correct order\n\t\t\t\t\t\t// this is relevant with circular dependencies\n\t\t\t\t\t\tqueueBuffer.push({\n\t\t\t\t\t\t\taction: ADD_AND_ENTER_MODULE,\n\t\t\t\t\t\t\tblock: refModule,\n\t\t\t\t\t\t\tmodule: refModule,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tchunkGroup\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// Add buffered items in reversed order\n\t\t\t\t\tfor (let i = skipBuffer.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tskippedItems.push(skipBuffer[i]);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = queueBuffer.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tqueue.push(queueBuffer[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Traverse all Blocks\n\t\t\t\t\tfor (const block of blockInfo.blocks) iteratorBlock(block);\n\n\t\t\t\t\tif (blockInfo.blocks.length > 0 && module !== block) {\n\t\t\t\t\t\tblocksWithNestedBlocks.add(block);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase LEAVE_MODULE: {\n\t\t\t\t\tif (chunkGroup !== undefined) {\n\t\t\t\t\t\tconst index = chunkGroup.getModuleIndex2(module);\n\t\t\t\t\t\tif (index === undefined) {\n\t\t\t\t\t\t\tchunkGroup.setModuleIndex2(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tchunkGroupCounters.get(chunkGroup).index2++\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (module.index2 === null) {\n\t\t\t\t\t\tmodule.index2 = nextFreeModuleIndex2++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlogger.timeEnd(\"visiting\");\n\n\t\tif (queueConnect.size > 0) {\n\t\t\tlogger.time(\"calculating available modules\");\n\n\t\t\t// Figure out new parents for chunk groups\n\t\t\t// to get new available modules for these children\n\t\t\tfor (const [chunkGroup, targets] of queueConnect) {\n\t\t\t\tconst info = chunkGroupInfoMap.get(chunkGroup);\n\t\t\t\tlet minAvailableModules = info.minAvailableModules;\n\n\t\t\t\t// 1. Create a new Set of available modules at this points\n\t\t\t\tconst resultingAvailableModules = new Set(minAvailableModules);\n\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\tfor (const m of chunk.modulesIterable) {\n\t\t\t\t\t\tresultingAvailableModules.add(m);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tinfo.resultingAvailableModules = resultingAvailableModules;\n\n\t\t\t\t// 2. Update chunk group info\n\t\t\t\tfor (const target of targets) {\n\t\t\t\t\tlet chunkGroupInfo = chunkGroupInfoMap.get(target);\n\t\t\t\t\tif (chunkGroupInfo === undefined) {\n\t\t\t\t\t\tchunkGroupInfo = {\n\t\t\t\t\t\t\tminAvailableModules: undefined,\n\t\t\t\t\t\t\tminAvailableModulesOwned: undefined,\n\t\t\t\t\t\t\tavailableModulesToBeMerged: [],\n\t\t\t\t\t\t\tskippedItems: [],\n\t\t\t\t\t\t\tresultingAvailableModules: undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tchunkGroupInfoMap.set(target, chunkGroupInfo);\n\t\t\t\t\t}\n\t\t\t\t\tchunkGroupInfo.availableModulesToBeMerged.push(\n\t\t\t\t\t\tresultingAvailableModules\n\t\t\t\t\t);\n\t\t\t\t\toutdatedChunkGroupInfo.add(chunkGroupInfo);\n\t\t\t\t}\n\t\t\t}\n\t\t\tqueueConnect.clear();\n\t\t\tlogger.timeEnd(\"calculating available modules\");\n\n\t\t\tif (outdatedChunkGroupInfo.size > 0) {\n\t\t\t\tlogger.time(\"merging available modules\");\n\t\t\t\t// Execute the merge\n\t\t\t\tfor (const info of outdatedChunkGroupInfo) {\n\t\t\t\t\tconst availableModulesToBeMerged = info.availableModulesToBeMerged;\n\t\t\t\t\tlet minAvailableModules = info.minAvailableModules;\n\n\t\t\t\t\t// 1. Get minimal available modules\n\t\t\t\t\t// It doesn't make sense to traverse a chunk again with more available modules.\n\t\t\t\t\t// This step calculates the minimal available modules and skips traversal when\n\t\t\t\t\t// the list didn't shrink.\n\t\t\t\t\tif (availableModulesToBeMerged.length > 1) {\n\t\t\t\t\t\tavailableModulesToBeMerged.sort(bySetSize);\n\t\t\t\t\t}\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\tfor (const availableModules of availableModulesToBeMerged) {\n\t\t\t\t\t\tif (minAvailableModules === undefined) {\n\t\t\t\t\t\t\tminAvailableModules = availableModules;\n\t\t\t\t\t\t\tinfo.minAvailableModules = minAvailableModules;\n\t\t\t\t\t\t\tinfo.minAvailableModulesOwned = false;\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (info.minAvailableModulesOwned) {\n\t\t\t\t\t\t\t\t// We own it and can modify it\n\t\t\t\t\t\t\t\tfor (const m of minAvailableModules) {\n\t\t\t\t\t\t\t\t\tif (!availableModules.has(m)) {\n\t\t\t\t\t\t\t\t\t\tminAvailableModules.delete(m);\n\t\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (const m of minAvailableModules) {\n\t\t\t\t\t\t\t\t\tif (!availableModules.has(m)) {\n\t\t\t\t\t\t\t\t\t\t// minAvailableModules need to be modified\n\t\t\t\t\t\t\t\t\t\t// but we don't own it\n\t\t\t\t\t\t\t\t\t\t// construct a new Set as intersection of minAvailableModules and availableModules\n\t\t\t\t\t\t\t\t\t\t/** @type {Set<Module>} */\n\t\t\t\t\t\t\t\t\t\tconst newSet = new Set();\n\t\t\t\t\t\t\t\t\t\tconst iterator = minAvailableModules[Symbol.iterator]();\n\t\t\t\t\t\t\t\t\t\t/** @type {IteratorResult<Module>} */\n\t\t\t\t\t\t\t\t\t\tlet it;\n\t\t\t\t\t\t\t\t\t\twhile (!(it = iterator.next()).done) {\n\t\t\t\t\t\t\t\t\t\t\tconst module = it.value;\n\t\t\t\t\t\t\t\t\t\t\tif (module === m) break;\n\t\t\t\t\t\t\t\t\t\t\tnewSet.add(module);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twhile (!(it = iterator.next()).done) {\n\t\t\t\t\t\t\t\t\t\t\tconst module = it.value;\n\t\t\t\t\t\t\t\t\t\t\tif (availableModules.has(module)) {\n\t\t\t\t\t\t\t\t\t\t\t\tnewSet.add(module);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tminAvailableModules = newSet;\n\t\t\t\t\t\t\t\t\t\tinfo.minAvailableModulesOwned = true;\n\t\t\t\t\t\t\t\t\t\tinfo.minAvailableModules = newSet;\n\t\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tavailableModulesToBeMerged.length = 0;\n\t\t\t\t\tif (!changed) continue;\n\n\t\t\t\t\t// 2. Reconsider skipped items\n\t\t\t\t\tfor (const queueItem of info.skippedItems) {\n\t\t\t\t\t\tqueue.push(queueItem);\n\t\t\t\t\t}\n\t\t\t\t\tinfo.skippedItems.length = 0;\n\t\t\t\t}\n\t\t\t\toutdatedChunkGroupInfo.clear();\n\t\t\t\tlogger.timeEnd(\"merging available modules\");\n\t\t\t}\n\t\t}\n\n\t\t// Run queueDelayed when all items of the queue are processed\n\t\t// This is important to get the global indicing correct\n\t\t// Async blocks should be processed after all sync blocks are processed\n\t\tif (queue.length === 0) {\n\t\t\tconst tempQueue = queue;\n\t\t\tqueue = queueDelayed.reverse();\n\t\t\tqueueDelayed = tempQueue;\n\t\t}\n\t}\n};\n\n/**\n *\n * @param {Set<DependenciesBlock>} blocksWithNestedBlocks flag for blocks that have nested blocks\n * @param {Map<ChunkGroup, ChunkGroupDep[]>} chunkDependencies dependencies for chunk groups\n * @param {Map<ChunkGroup, ChunkGroupInfo>} chunkGroupInfoMap mapping from chunk group to available modules\n */\nconst connectChunkGroups = (\n\tblocksWithNestedBlocks,\n\tchunkDependencies,\n\tchunkGroupInfoMap\n) => {\n\t/** @type {Set<Module>} */\n\tlet resultingAvailableModules;\n\n\t/**\n\t * Helper function to check if all modules of a chunk are available\n\t *\n\t * @param {ChunkGroup} chunkGroup the chunkGroup to scan\n\t * @param {Set<Module>} availableModules the comparitor set\n\t * @returns {boolean} return true if all modules of a chunk are available\n\t */\n\tconst areModulesAvailable = (chunkGroup, availableModules) => {\n\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\tfor (const module of chunk.modulesIterable) {\n\t\t\t\tif (!availableModules.has(module)) return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\n\t// For each edge in the basic chunk graph\n\t/**\n\t * @param {ChunkGroupDep} dep the dependency used for filtering\n\t * @returns {boolean} used to filter \"edges\" (aka Dependencies) that were pointing\n\t * to modules that are already available. Also filters circular dependencies in the chunks graph\n\t */\n\tconst filterFn = dep => {\n\t\tconst depChunkGroup = dep.chunkGroup;\n\t\t// TODO is this needed?\n\t\tif (blocksWithNestedBlocks.has(dep.block)) return true;\n\t\tif (areModulesAvailable(depChunkGroup, resultingAvailableModules)) {\n\t\t\treturn false; // break all modules are already available\n\t\t}\n\t\treturn true;\n\t};\n\n\t// For all deps, check if chunk groups need to be connected\n\tfor (const [chunkGroup, deps] of chunkDependencies) {\n\t\tif (deps.length === 0) continue;\n\n\t\t// 1. Get info from chunk group info map\n\t\tconst info = chunkGroupInfoMap.get(chunkGroup);\n\t\tresultingAvailableModules = info.resultingAvailableModules;\n\n\t\t// 2. Foreach edge\n\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\tconst dep = deps[i];\n\n\t\t\t// Filter inline, rather than creating a new array from `.filter()`\n\t\t\t// TODO check if inlining filterFn makes sense here\n\t\t\tif (!filterFn(dep)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst depChunkGroup = dep.chunkGroup;\n\t\t\tconst depBlock = dep.block;\n\n\t\t\t// 5. Connect block with chunk\n\t\t\tGraphHelpers.connectDependenciesBlockAndChunkGroup(\n\t\t\t\tdepBlock,\n\t\t\t\tdepChunkGroup\n\t\t\t);\n\n\t\t\t// 6. Connect chunk with parent\n\t\t\tGraphHelpers.connectChunkGroupParentAndChild(chunkGroup, depChunkGroup);\n\t\t}\n\t}\n};\n\n/**\n * Remove all unconnected chunk groups\n * @param {Compilation} compilation the compilation\n * @param {Iterable<ChunkGroup>} allCreatedChunkGroups all chunk groups that where created before\n */\nconst cleanupUnconnectedGroups = (compilation, allCreatedChunkGroups) => {\n\tfor (const chunkGroup of allCreatedChunkGroups) {\n\t\tif (chunkGroup.getNumberOfParents() === 0) {\n\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\tconst idx = compilation.chunks.indexOf(chunk);\n\t\t\t\tif (idx >= 0) compilation.chunks.splice(idx, 1);\n\t\t\t\tchunk.remove(\"unconnected\");\n\t\t\t}\n\t\t\tchunkGroup.remove(\"unconnected\");\n\t\t}\n\t}\n};\n\n/**\n * This method creates the Chunk graph from the Module graph\n * @param {Compilation} compilation the compilation\n * @param {Entrypoint[]} inputChunkGroups chunk groups which are processed\n * @returns {void}\n */\nconst buildChunkGraph = (compilation, inputChunkGroups) => {\n\t// SHARED STATE\n\n\t/** @type {Map<ChunkGroup, ChunkGroupDep[]>} */\n\tconst chunkDependencies = new Map();\n\n\t/** @type {Set<ChunkGroup>} */\n\tconst allCreatedChunkGroups = new Set();\n\n\t/** @type {Map<ChunkGroup, ChunkGroupInfo>} */\n\tconst chunkGroupInfoMap = new Map();\n\n\t/** @type {Set<DependenciesBlock>} */\n\tconst blocksWithNestedBlocks = new Set();\n\n\t// PART ONE\n\n\tvisitModules(\n\t\tcompilation,\n\t\tinputChunkGroups,\n\t\tchunkGroupInfoMap,\n\t\tchunkDependencies,\n\t\tblocksWithNestedBlocks,\n\t\tallCreatedChunkGroups\n\t);\n\n\t// PART TWO\n\n\tconnectChunkGroups(\n\t\tblocksWithNestedBlocks,\n\t\tchunkDependencies,\n\t\tchunkGroupInfoMap\n\t);\n\n\t// Cleaup work\n\n\tcleanupUnconnectedGroups(compilation, allCreatedChunkGroups);\n};\n\nmodule.exports = buildChunkGraph;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n\n// TODO webpack 5 remove string type from a and b\n/**\n * Compare two locations\n * @param {string|DependencyLocation} a A location node\n * @param {string|DependencyLocation} b A location node\n * @returns {-1|0|1} sorting comparator value\n */\nmodule.exports = (a, b) => {\n\tif (typeof a === \"string\") {\n\t\tif (typeof b === \"string\") {\n\t\t\tif (a < b) return -1;\n\t\t\tif (a > b) return 1;\n\t\t\treturn 0;\n\t\t} else if (typeof b === \"object\") {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} else if (typeof a === \"object\") {\n\t\tif (typeof b === \"string\") {\n\t\t\treturn -1;\n\t\t} else if (typeof b === \"object\") {\n\t\t\tif (\"start\" in a && \"start\" in b) {\n\t\t\t\tconst ap = a.start;\n\t\t\t\tconst bp = b.start;\n\t\t\t\tif (ap.line < bp.line) return -1;\n\t\t\t\tif (ap.line > bp.line) return 1;\n\t\t\t\tif (ap.column < bp.column) return -1;\n\t\t\t\tif (ap.column > bp.column) return 1;\n\t\t\t}\n\t\t\tif (\"name\" in a && \"name\" in b) {\n\t\t\t\tif (a.name < b.name) return -1;\n\t\t\t\tif (a.name > b.name) return 1;\n\t\t\t}\n\t\t\tif (\"index\" in a && \"index\" in b) {\n\t\t\t\tif (a.index < b.index) return -1;\n\t\t\t\tif (a.index > b.index) return 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n};\n","const fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\nconst { Tracer } = require(\"chrome-trace-event\");\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/debug/ProfilingPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n\nlet inspector = undefined;\n\ntry {\n\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\tinspector = require(\"inspector\");\n} catch (e) {\n\tconsole.log(\"Unable to CPU profile in < node 8.0\");\n}\n\nclass Profiler {\n\tconstructor(inspector) {\n\t\tthis.session = undefined;\n\t\tthis.inspector = inspector;\n\t}\n\n\thasSession() {\n\t\treturn this.session !== undefined;\n\t}\n\n\tstartProfiling() {\n\t\tif (this.inspector === undefined) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\ttry {\n\t\t\tthis.session = new inspector.Session();\n\t\t\tthis.session.connect();\n\t\t} catch (_) {\n\t\t\tthis.session = undefined;\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis.sendCommand(\"Profiler.setSamplingInterval\", {\n\t\t\t\tinterval: 100\n\t\t\t}),\n\t\t\tthis.sendCommand(\"Profiler.enable\"),\n\t\t\tthis.sendCommand(\"Profiler.start\")\n\t\t]);\n\t}\n\n\tsendCommand(method, params) {\n\t\tif (this.hasSession()) {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\treturn this.session.post(method, params, (err, params) => {\n\t\t\t\t\tif (err !== null) {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres(params);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tif (this.hasSession()) {\n\t\t\tthis.session.disconnect();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tstopProfiling() {\n\t\treturn this.sendCommand(\"Profiler.stop\");\n\t}\n}\n\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n\n/**\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\nconst createTrace = outputPath => {\n\tconst trace = new Tracer({\n\t\tnoStream: true\n\t});\n\tconst profiler = new Profiler(inspector);\n\tif (/\\/|\\\\/.test(outputPath)) {\n\t\tconst dirPath = path.dirname(outputPath);\n\t\tmkdirp.sync(dirPath);\n\t}\n\tconst fsStream = fs.createWriteStream(outputPath);\n\n\tlet counter = 0;\n\n\ttrace.pipe(fsStream);\n\t// These are critical events that need to be inserted so that tools like\n\t// chrome dev tools can load the profile.\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInPage\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\",\n\t\t\t\tpage: \"0xfff\",\n\t\t\t\tframes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tframe: \"0xfff\",\n\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\tname: \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t});\n\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInBrowser\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\"\n\t\t\t}\n\t\t}\n\t});\n\n\treturn {\n\t\ttrace,\n\t\tcounter,\n\t\tprofiler,\n\t\tend: callback => {\n\t\t\t// Wait until the write stream finishes.\n\t\t\tfsStream.on(\"finish\", () => {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\t// Tear down the readable trace stream.\n\t\t\ttrace.push(null);\n\t\t}\n\t};\n};\n\nconst pluginName = \"ProfilingPlugin\";\n\nclass ProfilingPlugin {\n\t/**\n\t * @param {ProfilingPluginOptions=} opts options object\n\t */\n\tconstructor(opts) {\n\t\tvalidateOptions(schema, opts || {}, \"Profiling plugin\");\n\t\topts = opts || {};\n\t\tthis.outputPath = opts.outputPath || \"events.json\";\n\t}\n\n\tapply(compiler) {\n\t\tconst tracer = createTrace(this.outputPath);\n\t\ttracer.profiler.startProfiling();\n\n\t\t// Compiler Hooks\n\t\tObject.keys(compiler.hooks).forEach(hookName => {\n\t\t\tcompiler.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(\"Compiler\", tracer)(hookName)\n\t\t\t);\n\t\t});\n\n\t\tObject.keys(compiler.resolverFactory.hooks).forEach(hookName => {\n\t\t\tcompiler.resolverFactory.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(\"Resolver\", tracer)(hookName)\n\t\t\t);\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tpluginName,\n\t\t\t(compilation, { normalModuleFactory, contextModuleFactory }) => {\n\t\t\t\tinterceptAllHooksFor(compilation, tracer, \"Compilation\");\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tnormalModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Normal Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tcontextModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Context Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllParserHooks(normalModuleFactory, tracer);\n\t\t\t\tinterceptTemplateInstancesFrom(compilation, tracer);\n\t\t\t}\n\t\t);\n\n\t\t// We need to write out the CPU profile when we are all done.\n\t\tcompiler.hooks.done.tapAsync(\n\t\t\t{\n\t\t\t\tname: pluginName,\n\t\t\t\tstage: Infinity\n\t\t\t},\n\t\t\t(stats, callback) => {\n\t\t\t\ttracer.profiler.stopProfiling().then(parsedResults => {\n\t\t\t\t\tif (parsedResults === undefined) {\n\t\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\t\ttracer.trace.flush();\n\t\t\t\t\t\ttracer.end(callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cpuStartTime = parsedResults.profile.startTime;\n\t\t\t\t\tconst cpuEndTime = parsedResults.profile.endTime;\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"toplevel\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tsrc_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n\t\t\t\t\t\t\tsrc_func: \"Accept\"\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"EvaluateScript\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"devtools.timeline\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\tdur: cpuEndTime - cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\t\t\tlineNumber: 1,\n\t\t\t\t\t\t\t\tcolumnNumber: 1,\n\t\t\t\t\t\t\t\tframe: \"0xFFF\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.instantEvent({\n\t\t\t\t\t\tname: \"CpuProfile\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\t\t\t\t\tts: cpuEndTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tcpuProfile: parsedResults.profile\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\ttracer.trace.flush();\n\t\t\t\t\ttracer.end(callback);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nconst interceptTemplateInstancesFrom = (compilation, tracer) => {\n\tconst {\n\t\tmainTemplate,\n\t\tchunkTemplate,\n\t\thotUpdateChunkTemplate,\n\t\tmoduleTemplates\n\t} = compilation;\n\n\tconst { javascript, webassembly } = moduleTemplates;\n\n\t[\n\t\t{\n\t\t\tinstance: mainTemplate,\n\t\t\tname: \"MainTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: chunkTemplate,\n\t\t\tname: \"ChunkTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: hotUpdateChunkTemplate,\n\t\t\tname: \"HotUpdateChunkTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: javascript,\n\t\t\tname: \"JavaScriptModuleTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: webassembly,\n\t\t\tname: \"WebAssemblyModuleTemplate\"\n\t\t}\n\t].forEach(templateObject => {\n\t\tObject.keys(templateObject.instance.hooks).forEach(hookName => {\n\t\t\ttemplateObject.instance.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(templateObject.name, tracer)(hookName)\n\t\t\t);\n\t\t});\n\t});\n};\n\nconst interceptAllHooksFor = (instance, tracer, logLabel) => {\n\tif (Reflect.has(instance, \"hooks\")) {\n\t\tObject.keys(instance.hooks).forEach(hookName => {\n\t\t\tinstance.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(logLabel, tracer)(hookName)\n\t\t\t);\n\t\t});\n\t}\n};\n\nconst interceptAllParserHooks = (moduleFactory, tracer) => {\n\tconst moduleTypes = [\n\t\t\"javascript/auto\",\n\t\t\"javascript/dynamic\",\n\t\t\"javascript/esm\",\n\t\t\"json\",\n\t\t\"webassembly/experimental\"\n\t];\n\n\tmoduleTypes.forEach(moduleType => {\n\t\tmoduleFactory.hooks.parser\n\t\t\t.for(moduleType)\n\t\t\t.tap(\"ProfilingPlugin\", (parser, parserOpts) => {\n\t\t\t\tinterceptAllHooksFor(parser, tracer, \"Parser\");\n\t\t\t});\n\t});\n};\n\nconst makeInterceptorFor = (instance, tracer) => hookName => ({\n\tregister: ({ name, type, context, fn }) => {\n\t\tconst newFn = makeNewProfiledTapFn(hookName, tracer, {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tfn\n\t\t});\n\t\treturn {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tcontext,\n\t\t\tfn: newFn\n\t\t};\n\t}\n});\n\n// TODO improve typing\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\nconst makeNewProfiledTapFn = (hookName, tracer, { name, type, fn }) => {\n\tconst defaultCategory = [\"blink.user_timing\"];\n\n\tswitch (type) {\n\t\tcase \"promise\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst promise = /** @type {Promise<*>} */ (fn(...args));\n\t\t\t\treturn promise.then(r => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\treturn r;\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"async\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tfn(...args, (...r) => {\n\t\t\t\t\tconst callback = args.pop();\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tcallback(...r);\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"sync\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\t// Do not instrument ourself due to the CPU\n\t\t\t\t// profile needing to be the last event in the trace.\n\t\t\t\tif (name === pluginName) {\n\t\t\t\t\treturn fn(...args);\n\t\t\t\t}\n\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tlet r;\n\t\t\t\ttry {\n\t\t\t\t\tr = fn(...args);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\ttracer.trace.end({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\treturn r;\n\t\t\t};\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass AMDDefineDependency extends NullDependency {\n\tconstructor(range, arrayRange, functionRange, objectRange, namedModule) {\n\t\tsuper();\n\t\tthis.range = range;\n\t\tthis.arrayRange = arrayRange;\n\t\tthis.functionRange = functionRange;\n\t\tthis.objectRange = objectRange;\n\t\tthis.namedModule = namedModule;\n\t\tthis.localModule = null;\n\t}\n\n\tget type() {\n\t\treturn \"amd define\";\n\t}\n}\n\nAMDDefineDependency.Template = class AMDDefineDependencyTemplate {\n\tget definitions() {\n\t\treturn {\n\t\t\tf: [\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_RESULT__;\",\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_RESULT__ = (#).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))`\n\t\t\t],\n\t\t\to: [\"\", \"!(module.exports = #)\"],\n\t\t\tof: [\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\",\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_FACTORY__ = (#),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))`\n\t\t\t],\n\t\t\taf: [\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\",\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_ARRAY__ = #, __WEBPACK_AMD_DEFINE_RESULT__ = (#).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))`\n\t\t\t],\n\t\t\tao: [\"\", \"!(#, module.exports = #)\"],\n\t\t\taof: [\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\",\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_ARRAY__ = #, __WEBPACK_AMD_DEFINE_FACTORY__ = (#),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))`\n\t\t\t],\n\t\t\tlf: [\n\t\t\t\t\"var XXX, XXXmodule;\",\n\t\t\t\t\"!(XXXmodule = { id: YYY, exports: {}, loaded: false }, XXX = #.call(XXXmodule.exports, __webpack_require__, XXXmodule.exports, XXXmodule), XXXmodule.loaded = true, XXX === undefined && (XXX = XXXmodule.exports))\"\n\t\t\t],\n\t\t\tlo: [\"var XXX;\", \"!(XXX = #)\"],\n\t\t\tlof: [\n\t\t\t\t\"var XXX, XXXfactory, XXXmodule;\",\n\t\t\t\t\"!(XXXfactory = (#), (XXXmodule = { id: YYY, exports: {}, loaded: false }), XXX = (typeof XXXfactory === 'function' ? (XXXfactory.call(XXXmodule.exports, __webpack_require__, XXXmodule.exports, XXXmodule)) : XXXfactory), (XXXmodule.loaded = true), XXX === undefined && (XXX = XXXmodule.exports))\"\n\t\t\t],\n\t\t\tlaf: [\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_ARRAY__, XXX;\",\n\t\t\t\t\"!(__WEBPACK_AMD_DEFINE_ARRAY__ = #, XXX = ((#).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)))\"\n\t\t\t],\n\t\t\tlao: [\"var XXX;\", \"!(#, XXX = #)\"],\n\t\t\tlaof: [\n\t\t\t\t\"var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, XXX;\",\n\t\t\t\t`!(__WEBPACK_AMD_DEFINE_ARRAY__ = #, __WEBPACK_AMD_DEFINE_FACTORY__ = (#),\n\t\t\t\tXXX = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__))`\n\t\t\t]\n\t\t};\n\t}\n\n\tapply(dependency, source) {\n\t\tconst branch = this.branch(dependency);\n\t\tconst defAndText = this.definitions[branch];\n\t\tconst definitions = defAndText[0];\n\t\tconst text = defAndText[1];\n\t\tthis.replace(dependency, source, definitions, text);\n\t}\n\n\tlocalModuleVar(dependency) {\n\t\treturn (\n\t\t\tdependency.localModule &&\n\t\t\tdependency.localModule.used &&\n\t\t\tdependency.localModule.variableName()\n\t\t);\n\t}\n\n\tbranch(dependency) {\n\t\tconst localModuleVar = this.localModuleVar(dependency) ? \"l\" : \"\";\n\t\tconst arrayRange = dependency.arrayRange ? \"a\" : \"\";\n\t\tconst objectRange = dependency.objectRange ? \"o\" : \"\";\n\t\tconst functionRange = dependency.functionRange ? \"f\" : \"\";\n\t\treturn localModuleVar + arrayRange + objectRange + functionRange;\n\t}\n\n\treplace(dependency, source, definition, text) {\n\t\tconst localModuleVar = this.localModuleVar(dependency);\n\t\tif (localModuleVar) {\n\t\t\ttext = text.replace(/XXX/g, localModuleVar.replace(/\\$/g, \"$$$$\"));\n\t\t\tdefinition = definition.replace(\n\t\t\t\t/XXX/g,\n\t\t\t\tlocalModuleVar.replace(/\\$/g, \"$$$$\")\n\t\t\t);\n\t\t}\n\n\t\tif (dependency.namedModule) {\n\t\t\ttext = text.replace(/YYY/g, JSON.stringify(dependency.namedModule));\n\t\t}\n\n\t\tconst texts = text.split(\"#\");\n\n\t\tif (definition) source.insert(0, definition);\n\n\t\tlet current = dependency.range[0];\n\t\tif (dependency.arrayRange) {\n\t\t\tsource.replace(current, dependency.arrayRange[0] - 1, texts.shift());\n\t\t\tcurrent = dependency.arrayRange[1];\n\t\t}\n\n\t\tif (dependency.objectRange) {\n\t\t\tsource.replace(current, dependency.objectRange[0] - 1, texts.shift());\n\t\t\tcurrent = dependency.objectRange[1];\n\t\t} else if (dependency.functionRange) {\n\t\t\tsource.replace(current, dependency.functionRange[0] - 1, texts.shift());\n\t\t\tcurrent = dependency.functionRange[1];\n\t\t}\n\t\tsource.replace(current, dependency.range[1] - 1, texts.shift());\n\t\tif (texts.length > 0) throw new Error(\"Implementation error\");\n\t}\n};\n\nmodule.exports = AMDDefineDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\n\nconst isBoundFunctionExpression = expr => {\n\tif (expr.type !== \"CallExpression\") return false;\n\tif (expr.callee.type !== \"MemberExpression\") return false;\n\tif (expr.callee.computed) return false;\n\tif (expr.callee.object.type !== \"FunctionExpression\") return false;\n\tif (expr.callee.property.type !== \"Identifier\") return false;\n\tif (expr.callee.property.name !== \"bind\") return false;\n\treturn true;\n};\n\nconst isUnboundFunctionExpression = expr => {\n\tif (expr.type === \"FunctionExpression\") return true;\n\tif (expr.type === \"ArrowFunctionExpression\") return true;\n\treturn false;\n};\n\nconst isCallable = expr => {\n\tif (isUnboundFunctionExpression(expr)) return true;\n\tif (isBoundFunctionExpression(expr)) return true;\n\treturn false;\n};\n\nclass AMDDefineDependencyParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"define\")\n\t\t\t.tap(\n\t\t\t\t\"AMDDefineDependencyParserPlugin\",\n\t\t\t\tthis.processCallDefine.bind(this, parser)\n\t\t\t);\n\t}\n\n\tprocessArray(parser, expr, param, identifiers, namedModule) {\n\t\tif (param.isArray()) {\n\t\t\tparam.items.forEach((param, idx) => {\n\t\t\t\tif (\n\t\t\t\t\tparam.isString() &&\n\t\t\t\t\t[\"require\", \"module\", \"exports\"].includes(param.string)\n\t\t\t\t)\n\t\t\t\t\tidentifiers[idx] = param.string;\n\t\t\t\tconst result = this.processItem(parser, expr, param, namedModule);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, param);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn true;\n\t\t} else if (param.isConstArray()) {\n\t\t\tconst deps = [];\n\t\t\tparam.array.forEach((request, idx) => {\n\t\t\t\tlet dep;\n\t\t\t\tlet localModule;\n\t\t\t\tif (request === \"require\") {\n\t\t\t\t\tidentifiers[idx] = request;\n\t\t\t\t\tdep = \"__webpack_require__\";\n\t\t\t\t} else if ([\"exports\", \"module\"].includes(request)) {\n\t\t\t\t\tidentifiers[idx] = request;\n\t\t\t\t\tdep = request;\n\t\t\t\t} else if (\n\t\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\t\tparser.state,\n\t\t\t\t\t\trequest\n\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t\tdep = new LocalModuleDependency(localModule, undefined, false);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tdep = this.newRequireItemDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t\tdeps.push(dep);\n\t\t\t});\n\t\t\tconst dep = this.newRequireArrayDependency(deps, param.range);\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessItem(parser, expr, param, namedModule) {\n\t\tif (param.isConditional()) {\n\t\t\tparam.options.forEach(param => {\n\t\t\t\tconst result = this.processItem(parser, expr, param);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, param);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn true;\n\t\t} else if (param.isString()) {\n\t\t\tlet dep, localModule;\n\t\t\tif (param.string === \"require\") {\n\t\t\t\tdep = new ConstDependency(\"__webpack_require__\", param.range);\n\t\t\t} else if ([\"require\", \"exports\", \"module\"].includes(param.string)) {\n\t\t\t\tdep = new ConstDependency(param.string, param.range);\n\t\t\t} else if (\n\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\tparser.state,\n\t\t\t\t\tparam.string,\n\t\t\t\t\tnamedModule\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\tdep = new LocalModuleDependency(localModule, param.range, false);\n\t\t\t} else {\n\t\t\t\tdep = this.newRequireItemDependency(param.string, param.range);\n\t\t\t}\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessContext(parser, expr, param) {\n\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\tAMDRequireContextDependency,\n\t\t\tparam.range,\n\t\t\tparam,\n\t\t\texpr,\n\t\t\tthis.options,\n\t\t\t{},\n\t\t\tparser\n\t\t);\n\t\tif (!dep) return;\n\t\tdep.loc = expr.loc;\n\t\tdep.optional = !!parser.scope.inTry;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t}\n\n\tprocessCallDefine(parser, expr) {\n\t\tlet array, fn, obj, namedModule;\n\t\tswitch (expr.arguments.length) {\n\t\t\tcase 1:\n\t\t\t\tif (isCallable(expr.arguments[0])) {\n\t\t\t\t\t// define(f() {…})\n\t\t\t\t\tfn = expr.arguments[0];\n\t\t\t\t} else if (expr.arguments[0].type === \"ObjectExpression\") {\n\t\t\t\t\t// define({…})\n\t\t\t\t\tobj = expr.arguments[0];\n\t\t\t\t} else {\n\t\t\t\t\t// define(expr)\n\t\t\t\t\t// unclear if function or object\n\t\t\t\t\tobj = fn = expr.arguments[0];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif (expr.arguments[0].type === \"Literal\") {\n\t\t\t\t\tnamedModule = expr.arguments[0].value;\n\t\t\t\t\t// define(\"…\", …)\n\t\t\t\t\tif (isCallable(expr.arguments[1])) {\n\t\t\t\t\t\t// define(\"…\", f() {…})\n\t\t\t\t\t\tfn = expr.arguments[1];\n\t\t\t\t\t} else if (expr.arguments[1].type === \"ObjectExpression\") {\n\t\t\t\t\t\t// define(\"…\", {…})\n\t\t\t\t\t\tobj = expr.arguments[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// define(\"…\", expr)\n\t\t\t\t\t\t// unclear if function or object\n\t\t\t\t\t\tobj = fn = expr.arguments[1];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tarray = expr.arguments[0];\n\t\t\t\t\tif (isCallable(expr.arguments[1])) {\n\t\t\t\t\t\t// define([…], f() {})\n\t\t\t\t\t\tfn = expr.arguments[1];\n\t\t\t\t\t} else if (expr.arguments[1].type === \"ObjectExpression\") {\n\t\t\t\t\t\t// define([…], {…})\n\t\t\t\t\t\tobj = expr.arguments[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// define([…], expr)\n\t\t\t\t\t\t// unclear if function or object\n\t\t\t\t\t\tobj = fn = expr.arguments[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t// define(\"…\", […], f() {…})\n\t\t\t\tnamedModule = expr.arguments[0].value;\n\t\t\t\tarray = expr.arguments[1];\n\t\t\t\tif (isCallable(expr.arguments[2])) {\n\t\t\t\t\t// define(\"…\", […], f() {})\n\t\t\t\t\tfn = expr.arguments[2];\n\t\t\t\t} else if (expr.arguments[2].type === \"ObjectExpression\") {\n\t\t\t\t\t// define(\"…\", […], {…})\n\t\t\t\t\tobj = expr.arguments[2];\n\t\t\t\t} else {\n\t\t\t\t\t// define(\"…\", […], expr)\n\t\t\t\t\t// unclear if function or object\n\t\t\t\t\tobj = fn = expr.arguments[2];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t\tlet fnParams = null;\n\t\tlet fnParamsOffset = 0;\n\t\tif (fn) {\n\t\t\tif (isUnboundFunctionExpression(fn)) {\n\t\t\t\tfnParams = fn.params;\n\t\t\t} else if (isBoundFunctionExpression(fn)) {\n\t\t\t\tfnParams = fn.callee.object.params;\n\t\t\t\tfnParamsOffset = fn.arguments.length - 1;\n\t\t\t\tif (fnParamsOffset < 0) {\n\t\t\t\t\tfnParamsOffset = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet fnRenames = parser.scope.renames.createChild();\n\t\tif (array) {\n\t\t\tconst identifiers = {};\n\t\t\tconst param = parser.evaluateExpression(array);\n\t\t\tconst result = this.processArray(\n\t\t\t\tparser,\n\t\t\t\texpr,\n\t\t\t\tparam,\n\t\t\t\tidentifiers,\n\t\t\t\tnamedModule\n\t\t\t);\n\t\t\tif (!result) return;\n\t\t\tif (fnParams) {\n\t\t\t\tfnParams = fnParams.slice(fnParamsOffset).filter((param, idx) => {\n\t\t\t\t\tif (identifiers[idx]) {\n\t\t\t\t\t\tfnRenames.set(param.name, identifiers[idx]);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconst identifiers = [\"require\", \"exports\", \"module\"];\n\t\t\tif (fnParams) {\n\t\t\t\tfnParams = fnParams.slice(fnParamsOffset).filter((param, idx) => {\n\t\t\t\t\tif (identifiers[idx]) {\n\t\t\t\t\t\tfnRenames.set(param.name, identifiers[idx]);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tlet inTry;\n\t\tif (fn && isUnboundFunctionExpression(fn)) {\n\t\t\tinTry = parser.scope.inTry;\n\t\t\tparser.inScope(fnParams, () => {\n\t\t\t\tparser.scope.renames = fnRenames;\n\t\t\t\tparser.scope.inTry = inTry;\n\t\t\t\tif (fn.body.type === \"BlockStatement\") {\n\t\t\t\t\tparser.walkStatement(fn.body);\n\t\t\t\t} else {\n\t\t\t\t\tparser.walkExpression(fn.body);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (fn && isBoundFunctionExpression(fn)) {\n\t\t\tinTry = parser.scope.inTry;\n\t\t\tparser.inScope(\n\t\t\t\tfn.callee.object.params.filter(\n\t\t\t\t\ti => ![\"require\", \"module\", \"exports\"].includes(i.name)\n\t\t\t\t),\n\t\t\t\t() => {\n\t\t\t\t\tparser.scope.renames = fnRenames;\n\t\t\t\t\tparser.scope.inTry = inTry;\n\t\t\t\t\tif (fn.callee.object.body.type === \"BlockStatement\") {\n\t\t\t\t\t\tparser.walkStatement(fn.callee.object.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.walkExpression(fn.callee.object.body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (fn.arguments) {\n\t\t\t\tparser.walkExpressions(fn.arguments);\n\t\t\t}\n\t\t} else if (fn || obj) {\n\t\t\tparser.walkExpression(fn || obj);\n\t\t}\n\n\t\tconst dep = this.newDefineDependency(\n\t\t\texpr.range,\n\t\t\tarray ? array.range : null,\n\t\t\tfn ? fn.range : null,\n\t\t\tobj ? obj.range : null,\n\t\t\tnamedModule ? namedModule : null\n\t\t);\n\t\tdep.loc = expr.loc;\n\t\tif (namedModule) {\n\t\t\tdep.localModule = LocalModulesHelpers.addLocalModule(\n\t\t\t\tparser.state,\n\t\t\t\tnamedModule\n\t\t\t);\n\t\t}\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t}\n\n\tnewDefineDependency(\n\t\trange,\n\t\tarrayRange,\n\t\tfunctionRange,\n\t\tobjectRange,\n\t\tnamedModule\n\t) {\n\t\treturn new AMDDefineDependency(\n\t\t\trange,\n\t\t\tarrayRange,\n\t\t\tfunctionRange,\n\t\t\tobjectRange,\n\t\t\tnamedModule\n\t\t);\n\t}\n\tnewRequireArrayDependency(depsArray, range) {\n\t\treturn new AMDRequireArrayDependency(depsArray, range);\n\t}\n\tnewRequireItemDependency(request, range) {\n\t\treturn new AMDRequireItemDependency(request, range);\n\t}\n}\nmodule.exports = AMDDefineDependencyParserPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\n\nconst NullFactory = require(\"../NullFactory\");\n\nconst AMDRequireDependenciesBlockParserPlugin = require(\"./AMDRequireDependenciesBlockParserPlugin\");\nconst AMDDefineDependencyParserPlugin = require(\"./AMDDefineDependencyParserPlugin\");\n\nconst AliasPlugin = require(\"enhanced-resolve/lib/AliasPlugin\");\n\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nclass AMDPlugin {\n\tconstructor(options, amdOptions) {\n\t\tthis.amdOptions = amdOptions;\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst amdOptions = this.amdOptions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"AMDPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireDependency,\n\t\t\t\t\tnew AMDRequireDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireItemDependency,\n\t\t\t\t\tnew AMDRequireItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireArrayDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireArrayDependency,\n\t\t\t\t\tnew AMDRequireArrayDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireContextDependency,\n\t\t\t\t\tnew AMDRequireContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDDefineDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDDefineDependency,\n\t\t\t\t\tnew AMDDefineDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tUnsupportedDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tUnsupportedDependency,\n\t\t\t\t\tnew UnsupportedDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tLocalModuleDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tLocalModuleDependency,\n\t\t\t\t\tnew LocalModuleDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.amd !== undefined && !parserOptions.amd) return;\n\n\t\t\t\t\tconst setExpressionToModule = (outerExpr, module) => {\n\t\t\t\t\t\tparser.hooks.expression.for(outerExpr).tap(\"AMDPlugin\", expr => {\n\t\t\t\t\t\t\tconst dep = new AMDRequireItemDependency(module, expr.range);\n\t\t\t\t\t\t\tdep.userRequest = outerExpr;\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tnew AMDRequireDependenciesBlockParserPlugin(options).apply(parser);\n\t\t\t\t\tnew AMDDefineDependencyParserPlugin(options).apply(parser);\n\n\t\t\t\t\tsetExpressionToModule(\"require.amd\", \"!!webpack amd options\");\n\t\t\t\t\tsetExpressionToModule(\"define.amd\", \"!!webpack amd options\");\n\t\t\t\t\tsetExpressionToModule(\"define\", \"!!webpack amd define\");\n\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"__webpack_amd_options__\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", () =>\n\t\t\t\t\t\t\tparser.state.current.addVariable(\n\t\t\t\t\t\t\t\t\"__webpack_amd_options__\",\n\t\t\t\t\t\t\t\tJSON.stringify(amdOptions)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"define.amd\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToString(typeof amdOptions)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.amd\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToString(typeof amdOptions)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"define.amd\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToIdentifier(\"define.amd\", true)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"require.amd\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToIdentifier(\"require.amd\", true)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", ParserHelpers.evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.canRename\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", ParserHelpers.approve);\n\t\t\t\t\tparser.hooks.rename.for(\"define\").tap(\"AMDPlugin\", expr => {\n\t\t\t\t\t\tconst dep = new AMDRequireItemDependency(\n\t\t\t\t\t\t\t\"!!webpack amd define\",\n\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.userRequest = \"define\";\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", ParserHelpers.evaluateToString(\"function\"));\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"AMDPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"AMDPlugin\", handler);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.afterResolvers.tap(\"AMDPlugin\", () => {\n\t\t\tcompiler.resolverFactory.hooks.resolver\n\t\t\t\t.for(\"normal\")\n\t\t\t\t.tap(\"AMDPlugin\", resolver => {\n\t\t\t\t\tnew AliasPlugin(\n\t\t\t\t\t\t\"described-resolve\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"amdefine\",\n\t\t\t\t\t\t\talias: path.join(\n\t\t\t\t\t\t\t\t__dirname,\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"buildin\",\n\t\t\t\t\t\t\t\t\"amd-define.js\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"resolve\"\n\t\t\t\t\t).apply(resolver);\n\t\t\t\t\tnew AliasPlugin(\n\t\t\t\t\t\t\"described-resolve\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"webpack amd options\",\n\t\t\t\t\t\t\talias: path.join(\n\t\t\t\t\t\t\t\t__dirname,\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"buildin\",\n\t\t\t\t\t\t\t\t\"amd-options.js\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"resolve\"\n\t\t\t\t\t).apply(resolver);\n\t\t\t\t\tnew AliasPlugin(\n\t\t\t\t\t\t\"described-resolve\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"webpack amd define\",\n\t\t\t\t\t\t\talias: path.join(\n\t\t\t\t\t\t\t\t__dirname,\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"..\",\n\t\t\t\t\t\t\t\t\"buildin\",\n\t\t\t\t\t\t\t\t\"amd-define.js\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"resolve\"\n\t\t\t\t\t).apply(resolver);\n\t\t\t\t});\n\t\t});\n\t}\n}\nmodule.exports = AMDPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst Dependency = require(\"../Dependency\");\n\nclass AMDRequireArrayDependency extends Dependency {\n\tconstructor(depsArray, range) {\n\t\tsuper();\n\t\tthis.depsArray = depsArray;\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"amd require array\";\n\t}\n}\n\nAMDRequireArrayDependency.Template = class AMDRequireArrayDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst content = this.getContent(dep, runtime);\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n\n\tgetContent(dep, runtime) {\n\t\tconst requires = dep.depsArray.map(dependency => {\n\t\t\treturn this.contentForDependency(dependency, runtime);\n\t\t});\n\t\treturn `[${requires.join(\", \")}]`;\n\t}\n\n\tcontentForDependency(dep, runtime) {\n\t\tif (typeof dep === \"string\") {\n\t\t\treturn dep;\n\t\t}\n\n\t\tif (dep.localModule) {\n\t\t\treturn dep.localModule.variableName();\n\t\t} else {\n\t\t\treturn runtime.moduleExports({\n\t\t\t\tmodule: dep.module,\n\t\t\t\trequest: dep.request\n\t\t\t});\n\t\t}\n\t}\n};\n\nmodule.exports = AMDRequireArrayDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ContextDependency = require(\"./ContextDependency\");\nclass AMDRequireContextDependency extends ContextDependency {\n\tconstructor(options, range, valueRange) {\n\t\tsuper(options);\n\t\tthis.range = range;\n\t\tthis.valueRange = valueRange;\n\t}\n\n\tget type() {\n\t\treturn \"amd require context\";\n\t}\n}\nAMDRequireContextDependency.Template = require(\"./ContextDependencyTemplateAsRequireCall\");\nmodule.exports = AMDRequireContextDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\n\nmodule.exports = class AMDRequireDependenciesBlock extends AsyncDependenciesBlock {\n\tconstructor(\n\t\texpr,\n\t\tarrayRange,\n\t\tfunctionRange,\n\t\terrorCallbackRange,\n\t\tmodule,\n\t\tloc,\n\t\trequest\n\t) {\n\t\tsuper(null, module, loc, request);\n\t\tthis.expr = expr;\n\t\tthis.outerRange = expr.range;\n\t\tthis.arrayRange = arrayRange;\n\t\tthis.functionBindThis = false;\n\t\tthis.functionRange = functionRange;\n\t\tthis.errorCallbackBindThis = false;\n\t\tthis.errorCallbackRange = errorCallbackRange;\n\t\tthis.bindThis = true;\n\t\tif (arrayRange && functionRange && errorCallbackRange) {\n\t\t\tthis.range = [arrayRange[0], errorCallbackRange[1]];\n\t\t} else if (arrayRange && functionRange) {\n\t\t\tthis.range = [arrayRange[0], functionRange[1]];\n\t\t} else if (arrayRange) {\n\t\t\tthis.range = arrayRange;\n\t\t} else if (functionRange) {\n\t\t\tthis.range = functionRange;\n\t\t} else {\n\t\t\tthis.range = expr.range;\n\t\t}\n\t\tconst dep = this.newRequireDependency();\n\t\tdep.loc = loc;\n\t\tthis.addDependency(dep);\n\t}\n\n\tnewRequireDependency() {\n\t\treturn new AMDRequireDependency(this);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlock = require(\"./AMDRequireDependenciesBlock\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst getFunctionExpression = require(\"./getFunctionExpression\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nclass AMDRequireDependenciesBlockParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tprocessFunctionArgument(parser, expression) {\n\t\tlet bindThis = true;\n\t\tconst fnData = getFunctionExpression(expression);\n\t\tif (fnData) {\n\t\t\tparser.inScope(\n\t\t\t\tfnData.fn.params.filter(i => {\n\t\t\t\t\treturn ![\"require\", \"module\", \"exports\"].includes(i.name);\n\t\t\t\t}),\n\t\t\t\t() => {\n\t\t\t\t\tif (fnData.fn.body.type === \"BlockStatement\") {\n\t\t\t\t\t\tparser.walkStatement(fnData.fn.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.walkExpression(fnData.fn.body);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tparser.walkExpressions(fnData.expressions);\n\t\t\tif (fnData.needThis === false) {\n\t\t\t\tbindThis = false;\n\t\t\t}\n\t\t} else {\n\t\t\tparser.walkExpression(expression);\n\t\t}\n\t\treturn bindThis;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require\")\n\t\t\t.tap(\n\t\t\t\t\"AMDRequireDependenciesBlockParserPlugin\",\n\t\t\t\tthis.processCallRequire.bind(this, parser)\n\t\t\t);\n\t}\n\n\tprocessArray(parser, expr, param) {\n\t\tif (param.isArray()) {\n\t\t\tfor (const p of param.items) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isConstArray()) {\n\t\t\tconst deps = [];\n\t\t\tfor (const request of param.array) {\n\t\t\t\tlet dep, localModule;\n\t\t\t\tif (request === \"require\") {\n\t\t\t\t\tdep = \"__webpack_require__\";\n\t\t\t\t} else if ([\"exports\", \"module\"].includes(request)) {\n\t\t\t\t\tdep = request;\n\t\t\t\t} else if (\n\t\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\t\tparser.state,\n\t\t\t\t\t\trequest\n\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t\tdep = new LocalModuleDependency(localModule, undefined, false);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tdep = this.newRequireItemDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t\tdeps.push(dep);\n\t\t\t}\n\t\t\tconst dep = this.newRequireArrayDependency(deps, param.range);\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessItem(parser, expr, param) {\n\t\tif (param.isConditional()) {\n\t\t\tfor (const p of param.options) {\n\t\t\t\tconst result = this.processItem(parser, expr, p);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tthis.processContext(parser, expr, p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (param.isString()) {\n\t\t\tlet dep, localModule;\n\t\t\tif (param.string === \"require\") {\n\t\t\t\tdep = new ConstDependency(\"__webpack_require__\", param.string);\n\t\t\t} else if (param.string === \"module\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.moduleArgument,\n\t\t\t\t\tparam.range\n\t\t\t\t);\n\t\t\t} else if (param.string === \"exports\") {\n\t\t\t\tdep = new ConstDependency(\n\t\t\t\t\tparser.state.module.buildInfo.exportsArgument,\n\t\t\t\t\tparam.range\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\tparser.state,\n\t\t\t\t\tparam.string\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\tdep = new LocalModuleDependency(localModule, param.range, false);\n\t\t\t} else {\n\t\t\t\tdep = this.newRequireItemDependency(param.string, param.range);\n\t\t\t}\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t}\n\t}\n\tprocessContext(parser, expr, param) {\n\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\tAMDRequireContextDependency,\n\t\t\tparam.range,\n\t\t\tparam,\n\t\t\texpr,\n\t\t\tthis.options,\n\t\t\t{},\n\t\t\tparser\n\t\t);\n\t\tif (!dep) return;\n\t\tdep.loc = expr.loc;\n\t\tdep.optional = !!parser.scope.inTry;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t}\n\n\tprocessArrayForRequestString(param) {\n\t\tif (param.isArray()) {\n\t\t\tconst result = param.items.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\" \");\n\t\t} else if (param.isConstArray()) {\n\t\t\treturn param.array.join(\" \");\n\t\t}\n\t}\n\n\tprocessItemForRequestString(param) {\n\t\tif (param.isConditional()) {\n\t\t\tconst result = param.options.map(item =>\n\t\t\t\tthis.processItemForRequestString(item)\n\t\t\t);\n\t\t\tif (result.every(Boolean)) return result.join(\"|\");\n\t\t} else if (param.isString()) {\n\t\t\treturn param.string;\n\t\t}\n\t}\n\n\tprocessCallRequire(parser, expr) {\n\t\tlet param;\n\t\tlet dep;\n\t\tlet result;\n\n\t\tconst old = parser.state.current;\n\n\t\tif (expr.arguments.length >= 1) {\n\t\t\tparam = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tdep = this.newRequireDependenciesBlock(\n\t\t\t\texpr,\n\t\t\t\tparam.range,\n\t\t\t\texpr.arguments.length > 1 ? expr.arguments[1].range : null,\n\t\t\t\texpr.arguments.length > 2 ? expr.arguments[2].range : null,\n\t\t\t\tparser.state.module,\n\t\t\t\texpr.loc,\n\t\t\t\tthis.processArrayForRequestString(param)\n\t\t\t);\n\t\t\tparser.state.current = dep;\n\t\t}\n\n\t\tif (expr.arguments.length === 1) {\n\t\t\tparser.inScope([], () => {\n\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t});\n\t\t\tparser.state.current = old;\n\t\t\tif (!result) return;\n\t\t\tparser.state.current.addBlock(dep);\n\t\t\treturn true;\n\t\t}\n\n\t\tif (expr.arguments.length === 2 || expr.arguments.length === 3) {\n\t\t\ttry {\n\t\t\t\tparser.inScope([], () => {\n\t\t\t\t\tresult = this.processArray(parser, expr, param);\n\t\t\t\t});\n\t\t\t\tif (!result) {\n\t\t\t\t\tdep = new UnsupportedDependency(\"unsupported\", expr.range);\n\t\t\t\t\told.addDependency(dep);\n\t\t\t\t\tif (parser.state.module) {\n\t\t\t\t\t\tparser.state.module.errors.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\"Cannot statically analyse 'require(…, …)' in line \" +\n\t\t\t\t\t\t\t\t\texpr.loc.start.line,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tdep = null;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tdep.functionBindThis = this.processFunctionArgument(\n\t\t\t\t\tparser,\n\t\t\t\t\texpr.arguments[1]\n\t\t\t\t);\n\t\t\t\tif (expr.arguments.length === 3) {\n\t\t\t\t\tdep.errorCallbackBindThis = this.processFunctionArgument(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\texpr.arguments[2]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tparser.state.current = old;\n\t\t\t\tif (dep) parser.state.current.addBlock(dep);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tnewRequireDependenciesBlock(\n\t\texpr,\n\t\tarrayRange,\n\t\tfunctionRange,\n\t\terrorCallbackRange,\n\t\tmodule,\n\t\tloc,\n\t\trequest\n\t) {\n\t\treturn new AMDRequireDependenciesBlock(\n\t\t\texpr,\n\t\t\tarrayRange,\n\t\t\tfunctionRange,\n\t\t\terrorCallbackRange,\n\t\t\tmodule,\n\t\t\tloc,\n\t\t\trequest\n\t\t);\n\t}\n\tnewRequireItemDependency(request, range) {\n\t\treturn new AMDRequireItemDependency(request, range);\n\t}\n\tnewRequireArrayDependency(depsArray, range) {\n\t\treturn new AMDRequireArrayDependency(depsArray, range);\n\t}\n}\nmodule.exports = AMDRequireDependenciesBlockParserPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass AMDRequireDependency extends NullDependency {\n\tconstructor(block) {\n\t\tsuper();\n\t\tthis.block = block;\n\t}\n}\n\nAMDRequireDependency.Template = class AMDRequireDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst depBlock = dep.block;\n\t\tconst promise = runtime.blockPromise({\n\t\t\tblock: depBlock,\n\t\t\tmessage: \"AMD require\"\n\t\t});\n\n\t\t// has array range but no function range\n\t\tif (depBlock.arrayRange && !depBlock.functionRange) {\n\t\t\tconst startBlock = `${promise}.then(function() {`;\n\t\t\tconst endBlock = `;}).catch(${runtime.onError()})`;\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.outerRange[0],\n\t\t\t\tdepBlock.arrayRange[0] - 1,\n\t\t\t\tstartBlock\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.arrayRange[1],\n\t\t\t\tdepBlock.outerRange[1] - 1,\n\t\t\t\tendBlock\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// has function range but no array range\n\t\tif (depBlock.functionRange && !depBlock.arrayRange) {\n\t\t\tconst startBlock = `${promise}.then((`;\n\t\t\tconst endBlock = `).bind(exports, __webpack_require__, exports, module)).catch(${runtime.onError()})`;\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.outerRange[0],\n\t\t\t\tdepBlock.functionRange[0] - 1,\n\t\t\t\tstartBlock\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.functionRange[1],\n\t\t\t\tdepBlock.outerRange[1] - 1,\n\t\t\t\tendBlock\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// has array range, function range, and errorCallbackRange\n\t\tif (\n\t\t\tdepBlock.arrayRange &&\n\t\t\tdepBlock.functionRange &&\n\t\t\tdepBlock.errorCallbackRange\n\t\t) {\n\t\t\tconst startBlock = `${promise}.then(function() { `;\n\t\t\tconst errorRangeBlock = `}${\n\t\t\t\tdepBlock.functionBindThis ? \".bind(this)\" : \"\"\n\t\t\t}).catch(`;\n\t\t\tconst endBlock = `${\n\t\t\t\tdepBlock.errorCallbackBindThis ? \".bind(this)\" : \"\"\n\t\t\t})`;\n\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.outerRange[0],\n\t\t\t\tdepBlock.arrayRange[0] - 1,\n\t\t\t\tstartBlock\n\t\t\t);\n\t\t\tsource.insert(\n\t\t\t\tdepBlock.arrayRange[0] + 0.9,\n\t\t\t\t\"var __WEBPACK_AMD_REQUIRE_ARRAY__ = \"\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.arrayRange[1],\n\t\t\t\tdepBlock.functionRange[0] - 1,\n\t\t\t\t\"; (\"\n\t\t\t);\n\t\t\tsource.insert(\n\t\t\t\tdepBlock.functionRange[1],\n\t\t\t\t\").apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__);\"\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.functionRange[1],\n\t\t\t\tdepBlock.errorCallbackRange[0] - 1,\n\t\t\t\terrorRangeBlock\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.errorCallbackRange[1],\n\t\t\t\tdepBlock.outerRange[1] - 1,\n\t\t\t\tendBlock\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// has array range, function range, but no errorCallbackRange\n\t\tif (depBlock.arrayRange && depBlock.functionRange) {\n\t\t\tconst startBlock = `${promise}.then(function() { `;\n\t\t\tconst endBlock = `}${\n\t\t\t\tdepBlock.functionBindThis ? \".bind(this)\" : \"\"\n\t\t\t}).catch(${runtime.onError()})`;\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.outerRange[0],\n\t\t\t\tdepBlock.arrayRange[0] - 1,\n\t\t\t\tstartBlock\n\t\t\t);\n\t\t\tsource.insert(\n\t\t\t\tdepBlock.arrayRange[0] + 0.9,\n\t\t\t\t\"var __WEBPACK_AMD_REQUIRE_ARRAY__ = \"\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.arrayRange[1],\n\t\t\t\tdepBlock.functionRange[0] - 1,\n\t\t\t\t\"; (\"\n\t\t\t);\n\t\t\tsource.insert(\n\t\t\t\tdepBlock.functionRange[1],\n\t\t\t\t\").apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__);\"\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.functionRange[1],\n\t\t\t\tdepBlock.outerRange[1] - 1,\n\t\t\t\tendBlock\n\t\t\t);\n\t\t}\n\t}\n};\n\nmodule.exports = AMDRequireDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst ModuleDependencyTemplateAsRequireId = require(\"./ModuleDependencyTemplateAsRequireId\");\n\nclass AMDRequireItemDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"amd require\";\n\t}\n}\n\nAMDRequireItemDependency.Template = ModuleDependencyTemplateAsRequireId;\n\nmodule.exports = AMDRequireItemDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ConstDependency = require(\"./ConstDependency\");\nconst CommonJsRequireDependency = require(\"./CommonJsRequireDependency\");\nconst CommonJsRequireContextDependency = require(\"./CommonJsRequireContextDependency\");\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\nconst RequireHeaderDependency = require(\"./RequireHeaderDependency\");\n\nconst NullFactory = require(\"../NullFactory\");\n\nconst RequireResolveDependencyParserPlugin = require(\"./RequireResolveDependencyParserPlugin\");\nconst CommonJsRequireDependencyParserPlugin = require(\"./CommonJsRequireDependencyParserPlugin\");\n\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nclass CommonJsPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"CommonJsPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCommonJsRequireDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCommonJsRequireDependency,\n\t\t\t\t\tnew CommonJsRequireDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCommonJsRequireContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCommonJsRequireContextDependency,\n\t\t\t\t\tnew CommonJsRequireContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireResolveDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireResolveDependency,\n\t\t\t\t\tnew RequireResolveDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireResolveContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireResolveContextDependency,\n\t\t\t\t\tnew RequireResolveContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireResolveHeaderDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireResolveHeaderDependency,\n\t\t\t\t\tnew RequireResolveHeaderDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireHeaderDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireHeaderDependency,\n\t\t\t\t\tnew RequireHeaderDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.commonjs !== undefined && !parserOptions.commonjs)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst requireExpressions = [\n\t\t\t\t\t\t\"require\",\n\t\t\t\t\t\t\"require.resolve\",\n\t\t\t\t\t\t\"require.resolveWeak\"\n\t\t\t\t\t];\n\t\t\t\t\tfor (let expression of requireExpressions) {\n\t\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t\t.for(expression)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"CommonJsPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(expression)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"CommonJsPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.evaluateToString(\"function\")\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t.for(expression)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"CommonJsPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.evaluateToIdentifier(expression, true)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"module\")\n\t\t\t\t\t\t.tap(\"CommonJsPlugin\", ParserHelpers.evaluateToString(\"object\"));\n\t\t\t\t\tparser.hooks.assign.for(\"require\").tap(\"CommonJsPlugin\", expr => {\n\t\t\t\t\t\t// to not leak to global \"require\", we need to define a local require here.\n\t\t\t\t\t\tconst dep = new ConstDependency(\"var require;\", 0);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\tparser.scope.definitions.add(\"require\");\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.canRename\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(\"CommonJsPlugin\", () => true);\n\t\t\t\t\tparser.hooks.rename.for(\"require\").tap(\"CommonJsPlugin\", expr => {\n\t\t\t\t\t\t// define the require variable. It's still undefined, but not \"not defined\".\n\t\t\t\t\t\tconst dep = new ConstDependency(\"var require;\", 0);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.typeof.for(\"module\").tap(\"CommonJsPlugin\", () => true);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"exports\")\n\t\t\t\t\t\t.tap(\"CommonJsPlugin\", ParserHelpers.evaluateToString(\"object\"));\n\n\t\t\t\t\tnew CommonJsRequireDependencyParserPlugin(options).apply(parser);\n\t\t\t\t\tnew RequireResolveDependencyParserPlugin(options).apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"CommonJsPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"CommonJsPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = CommonJsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ContextDependency = require(\"./ContextDependency\");\nconst ContextDependencyTemplateAsRequireCall = require(\"./ContextDependencyTemplateAsRequireCall\");\n\nclass CommonJsRequireContextDependency extends ContextDependency {\n\tconstructor(options, range, valueRange) {\n\t\tsuper(options);\n\t\tthis.range = range;\n\t\tthis.valueRange = valueRange;\n\t}\n\n\tget type() {\n\t\treturn \"cjs require context\";\n\t}\n}\n\nCommonJsRequireContextDependency.Template = ContextDependencyTemplateAsRequireCall;\n\nmodule.exports = CommonJsRequireContextDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst ModuleDependencyTemplateAsId = require(\"./ModuleDependencyTemplateAsId\");\n\nclass CommonJsRequireDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"cjs require\";\n\t}\n}\n\nCommonJsRequireDependency.Template = ModuleDependencyTemplateAsId;\n\nmodule.exports = CommonJsRequireDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CommonJsRequireDependency = require(\"./CommonJsRequireDependency\");\nconst CommonJsRequireContextDependency = require(\"./CommonJsRequireContextDependency\");\nconst RequireHeaderDependency = require(\"./RequireHeaderDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModulesHelpers = require(\"./LocalModulesHelpers\");\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nclass CommonJsRequireDependencyParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tconst options = this.options;\n\n\t\tconst processItem = (expr, param) => {\n\t\t\tif (param.isString()) {\n\t\t\t\tconst dep = new CommonJsRequireDependency(param.string, param.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processContext = (expr, param) => {\n\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\tCommonJsRequireContextDependency,\n\t\t\t\texpr.range,\n\t\t\t\tparam,\n\t\t\t\texpr,\n\t\t\t\toptions,\n\t\t\t\t{},\n\t\t\t\tparser\n\t\t\t);\n\t\t\tif (!dep) return;\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\n\t\tparser.hooks.expression\n\t\t\t.for(\"require.cache\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsRequireDependencyParserPlugin\",\n\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"__webpack_require__.c\"\n\t\t\t\t)\n\t\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsRequireDependencyParserPlugin\", expr => {\n\t\t\t\tconst dep = new CommonJsRequireContextDependency(\n\t\t\t\t\t{\n\t\t\t\t\t\trequest: options.unknownContextRequest,\n\t\t\t\t\t\trecursive: options.unknownContextRecursive,\n\t\t\t\t\t\tregExp: options.unknownContextRegExp,\n\t\t\t\t\t\tmode: \"sync\"\n\t\t\t\t\t},\n\t\t\t\t\texpr.range\n\t\t\t\t);\n\t\t\t\tdep.critical =\n\t\t\t\t\toptions.unknownContextCritical &&\n\t\t\t\t\t\"require function is used in a way in which dependencies cannot be statically extracted\";\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\tconst createHandler = callNew => expr => {\n\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\tlet localModule;\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tif (param.isConditional()) {\n\t\t\t\tlet isExpression = false;\n\t\t\t\tconst prevLength = parser.state.current.dependencies.length;\n\t\t\t\tconst dep = new RequireHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\tfor (const p of param.options) {\n\t\t\t\t\tconst result = processItem(expr, p);\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tisExpression = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isExpression) {\n\t\t\t\t\tparser.state.current.dependencies.length = prevLength;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tparam.isString() &&\n\t\t\t\t(localModule = LocalModulesHelpers.getLocalModule(\n\t\t\t\t\tparser.state,\n\t\t\t\t\tparam.string\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\tconst dep = new LocalModuleDependency(localModule, expr.range, callNew);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst result = processItem(expr, param);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tprocessContext(expr, param);\n\t\t\t\t} else {\n\t\t\t\t\tconst dep = new RequireHeaderDependency(expr.callee.range);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tparser.hooks.call\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsRequireDependencyParserPlugin\", createHandler(false));\n\t\tparser.hooks.new\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsRequireDependencyParserPlugin\", createHandler(true));\n\t\tparser.hooks.call\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsRequireDependencyParserPlugin\", createHandler(false));\n\t\tparser.hooks.new\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsRequireDependencyParserPlugin\", createHandler(true));\n\t}\n}\nmodule.exports = CommonJsRequireDependencyParserPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass ConstDependency extends NullDependency {\n\tconstructor(expression, range, requireWebpackRequire) {\n\t\tsuper();\n\t\tthis.expression = expression;\n\t\tthis.range = range;\n\t\tthis.requireWebpackRequire = requireWebpackRequire;\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this.range + \"\");\n\t\thash.update(this.expression + \"\");\n\t}\n}\n\nConstDependency.Template = class ConstDependencyTemplate {\n\tapply(dep, source) {\n\t\tif (typeof dep.range === \"number\") {\n\t\t\tsource.insert(dep.range, dep.expression);\n\t\t\treturn;\n\t\t}\n\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, dep.expression);\n\t}\n};\n\nmodule.exports = ConstDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst Dependency = require(\"../Dependency\");\nconst CriticalDependencyWarning = require(\"./CriticalDependencyWarning\");\n\nconst regExpToString = r => (r ? r + \"\" : \"\");\n\nclass ContextDependency extends Dependency {\n\t// options: { request, recursive, regExp, include, exclude, mode, chunkName, groupOptions }\n\tconstructor(options) {\n\t\tsuper();\n\t\tthis.options = options;\n\t\tthis.userRequest = this.options.request;\n\t\t/** @type {false | string} */\n\t\tthis.critical = false;\n\t\tthis.hadGlobalOrStickyRegExp = false;\n\t\tif (this.options.regExp.global || this.options.regExp.sticky) {\n\t\t\tthis.options.regExp = null;\n\t\t\tthis.hadGlobalOrStickyRegExp = true;\n\t\t}\n\t}\n\n\tgetResourceIdentifier() {\n\t\treturn (\n\t\t\t`context${this.options.request} ${this.options.recursive} ` +\n\t\t\t`${regExpToString(this.options.regExp)} ${regExpToString(\n\t\t\t\tthis.options.include\n\t\t\t)} ${regExpToString(this.options.exclude)} ` +\n\t\t\t`${this.options.mode} ${this.options.chunkName} ` +\n\t\t\t`${JSON.stringify(this.options.groupOptions)}`\n\t\t);\n\t}\n\n\tgetWarnings() {\n\t\tlet warnings = super.getWarnings() || [];\n\t\tif (this.critical) {\n\t\t\twarnings.push(new CriticalDependencyWarning(this.critical));\n\t\t}\n\t\tif (this.hadGlobalOrStickyRegExp) {\n\t\t\twarnings.push(\n\t\t\t\tnew CriticalDependencyWarning(\n\t\t\t\t\t\"Contexts can't use RegExps with the 'g' or 'y' flags.\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn warnings;\n\t}\n}\n\n// TODO remove in webpack 5\nObject.defineProperty(ContextDependency.prototype, \"async\", {\n\tconfigurable: false,\n\tget() {\n\t\tthrow new Error(\n\t\t\t\"ContextDependency.async was removed. Use ContextDependency.options.mode instead.\"\n\t\t);\n\t},\n\tset() {\n\t\tthrow new Error(\n\t\t\t\"ContextDependency.async was removed. Pass options.mode to constructor instead\"\n\t\t);\n\t}\n});\n\nmodule.exports = ContextDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ContextDependencyHelpers = exports;\n\n/**\n * Escapes regular expression metacharacters\n * @param {string} str String to quote\n * @returns {string} Escaped string\n */\nconst quotemeta = str => {\n\treturn str.replace(/[-[\\]\\\\/{}()*+?.^$|]/g, \"\\\\$&\");\n};\n\nconst splitContextFromPrefix = prefix => {\n\tconst idx = prefix.lastIndexOf(\"/\");\n\tlet context = \".\";\n\tif (idx >= 0) {\n\t\tcontext = prefix.substr(0, idx);\n\t\tprefix = `.${prefix.substr(idx)}`;\n\t}\n\treturn {\n\t\tcontext,\n\t\tprefix\n\t};\n};\n\nconst splitQueryFromPostfix = postfix => {\n\tconst idx = postfix.indexOf(\"?\");\n\tlet query = \"\";\n\tif (idx >= 0) {\n\t\tquery = postfix.substr(idx);\n\t\tpostfix = postfix.substr(0, idx);\n\t}\n\treturn {\n\t\tpostfix,\n\t\tquery\n\t};\n};\n\nContextDependencyHelpers.create = (\n\tDep,\n\trange,\n\tparam,\n\texpr,\n\toptions,\n\tcontextOptions,\n\t// when parser is not passed in, expressions won't be walked\n\tparser = null\n) => {\n\tif (param.isTemplateString()) {\n\t\tlet prefixRaw = param.quasis[0].string;\n\t\tlet postfixRaw =\n\t\t\tparam.quasis.length > 1\n\t\t\t\t? param.quasis[param.quasis.length - 1].string\n\t\t\t\t: \"\";\n\n\t\tconst valueRange = param.range;\n\t\tconst { context, prefix } = splitContextFromPrefix(prefixRaw);\n\t\tconst { postfix, query } = splitQueryFromPostfix(postfixRaw);\n\n\t\t// When there are more than two quasis, the generated RegExp can be more precise\n\t\t// We join the quasis with the expression regexp\n\t\tconst innerQuasis = param.quasis.slice(1, param.quasis.length - 1);\n\t\tconst innerRegExp =\n\t\t\toptions.wrappedContextRegExp.source +\n\t\t\tinnerQuasis\n\t\t\t\t.map(q => quotemeta(q.string) + options.wrappedContextRegExp.source)\n\t\t\t\t.join(\"\");\n\n\t\t// Example: `./context/pre${e}inner${e}inner2${e}post?query`\n\t\t// context: \"./context\"\n\t\t// prefix: \"./pre\"\n\t\t// innerQuasis: [BEE(\"inner\"), BEE(\"inner2\")]\n\t\t// (BEE = BasicEvaluatedExpression)\n\t\t// postfix: \"post\"\n\t\t// query: \"?query\"\n\t\t// regExp: /^\\.\\/pre.*inner.*inner2.*post$/\n\t\tconst regExp = new RegExp(\n\t\t\t`^${quotemeta(prefix)}${innerRegExp}${quotemeta(postfix)}$`\n\t\t);\n\t\tconst dep = new Dep(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\trequest: context + query,\n\t\t\t\t\trecursive: options.wrappedContextRecursive,\n\t\t\t\t\tregExp,\n\t\t\t\t\tmode: \"sync\"\n\t\t\t\t},\n\t\t\t\tcontextOptions\n\t\t\t),\n\t\t\trange,\n\t\t\tvalueRange\n\t\t);\n\t\tdep.loc = expr.loc;\n\t\tconst replaces = [];\n\n\t\tparam.parts.forEach((part, i) => {\n\t\t\tif (i % 2 === 0) {\n\t\t\t\t// Quasis or merged quasi\n\t\t\t\tlet range = part.range;\n\t\t\t\tlet value = part.string;\n\t\t\t\tif (param.templateStringKind === \"cooked\") {\n\t\t\t\t\tvalue = JSON.stringify(value);\n\t\t\t\t\tvalue = value.slice(1, value.length - 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// prefix\n\t\t\t\t\tvalue = prefix;\n\t\t\t\t\trange = [param.range[0], part.range[1]];\n\t\t\t\t\tvalue =\n\t\t\t\t\t\t(param.templateStringKind === \"cooked\" ? \"`\" : \"String.raw`\") +\n\t\t\t\t\t\tvalue;\n\t\t\t\t} else if (i === param.parts.length - 1) {\n\t\t\t\t\t// postfix\n\t\t\t\t\tvalue = postfix;\n\t\t\t\t\trange = [part.range[0], param.range[1]];\n\t\t\t\t\tvalue = value + \"`\";\n\t\t\t\t} else if (\n\t\t\t\t\tpart.expression &&\n\t\t\t\t\tpart.expression.type === \"TemplateElement\" &&\n\t\t\t\t\tpart.expression.value.raw === value\n\t\t\t\t) {\n\t\t\t\t\t// Shortcut when it's a single quasi and doesn't need to be replaced\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treplaces.push({\n\t\t\t\t\trange,\n\t\t\t\t\tvalue\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Expression\n\t\t\t\tif (parser) {\n\t\t\t\t\tparser.walkExpression(part.expression);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdep.replaces = replaces;\n\t\tdep.critical =\n\t\t\toptions.wrappedContextCritical &&\n\t\t\t\"a part of the request of a dependency is an expression\";\n\t\treturn dep;\n\t} else if (\n\t\tparam.isWrapped() &&\n\t\t((param.prefix && param.prefix.isString()) ||\n\t\t\t(param.postfix && param.postfix.isString()))\n\t) {\n\t\tlet prefixRaw =\n\t\t\tparam.prefix && param.prefix.isString() ? param.prefix.string : \"\";\n\t\tlet postfixRaw =\n\t\t\tparam.postfix && param.postfix.isString() ? param.postfix.string : \"\";\n\t\tconst prefixRange =\n\t\t\tparam.prefix && param.prefix.isString() ? param.prefix.range : null;\n\t\tconst postfixRange =\n\t\t\tparam.postfix && param.postfix.isString() ? param.postfix.range : null;\n\t\tconst valueRange = param.range;\n\t\tconst { context, prefix } = splitContextFromPrefix(prefixRaw);\n\t\tconst { postfix, query } = splitQueryFromPostfix(postfixRaw);\n\t\tconst regExp = new RegExp(\n\t\t\t`^${quotemeta(prefix)}${options.wrappedContextRegExp.source}${quotemeta(\n\t\t\t\tpostfix\n\t\t\t)}$`\n\t\t);\n\t\tconst dep = new Dep(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\trequest: context + query,\n\t\t\t\t\trecursive: options.wrappedContextRecursive,\n\t\t\t\t\tregExp,\n\t\t\t\t\tmode: \"sync\"\n\t\t\t\t},\n\t\t\t\tcontextOptions\n\t\t\t),\n\t\t\trange,\n\t\t\tvalueRange\n\t\t);\n\t\tdep.loc = expr.loc;\n\t\tconst replaces = [];\n\t\tif (prefixRange) {\n\t\t\treplaces.push({\n\t\t\t\trange: prefixRange,\n\t\t\t\tvalue: JSON.stringify(prefix)\n\t\t\t});\n\t\t}\n\t\tif (postfixRange) {\n\t\t\treplaces.push({\n\t\t\t\trange: postfixRange,\n\t\t\t\tvalue: JSON.stringify(postfix)\n\t\t\t});\n\t\t}\n\t\tdep.replaces = replaces;\n\t\tdep.critical =\n\t\t\toptions.wrappedContextCritical &&\n\t\t\t\"a part of the request of a dependency is an expression\";\n\n\t\tif (parser && param.wrappedInnerExpressions) {\n\t\t\tfor (const part of param.wrappedInnerExpressions) {\n\t\t\t\tif (part.expression) parser.walkExpression(part.expression);\n\t\t\t}\n\t\t}\n\n\t\treturn dep;\n\t} else {\n\t\tconst dep = new Dep(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\trequest: options.exprContextRequest,\n\t\t\t\t\trecursive: options.exprContextRecursive,\n\t\t\t\t\tregExp: options.exprContextRegExp,\n\t\t\t\t\tmode: \"sync\"\n\t\t\t\t},\n\t\t\t\tcontextOptions\n\t\t\t),\n\t\t\trange,\n\t\t\tparam.range\n\t\t);\n\t\tdep.loc = expr.loc;\n\t\tdep.critical =\n\t\t\toptions.exprContextCritical &&\n\t\t\t\"the request of a dependency is an expression\";\n\n\t\tif (parser) {\n\t\t\tparser.walkExpression(param.expression);\n\t\t}\n\n\t\treturn dep;\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass ContextDependencyTemplateAsId {\n\tapply(dep, source, runtime) {\n\t\tconst moduleExports = runtime.moduleExports({\n\t\t\tmodule: dep.module,\n\t\t\trequest: dep.request\n\t\t});\n\n\t\tif (dep.module) {\n\t\t\tif (dep.valueRange) {\n\t\t\t\tif (Array.isArray(dep.replaces)) {\n\t\t\t\t\tfor (let i = 0; i < dep.replaces.length; i++) {\n\t\t\t\t\t\tconst rep = dep.replaces[i];\n\t\t\t\t\t\tsource.replace(rep.range[0], rep.range[1] - 1, rep.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsource.replace(dep.valueRange[1], dep.range[1] - 1, \")\");\n\t\t\t\t// TODO webpack 5 remove `prepend` it's no longer used\n\t\t\t\tsource.replace(\n\t\t\t\t\tdep.range[0],\n\t\t\t\t\tdep.valueRange[0] - 1,\n\t\t\t\t\t`${moduleExports}.resolve(${\n\t\t\t\t\t\ttypeof dep.prepend === \"string\" ? JSON.stringify(dep.prepend) : \"\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsource.replace(\n\t\t\t\t\tdep.range[0],\n\t\t\t\t\tdep.range[1] - 1,\n\t\t\t\t\t`${moduleExports}.resolve`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, moduleExports);\n\t\t}\n\t}\n}\nmodule.exports = ContextDependencyTemplateAsId;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass ContextDependencyTemplateAsRequireCall {\n\tapply(dep, source, runtime) {\n\t\tconst moduleExports = runtime.moduleExports({\n\t\t\tmodule: dep.module,\n\t\t\trequest: dep.request\n\t\t});\n\n\t\tif (dep.module) {\n\t\t\tif (dep.valueRange) {\n\t\t\t\tif (Array.isArray(dep.replaces)) {\n\t\t\t\t\tfor (let i = 0; i < dep.replaces.length; i++) {\n\t\t\t\t\t\tconst rep = dep.replaces[i];\n\t\t\t\t\t\tsource.replace(rep.range[0], rep.range[1] - 1, rep.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsource.replace(dep.valueRange[1], dep.range[1] - 1, \")\");\n\t\t\t\t// TODO webpack 5 remove `prepend` it's no longer used\n\t\t\t\tsource.replace(\n\t\t\t\t\tdep.range[0],\n\t\t\t\t\tdep.valueRange[0] - 1,\n\t\t\t\t\t`${moduleExports}(${\n\t\t\t\t\t\ttypeof dep.prepend === \"string\" ? JSON.stringify(dep.prepend) : \"\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, moduleExports);\n\t\t\t}\n\t\t} else {\n\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, moduleExports);\n\t\t}\n\t}\n}\nmodule.exports = ContextDependencyTemplateAsRequireCall;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass ContextElementDependency extends ModuleDependency {\n\tconstructor(request, userRequest) {\n\t\tsuper(request);\n\t\tif (userRequest) {\n\t\t\tthis.userRequest = userRequest;\n\t\t}\n\t}\n\n\tget type() {\n\t\treturn \"context element\";\n\t}\n}\n\nmodule.exports = ContextElementDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\n\nclass CriticalDependencyWarning extends WebpackError {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tthis.name = \"CriticalDependencyWarning\";\n\t\tthis.message = \"Critical dependency: \" + message;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = CriticalDependencyWarning;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst NullDependency = require(\"./NullDependency\");\n\nclass DelegatedExportsDependency extends NullDependency {\n\tconstructor(originModule, exports) {\n\t\tsuper();\n\t\tthis.originModule = originModule;\n\t\tthis.exports = exports;\n\t}\n\n\tget type() {\n\t\treturn \"delegated exports\";\n\t}\n\n\tgetReference() {\n\t\treturn new DependencyReference(this.originModule, true, false);\n\t}\n\n\tgetExports() {\n\t\treturn {\n\t\t\texports: this.exports,\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n}\n\nmodule.exports = DelegatedExportsDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass DelegatedSourceDependency extends ModuleDependency {\n\tconstructor(request) {\n\t\tsuper(request);\n\t}\n\n\tget type() {\n\t\treturn \"delegated source\";\n\t}\n}\n\nmodule.exports = DelegatedSourceDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\"use strict\";\n\n/** @typedef {import(\"../Module\")} Module */\n\nclass DependencyReference {\n\t// TODO webpack 5: module must be dynamic, you must pass a function returning a module\n\t// This is needed to remove the hack in ConcatenatedModule\n\t// The problem is that the `module` in Dependency could be replaced i. e. because of Scope Hoisting\n\t/**\n\t *\n\t * @param {Module} module the referenced module\n\t * @param {string[] | boolean} importedNames imported named from the module\n\t * @param {boolean=} weak if this is a weak reference\n\t * @param {number} order the order information or NaN if don't care\n\t */\n\tconstructor(module, importedNames, weak = false, order = NaN) {\n\t\t// TODO webpack 5: make it a getter\n\t\tthis.module = module;\n\t\t// true: full object\n\t\t// false: only sideeffects/no export\n\t\t// array of strings: the exports with this names\n\t\tthis.importedNames = importedNames;\n\t\tthis.weak = !!weak;\n\t\tthis.order = order;\n\t}\n\n\t/**\n\t * @param {DependencyReference[]} array an array (will be modified)\n\t * @returns {DependencyReference[]} the array again\n\t */\n\tstatic sort(array) {\n\t\t/** @type {WeakMap<DependencyReference, number>} */\n\t\tconst originalOrder = new WeakMap();\n\t\tlet i = 0;\n\t\tfor (const ref of array) {\n\t\t\toriginalOrder.set(ref, i++);\n\t\t}\n\t\treturn array.sort((a, b) => {\n\t\t\tconst aOrder = a.order;\n\t\t\tconst bOrder = b.order;\n\t\t\tif (isNaN(aOrder)) {\n\t\t\t\tif (!isNaN(bOrder)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (isNaN(bOrder)) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aOrder !== bOrder) {\n\t\t\t\t\treturn aOrder - bOrder;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst aOrg = originalOrder.get(a);\n\t\t\tconst bOrg = originalOrder.get(b);\n\t\t\treturn aOrg - bOrg;\n\t\t});\n\t}\n}\n\nmodule.exports = DependencyReference;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst Dependency = require(\"../Dependency\");\n\nclass DllEntryDependency extends Dependency {\n\tconstructor(dependencies, name) {\n\t\tsuper();\n\t\tthis.dependencies = dependencies;\n\t\tthis.name = name;\n\t}\n\n\tget type() {\n\t\treturn \"dll entry\";\n\t}\n}\n\nmodule.exports = DllEntryDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NullDependency = require(\"./NullDependency\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\nclass HarmonyAcceptDependency extends NullDependency {\n\tconstructor(range, dependencies, hasCallback) {\n\t\tsuper();\n\t\tthis.range = range;\n\t\tthis.dependencies = dependencies;\n\t\tthis.hasCallback = hasCallback;\n\t}\n\n\tget type() {\n\t\treturn \"accepted harmony modules\";\n\t}\n}\n\nHarmonyAcceptDependency.Template = class HarmonyAcceptDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst content = dep.dependencies\n\t\t\t.filter(dependency =>\n\t\t\t\tHarmonyImportDependency.Template.isImportEmitted(dependency, source)\n\t\t\t)\n\t\t\t.map(dependency => dependency.getImportStatement(true, runtime))\n\t\t\t.join(\"\");\n\n\t\tif (dep.hasCallback) {\n\t\t\tsource.insert(\n\t\t\t\tdep.range[0],\n\t\t\t\t`function(__WEBPACK_OUTDATED_DEPENDENCIES__) { ${content}(`\n\t\t\t);\n\t\t\tsource.insert(\n\t\t\t\tdep.range[1],\n\t\t\t\t\")(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this)\"\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tsource.insert(dep.range[1] - 0.5, `, function() { ${content} }`);\n\t}\n};\n\nmodule.exports = HarmonyAcceptDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\nclass HarmonyAcceptImportDependency extends HarmonyImportDependency {\n\tconstructor(request, originModule, parserScope) {\n\t\tsuper(request, originModule, NaN, parserScope);\n\t\tthis.weak = true;\n\t}\n\n\tget type() {\n\t\treturn \"harmony accept\";\n\t}\n}\n\nHarmonyAcceptImportDependency.Template = class HarmonyAcceptImportDependencyTemplate extends HarmonyImportDependency.Template {\n\tapply(dep, source, runtime) {}\n};\n\nmodule.exports = HarmonyAcceptImportDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass HarmonyCompatibilityDependency extends NullDependency {\n\tconstructor(originModule) {\n\t\tsuper();\n\t\tthis.originModule = originModule;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export header\";\n\t}\n}\n\nHarmonyCompatibilityDependency.Template = class HarmonyExportDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst usedExports = dep.originModule.usedExports;\n\t\tif (usedExports !== false && !Array.isArray(usedExports)) {\n\t\t\tconst content = runtime.defineEsModuleFlagStatement({\n\t\t\t\texportsArgument: dep.originModule.exportsArgument\n\t\t\t});\n\t\t\tsource.insert(-10, content);\n\t\t}\n\t}\n};\n\nmodule.exports = HarmonyCompatibilityDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nconst HarmonyInitDependency = require(\"./HarmonyInitDependency\");\n\nmodule.exports = class HarmonyDetectionParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", ast => {\n\t\t\tconst isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n\t\t\tconst isHarmony =\n\t\t\t\tisStrictHarmony ||\n\t\t\t\tast.body.some(\n\t\t\t\t\tstatement =>\n\t\t\t\t\t\tstatement.type === \"ImportDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportDefaultDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportNamedDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportAllDeclaration\"\n\t\t\t\t);\n\t\t\tif (isHarmony) {\n\t\t\t\tconst module = parser.state.module;\n\t\t\t\tconst compatDep = new HarmonyCompatibilityDependency(module);\n\t\t\t\tcompatDep.loc = {\n\t\t\t\t\tstart: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tindex: -3\n\t\t\t\t};\n\t\t\t\tmodule.addDependency(compatDep);\n\t\t\t\tconst initDep = new HarmonyInitDependency(module);\n\t\t\t\tinitDep.loc = {\n\t\t\t\t\tstart: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tindex: -2\n\t\t\t\t};\n\t\t\t\tmodule.addDependency(initDep);\n\t\t\t\tparser.state.harmonyParserScope = parser.state.harmonyParserScope || {};\n\t\t\t\tparser.scope.isStrict = true;\n\t\t\t\tmodule.buildMeta.exportsType = \"namespace\";\n\t\t\t\tmodule.buildInfo.strict = true;\n\t\t\t\tmodule.buildInfo.exportsArgument = \"__webpack_exports__\";\n\t\t\t\tif (isStrictHarmony) {\n\t\t\t\t\tmodule.buildMeta.strictHarmonyModule = true;\n\t\t\t\t\tmodule.buildInfo.moduleArgument = \"__webpack_module__\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst skipInHarmony = () => {\n\t\t\tconst module = parser.state.module;\n\t\t\tif (module && module.buildMeta && module.buildMeta.exportsType) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\tconst nullInHarmony = () => {\n\t\t\tconst module = parser.state.module;\n\t\t\tif (module && module.buildMeta && module.buildMeta.exportsType) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tconst nonHarmonyIdentifiers = [\"define\", \"exports\"];\n\t\tfor (const identifer of nonHarmonyIdentifiers) {\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n\t\t\tparser.hooks.typeof\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t\tparser.hooks.evaluate\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t\tparser.hooks.call\n\t\t\t\t.for(identifer)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t}\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n\tconstructor(moduleOptions) {\n\t\tthis.strictExportPresence = moduleOptions.strictExportPresence;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.export.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {\n\t\t\t\tconst dep = new HarmonyExportHeaderDependency(\n\t\t\t\t\tstatement.declaration && statement.declaration.range,\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImport.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\"\", statement.range);\n\t\t\t\tclearDep.loc = Object.create(statement.loc);\n\t\t\t\tclearDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(clearDep);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = Object.create(statement.loc);\n\t\t\t\tsideEffectDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportExpression.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, expr) => {\n\t\t\t\tconst comments = parser.getComments([\n\t\t\t\t\tstatement.range[0],\n\t\t\t\t\texpr.range[0]\n\t\t\t\t]);\n\t\t\t\tconst dep = new HarmonyExportExpressionDependency(\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tstatement.range,\n\t\t\t\t\tcomments\n\t\t\t\t\t\t.map(c => {\n\t\t\t\t\t\t\tswitch (c.type) {\n\t\t\t\t\t\t\t\tcase \"Block\":\n\t\t\t\t\t\t\t\t\treturn `/*${c.value}*/`;\n\t\t\t\t\t\t\t\tcase \"Line\":\n\t\t\t\t\t\t\t\t\treturn `//${c.value}\\n`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"\")\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportDeclaration.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {}\n\t\t);\n\t\tparser.hooks.exportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, id, name, idx) => {\n\t\t\t\tconst rename = parser.scope.renames.get(id);\n\t\t\t\tlet dep;\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\tif (rename === \"imported var\") {\n\t\t\t\t\tconst settings = parser.state.harmonySpecifier.get(id);\n\t\t\t\t\tdep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\t\tsettings.id,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdep = new HarmonyExportSpecifierDependency(\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tname\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name, idx) => {\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tlet harmonyStarExports = null;\n\t\t\t\tif (name) {\n\t\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\t} else {\n\t\t\t\t\tharmonyStarExports = parser.state.harmonyStarExports =\n\t\t\t\t\t\tparser.state.harmonyStarExports || [];\n\t\t\t\t}\n\t\t\t\tconst dep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\tharmonyStarExports && harmonyStarExports.slice(),\n\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t);\n\t\t\t\tif (harmonyStarExports) {\n\t\t\t\t\tharmonyStarExports.push(dep);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass HarmonyExportExpressionDependency extends NullDependency {\n\tconstructor(originModule, range, rangeStatement, prefix) {\n\t\tsuper();\n\t\tthis.originModule = originModule;\n\t\tthis.range = range;\n\t\tthis.rangeStatement = rangeStatement;\n\t\tthis.prefix = prefix;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export expression\";\n\t}\n\n\tgetExports() {\n\t\treturn {\n\t\t\texports: [\"default\"],\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n}\n\nHarmonyExportExpressionDependency.Template = class HarmonyExportDependencyTemplate {\n\tapply(dep, source) {\n\t\tconst used = dep.originModule.isUsed(\"default\");\n\t\tconst content = this.getContent(dep.originModule, used);\n\n\t\tif (dep.range) {\n\t\t\tsource.replace(\n\t\t\t\tdep.rangeStatement[0],\n\t\t\t\tdep.range[0] - 1,\n\t\t\t\tcontent + \"(\" + dep.prefix\n\t\t\t);\n\t\t\tsource.replace(dep.range[1], dep.rangeStatement[1] - 1, \");\");\n\t\t\treturn;\n\t\t}\n\n\t\tsource.replace(dep.rangeStatement[0], dep.rangeStatement[1] - 1, content);\n\t}\n\n\tgetContent(module, used) {\n\t\tconst exportsName = module.exportsArgument;\n\t\tif (used) {\n\t\t\treturn `/* harmony default export */ ${exportsName}[${JSON.stringify(\n\t\t\t\tused\n\t\t\t)}] = `;\n\t\t}\n\t\treturn \"/* unused harmony default export */ var _unused_webpack_default_export = \";\n\t}\n};\n\nmodule.exports = HarmonyExportExpressionDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass HarmonyExportHeaderDependency extends NullDependency {\n\tconstructor(range, rangeStatement) {\n\t\tsuper();\n\t\tthis.range = range;\n\t\tthis.rangeStatement = rangeStatement;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export header\";\n\t}\n}\n\nHarmonyExportHeaderDependency.Template = class HarmonyExportDependencyTemplate {\n\tapply(dep, source) {\n\t\tconst content = \"\";\n\t\tconst replaceUntil = dep.range\n\t\t\t? dep.range[0] - 1\n\t\t\t: dep.rangeStatement[1] - 1;\n\t\tsource.replace(dep.rangeStatement[0], replaceUntil, content);\n\t}\n};\n\nmodule.exports = HarmonyExportHeaderDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\nconst Template = require(\"../Template\");\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {\"missing\"|\"unused\"|\"empty-star\"|\"reexport-non-harmony-default\"|\"reexport-named-default\"|\"reexport-namespace-object\"|\"reexport-non-harmony-default-strict\"|\"reexport-fake-namespace-object\"|\"rexport-non-harmony-undefined\"|\"safe-reexport\"|\"checked-reexport\"|\"dynamic-reexport\"} ExportModeType */\n\n/** @type {Map<string, string>} */\nconst EMPTY_MAP = new Map();\n\nclass ExportMode {\n\t/**\n\t * @param {ExportModeType} type type of the mode\n\t */\n\tconstructor(type) {\n\t\t/** @type {ExportModeType} */\n\t\tthis.type = type;\n\t\t/** @type {string|null} */\n\t\tthis.name = null;\n\t\t/** @type {Map<string, string>} */\n\t\tthis.map = EMPTY_MAP;\n\t\t/** @type {Module|null} */\n\t\tthis.module = null;\n\t\t/** @type {string|null} */\n\t\tthis.userRequest = null;\n\t}\n}\n\nconst EMPTY_STAR_MODE = new ExportMode(\"empty-star\");\n\nclass HarmonyExportImportedSpecifierDependency extends HarmonyImportDependency {\n\tconstructor(\n\t\trequest,\n\t\toriginModule,\n\t\tsourceOrder,\n\t\tparserScope,\n\t\tid,\n\t\tname,\n\t\tactiveExports,\n\t\totherStarExports,\n\t\tstrictExportPresence\n\t) {\n\t\tsuper(request, originModule, sourceOrder, parserScope);\n\t\tthis.id = id;\n\t\tthis.redirectedId = undefined;\n\t\tthis.name = name;\n\t\tthis.activeExports = activeExports;\n\t\tthis.otherStarExports = otherStarExports;\n\t\tthis.strictExportPresence = strictExportPresence;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export imported specifier\";\n\t}\n\n\tget _id() {\n\t\treturn this.redirectedId || this.id;\n\t}\n\n\tgetMode(ignoreUnused) {\n\t\tconst name = this.name;\n\t\tconst id = this._id;\n\t\tconst used = this.originModule.isUsed(name);\n\t\tconst importedModule = this._module;\n\n\t\tif (!importedModule) {\n\t\t\tconst mode = new ExportMode(\"missing\");\n\t\t\tmode.userRequest = this.userRequest;\n\t\t\treturn mode;\n\t\t}\n\n\t\tif (\n\t\t\t!ignoreUnused &&\n\t\t\t(name ? !used : this.originModule.usedExports === false)\n\t\t) {\n\t\t\tconst mode = new ExportMode(\"unused\");\n\t\t\tmode.name = name || \"*\";\n\t\t\treturn mode;\n\t\t}\n\n\t\tconst strictHarmonyModule = this.originModule.buildMeta.strictHarmonyModule;\n\t\tif (name && id === \"default\" && importedModule.buildMeta) {\n\t\t\tif (!importedModule.buildMeta.exportsType) {\n\t\t\t\tconst mode = new ExportMode(\n\t\t\t\t\tstrictHarmonyModule\n\t\t\t\t\t\t? \"reexport-non-harmony-default-strict\"\n\t\t\t\t\t\t: \"reexport-non-harmony-default\"\n\t\t\t\t);\n\t\t\t\tmode.name = name;\n\t\t\t\tmode.module = importedModule;\n\t\t\t\treturn mode;\n\t\t\t} else if (importedModule.buildMeta.exportsType === \"named\") {\n\t\t\t\tconst mode = new ExportMode(\"reexport-named-default\");\n\t\t\t\tmode.name = name;\n\t\t\t\tmode.module = importedModule;\n\t\t\t\treturn mode;\n\t\t\t}\n\t\t}\n\n\t\tconst isNotAHarmonyModule =\n\t\t\timportedModule.buildMeta && !importedModule.buildMeta.exportsType;\n\t\tif (name) {\n\t\t\tlet mode;\n\t\t\tif (id) {\n\t\t\t\t// export { name as name }\n\t\t\t\tif (isNotAHarmonyModule && strictHarmonyModule) {\n\t\t\t\t\tmode = new ExportMode(\"rexport-non-harmony-undefined\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t} else {\n\t\t\t\t\tmode = new ExportMode(\"safe-reexport\");\n\t\t\t\t\tmode.map = new Map([[name, id]]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// export { * as name }\n\t\t\t\tif (isNotAHarmonyModule && strictHarmonyModule) {\n\t\t\t\t\tmode = new ExportMode(\"reexport-fake-namespace-object\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t} else {\n\t\t\t\t\tmode = new ExportMode(\"reexport-namespace-object\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmode.module = importedModule;\n\t\t\treturn mode;\n\t\t}\n\n\t\tconst hasUsedExports = Array.isArray(this.originModule.usedExports);\n\t\tconst hasProvidedExports = Array.isArray(\n\t\t\timportedModule.buildMeta.providedExports\n\t\t);\n\t\tconst activeFromOtherStarExports = this._discoverActiveExportsFromOtherStartExports();\n\n\t\t// export *\n\t\tif (hasUsedExports) {\n\t\t\t// reexport * with known used exports\n\t\t\tif (hasProvidedExports) {\n\t\t\t\tconst map = new Map(\n\t\t\t\t\tthis.originModule.usedExports\n\t\t\t\t\t\t.filter(id => {\n\t\t\t\t\t\t\tif (id === \"default\") return false;\n\t\t\t\t\t\t\tif (this.activeExports.has(id)) return false;\n\t\t\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return false;\n\t\t\t\t\t\t\tif (!importedModule.buildMeta.providedExports.includes(id))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(item => [item, item])\n\t\t\t\t);\n\n\t\t\t\tif (map.size === 0) {\n\t\t\t\t\treturn EMPTY_STAR_MODE;\n\t\t\t\t}\n\n\t\t\t\tconst mode = new ExportMode(\"safe-reexport\");\n\t\t\t\tmode.module = importedModule;\n\t\t\t\tmode.map = map;\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\tconst map = new Map(\n\t\t\t\tthis.originModule.usedExports\n\t\t\t\t\t.filter(id => {\n\t\t\t\t\t\tif (id === \"default\") return false;\n\t\t\t\t\t\tif (this.activeExports.has(id)) return false;\n\t\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return false;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t})\n\t\t\t\t\t.map(item => [item, item])\n\t\t\t);\n\n\t\t\tif (map.size === 0) {\n\t\t\t\treturn EMPTY_STAR_MODE;\n\t\t\t}\n\n\t\t\tconst mode = new ExportMode(\"checked-reexport\");\n\t\t\tmode.module = importedModule;\n\t\t\tmode.map = map;\n\t\t\treturn mode;\n\t\t}\n\n\t\tif (hasProvidedExports) {\n\t\t\tconst map = new Map(\n\t\t\t\timportedModule.buildMeta.providedExports\n\t\t\t\t\t.filter(id => {\n\t\t\t\t\t\tif (id === \"default\") return false;\n\t\t\t\t\t\tif (this.activeExports.has(id)) return false;\n\t\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return false;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t})\n\t\t\t\t\t.map(item => [item, item])\n\t\t\t);\n\n\t\t\tif (map.size === 0) {\n\t\t\t\treturn EMPTY_STAR_MODE;\n\t\t\t}\n\n\t\t\tconst mode = new ExportMode(\"safe-reexport\");\n\t\t\tmode.module = importedModule;\n\t\t\tmode.map = map;\n\t\t\treturn mode;\n\t\t}\n\n\t\tconst mode = new ExportMode(\"dynamic-reexport\");\n\t\tmode.module = importedModule;\n\t\treturn mode;\n\t}\n\n\tgetReference() {\n\t\tconst mode = this.getMode(false);\n\n\t\tswitch (mode.type) {\n\t\t\tcase \"missing\":\n\t\t\tcase \"unused\":\n\t\t\tcase \"empty-star\":\n\t\t\t\treturn null;\n\n\t\t\tcase \"reexport-non-harmony-default\":\n\t\t\tcase \"reexport-named-default\":\n\t\t\t\treturn new DependencyReference(\n\t\t\t\t\tmode.module,\n\t\t\t\t\t[\"default\"],\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.sourceOrder\n\t\t\t\t);\n\n\t\t\tcase \"reexport-namespace-object\":\n\t\t\tcase \"reexport-non-harmony-default-strict\":\n\t\t\tcase \"reexport-fake-namespace-object\":\n\t\t\tcase \"rexport-non-harmony-undefined\":\n\t\t\t\treturn new DependencyReference(\n\t\t\t\t\tmode.module,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.sourceOrder\n\t\t\t\t);\n\n\t\t\tcase \"safe-reexport\":\n\t\t\tcase \"checked-reexport\":\n\t\t\t\treturn new DependencyReference(\n\t\t\t\t\tmode.module,\n\t\t\t\t\tArray.from(mode.map.values()),\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.sourceOrder\n\t\t\t\t);\n\n\t\t\tcase \"dynamic-reexport\":\n\t\t\t\treturn new DependencyReference(\n\t\t\t\t\tmode.module,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.sourceOrder\n\t\t\t\t);\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\n\t\t}\n\t}\n\n\t_discoverActiveExportsFromOtherStartExports() {\n\t\tif (!this.otherStarExports) return new Set();\n\t\tconst result = new Set();\n\t\t// try to learn impossible exports from other star exports with provided exports\n\t\tfor (const otherStarExport of this.otherStarExports) {\n\t\t\tconst otherImportedModule = otherStarExport._module;\n\t\t\tif (\n\t\t\t\totherImportedModule &&\n\t\t\t\tArray.isArray(otherImportedModule.buildMeta.providedExports)\n\t\t\t) {\n\t\t\t\tfor (const exportName of otherImportedModule.buildMeta\n\t\t\t\t\t.providedExports) {\n\t\t\t\t\tresult.add(exportName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetExports() {\n\t\tif (this.name) {\n\t\t\treturn {\n\t\t\t\texports: [this.name],\n\t\t\t\tdependencies: undefined\n\t\t\t};\n\t\t}\n\n\t\tconst importedModule = this._module;\n\n\t\tif (!importedModule) {\n\t\t\t// no imported module available\n\t\t\treturn {\n\t\t\t\texports: null,\n\t\t\t\tdependencies: undefined\n\t\t\t};\n\t\t}\n\n\t\tif (Array.isArray(importedModule.buildMeta.providedExports)) {\n\t\t\treturn {\n\t\t\t\texports: importedModule.buildMeta.providedExports.filter(\n\t\t\t\t\tid => id !== \"default\"\n\t\t\t\t),\n\t\t\t\tdependencies: [importedModule]\n\t\t\t};\n\t\t}\n\n\t\tif (importedModule.buildMeta.providedExports) {\n\t\t\treturn {\n\t\t\t\texports: true,\n\t\t\t\tdependencies: undefined\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\texports: null,\n\t\t\tdependencies: [importedModule]\n\t\t};\n\t}\n\n\tgetWarnings() {\n\t\tif (\n\t\t\tthis.strictExportPresence ||\n\t\t\tthis.originModule.buildMeta.strictHarmonyModule\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._getErrors();\n\t}\n\n\tgetErrors() {\n\t\tif (\n\t\t\tthis.strictExportPresence ||\n\t\t\tthis.originModule.buildMeta.strictHarmonyModule\n\t\t) {\n\t\t\treturn this._getErrors();\n\t\t}\n\t\treturn [];\n\t}\n\n\t_getErrors() {\n\t\tconst importedModule = this._module;\n\t\tif (!importedModule) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!importedModule.buildMeta || !importedModule.buildMeta.exportsType) {\n\t\t\t// It's not an harmony module\n\t\t\tif (\n\t\t\t\tthis.originModule.buildMeta.strictHarmonyModule &&\n\t\t\t\tthis._id &&\n\t\t\t\tthis._id !== \"default\"\n\t\t\t) {\n\t\t\t\t// In strict harmony modules we only support the default export\n\t\t\t\treturn [\n\t\t\t\t\tnew HarmonyLinkingError(\n\t\t\t\t\t\t`Can't reexport the named export '${this._id}' from non EcmaScript module (only default export is available)`\n\t\t\t\t\t)\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (importedModule.isProvided(this._id) !== false) {\n\t\t\t// It's provided or we are not sure\n\t\t\treturn;\n\t\t}\n\n\t\t// We are sure that it's not provided\n\t\tconst idIsNotNameMessage =\n\t\t\tthis._id !== this.name ? ` (reexported as '${this.name}')` : \"\";\n\t\tconst errorMessage = `\"export '${this._id}'${idIsNotNameMessage} was not found in '${this.userRequest}'`;\n\t\treturn [new HarmonyLinkingError(errorMessage)];\n\t}\n\n\tupdateHash(hash) {\n\t\tsuper.updateHash(hash);\n\t\tconst hashValue = this.getHashValue(this._module);\n\t\thash.update(hashValue);\n\t}\n\n\tgetHashValue(importedModule) {\n\t\tif (!importedModule) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst stringifiedUsedExport = JSON.stringify(importedModule.usedExports);\n\t\tconst stringifiedProvidedExport = JSON.stringify(\n\t\t\timportedModule.buildMeta.providedExports\n\t\t);\n\t\treturn (\n\t\t\timportedModule.used + stringifiedUsedExport + stringifiedProvidedExport\n\t\t);\n\t}\n\n\tdisconnect() {\n\t\tsuper.disconnect();\n\t\tthis.redirectedId = undefined;\n\t}\n}\n\nmodule.exports = HarmonyExportImportedSpecifierDependency;\n\nHarmonyExportImportedSpecifierDependency.Template = class HarmonyExportImportedSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n\tharmonyInit(dep, source, runtime, dependencyTemplates) {\n\t\tsuper.harmonyInit(dep, source, runtime, dependencyTemplates);\n\t\tconst content = this.getContent(dep);\n\t\tsource.insert(-1, content);\n\t}\n\n\tgetHarmonyInitOrder(dep) {\n\t\tif (dep.name) {\n\t\t\tconst used = dep.originModule.isUsed(dep.name);\n\t\t\tif (!used) return NaN;\n\t\t} else {\n\t\t\tconst importedModule = dep._module;\n\n\t\t\tconst activeFromOtherStarExports = dep._discoverActiveExportsFromOtherStartExports();\n\n\t\t\tif (Array.isArray(dep.originModule.usedExports)) {\n\t\t\t\t// we know which exports are used\n\n\t\t\t\tconst unused = dep.originModule.usedExports.every(id => {\n\t\t\t\t\tif (id === \"default\") return true;\n\t\t\t\t\tif (dep.activeExports.has(id)) return true;\n\t\t\t\t\tif (importedModule.isProvided(id) === false) return true;\n\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return true;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tif (unused) return NaN;\n\t\t\t} else if (\n\t\t\t\tdep.originModule.usedExports &&\n\t\t\t\timportedModule &&\n\t\t\t\tArray.isArray(importedModule.buildMeta.providedExports)\n\t\t\t) {\n\t\t\t\t// not sure which exports are used, but we know which are provided\n\n\t\t\t\tconst unused = importedModule.buildMeta.providedExports.every(id => {\n\t\t\t\t\tif (id === \"default\") return true;\n\t\t\t\t\tif (dep.activeExports.has(id)) return true;\n\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return true;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tif (unused) return NaN;\n\t\t\t}\n\t\t}\n\t\treturn super.getHarmonyInitOrder(dep);\n\t}\n\n\tgetContent(dep) {\n\t\tconst mode = dep.getMode(false);\n\t\tconst module = dep.originModule;\n\t\tconst importedModule = dep._module;\n\t\tconst importVar = dep.getImportVar();\n\n\t\tswitch (mode.type) {\n\t\t\tcase \"missing\":\n\t\t\t\treturn `throw new Error(${JSON.stringify(\n\t\t\t\t\t`Cannot find module '${mode.userRequest}'`\n\t\t\t\t)});\\n`;\n\n\t\t\tcase \"unused\":\n\t\t\t\treturn `${Template.toNormalComment(\n\t\t\t\t\t`unused harmony reexport ${mode.name}`\n\t\t\t\t)}\\n`;\n\n\t\t\tcase \"reexport-non-harmony-default\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (default from non-harmony) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\tnull\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"reexport-named-default\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (default from named exports) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"reexport-fake-namespace-object\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (fake namespace object from non-harmony) */ \" +\n\t\t\t\t\tthis.getReexportFakeNamespaceObjectStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"rexport-non-harmony-undefined\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (non default export from non-harmony) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\t\"undefined\",\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"reexport-non-harmony-default-strict\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (default from non-harmony) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"reexport-namespace-object\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (module object) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"empty-star\":\n\t\t\t\treturn \"/* empty/unused harmony star reexport */\";\n\n\t\t\tcase \"safe-reexport\":\n\t\t\t\treturn Array.from(mode.map.entries())\n\t\t\t\t\t.map(item => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\"/* harmony reexport (safe) */ \" +\n\t\t\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tmodule.isUsed(item[0]),\n\t\t\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\t\timportedModule.isUsed(item[1])\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\");\n\n\t\t\tcase \"checked-reexport\":\n\t\t\t\treturn Array.from(mode.map.entries())\n\t\t\t\t\t.map(item => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\"/* harmony reexport (checked) */ \" +\n\t\t\t\t\t\t\tthis.getConditionalReexportStatement(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\titem[0],\n\t\t\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\t\titem[1]\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\");\n\n\t\t\tcase \"dynamic-reexport\": {\n\t\t\t\tconst activeExports = new Set([\n\t\t\t\t\t...dep.activeExports,\n\t\t\t\t\t...dep._discoverActiveExportsFromOtherStartExports()\n\t\t\t\t]);\n\t\t\t\tlet content =\n\t\t\t\t\t\"/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in \" +\n\t\t\t\t\timportVar +\n\t\t\t\t\t\") \";\n\n\t\t\t\t// Filter out exports which are defined by other exports\n\t\t\t\t// and filter out default export because it cannot be reexported with *\n\t\t\t\tif (activeExports.size > 0) {\n\t\t\t\t\tcontent +=\n\t\t\t\t\t\t\"if(\" +\n\t\t\t\t\t\tJSON.stringify(Array.from(activeExports).concat(\"default\")) +\n\t\t\t\t\t\t\".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\n\t\t\t\t} else {\n\t\t\t\t\tcontent += \"if(__WEBPACK_IMPORT_KEY__ !== 'default') \";\n\t\t\t\t}\n\t\t\t\tconst exportsName = dep.originModule.exportsArgument;\n\t\t\t\treturn (\n\t\t\t\t\tcontent +\n\t\t\t\t\t`(function(key) { __webpack_require__.d(${exportsName}, key, function() { return ${importVar}[key]; }) }(__WEBPACK_IMPORT_KEY__));\\n`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\n\t\t}\n\t}\n\n\tgetReexportStatement(module, key, name, valueKey) {\n\t\tconst exportsName = module.exportsArgument;\n\t\tconst returnValue = this.getReturnValue(name, valueKey);\n\t\treturn `__webpack_require__.d(${exportsName}, ${JSON.stringify(\n\t\t\tkey\n\t\t)}, function() { return ${returnValue}; });\\n`;\n\t}\n\n\tgetReexportFakeNamespaceObjectStatement(module, key, name) {\n\t\tconst exportsName = module.exportsArgument;\n\t\treturn `__webpack_require__.d(${exportsName}, ${JSON.stringify(\n\t\t\tkey\n\t\t)}, function() { return __webpack_require__.t(${name}); });\\n`;\n\t}\n\n\tgetConditionalReexportStatement(module, key, name, valueKey) {\n\t\tif (valueKey === false) {\n\t\t\treturn \"/* unused export */\\n\";\n\t\t}\n\t\tconst exportsName = module.exportsArgument;\n\t\tconst returnValue = this.getReturnValue(name, valueKey);\n\t\treturn `if(__webpack_require__.o(${name}, ${JSON.stringify(\n\t\t\tvalueKey\n\t\t)})) __webpack_require__.d(${exportsName}, ${JSON.stringify(\n\t\t\tkey\n\t\t)}, function() { return ${returnValue}; });\\n`;\n\t}\n\n\tgetReturnValue(name, valueKey) {\n\t\tif (valueKey === null) {\n\t\t\treturn `${name}_default.a`;\n\t\t}\n\t\tif (valueKey === \"\") {\n\t\t\treturn name;\n\t\t}\n\t\tif (valueKey === false) {\n\t\t\treturn \"/* unused export */ undefined\";\n\t\t}\n\n\t\treturn `${name}[${JSON.stringify(valueKey)}]`;\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass HarmonyExportSpecifierDependency extends NullDependency {\n\tconstructor(originModule, id, name) {\n\t\tsuper();\n\t\tthis.originModule = originModule;\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export specifier\";\n\t}\n\n\tgetExports() {\n\t\treturn {\n\t\t\texports: [this.name],\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n}\n\nHarmonyExportSpecifierDependency.Template = class HarmonyExportSpecifierDependencyTemplate {\n\tapply(dep, source) {}\n\n\tgetHarmonyInitOrder(dep) {\n\t\treturn 0;\n\t}\n\n\tharmonyInit(dep, source, runtime) {\n\t\tconst content = this.getContent(dep);\n\t\tsource.insert(-1, content);\n\t}\n\n\tgetContent(dep) {\n\t\tconst used = dep.originModule.isUsed(dep.name);\n\t\tif (!used) {\n\t\t\treturn `/* unused harmony export ${dep.name || \"namespace\"} */\\n`;\n\t\t}\n\n\t\tconst exportsName = dep.originModule.exportsArgument;\n\n\t\treturn `/* harmony export (binding) */ __webpack_require__.d(${exportsName}, ${JSON.stringify(\n\t\t\tused\n\t\t)}, function() { return ${dep.id}; });\\n`;\n\t}\n};\n\nmodule.exports = HarmonyExportSpecifierDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst Template = require(\"../Template\");\n\nclass HarmonyImportDependency extends ModuleDependency {\n\tconstructor(request, originModule, sourceOrder, parserScope) {\n\t\tsuper(request);\n\t\tthis.redirectedModule = undefined;\n\t\tthis.originModule = originModule;\n\t\tthis.sourceOrder = sourceOrder;\n\t\tthis.parserScope = parserScope;\n\t}\n\n\tget _module() {\n\t\treturn this.redirectedModule || this.module;\n\t}\n\n\tgetReference() {\n\t\tif (!this._module) return null;\n\t\treturn new DependencyReference(\n\t\t\tthis._module,\n\t\t\tfalse,\n\t\t\tthis.weak,\n\t\t\tthis.sourceOrder\n\t\t);\n\t}\n\n\tgetImportVar() {\n\t\tlet importVarMap = this.parserScope.importVarMap;\n\t\tif (!importVarMap) this.parserScope.importVarMap = importVarMap = new Map();\n\t\tlet importVar = importVarMap.get(this._module);\n\t\tif (importVar) return importVar;\n\t\timportVar = `${Template.toIdentifier(\n\t\t\t`${this.userRequest}`\n\t\t)}__WEBPACK_IMPORTED_MODULE_${importVarMap.size}__`;\n\t\timportVarMap.set(this._module, importVar);\n\t\treturn importVar;\n\t}\n\n\tgetImportStatement(update, runtime) {\n\t\treturn runtime.importStatement({\n\t\t\tupdate,\n\t\t\tmodule: this._module,\n\t\t\timportVar: this.getImportVar(),\n\t\t\trequest: this.request,\n\t\t\toriginModule: this.originModule\n\t\t});\n\t}\n\n\tupdateHash(hash) {\n\t\tsuper.updateHash(hash);\n\t\tconst importedModule = this._module;\n\t\thash.update(\n\t\t\t(importedModule &&\n\t\t\t\t(!importedModule.buildMeta || importedModule.buildMeta.exportsType)) +\n\t\t\t\t\"\"\n\t\t);\n\t\thash.update((importedModule && importedModule.id) + \"\");\n\t}\n\n\tdisconnect() {\n\t\tsuper.disconnect();\n\t\tthis.redirectedModule = undefined;\n\t}\n}\n\nmodule.exports = HarmonyImportDependency;\n\nconst importEmittedMap = new WeakMap();\n\nHarmonyImportDependency.Template = class HarmonyImportDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\t// no-op\n\t}\n\n\tgetHarmonyInitOrder(dep) {\n\t\treturn dep.sourceOrder;\n\t}\n\n\tstatic isImportEmitted(dep, source) {\n\t\tlet sourceInfo = importEmittedMap.get(source);\n\t\tif (!sourceInfo) return false;\n\t\tconst key = dep._module || dep.request;\n\t\treturn key && sourceInfo.emittedImports.get(key);\n\t}\n\n\tharmonyInit(dep, source, runtime, dependencyTemplates) {\n\t\tlet sourceInfo = importEmittedMap.get(source);\n\t\tif (!sourceInfo) {\n\t\t\timportEmittedMap.set(\n\t\t\t\tsource,\n\t\t\t\t(sourceInfo = {\n\t\t\t\t\temittedImports: new Map()\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tconst key = dep._module || dep.request;\n\t\tif (key && sourceInfo.emittedImports.get(key)) return;\n\t\tsourceInfo.emittedImports.set(key, true);\n\t\tconst content = dep.getImportStatement(false, runtime);\n\t\tsource.insert(-1, content);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { SyncBailHook } = require(\"tapable\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n\tconstructor(moduleOptions) {\n\t\tthis.strictExportPresence = moduleOptions.strictExportPresence;\n\t\tthis.strictThisContextOnImports = moduleOptions.strictThisContextOnImports;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.import.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\"\", statement.range);\n\t\t\t\tclearDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addDependency(clearDep);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.importSpecifier.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name) => {\n\t\t\t\tparser.scope.definitions.delete(name);\n\t\t\t\tparser.scope.renames.set(name, \"imported var\");\n\t\t\t\tif (!parser.state.harmonySpecifier) {\n\t\t\t\t\tparser.state.harmonySpecifier = new Map();\n\t\t\t\t}\n\t\t\t\tparser.state.harmonySpecifier.set(name, {\n\t\t\t\t\tsource,\n\t\t\t\t\tid,\n\t\t\t\t\tsourceOrder: parser.state.lastHarmonyImportOrder\n\t\t\t\t});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(\"imported var\")\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\tconst name = expr.name;\n\t\t\t\tconst settings = parser.state.harmonySpecifier.get(name);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\tsettings.id,\n\t\t\t\t\tname,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t);\n\t\t\t\tdep.shorthand = parser.scope.inShorthand;\n\t\t\t\tdep.directImport = true;\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\t\tparser.hooks.expressionAnyMember\n\t\t\t.for(\"imported var\")\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\tconst name = expr.object.name;\n\t\t\t\tconst settings = parser.state.harmonySpecifier.get(name);\n\t\t\t\tif (settings.id !== null) return false;\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\texpr.property.name || expr.property.value,\n\t\t\t\t\tname,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t);\n\t\t\t\tdep.shorthand = parser.scope.inShorthand;\n\t\t\t\tdep.directImport = false;\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\t\tif (this.strictThisContextOnImports) {\n\t\t\t// only in case when we strictly follow the spec we need a special case here\n\t\t\tparser.hooks.callAnyMember\n\t\t\t\t.for(\"imported var\")\n\t\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\t\tif (expr.callee.type !== \"MemberExpression\") return;\n\t\t\t\t\tif (expr.callee.object.type !== \"Identifier\") return;\n\t\t\t\t\tconst name = expr.callee.object.name;\n\t\t\t\t\tconst settings = parser.state.harmonySpecifier.get(name);\n\t\t\t\t\tif (settings.id !== null) return false;\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\t\texpr.callee.property.name || expr.callee.property.value,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\texpr.callee.range,\n\t\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t\t);\n\t\t\t\t\tdep.shorthand = parser.scope.inShorthand;\n\t\t\t\t\tdep.directImport = false;\n\t\t\t\t\tdep.namespaceObjectAsContext = true;\n\t\t\t\t\tdep.loc = expr.callee.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tif (expr.arguments) parser.walkExpressions(expr.arguments);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t}\n\t\tparser.hooks.call\n\t\t\t.for(\"imported var\")\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\tconst args = expr.arguments;\n\t\t\t\tconst fullExpr = expr;\n\t\t\t\texpr = expr.callee;\n\t\t\t\tif (expr.type !== \"Identifier\") return;\n\t\t\t\tconst name = expr.name;\n\t\t\t\tconst settings = parser.state.harmonySpecifier.get(name);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\tsettings.id,\n\t\t\t\t\tname,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t);\n\t\t\t\tdep.directImport = true;\n\t\t\t\tdep.callArgs = args;\n\t\t\t\tdep.call = fullExpr;\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tif (args) parser.walkExpressions(args);\n\t\t\t\treturn true;\n\t\t\t});\n\t\t// TODO webpack 5: refactor this, no custom hooks\n\t\tif (!parser.hooks.hotAcceptCallback) {\n\t\t\tparser.hooks.hotAcceptCallback = new SyncBailHook([\n\t\t\t\t\"expression\",\n\t\t\t\t\"requests\"\n\t\t\t]);\n\t\t}\n\t\tif (!parser.hooks.hotAcceptWithoutCallback) {\n\t\t\tparser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\n\t\t\t\t\"expression\",\n\t\t\t\t\"requests\"\n\t\t\t]);\n\t\t}\n\t\tparser.hooks.hotAcceptCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tconst harmonyParserScope = parser.state.harmonyParserScope;\n\t\t\t\tif (!harmonyParserScope) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tharmonyParserScope\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tparser.hooks.hotAcceptWithoutCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tparser.state.harmonyParserScope\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\nclass HarmonyImportSideEffectDependency extends HarmonyImportDependency {\n\tconstructor(request, originModule, sourceOrder, parserScope) {\n\t\tsuper(request, originModule, sourceOrder, parserScope);\n\t}\n\n\tgetReference() {\n\t\tif (this._module && this._module.factoryMeta.sideEffectFree) return null;\n\n\t\treturn super.getReference();\n\t}\n\n\tget type() {\n\t\treturn \"harmony side effect evaluation\";\n\t}\n}\n\nHarmonyImportSideEffectDependency.Template = class HarmonyImportSideEffectDependencyTemplate extends HarmonyImportDependency.Template {\n\tgetHarmonyInitOrder(dep) {\n\t\tif (dep._module && dep._module.factoryMeta.sideEffectFree) return NaN;\n\t\treturn super.getHarmonyInitOrder(dep);\n\t}\n};\n\nmodule.exports = HarmonyImportSideEffectDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\n\nclass HarmonyImportSpecifierDependency extends HarmonyImportDependency {\n\tconstructor(\n\t\trequest,\n\t\toriginModule,\n\t\tsourceOrder,\n\t\tparserScope,\n\t\tid,\n\t\tname,\n\t\trange,\n\t\tstrictExportPresence\n\t) {\n\t\tsuper(request, originModule, sourceOrder, parserScope);\n\t\tthis.id = id === null ? null : `${id}`;\n\t\tthis.redirectedId = undefined;\n\t\tthis.name = name;\n\t\tthis.range = range;\n\t\tthis.strictExportPresence = strictExportPresence;\n\t\tthis.namespaceObjectAsContext = false;\n\t\tthis.callArgs = undefined;\n\t\tthis.call = undefined;\n\t\tthis.directImport = undefined;\n\t\tthis.shorthand = undefined;\n\t}\n\n\tget type() {\n\t\treturn \"harmony import specifier\";\n\t}\n\n\tget _id() {\n\t\treturn this.redirectedId || this.id;\n\t}\n\n\tgetReference() {\n\t\tif (!this._module) return null;\n\t\treturn new DependencyReference(\n\t\t\tthis._module,\n\t\t\tthis._id && !this.namespaceObjectAsContext ? [this._id] : true,\n\t\t\tfalse,\n\t\t\tthis.sourceOrder\n\t\t);\n\t}\n\n\tgetWarnings() {\n\t\tif (\n\t\t\tthis.strictExportPresence ||\n\t\t\tthis.originModule.buildMeta.strictHarmonyModule\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._getErrors();\n\t}\n\n\tgetErrors() {\n\t\tif (\n\t\t\tthis.strictExportPresence ||\n\t\t\tthis.originModule.buildMeta.strictHarmonyModule\n\t\t) {\n\t\t\treturn this._getErrors();\n\t\t}\n\t\treturn [];\n\t}\n\n\t_getErrors() {\n\t\tconst importedModule = this._module;\n\t\tif (!importedModule) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!importedModule.buildMeta || !importedModule.buildMeta.exportsType) {\n\t\t\t// It's not an harmony module\n\t\t\tif (\n\t\t\t\tthis.originModule.buildMeta.strictHarmonyModule &&\n\t\t\t\tthis._id &&\n\t\t\t\tthis._id !== \"default\"\n\t\t\t) {\n\t\t\t\t// In strict harmony modules we only support the default export\n\t\t\t\treturn [\n\t\t\t\t\tnew HarmonyLinkingError(\n\t\t\t\t\t\t`Can't import the named export '${this._id}' from non EcmaScript module (only default export is available)`\n\t\t\t\t\t)\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (importedModule.isProvided(this._id) !== false) {\n\t\t\t// It's provided or we are not sure\n\t\t\treturn;\n\t\t}\n\n\t\t// We are sure that it's not provided\n\t\tconst idIsNotNameMessage =\n\t\t\tthis._id !== this.name ? ` (imported as '${this.name}')` : \"\";\n\t\tconst errorMessage = `\"export '${this._id}'${idIsNotNameMessage} was not found in '${this.userRequest}'`;\n\t\treturn [new HarmonyLinkingError(errorMessage)];\n\t}\n\n\t// implement this method to allow the occurrence order plugin to count correctly\n\tgetNumberOfIdOccurrences() {\n\t\treturn 0;\n\t}\n\n\tupdateHash(hash) {\n\t\tsuper.updateHash(hash);\n\t\tconst importedModule = this._module;\n\t\thash.update((importedModule && this._id) + \"\");\n\t\thash.update(\n\t\t\t(importedModule && this._id && importedModule.isUsed(this._id)) + \"\"\n\t\t);\n\t\thash.update(\n\t\t\t(importedModule &&\n\t\t\t\t(!importedModule.buildMeta || importedModule.buildMeta.exportsType)) +\n\t\t\t\t\"\"\n\t\t);\n\t\thash.update(\n\t\t\t(importedModule &&\n\t\t\t\timportedModule.used + JSON.stringify(importedModule.usedExports)) + \"\"\n\t\t);\n\t}\n\n\tdisconnect() {\n\t\tsuper.disconnect();\n\t\tthis.redirectedId = undefined;\n\t}\n}\n\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n\tapply(dep, source, runtime) {\n\t\tsuper.apply(dep, source, runtime);\n\t\tconst content = this.getContent(dep, runtime);\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n\n\tgetContent(dep, runtime) {\n\t\tconst exportExpr = runtime.exportFromImport({\n\t\t\tmodule: dep._module,\n\t\t\trequest: dep.request,\n\t\t\texportName: dep._id,\n\t\t\toriginModule: dep.originModule,\n\t\t\tasiSafe: dep.shorthand,\n\t\t\tisCall: dep.call,\n\t\t\tcallContext: !dep.directImport,\n\t\t\timportVar: dep.getImportVar()\n\t\t});\n\t\treturn dep.shorthand ? `${dep.name}: ${exportExpr}` : exportExpr;\n\t}\n};\n\nmodule.exports = HarmonyImportSpecifierDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NullDependency = require(\"./NullDependency\");\n\nclass HarmonyInitDependency extends NullDependency {\n\tconstructor(originModule) {\n\t\tsuper();\n\t\tthis.originModule = originModule;\n\t}\n\n\tget type() {\n\t\treturn \"harmony init\";\n\t}\n}\n\nmodule.exports = HarmonyInitDependency;\n\nHarmonyInitDependency.Template = class HarmonyInitDependencyTemplate {\n\tapply(dep, source, runtime, dependencyTemplates) {\n\t\tconst module = dep.originModule;\n\t\tconst list = [];\n\t\tfor (const dependency of module.dependencies) {\n\t\t\tconst template = dependencyTemplates.get(dependency.constructor);\n\t\t\tif (\n\t\t\t\ttemplate &&\n\t\t\t\ttypeof template.harmonyInit === \"function\" &&\n\t\t\t\ttypeof template.getHarmonyInitOrder === \"function\"\n\t\t\t) {\n\t\t\t\tconst order = template.getHarmonyInitOrder(dependency);\n\t\t\t\tif (!isNaN(order)) {\n\t\t\t\t\tlist.push({\n\t\t\t\t\t\torder,\n\t\t\t\t\t\tlistOrder: list.length,\n\t\t\t\t\t\tdependency,\n\t\t\t\t\t\ttemplate\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlist.sort((a, b) => {\n\t\t\tconst x = a.order - b.order;\n\t\t\tif (x) return x;\n\t\t\treturn a.listOrder - b.listOrder;\n\t\t});\n\n\t\tfor (const item of list) {\n\t\t\titem.template.harmonyInit(\n\t\t\t\titem.dependency,\n\t\t\t\tsource,\n\t\t\t\truntime,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t}\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nconst HarmonyInitDependency = require(\"./HarmonyInitDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\n\nconst NullFactory = require(\"../NullFactory\");\n\nconst HarmonyDetectionParserPlugin = require(\"./HarmonyDetectionParserPlugin\");\nconst HarmonyImportDependencyParserPlugin = require(\"./HarmonyImportDependencyParserPlugin\");\nconst HarmonyExportDependencyParserPlugin = require(\"./HarmonyExportDependencyParserPlugin\");\nconst HarmonyTopLevelThisParserPlugin = require(\"./HarmonyTopLevelThisParserPlugin\");\n\nclass HarmonyModulesPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"HarmonyModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyCompatibilityDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyCompatibilityDependency,\n\t\t\t\t\tnew HarmonyCompatibilityDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyInitDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyInitDependency,\n\t\t\t\t\tnew HarmonyInitDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyImportSideEffectDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyImportSideEffectDependency,\n\t\t\t\t\tnew HarmonyImportSideEffectDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyImportSpecifierDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyImportSpecifierDependency,\n\t\t\t\t\tnew HarmonyImportSpecifierDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyExportHeaderDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyExportHeaderDependency,\n\t\t\t\t\tnew HarmonyExportHeaderDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyExportExpressionDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyExportExpressionDependency,\n\t\t\t\t\tnew HarmonyExportExpressionDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyExportSpecifierDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyExportSpecifierDependency,\n\t\t\t\t\tnew HarmonyExportSpecifierDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyExportImportedSpecifierDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyExportImportedSpecifierDependency,\n\t\t\t\t\tnew HarmonyExportImportedSpecifierDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyAcceptDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyAcceptDependency,\n\t\t\t\t\tnew HarmonyAcceptDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyAcceptImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyAcceptImportDependency,\n\t\t\t\t\tnew HarmonyAcceptImportDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.harmony !== undefined && !parserOptions.harmony)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew HarmonyDetectionParserPlugin().apply(parser);\n\t\t\t\t\tnew HarmonyImportDependencyParserPlugin(this.options).apply(parser);\n\t\t\t\t\tnew HarmonyExportDependencyParserPlugin(this.options).apply(parser);\n\t\t\t\t\tnew HarmonyTopLevelThisParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"HarmonyModulesPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"HarmonyModulesPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = HarmonyModulesPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nclass HarmonyTopLevelThisParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.expression\n\t\t\t.for(\"this\")\n\t\t\t.tap(\"HarmonyTopLevelThisParserPlugin\", node => {\n\t\t\t\tif (!parser.scope.topLevelScope) return;\n\t\t\t\tconst module = parser.state.module;\n\t\t\t\tconst isHarmony = !!(module.buildMeta && module.buildMeta.exportsType);\n\t\t\t\tif (isHarmony) {\n\t\t\t\t\tconst dep = new ConstDependency(\"undefined\", node.range, false);\n\t\t\t\t\tdep.loc = node.loc;\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nmodule.exports = HarmonyTopLevelThisParserPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ContextDependency = require(\"./ContextDependency\");\nconst ContextDependencyTemplateAsRequireCall = require(\"./ContextDependencyTemplateAsRequireCall\");\n\nclass ImportContextDependency extends ContextDependency {\n\tconstructor(options, range, valueRange) {\n\t\tsuper(options);\n\t\tthis.range = range;\n\t\tthis.valueRange = valueRange;\n\t}\n\n\tget type() {\n\t\treturn `import() context ${this.options.mode}`;\n\t}\n}\n\nImportContextDependency.Template = ContextDependencyTemplateAsRequireCall;\n\nmodule.exports = ImportContextDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst ImportDependency = require(\"./ImportDependency\");\n\nmodule.exports = class ImportDependenciesBlock extends AsyncDependenciesBlock {\n\t// TODO webpack 5 reorganize arguments\n\tconstructor(request, range, groupOptions, module, loc, originModule) {\n\t\tsuper(groupOptions, module, loc, request);\n\t\tthis.range = range;\n\t\tconst dep = new ImportDependency(request, originModule, this);\n\t\tdep.loc = loc;\n\t\tthis.addDependency(dep);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass ImportDependency extends ModuleDependency {\n\tconstructor(request, originModule, block) {\n\t\tsuper(request);\n\t\tthis.originModule = originModule;\n\t\tthis.block = block;\n\t}\n\n\tget type() {\n\t\treturn \"import()\";\n\t}\n}\n\nImportDependency.Template = class ImportDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst content = runtime.moduleNamespacePromise({\n\t\t\tblock: dep.block,\n\t\t\tmodule: dep.module,\n\t\t\trequest: dep.request,\n\t\t\tstrict: dep.originModule.buildMeta.strictHarmonyModule,\n\t\t\tmessage: \"import()\"\n\t\t});\n\n\t\tsource.replace(dep.block.range[0], dep.block.range[1] - 1, content);\n\t}\n};\n\nmodule.exports = ImportDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass ImportEagerDependency extends ModuleDependency {\n\tconstructor(request, originModule, range) {\n\t\tsuper(request);\n\t\tthis.originModule = originModule;\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"import() eager\";\n\t}\n}\n\nImportEagerDependency.Template = class ImportEagerDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst content = runtime.moduleNamespacePromise({\n\t\t\tmodule: dep.module,\n\t\t\trequest: dep.request,\n\t\t\tstrict: dep.originModule.buildMeta.strictHarmonyModule,\n\t\t\tmessage: \"import() eager\"\n\t\t});\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n};\n\nmodule.exports = ImportEagerDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\nconst ImportDependenciesBlock = require(\"./ImportDependenciesBlock\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\n\nclass ImportParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.importCall.tap(\"ImportParserPlugin\", expr => {\n\t\t\tif (expr.arguments.length !== 1) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Incorrect number of arguments provided to 'import(module: string) -> Promise'.\"\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\n\t\t\tlet chunkName = null;\n\t\t\tlet mode = \"lazy\";\n\t\t\tlet include = null;\n\t\t\tlet exclude = null;\n\t\t\tconst groupOptions = {};\n\n\t\t\tconst {\n\t\t\t\toptions: importOptions,\n\t\t\t\terrors: commentErrors\n\t\t\t} = parser.parseCommentOptions(expr.range);\n\n\t\t\tif (commentErrors) {\n\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (importOptions) {\n\t\t\t\tif (importOptions.webpackIgnore !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${importOptions.webpackIgnore}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Do not instrument `import()` if `webpackIgnore` is `true`\n\t\t\t\t\t\tif (importOptions.webpackIgnore) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackChunkName !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackChunkName !== \"string\") {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackChunkName\\` expected a string, but received: ${importOptions.webpackChunkName}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchunkName = importOptions.webpackChunkName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackMode !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackMode !== \"string\") {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackMode\\` expected a string, but received: ${importOptions.webpackMode}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmode = importOptions.webpackMode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackPrefetch !== undefined) {\n\t\t\t\t\tif (importOptions.webpackPrefetch === true) {\n\t\t\t\t\t\tgroupOptions.prefetchOrder = 0;\n\t\t\t\t\t} else if (typeof importOptions.webpackPrefetch === \"number\") {\n\t\t\t\t\t\tgroupOptions.prefetchOrder = importOptions.webpackPrefetch;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackPrefetch\\` expected true or a number, but received: ${importOptions.webpackPrefetch}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackPreload !== undefined) {\n\t\t\t\t\tif (importOptions.webpackPreload === true) {\n\t\t\t\t\t\tgroupOptions.preloadOrder = 0;\n\t\t\t\t\t} else if (typeof importOptions.webpackPreload === \"number\") {\n\t\t\t\t\t\tgroupOptions.preloadOrder = importOptions.webpackPreload;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackPreload\\` expected true or a number, but received: ${importOptions.webpackPreload}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackInclude !== undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!importOptions.webpackInclude ||\n\t\t\t\t\t\timportOptions.webpackInclude.constructor.name !== \"RegExp\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackInclude\\` expected a regular expression, but received: ${importOptions.webpackInclude}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinclude = new RegExp(importOptions.webpackInclude);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackExclude !== undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!importOptions.webpackExclude ||\n\t\t\t\t\t\timportOptions.webpackExclude.constructor.name !== \"RegExp\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t`\\`webpackExclude\\` expected a regular expression, but received: ${importOptions.webpackExclude}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\texclude = new RegExp(importOptions.webpackExclude);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (param.isString()) {\n\t\t\t\tif (mode !== \"lazy\" && mode !== \"eager\" && mode !== \"weak\") {\n\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t`\\`webpackMode\\` expected 'lazy', 'eager' or 'weak', but received: ${mode}.`,\n\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (mode === \"eager\") {\n\t\t\t\t\tconst dep = new ImportEagerDependency(\n\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\texpr.range\n\t\t\t\t\t);\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else if (mode === \"weak\") {\n\t\t\t\t\tconst dep = new ImportWeakDependency(\n\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\texpr.range\n\t\t\t\t\t);\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tconst depBlock = new ImportDependenciesBlock(\n\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tObject.assign(groupOptions, {\n\t\t\t\t\t\t\tname: chunkName\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\texpr.loc,\n\t\t\t\t\t\tparser.state.module\n\t\t\t\t\t);\n\t\t\t\t\tparser.state.current.addBlock(depBlock);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tmode !== \"lazy\" &&\n\t\t\t\t\tmode !== \"lazy-once\" &&\n\t\t\t\t\tmode !== \"eager\" &&\n\t\t\t\t\tmode !== \"weak\"\n\t\t\t\t) {\n\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t`\\`webpackMode\\` expected 'lazy', 'lazy-once', 'eager' or 'weak', but received: ${mode}.`,\n\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tmode = \"lazy\";\n\t\t\t\t}\n\n\t\t\t\tif (mode === \"weak\") {\n\t\t\t\t\tmode = \"async-weak\";\n\t\t\t\t}\n\t\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tparam,\n\t\t\t\t\texpr,\n\t\t\t\t\tthis.options,\n\t\t\t\t\t{\n\t\t\t\t\t\tchunkName,\n\t\t\t\t\t\tgroupOptions,\n\t\t\t\t\t\tinclude,\n\t\t\t\t\t\texclude,\n\t\t\t\t\t\tmode,\n\t\t\t\t\t\tnamespaceObject: parser.state.module.buildMeta.strictHarmonyModule\n\t\t\t\t\t\t\t? \"strict\"\n\t\t\t\t\t\t\t: true\n\t\t\t\t\t},\n\t\t\t\t\tparser\n\t\t\t\t);\n\t\t\t\tif (!dep) return;\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = ImportParserPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ImportDependency = require(\"./ImportDependency\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\n\nclass ImportPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ImportPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnew ImportDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnew ImportEagerDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnew ImportWeakDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tnew ImportContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.import !== undefined && !parserOptions.import)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportParserPlugin(options).apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ImportPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ImportPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass ImportWeakDependency extends ModuleDependency {\n\tconstructor(request, originModule, range) {\n\t\tsuper(request);\n\t\tthis.originModule = originModule;\n\t\tthis.range = range;\n\t\tthis.weak = true;\n\t}\n\n\tget type() {\n\t\treturn \"import() weak\";\n\t}\n}\n\nImportWeakDependency.Template = class ImportDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst content = runtime.moduleNamespacePromise({\n\t\t\tmodule: dep.module,\n\t\t\trequest: dep.request,\n\t\t\tstrict: dep.originModule.buildMeta.strictHarmonyModule,\n\t\t\tmessage: \"import() weak\",\n\t\t\tweak: true\n\t\t});\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n};\n\nmodule.exports = ImportWeakDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass JsonExportsDependency extends NullDependency {\n\tconstructor(exports) {\n\t\tsuper();\n\t\tthis.exports = exports;\n\t}\n\n\tget type() {\n\t\treturn \"json exports\";\n\t}\n\n\tgetExports() {\n\t\treturn {\n\t\t\texports: this.exports,\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n}\n\nmodule.exports = JsonExportsDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass LoaderDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request string\n\t */\n\tconstructor(request) {\n\t\tsuper(request);\n\t}\n\n\tget type() {\n\t\treturn \"loader\";\n\t}\n}\n\nmodule.exports = LoaderDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst LoaderDependency = require(\"./LoaderDependency\");\nconst NormalModule = require(\"../NormalModule\");\n\n/** @typedef {import(\"../Module\")} Module */\n\n/**\n * @callback LoadModuleCallback\n * @param {Error=} err error object\n * @param {string=} source source code\n * @param {object=} map source map\n * @param {Module=} module loaded module if successful\n */\n\nclass LoaderPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"LoaderPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tLoaderDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.compilation.tap(\"LoaderPlugin\", compilation => {\n\t\t\tcompilation.hooks.normalModuleLoader.tap(\n\t\t\t\t\"LoaderPlugin\",\n\t\t\t\t(loaderContext, module) => {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} request the request string to load the module from\n\t\t\t\t\t * @param {LoadModuleCallback} callback callback returning the loaded module or error\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tloaderContext.loadModule = (request, callback) => {\n\t\t\t\t\t\tconst dep = new LoaderDependency(request);\n\t\t\t\t\t\tdep.loc = {\n\t\t\t\t\t\t\tname: request\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst factory = compilation.dependencyFactories.get(\n\t\t\t\t\t\t\tdep.constructor\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (factory === undefined) {\n\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`No module factory available for dependency type: ${dep.constructor.name}`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcompilation.semaphore.release();\n\t\t\t\t\t\tcompilation.addModuleDependencies(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfactory,\n\t\t\t\t\t\t\t\t\tdependencies: [dep]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\"lm\",\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\tcompilation.semaphore.acquire(() => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!dep.module) {\n\t\t\t\t\t\t\t\t\t\treturn callback(new Error(\"Cannot load the module\"));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// TODO consider removing this in webpack 5\n\t\t\t\t\t\t\t\t\tif (dep.module instanceof NormalModule && dep.module.error) {\n\t\t\t\t\t\t\t\t\t\treturn callback(dep.module.error);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!dep.module._source) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t\t\"The module created for a LoaderDependency must have a property _source\"\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlet source, map;\n\t\t\t\t\t\t\t\t\tconst moduleSource = dep.module._source;\n\t\t\t\t\t\t\t\t\tif (moduleSource.sourceAndMap) {\n\t\t\t\t\t\t\t\t\t\tconst sourceAndMap = moduleSource.sourceAndMap();\n\t\t\t\t\t\t\t\t\t\tmap = sourceAndMap.map;\n\t\t\t\t\t\t\t\t\t\tsource = sourceAndMap.source;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tmap = moduleSource.map();\n\t\t\t\t\t\t\t\t\t\tsource = moduleSource.source();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (dep.module.buildInfo.fileDependencies) {\n\t\t\t\t\t\t\t\t\t\tfor (const d of dep.module.buildInfo.fileDependencies) {\n\t\t\t\t\t\t\t\t\t\t\tloaderContext.addDependency(d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (dep.module.buildInfo.contextDependencies) {\n\t\t\t\t\t\t\t\t\t\tfor (const d of dep.module.buildInfo.contextDependencies) {\n\t\t\t\t\t\t\t\t\t\t\tloaderContext.addContextDependency(d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn callback(null, source, map, dep.module);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = LoaderPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass LocalModule {\n\tconstructor(module, name, idx) {\n\t\tthis.module = module;\n\t\tthis.name = name;\n\t\tthis.idx = idx;\n\t\tthis.used = false;\n\t}\n\n\tflagUsed() {\n\t\tthis.used = true;\n\t}\n\n\tvariableName() {\n\t\treturn \"__WEBPACK_LOCAL_MODULE_\" + this.idx + \"__\";\n\t}\n}\nmodule.exports = LocalModule;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass LocalModuleDependency extends NullDependency {\n\tconstructor(localModule, range, callNew) {\n\t\tsuper();\n\t\tlocalModule.flagUsed();\n\t\tthis.localModule = localModule;\n\t\tthis.range = range;\n\t\tthis.callNew = callNew;\n\t}\n}\n\nLocalModuleDependency.Template = class LocalModuleDependencyTemplate {\n\tapply(dep, source) {\n\t\tif (!dep.range) return;\n\t\tconst moduleInstance = dep.callNew\n\t\t\t? `new (function () { return ${dep.localModule.variableName()}; })()`\n\t\t\t: dep.localModule.variableName();\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, moduleInstance);\n\t}\n};\n\nmodule.exports = LocalModuleDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst LocalModule = require(\"./LocalModule\");\nconst LocalModulesHelpers = exports;\n\nconst lookup = (parent, mod) => {\n\tif (mod.charAt(0) !== \".\") return mod;\n\n\tvar path = parent.split(\"/\");\n\tvar segs = mod.split(\"/\");\n\tpath.pop();\n\n\tfor (let i = 0; i < segs.length; i++) {\n\t\tconst seg = segs[i];\n\t\tif (seg === \"..\") {\n\t\t\tpath.pop();\n\t\t} else if (seg !== \".\") {\n\t\t\tpath.push(seg);\n\t\t}\n\t}\n\n\treturn path.join(\"/\");\n};\n\nLocalModulesHelpers.addLocalModule = (state, name) => {\n\tif (!state.localModules) {\n\t\tstate.localModules = [];\n\t}\n\tconst m = new LocalModule(state.module, name, state.localModules.length);\n\tstate.localModules.push(m);\n\treturn m;\n};\n\nLocalModulesHelpers.getLocalModule = (state, name, namedModule) => {\n\tif (!state.localModules) return null;\n\tif (namedModule) {\n\t\t// resolve dependency name relative to the defining named module\n\t\tname = lookup(namedModule, name);\n\t}\n\tfor (let i = 0; i < state.localModules.length; i++) {\n\t\tif (state.localModules[i].name === name) {\n\t\t\treturn state.localModules[i];\n\t\t}\n\t}\n\treturn null;\n};\n\nmodule.exports = LocalModulesHelpers;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst Dependency = require(\"../Dependency\");\n\nclass ModuleDependency extends Dependency {\n\t/**\n\t * @param {string} request request path which needs resolving\n\t */\n\tconstructor(request) {\n\t\tsuper();\n\t\tthis.request = request;\n\t\tthis.userRequest = request;\n\t}\n\n\tgetResourceIdentifier() {\n\t\treturn `module${this.request}`;\n\t}\n}\n\nmodule.exports = ModuleDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass ModuleDependencyTemplateAsId {\n\tapply(dep, source, runtime) {\n\t\tif (!dep.range) return;\n\t\tconst content = runtime.moduleId({\n\t\t\tmodule: dep.module,\n\t\t\trequest: dep.request\n\t\t});\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n}\nmodule.exports = ModuleDependencyTemplateAsId;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass ModuleDependencyTemplateAsRequireId {\n\tapply(dep, source, runtime) {\n\t\tif (!dep.range) return;\n\t\tconst content = runtime.moduleExports({\n\t\t\tmodule: dep.module,\n\t\t\trequest: dep.request\n\t\t});\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n}\nmodule.exports = ModuleDependencyTemplateAsRequireId;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst ModuleDependencyTemplateAsId = require(\"./ModuleDependencyTemplateAsId\");\n\nclass ModuleHotAcceptDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.weak = true;\n\t}\n\n\tget type() {\n\t\treturn \"module.hot.accept\";\n\t}\n}\n\nModuleHotAcceptDependency.Template = ModuleDependencyTemplateAsId;\n\nmodule.exports = ModuleHotAcceptDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst ModuleDependencyTemplateAsId = require(\"./ModuleDependencyTemplateAsId\");\n\nclass ModuleHotDeclineDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.weak = true;\n\t}\n\n\tget type() {\n\t\treturn \"module.hot.decline\";\n\t}\n}\n\nModuleHotDeclineDependency.Template = ModuleDependencyTemplateAsId;\n\nmodule.exports = ModuleHotDeclineDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./SingleEntryDependency\")} SingleEntryDependency */\nconst Dependency = require(\"../Dependency\");\n\nclass MultiEntryDependency extends Dependency {\n\t/**\n\t * @param {SingleEntryDependency[]} dependencies an array of SingleEntryDependencies\n\t * @param {string} name entry name\n\t */\n\tconstructor(dependencies, name) {\n\t\tsuper();\n\t\tthis.dependencies = dependencies;\n\t\tthis.name = name;\n\t}\n\n\tget type() {\n\t\treturn \"multi entry\";\n\t}\n}\n\nmodule.exports = MultiEntryDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst Dependency = require(\"../Dependency\");\n\nclass NullDependency extends Dependency {\n\tget type() {\n\t\treturn \"null\";\n\t}\n\n\tupdateHash() {}\n}\n\nNullDependency.Template = class NullDependencyTemplate {\n\tapply() {}\n};\n\nmodule.exports = NullDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass PrefetchDependency extends ModuleDependency {\n\tconstructor(request) {\n\t\tsuper(request);\n\t}\n\n\tget type() {\n\t\treturn \"prefetch\";\n\t}\n}\n\nmodule.exports = PrefetchDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ContextDependency = require(\"./ContextDependency\");\nconst ModuleDependencyTemplateAsRequireId = require(\"./ModuleDependencyTemplateAsRequireId\");\n\nclass RequireContextDependency extends ContextDependency {\n\tconstructor(options, range) {\n\t\tsuper(options);\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"require.context\";\n\t}\n}\n\nRequireContextDependency.Template = ModuleDependencyTemplateAsRequireId;\n\nmodule.exports = RequireContextDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireContextDependency = require(\"./RequireContextDependency\");\n\nmodule.exports = class RequireContextDependencyParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require.context\")\n\t\t\t.tap(\"RequireContextDependencyParserPlugin\", expr => {\n\t\t\t\tlet regExp = /^\\.\\/.*$/;\n\t\t\t\tlet recursive = true;\n\t\t\t\tlet mode = \"sync\";\n\t\t\t\tswitch (expr.arguments.length) {\n\t\t\t\t\tcase 4: {\n\t\t\t\t\t\tconst modeExpr = parser.evaluateExpression(expr.arguments[3]);\n\t\t\t\t\t\tif (!modeExpr.isString()) return;\n\t\t\t\t\t\tmode = modeExpr.string;\n\t\t\t\t\t}\n\t\t\t\t\t// falls through\n\t\t\t\t\tcase 3: {\n\t\t\t\t\t\tconst regExpExpr = parser.evaluateExpression(expr.arguments[2]);\n\t\t\t\t\t\tif (!regExpExpr.isRegExp()) return;\n\t\t\t\t\t\tregExp = regExpExpr.regExp;\n\t\t\t\t\t}\n\t\t\t\t\t// falls through\n\t\t\t\t\tcase 2: {\n\t\t\t\t\t\tconst recursiveExpr = parser.evaluateExpression(expr.arguments[1]);\n\t\t\t\t\t\tif (!recursiveExpr.isBoolean()) return;\n\t\t\t\t\t\trecursive = recursiveExpr.bool;\n\t\t\t\t\t}\n\t\t\t\t\t// falls through\n\t\t\t\t\tcase 1: {\n\t\t\t\t\t\tconst requestExpr = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tif (!requestExpr.isString()) return;\n\t\t\t\t\t\tconst dep = new RequireContextDependency(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequest: requestExpr.string,\n\t\t\t\t\t\t\t\trecursive,\n\t\t\t\t\t\t\t\tregExp,\n\t\t\t\t\t\t\t\tmode\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tdep.optional = parser.scope.inTry;\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireContextDependency = require(\"./RequireContextDependency\");\nconst ContextElementDependency = require(\"./ContextElementDependency\");\n\nconst RequireContextDependencyParserPlugin = require(\"./RequireContextDependencyParserPlugin\");\n\nclass RequireContextPlugin {\n\tconstructor(modulesDirectories, extensions, mainFiles) {\n\t\tif (!Array.isArray(modulesDirectories)) {\n\t\t\tthrow new Error(\"modulesDirectories must be an array\");\n\t\t}\n\t\tif (!Array.isArray(extensions)) {\n\t\t\tthrow new Error(\"extensions must be an array\");\n\t\t}\n\t\tthis.modulesDirectories = modulesDirectories;\n\t\tthis.extensions = extensions;\n\t\tthis.mainFiles = mainFiles;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireContextPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireContextDependency,\n\t\t\t\t\tnew RequireContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContextElementDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireContext !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireContext\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireContextDependencyParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireContextPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireContextPlugin\", handler);\n\n\t\t\t\tcontextModuleFactory.hooks.alternatives.tap(\n\t\t\t\t\t\"RequireContextPlugin\",\n\t\t\t\t\titems => {\n\t\t\t\t\t\tif (items.length === 0) return items;\n\t\t\t\t\t\treturn items\n\t\t\t\t\t\t\t.map(obj => {\n\t\t\t\t\t\t\t\treturn this.extensions\n\t\t\t\t\t\t\t\t\t.filter(ext => {\n\t\t\t\t\t\t\t\t\t\tconst l = obj.request.length;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\tl > ext.length &&\n\t\t\t\t\t\t\t\t\t\t\tobj.request.substr(l - ext.length, l) === ext\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.map(ext => {\n\t\t\t\t\t\t\t\t\t\tconst l = obj.request.length;\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tcontext: obj.context,\n\t\t\t\t\t\t\t\t\t\t\trequest: obj.request.substr(0, l - ext.length)\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.concat(obj);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.reduce((a, b) => a.concat(b), []);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcontextModuleFactory.hooks.alternatives.tap(\n\t\t\t\t\t\"RequireContextPlugin\",\n\t\t\t\t\titems => {\n\t\t\t\t\t\tif (items.length === 0) return items;\n\t\t\t\t\t\treturn items\n\t\t\t\t\t\t\t.map(obj => {\n\t\t\t\t\t\t\t\treturn this.mainFiles\n\t\t\t\t\t\t\t\t\t.filter(mainFile => {\n\t\t\t\t\t\t\t\t\t\tconst l = obj.request.length;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\tl > mainFile.length + 1 &&\n\t\t\t\t\t\t\t\t\t\t\tobj.request.substr(l - mainFile.length - 1, l) ===\n\t\t\t\t\t\t\t\t\t\t\t\t\"/\" + mainFile\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.map(mainFile => {\n\t\t\t\t\t\t\t\t\t\tconst l = obj.request.length;\n\t\t\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcontext: obj.context,\n\t\t\t\t\t\t\t\t\t\t\t\trequest: obj.request.substr(0, l - mainFile.length)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcontext: obj.context,\n\t\t\t\t\t\t\t\t\t\t\t\trequest: obj.request.substr(0, l - mainFile.length - 1)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.reduce((a, b) => a.concat(b), [])\n\t\t\t\t\t\t\t\t\t.concat(obj);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.reduce((a, b) => a.concat(b), []);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcontextModuleFactory.hooks.alternatives.tap(\n\t\t\t\t\t\"RequireContextPlugin\",\n\t\t\t\t\titems => {\n\t\t\t\t\t\tif (items.length === 0) return items;\n\t\t\t\t\t\treturn items.map(obj => {\n\t\t\t\t\t\t\tfor (let i = 0; i < this.modulesDirectories.length; i++) {\n\t\t\t\t\t\t\t\tconst dir = this.modulesDirectories[i];\n\t\t\t\t\t\t\t\tconst idx = obj.request.indexOf(\"./\" + dir + \"/\");\n\t\t\t\t\t\t\t\tif (idx === 0) {\n\t\t\t\t\t\t\t\t\tobj.request = obj.request.slice(dir.length + 3);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireContextPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\n\nmodule.exports = class RequireEnsureDependenciesBlock extends AsyncDependenciesBlock {\n\tconstructor(\n\t\texpr,\n\t\tsuccessExpression,\n\t\terrorExpression,\n\t\tchunkName,\n\t\tchunkNameRange,\n\t\tmodule,\n\t\tloc\n\t) {\n\t\tsuper(chunkName, module, loc, null);\n\t\tthis.expr = expr;\n\t\tconst successBodyRange =\n\t\t\tsuccessExpression &&\n\t\t\tsuccessExpression.body &&\n\t\t\tsuccessExpression.body.range;\n\t\tif (successBodyRange) {\n\t\t\tthis.range = [successBodyRange[0] + 1, successBodyRange[1] - 1];\n\t\t}\n\t\tthis.chunkNameRange = chunkNameRange;\n\t\tconst dep = new RequireEnsureDependency(this);\n\t\tdep.loc = loc;\n\t\tthis.addDependency(dep);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireEnsureDependenciesBlock = require(\"./RequireEnsureDependenciesBlock\");\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\nconst getFunctionExpression = require(\"./getFunctionExpression\");\n\nmodule.exports = class RequireEnsureDependenciesBlockParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require.ensure\")\n\t\t\t.tap(\"RequireEnsureDependenciesBlockParserPlugin\", expr => {\n\t\t\t\tlet chunkName = null;\n\t\t\t\tlet chunkNameRange = null;\n\t\t\t\tlet errorExpressionArg = null;\n\t\t\t\tlet errorExpression = null;\n\t\t\t\tswitch (expr.arguments.length) {\n\t\t\t\t\tcase 4: {\n\t\t\t\t\t\tconst chunkNameExpr = parser.evaluateExpression(expr.arguments[3]);\n\t\t\t\t\t\tif (!chunkNameExpr.isString()) return;\n\t\t\t\t\t\tchunkNameRange = chunkNameExpr.range;\n\t\t\t\t\t\tchunkName = chunkNameExpr.string;\n\t\t\t\t\t}\n\t\t\t\t\t// falls through\n\t\t\t\t\tcase 3: {\n\t\t\t\t\t\terrorExpressionArg = expr.arguments[2];\n\t\t\t\t\t\terrorExpression = getFunctionExpression(errorExpressionArg);\n\n\t\t\t\t\t\tif (!errorExpression && !chunkName) {\n\t\t\t\t\t\t\tconst chunkNameExpr = parser.evaluateExpression(\n\t\t\t\t\t\t\t\texpr.arguments[2]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!chunkNameExpr.isString()) return;\n\t\t\t\t\t\t\tchunkNameRange = chunkNameExpr.range;\n\t\t\t\t\t\t\tchunkName = chunkNameExpr.string;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// falls through\n\t\t\t\t\tcase 2: {\n\t\t\t\t\t\tconst dependenciesExpr = parser.evaluateExpression(\n\t\t\t\t\t\t\texpr.arguments[0]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst dependenciesItems = dependenciesExpr.isArray()\n\t\t\t\t\t\t\t? dependenciesExpr.items\n\t\t\t\t\t\t\t: [dependenciesExpr];\n\t\t\t\t\t\tconst successExpressionArg = expr.arguments[1];\n\t\t\t\t\t\tconst successExpression = getFunctionExpression(\n\t\t\t\t\t\t\tsuccessExpressionArg\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (successExpression) {\n\t\t\t\t\t\t\tparser.walkExpressions(successExpression.expressions);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (errorExpression) {\n\t\t\t\t\t\t\tparser.walkExpressions(errorExpression.expressions);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst dep = new RequireEnsureDependenciesBlock(\n\t\t\t\t\t\t\texpr,\n\t\t\t\t\t\t\tsuccessExpression ? successExpression.fn : successExpressionArg,\n\t\t\t\t\t\t\terrorExpression ? errorExpression.fn : errorExpressionArg,\n\t\t\t\t\t\t\tchunkName,\n\t\t\t\t\t\t\tchunkNameRange,\n\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst old = parser.state.current;\n\t\t\t\t\t\tparser.state.current = dep;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet failed = false;\n\t\t\t\t\t\t\tparser.inScope([], () => {\n\t\t\t\t\t\t\t\tfor (const ee of dependenciesItems) {\n\t\t\t\t\t\t\t\t\tif (ee.isString()) {\n\t\t\t\t\t\t\t\t\t\tconst edep = new RequireEnsureItemDependency(ee.string);\n\t\t\t\t\t\t\t\t\t\tedep.loc = dep.loc;\n\t\t\t\t\t\t\t\t\t\tdep.addDependency(edep);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (failed) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (successExpression) {\n\t\t\t\t\t\t\t\tif (successExpression.fn.body.type === \"BlockStatement\") {\n\t\t\t\t\t\t\t\t\tparser.walkStatement(successExpression.fn.body);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tparser.walkExpression(successExpression.fn.body);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\told.addBlock(dep);\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tparser.state.current = old;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!successExpression) {\n\t\t\t\t\t\t\tparser.walkExpression(successExpressionArg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (errorExpression) {\n\t\t\t\t\t\t\tif (errorExpression.fn.body.type === \"BlockStatement\") {\n\t\t\t\t\t\t\t\tparser.walkStatement(errorExpression.fn.body);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparser.walkExpression(errorExpression.fn.body);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (errorExpressionArg) {\n\t\t\t\t\t\t\tparser.walkExpression(errorExpressionArg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass RequireEnsureDependency extends NullDependency {\n\tconstructor(block) {\n\t\tsuper();\n\t\tthis.block = block;\n\t}\n\n\tget type() {\n\t\treturn \"require.ensure\";\n\t}\n}\n\nRequireEnsureDependency.Template = class RequireEnsureDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst depBlock = dep.block;\n\t\tconst promise = runtime.blockPromise({\n\t\t\tblock: depBlock,\n\t\t\tmessage: \"require.ensure\"\n\t\t});\n\t\tconst errorCallbackExists =\n\t\t\tdepBlock.expr.arguments.length === 4 ||\n\t\t\t(!depBlock.chunkName && depBlock.expr.arguments.length === 3);\n\t\tconst startBlock = `${promise}.then((`;\n\t\tconst middleBlock = \").bind(null, __webpack_require__)).catch(\";\n\t\tconst endBlock = `).bind(null, __webpack_require__)).catch(${runtime.onError()})`;\n\t\tsource.replace(\n\t\t\tdepBlock.expr.range[0],\n\t\t\tdepBlock.expr.arguments[1].range[0] - 1,\n\t\t\tstartBlock\n\t\t);\n\t\tif (errorCallbackExists) {\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.expr.arguments[1].range[1],\n\t\t\t\tdepBlock.expr.arguments[2].range[0] - 1,\n\t\t\t\tmiddleBlock\n\t\t\t);\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.expr.arguments[2].range[1],\n\t\t\t\tdepBlock.expr.range[1] - 1,\n\t\t\t\t\")\"\n\t\t\t);\n\t\t} else {\n\t\t\tsource.replace(\n\t\t\t\tdepBlock.expr.arguments[1].range[1],\n\t\t\t\tdepBlock.expr.range[1] - 1,\n\t\t\t\tendBlock\n\t\t\t);\n\t\t}\n\t}\n};\n\nmodule.exports = RequireEnsureDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst NullDependency = require(\"./NullDependency\");\n\nclass RequireEnsureItemDependency extends ModuleDependency {\n\tconstructor(request) {\n\t\tsuper(request);\n\t}\n\n\tget type() {\n\t\treturn \"require.ensure item\";\n\t}\n}\n\nRequireEnsureItemDependency.Template = NullDependency.Template;\n\nmodule.exports = RequireEnsureItemDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\n\nconst NullFactory = require(\"../NullFactory\");\n\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\n\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nclass RequireEnsurePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireEnsurePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnew RequireEnsureItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireEnsureDependency,\n\t\t\t\t\tnew NullFactory()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureDependency,\n\t\t\t\t\tnew RequireEnsureDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireEnsure !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireEnsure\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireEnsurePlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToString(\"function\")\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireEnsurePlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireEnsurePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireEnsurePlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireEnsurePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass RequireHeaderDependency extends NullDependency {\n\tconstructor(range) {\n\t\tsuper();\n\t\tif (!Array.isArray(range)) throw new Error(\"range must be valid\");\n\t\tthis.range = range;\n\t}\n}\n\nRequireHeaderDependency.Template = class RequireHeaderDependencyTemplate {\n\tapply(dep, source) {\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"__webpack_require__\");\n\t}\n\n\tapplyAsTemplateArgument(name, dep, source) {\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"require\");\n\t}\n};\n\nmodule.exports = RequireHeaderDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst Template = require(\"../Template\");\n\nclass RequireIncludeDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t}\n\n\tgetReference() {\n\t\tif (!this.module) return null;\n\t\t// This doesn't use any export\n\t\treturn new DependencyReference(this.module, [], false);\n\t}\n\n\tget type() {\n\t\treturn \"require.include\";\n\t}\n}\n\nRequireIncludeDependency.Template = class RequireIncludeDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tconst comment = runtime.outputOptions.pathinfo\n\t\t\t? Template.toComment(\n\t\t\t\t\t`require.include ${runtime.requestShortener.shorten(dep.request)}`\n\t\t\t  )\n\t\t\t: \"\";\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, `undefined${comment}`);\n\t}\n};\n\nmodule.exports = RequireIncludeDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nmodule.exports = class RequireIncludeDependencyParserPlugin {\n\tapply(parser) {\n\t\tparser.hooks.call\n\t\t\t.for(\"require.include\")\n\t\t\t.tap(\"RequireIncludeDependencyParserPlugin\", expr => {\n\t\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\tif (!param.isString()) return;\n\t\t\t\tconst dep = new RequireIncludeDependency(param.string, expr.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\nconst RequireIncludeDependencyParserPlugin = require(\"./RequireIncludeDependencyParserPlugin\");\n\nconst ParserHelpers = require(\"../ParserHelpers\");\n\nclass RequireIncludePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireIncludePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireIncludeDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireIncludeDependency,\n\t\t\t\t\tnew RequireIncludeDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireInclude !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireInclude\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireIncludeDependencyParserPlugin().apply(parser);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.include\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireIncludePlugin\",\n\t\t\t\t\t\t\tParserHelpers.evaluateToString(\"function\")\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require.include\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireIncludePlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireIncludePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireIncludePlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireIncludePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ContextDependency = require(\"./ContextDependency\");\nconst ContextDependencyTemplateAsId = require(\"./ContextDependencyTemplateAsId\");\n\nclass RequireResolveContextDependency extends ContextDependency {\n\tconstructor(options, range, valueRange) {\n\t\tsuper(options);\n\t\tthis.range = range;\n\t\tthis.valueRange = valueRange;\n\t}\n\n\tget type() {\n\t\treturn \"amd require context\";\n\t}\n}\n\nRequireResolveContextDependency.Template = ContextDependencyTemplateAsId;\n\nmodule.exports = RequireResolveContextDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst ModuleDependencyAsId = require(\"./ModuleDependencyTemplateAsId\");\n\nclass RequireResolveDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"require.resolve\";\n\t}\n}\n\nRequireResolveDependency.Template = ModuleDependencyAsId;\n\nmodule.exports = RequireResolveDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nclass RequireResolveDependencyParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tconst options = this.options;\n\n\t\tconst process = (expr, weak) => {\n\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tif (param.isConditional()) {\n\t\t\t\tfor (const option of param.options) {\n\t\t\t\t\tconst result = processItem(expr, option, weak);\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tprocessContext(expr, option, weak);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst result = processItem(expr, param, weak);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tprocessContext(expr, param, weak);\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processItem = (expr, param, weak) => {\n\t\t\tif (param.isString()) {\n\t\t\t\tconst dep = new RequireResolveDependency(param.string, param.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.weak = weak;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processContext = (expr, param, weak) => {\n\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\tRequireResolveContextDependency,\n\t\t\t\tparam.range,\n\t\t\t\tparam,\n\t\t\t\texpr,\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tmode: weak ? \"weak\" : \"sync\"\n\t\t\t\t},\n\t\t\t\tparser\n\t\t\t);\n\t\t\tif (!dep) return;\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolve\")\n\t\t\t.tap(\"RequireResolveDependencyParserPlugin\", expr => {\n\t\t\t\treturn process(expr, false);\n\t\t\t});\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolveWeak\")\n\t\t\t.tap(\"RequireResolveDependencyParserPlugin\", expr => {\n\t\t\t\treturn process(expr, true);\n\t\t\t});\n\t}\n}\nmodule.exports = RequireResolveDependencyParserPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\n\nclass RequireResolveHeaderDependency extends NullDependency {\n\tconstructor(range) {\n\t\tsuper();\n\t\tif (!Array.isArray(range)) throw new Error(\"range must be valid\");\n\t\tthis.range = range;\n\t}\n}\n\nRequireResolveHeaderDependency.Template = class RequireResolveHeaderDependencyTemplate {\n\tapply(dep, source) {\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"/*require.resolve*/\");\n\t}\n\n\tapplyAsTemplateArgument(name, dep, source) {\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"/*require.resolve*/\");\n\t}\n};\n\nmodule.exports = RequireResolveHeaderDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass SingleEntryDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request path for entry\n\t */\n\tconstructor(request) {\n\t\tsuper(request);\n\t}\n\n\tget type() {\n\t\treturn \"single entry\";\n\t}\n}\n\nmodule.exports = SingleEntryDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ParserHelpers = require(\"../ParserHelpers\");\nconst WebpackError = require(\"../WebpackError\");\n\nclass SystemPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SystemPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.system !== undefined && !parserOptions.system)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tconst shouldWarn = parserOptions.system === undefined;\n\n\t\t\t\t\tconst setNotSupported = name => {\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(name)\n\t\t\t\t\t\t\t.tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"undefined\"));\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(name)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.expressionIsUnsupported(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tname + \" is not supported by webpack.\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"System.import\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"function\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"System.import\")\n\t\t\t\t\t\t.tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"System\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(\"object\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"System\")\n\t\t\t\t\t\t.tap(\"SystemPlugin\", ParserHelpers.evaluateToString(\"object\"));\n\n\t\t\t\t\tsetNotSupported(\"System.set\");\n\t\t\t\t\tsetNotSupported(\"System.get\");\n\t\t\t\t\tsetNotSupported(\"System.register\");\n\n\t\t\t\t\tparser.hooks.expression.for(\"System\").tap(\"SystemPlugin\", () => {\n\t\t\t\t\t\tconst systemPolyfillRequire = ParserHelpers.requireFileAsExpression(\n\t\t\t\t\t\t\tparser.state.module.context,\n\t\t\t\t\t\t\trequire.resolve(\"../../buildin/system\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn ParserHelpers.addParsedVariableToModule(\n\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\"System\",\n\t\t\t\t\t\t\tsystemPolyfillRequire\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\tparser.hooks.call.for(\"System.import\").tap(\"SystemPlugin\", expr => {\n\t\t\t\t\t\tif (shouldWarn) {\n\t\t\t\t\t\t\tparser.state.module.warnings.push(\n\t\t\t\t\t\t\t\tnew SystemImportDeprecationWarning(\n\t\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn parser.hooks.importCall.call(expr);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"SystemPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"SystemPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass SystemImportDeprecationWarning extends WebpackError {\n\tconstructor(module, loc) {\n\t\tsuper(\n\t\t\t\"System.import() is deprecated and will be removed soon. Use import() instead.\\n\" +\n\t\t\t\t\"For more info visit https://webpack.js.org/guides/code-splitting/\"\n\t\t);\n\n\t\tthis.name = \"SystemImportDeprecationWarning\";\n\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = SystemPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst NullDependency = require(\"./NullDependency\");\nconst webpackMissingModule = require(\"./WebpackMissingModule\").module;\n\nclass UnsupportedDependency extends NullDependency {\n\tconstructor(request, range) {\n\t\tsuper();\n\t\tthis.request = request;\n\t\tthis.range = range;\n\t}\n}\n\nUnsupportedDependency.Template = class UnsupportedDependencyTemplate {\n\tapply(dep, source, runtime) {\n\t\tsource.replace(\n\t\t\tdep.range[0],\n\t\t\tdep.range[1],\n\t\t\twebpackMissingModule(dep.request)\n\t\t);\n\t}\n};\n\nmodule.exports = UnsupportedDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass WebAssemblyExportImportedDependency extends ModuleDependency {\n\tconstructor(exportName, request, name, valueType) {\n\t\tsuper(request);\n\t\t/** @type {string} */\n\t\tthis.exportName = exportName;\n\t\t/** @type {string} */\n\t\tthis.name = name;\n\t\t/** @type {string} */\n\t\tthis.valueType = valueType;\n\t}\n\n\tgetReference() {\n\t\tif (!this.module) return null;\n\t\treturn new DependencyReference(this.module, [this.name], false);\n\t}\n\n\tget type() {\n\t\treturn \"wasm export import\";\n\t}\n}\n\nmodule.exports = WebAssemblyExportImportedDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst UnsupportedWebAssemblyFeatureError = require(\"../wasm/UnsupportedWebAssemblyFeatureError\");\n\n/** @typedef {import(\"@webassemblyjs/ast\").ModuleImportDescription} ModuleImportDescription */\n\nclass WebAssemblyImportDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request the request\n\t * @param {string} name the imported name\n\t * @param {ModuleImportDescription} description the WASM ast node\n\t * @param {false | string} onlyDirectImport if only direct imports are allowed\n\t */\n\tconstructor(request, name, description, onlyDirectImport) {\n\t\tsuper(request);\n\t\t/** @type {string} */\n\t\tthis.name = name;\n\t\t/** @type {ModuleImportDescription} */\n\t\tthis.description = description;\n\t\t/** @type {false | string} */\n\t\tthis.onlyDirectImport = onlyDirectImport;\n\t}\n\n\tgetReference() {\n\t\tif (!this.module) return null;\n\t\treturn new DependencyReference(this.module, [this.name], false);\n\t}\n\n\tgetErrors() {\n\t\tif (\n\t\t\tthis.onlyDirectImport &&\n\t\t\tthis.module &&\n\t\t\t!this.module.type.startsWith(\"webassembly\")\n\t\t) {\n\t\t\treturn [\n\t\t\t\tnew UnsupportedWebAssemblyFeatureError(\n\t\t\t\t\t`Import \"${this.name}\" from \"${this.request}\" with ${this.onlyDirectImport} can only be used for direct wasm to wasm dependencies`\n\t\t\t\t)\n\t\t\t];\n\t\t}\n\t}\n\n\tget type() {\n\t\treturn \"wasm import\";\n\t}\n}\n\nmodule.exports = WebAssemblyImportDependency;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst toErrorCode = err =>\n\t`var e = new Error(${JSON.stringify(err)}); e.code = 'MODULE_NOT_FOUND';`;\n\nexports.module = request =>\n\t`!(function webpackMissingModule() { ${exports.moduleCode(request)} }())`;\n\nexports.promise = request => {\n\tconst errorCode = toErrorCode(`Cannot find module '${request}'`);\n\treturn `Promise.reject(function webpackMissingModule() { ${errorCode} return e; }())`;\n};\n\nexports.moduleCode = request => {\n\tconst errorCode = toErrorCode(`Cannot find module '${request}'`);\n\treturn `${errorCode} throw e;`;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = expr => {\n\t// <FunctionExpression>\n\tif (\n\t\texpr.type === \"FunctionExpression\" ||\n\t\texpr.type === \"ArrowFunctionExpression\"\n\t) {\n\t\treturn {\n\t\t\tfn: expr,\n\t\t\texpressions: [],\n\t\t\tneedThis: false\n\t\t};\n\t}\n\n\t// <FunctionExpression>.bind(<Expression>)\n\tif (\n\t\texpr.type === \"CallExpression\" &&\n\t\texpr.callee.type === \"MemberExpression\" &&\n\t\texpr.callee.object.type === \"FunctionExpression\" &&\n\t\texpr.callee.property.type === \"Identifier\" &&\n\t\texpr.callee.property.name === \"bind\" &&\n\t\texpr.arguments.length === 1\n\t) {\n\t\treturn {\n\t\t\tfn: expr.callee.object,\n\t\t\texpressions: [expr.arguments[0]],\n\t\t\tneedThis: undefined\n\t\t};\n\t}\n\t// (function(_this) {return <FunctionExpression>})(this) (Coffeescript)\n\tif (\n\t\texpr.type === \"CallExpression\" &&\n\t\texpr.callee.type === \"FunctionExpression\" &&\n\t\texpr.callee.body.type === \"BlockStatement\" &&\n\t\texpr.arguments.length === 1 &&\n\t\texpr.arguments[0].type === \"ThisExpression\" &&\n\t\texpr.callee.body.body &&\n\t\texpr.callee.body.body.length === 1 &&\n\t\texpr.callee.body.body[0].type === \"ReturnStatement\" &&\n\t\texpr.callee.body.body[0].argument &&\n\t\texpr.callee.body.body[0].argument.type === \"FunctionExpression\"\n\t) {\n\t\treturn {\n\t\t\tfn: expr.callee.body.body[0].argument,\n\t\t\texpressions: [],\n\t\t\tneedThis: true\n\t\t};\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").SourcePosition} SourcePosition */\n\n// TODO webpack 5: pos must be SourcePosition\n/**\n * @param {SourcePosition|DependencyLocation|string} pos position\n * @returns {string} formatted position\n */\nconst formatPosition = pos => {\n\tif (pos === null) return \"\";\n\t// TODO webpack 5: Simplify this\n\tif (typeof pos === \"string\") return pos;\n\tif (typeof pos === \"number\") return `${pos}`;\n\tif (typeof pos === \"object\") {\n\t\tif (\"line\" in pos && \"column\" in pos) {\n\t\t\treturn `${pos.line}:${pos.column}`;\n\t\t} else if (\"line\" in pos) {\n\t\t\treturn `${pos.line}:?`;\n\t\t} else if (\"index\" in pos) {\n\t\t\t// TODO webpack 5 remove this case\n\t\t\treturn `+${pos.index}`;\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\treturn \"\";\n};\n\n// TODO webpack 5: loc must be DependencyLocation\n/**\n * @param {DependencyLocation|SourcePosition|string} loc location\n * @returns {string} formatted location\n */\nconst formatLocation = loc => {\n\tif (loc === null) return \"\";\n\t// TODO webpack 5: Simplify this\n\tif (typeof loc === \"string\") return loc;\n\tif (typeof loc === \"number\") return `${loc}`;\n\tif (typeof loc === \"object\") {\n\t\tif (\"start\" in loc && loc.start && \"end\" in loc && loc.end) {\n\t\t\tif (\n\t\t\t\ttypeof loc.start === \"object\" &&\n\t\t\t\ttypeof loc.start.line === \"number\" &&\n\t\t\t\ttypeof loc.end === \"object\" &&\n\t\t\t\ttypeof loc.end.line === \"number\" &&\n\t\t\t\ttypeof loc.end.column === \"number\" &&\n\t\t\t\tloc.start.line === loc.end.line\n\t\t\t) {\n\t\t\t\treturn `${formatPosition(loc.start)}-${loc.end.column}`;\n\t\t\t} else {\n\t\t\t\treturn `${formatPosition(loc.start)}-${formatPosition(loc.end)}`;\n\t\t\t}\n\t\t}\n\t\tif (\"start\" in loc && loc.start) {\n\t\t\treturn formatPosition(loc.start);\n\t\t}\n\t\tif (\"name\" in loc && \"index\" in loc) {\n\t\t\treturn `${loc.name}[${loc.index}]`;\n\t\t}\n\t\tif (\"name\" in loc) {\n\t\t\treturn loc.name;\n\t\t}\n\t\treturn formatPosition(loc);\n\t}\n\treturn \"\";\n};\n\nmodule.exports = formatLocation;\n","/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\n/**\n * @enum {string}\n */\nconst LogType = Object.freeze({\n\terror: \"error\", // message, c style arguments\n\twarn: \"warn\", // message, c style arguments\n\tinfo: \"info\", // message, c style arguments\n\tlog: \"log\", // message, c style arguments\n\tdebug: \"debug\", // message, c style arguments\n\n\ttrace: \"trace\", // no arguments\n\n\tgroup: \"group\", // [label]\n\tgroupCollapsed: \"groupCollapsed\", // [label]\n\tgroupEnd: \"groupEnd\", // [label]\n\n\tprofile: \"profile\", // [profileName]\n\tprofileEnd: \"profileEnd\", // [profileName]\n\n\ttime: \"time\", // name, time as [seconds, nanoseconds]\n\n\tclear: \"clear\" // no arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {LogType} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\n\nclass WebpackLogger {\n\t/**\n\t * @param {function(LogType, any[]=): void} log log function\n\t */\n\tconstructor(log) {\n\t\tthis[LOG_SYMBOL] = log;\n\t}\n\n\terror(...args) {\n\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t}\n\n\twarn(...args) {\n\t\tthis[LOG_SYMBOL](LogType.warn, args);\n\t}\n\n\tinfo(...args) {\n\t\tthis[LOG_SYMBOL](LogType.info, args);\n\t}\n\n\tlog(...args) {\n\t\tthis[LOG_SYMBOL](LogType.log, args);\n\t}\n\n\tdebug(...args) {\n\t\tthis[LOG_SYMBOL](LogType.debug, args);\n\t}\n\n\tassert(assertion, ...args) {\n\t\tif (!assertion) {\n\t\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t\t}\n\t}\n\n\ttrace() {\n\t\tthis[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n\t}\n\n\tclear() {\n\t\tthis[LOG_SYMBOL](LogType.clear);\n\t}\n\n\tgroup(...args) {\n\t\tthis[LOG_SYMBOL](LogType.group, args);\n\t}\n\n\tgroupCollapsed(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupCollapsed, args);\n\t}\n\n\tgroupEnd(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupEnd, args);\n\t}\n\n\tprofile(label) {\n\t\tthis[LOG_SYMBOL](LogType.profile, [label]);\n\t}\n\n\tprofileEnd(label) {\n\t\tthis[LOG_SYMBOL](LogType.profileEnd, [label]);\n\t}\n\n\ttime(label) {\n\t\tthis[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n\t\tthis[TIMERS_SYMBOL].set(label, process.hrtime());\n\t}\n\n\ttimeLog(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n\n\ttimeEnd(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[TIMERS_SYMBOL].delete(label);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n}\n\nexports.Logger = WebpackLogger;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { LogType } = require(\"./Logger\");\n\n/** @typedef {import(\"./Logger\").LogTypeEnum} LogTypeEnum */\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterTypes} FilterTypes */\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterItemTypes} FilterItemTypes */\n\n/** @typedef {function(string): boolean} FilterFunction */\n\n/**\n * @typedef {Object} LoggerOptions\n * @property {false|true|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} options.level loglevel\n * @property {FilterTypes|boolean} options.debug filter for debug logging\n */\n\n/**\n * @param {FilterItemTypes} item an input item\n * @returns {FilterFunction} filter funtion\n */\nconst filterToFunction = item => {\n\tif (typeof item === \"string\") {\n\t\tconst regExp = new RegExp(\n\t\t\t`[\\\\\\\\/]${item.replace(\n\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t/[-[\\]{}()*+?.\\\\^$|]/g,\n\t\t\t\t\"\\\\$&\"\n\t\t\t)}([\\\\\\\\/]|$|!|\\\\?)`\n\t\t);\n\t\treturn ident => regExp.test(ident);\n\t}\n\tif (item && typeof item === \"object\" && typeof item.test === \"function\") {\n\t\treturn ident => item.test(ident);\n\t}\n\tif (typeof item === \"function\") {\n\t\treturn item;\n\t}\n\tif (typeof item === \"boolean\") {\n\t\treturn () => item;\n\t}\n};\n\n/**\n * @enum {number} */\nconst LogLevel = {\n\tnone: 6,\n\tfalse: 6,\n\terror: 5,\n\twarn: 4,\n\tinfo: 3,\n\tlog: 2,\n\ttrue: 2,\n\tverbose: 1\n};\n\n/**\n * @param {LoggerOptions} options options object\n * @returns {function(string, LogTypeEnum, any[]): void} logging function\n */\nmodule.exports = ({ level = \"info\", debug = false }) => {\n\tconst debugFilters =\n\t\ttypeof debug === \"boolean\"\n\t\t\t? [() => debug]\n\t\t\t: /** @type {FilterItemTypes[]} */ ([])\n\t\t\t\t\t.concat(debug)\n\t\t\t\t\t.map(filterToFunction);\n\t/** @type {number} */\n\tconst loglevel = LogLevel[`${level}`] || 0;\n\n\t/**\n\t * @param {string} name name of the logger\n\t * @param {LogTypeEnum} type type of the log entry\n\t * @param {any[]} args arguments of the log entry\n\t * @returns {void}\n\t */\n\tconst logger = (name, type, args) => {\n\t\tconst labeledArgs = (prefix = \"\") => {\n\t\t\tif (Array.isArray(args)) {\n\t\t\t\tif (args.length > 0 && typeof args[0] === \"string\") {\n\t\t\t\t\treturn [`${prefix}[${name}] ${args[0]}`, ...args.slice(1)];\n\t\t\t\t} else {\n\t\t\t\t\treturn [`${prefix}[${name}]`, ...args];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t\tconst debug = debugFilters.some(f => f(name));\n\t\tswitch (type) {\n\t\t\tcase LogType.debug:\n\t\t\t\tif (!debug) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.debug === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.debug(...labeledArgs());\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(...labeledArgs());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.log:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\tconsole.log(...labeledArgs());\n\t\t\t\tbreak;\n\t\t\tcase LogType.info:\n\t\t\t\tif (!debug && loglevel > LogLevel.info) return;\n\t\t\t\tconsole.info(...labeledArgs(\"<i> \"));\n\t\t\t\tbreak;\n\t\t\tcase LogType.warn:\n\t\t\t\tif (!debug && loglevel > LogLevel.warn) return;\n\t\t\t\tconsole.warn(...labeledArgs(\"<w> \"));\n\t\t\t\tbreak;\n\t\t\tcase LogType.error:\n\t\t\t\tif (!debug && loglevel > LogLevel.error) return;\n\t\t\t\tconsole.error(...labeledArgs(\"<e> \"));\n\t\t\t\tbreak;\n\t\t\tcase LogType.trace:\n\t\t\t\tif (!debug) return;\n\t\t\t\tconsole.trace();\n\t\t\t\tbreak;\n\t\t\tcase LogType.group:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.group === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.group(...labeledArgs());\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(...labeledArgs());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.groupCollapsed:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.groupCollapsed === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.groupCollapsed(...labeledArgs());\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(...labeledArgs(\"<g> \"));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.groupEnd:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.groupEnd === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.groupEnd();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(...labeledArgs(\"</g> \"));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.time:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\tconsole.log(\n\t\t\t\t\t`[${name}] ${args[0]}: ${args[1] * 1000 + args[2] / 1000000}ms`\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase LogType.profile:\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.profile === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.profile(...labeledArgs());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.profileEnd:\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.profileEnd === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.profileEnd(...labeledArgs());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.clear:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.clear === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.clear();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unexpected LogType ${type}`);\n\t\t}\n\t};\n\treturn logger;\n};\n","var map = {\n\t\"./NodeChunkTemplatePlugin\": \"./node_modules/webpack/lib/node/NodeChunkTemplatePlugin.js\",\n\t\"./NodeChunkTemplatePlugin.js\": \"./node_modules/webpack/lib/node/NodeChunkTemplatePlugin.js\",\n\t\"./NodeEnvironmentPlugin\": \"./node_modules/webpack/lib/node/NodeEnvironmentPlugin.js\",\n\t\"./NodeEnvironmentPlugin.js\": \"./node_modules/webpack/lib/node/NodeEnvironmentPlugin.js\",\n\t\"./NodeHotUpdateChunkTemplatePlugin\": \"./node_modules/webpack/lib/node/NodeHotUpdateChunkTemplatePlugin.js\",\n\t\"./NodeHotUpdateChunkTemplatePlugin.js\": \"./node_modules/webpack/lib/node/NodeHotUpdateChunkTemplatePlugin.js\",\n\t\"./NodeMainTemplate.runtime\": \"./node_modules/webpack/lib/node/NodeMainTemplate.runtime.js\",\n\t\"./NodeMainTemplate.runtime.js\": \"./node_modules/webpack/lib/node/NodeMainTemplate.runtime.js\",\n\t\"./NodeMainTemplateAsync.runtime\": \"./node_modules/webpack/lib/node/NodeMainTemplateAsync.runtime.js\",\n\t\"./NodeMainTemplateAsync.runtime.js\": \"./node_modules/webpack/lib/node/NodeMainTemplateAsync.runtime.js\",\n\t\"./NodeMainTemplatePlugin\": \"./node_modules/webpack/lib/node/NodeMainTemplatePlugin.js\",\n\t\"./NodeMainTemplatePlugin.js\": \"./node_modules/webpack/lib/node/NodeMainTemplatePlugin.js\",\n\t\"./NodeOutputFileSystem\": \"./node_modules/webpack/lib/node/NodeOutputFileSystem.js\",\n\t\"./NodeOutputFileSystem.js\": \"./node_modules/webpack/lib/node/NodeOutputFileSystem.js\",\n\t\"./NodeSourcePlugin\": \"./node_modules/webpack/lib/node/NodeSourcePlugin.js\",\n\t\"./NodeSourcePlugin.js\": \"./node_modules/webpack/lib/node/NodeSourcePlugin.js\",\n\t\"./NodeTargetPlugin\": \"./node_modules/webpack/lib/node/NodeTargetPlugin.js\",\n\t\"./NodeTargetPlugin.js\": \"./node_modules/webpack/lib/node/NodeTargetPlugin.js\",\n\t\"./NodeTemplatePlugin\": \"./node_modules/webpack/lib/node/NodeTemplatePlugin.js\",\n\t\"./NodeTemplatePlugin.js\": \"./node_modules/webpack/lib/node/NodeTemplatePlugin.js\",\n\t\"./NodeWatchFileSystem\": \"./node_modules/webpack/lib/node/NodeWatchFileSystem.js\",\n\t\"./NodeWatchFileSystem.js\": \"./node_modules/webpack/lib/node/NodeWatchFileSystem.js\",\n\t\"./ReadFileCompileWasmTemplatePlugin\": \"./node_modules/webpack/lib/node/ReadFileCompileWasmTemplatePlugin.js\",\n\t\"./ReadFileCompileWasmTemplatePlugin.js\": \"./node_modules/webpack/lib/node/ReadFileCompileWasmTemplatePlugin.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/webpack/lib/node sync recursive ^\\\\.\\\\/.*$\";","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass NodeChunkTemplatePlugin {\n\tapply(chunkTemplate) {\n\t\tchunkTemplate.hooks.render.tap(\n\t\t\t\"NodeChunkTemplatePlugin\",\n\t\t\t(modules, chunk) => {\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tsource.add(\n\t\t\t\t\t`exports.ids = ${JSON.stringify(chunk.ids)};\\nexports.modules = `\n\t\t\t\t);\n\t\t\t\tsource.add(modules);\n\t\t\t\tsource.add(\";\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tchunkTemplate.hooks.hash.tap(\"NodeChunkTemplatePlugin\", hash => {\n\t\t\thash.update(\"node\");\n\t\t\thash.update(\"3\");\n\t\t});\n\t}\n}\n\nmodule.exports = NodeChunkTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NodeWatchFileSystem = require(\"./NodeWatchFileSystem\");\nconst NodeOutputFileSystem = require(\"./NodeOutputFileSystem\");\nconst NodeJsInputFileSystem = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");\nconst CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\nconst createConsoleLogger = require(\"../logging/createConsoleLogger\");\n\nclass NodeEnvironmentPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.infrastructureLogger = createConsoleLogger(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tlevel: \"info\",\n\t\t\t\t\tdebug: false\n\t\t\t\t},\n\t\t\t\tthis.options.infrastructureLogging\n\t\t\t)\n\t\t);\n\t\tcompiler.inputFileSystem = new CachedInputFileSystem(\n\t\t\tnew NodeJsInputFileSystem(),\n\t\t\t60000\n\t\t);\n\t\tconst inputFileSystem = compiler.inputFileSystem;\n\t\tcompiler.outputFileSystem = new NodeOutputFileSystem();\n\t\tcompiler.watchFileSystem = new NodeWatchFileSystem(\n\t\t\tcompiler.inputFileSystem\n\t\t);\n\t\tcompiler.hooks.beforeRun.tap(\"NodeEnvironmentPlugin\", compiler => {\n\t\t\tif (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();\n\t\t});\n\t}\n}\nmodule.exports = NodeEnvironmentPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass NodeHotUpdateChunkTemplatePlugin {\n\tapply(hotUpdateChunkTemplate) {\n\t\thotUpdateChunkTemplate.hooks.render.tap(\n\t\t\t\"NodeHotUpdateChunkTemplatePlugin\",\n\t\t\t(modulesSource, modules, removedModules, hash, id) => {\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tsource.add(\n\t\t\t\t\t\"exports.id = \" + JSON.stringify(id) + \";\\nexports.modules = \"\n\t\t\t\t);\n\t\t\t\tsource.add(modulesSource);\n\t\t\t\tsource.add(\";\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\thotUpdateChunkTemplate.hooks.hash.tap(\n\t\t\t\"NodeHotUpdateChunkTemplatePlugin\",\n\t\t\thash => {\n\t\t\t\thash.update(\"NodeHotUpdateChunkTemplatePlugin\");\n\t\t\t\thash.update(\"3\");\n\t\t\t\thash.update(\n\t\t\t\t\thotUpdateChunkTemplate.outputOptions.hotUpdateFunction + \"\"\n\t\t\t\t);\n\t\t\t\thash.update(hotUpdateChunkTemplate.outputOptions.library + \"\");\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = NodeHotUpdateChunkTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*global installedChunks $hotChunkFilename$ hotAddUpdateChunk $hotMainFilename$ */\nmodule.exports = function() {\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadUpdateChunk(chunkId) {\n\t\tvar chunk = require(\"./\" + $hotChunkFilename$);\n\t\thotAddUpdateChunk(chunk.id, chunk.modules);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadManifest() {\n\t\ttry {\n\t\t\tvar update = require(\"./\" + $hotMainFilename$);\n\t\t} catch (e) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\treturn Promise.resolve(update);\n\t}\n\n\t//eslint-disable-next-line no-unused-vars\n\tfunction hotDisposeChunk(chunkId) {\n\t\tdelete installedChunks[chunkId];\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*global installedChunks $hotChunkFilename$ $require$ hotAddUpdateChunk $hotMainFilename$ */\nmodule.exports = function() {\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadUpdateChunk(chunkId) {\n\t\tvar filename = require(\"path\").join(__dirname, $hotChunkFilename$);\n\t\trequire(\"fs\").readFile(filename, \"utf-8\", function(err, content) {\n\t\t\tif (err) {\n\t\t\t\tif ($require$.onError) return $require$.oe(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tvar chunk = {};\n\t\t\trequire(\"vm\").runInThisContext(\n\t\t\t\t\"(function(exports) {\" + content + \"\\n})\",\n\t\t\t\t{ filename: filename }\n\t\t\t)(chunk);\n\t\t\thotAddUpdateChunk(chunk.id, chunk.modules);\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadManifest() {\n\t\tvar filename = require(\"path\").join(__dirname, $hotMainFilename$);\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\trequire(\"fs\").readFile(filename, \"utf-8\", function(err, content) {\n\t\t\t\tif (err) return resolve();\n\t\t\t\ttry {\n\t\t\t\t\tvar update = JSON.parse(content);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn reject(e);\n\t\t\t\t}\n\t\t\t\tresolve(update);\n\t\t\t});\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDisposeChunk(chunkId) {\n\t\tdelete installedChunks[chunkId];\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\nmodule.exports = class NodeMainTemplatePlugin {\n\tconstructor(asyncChunkLoading) {\n\t\tthis.asyncChunkLoading = asyncChunkLoading;\n\t}\n\n\tapply(mainTemplate) {\n\t\tconst needChunkOnDemandLoadingCode = chunk => {\n\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst asyncChunkLoading = this.asyncChunkLoading;\n\t\tmainTemplate.hooks.localVars.tap(\n\t\t\t\"NodeMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// object to store loaded chunks\",\n\t\t\t\t\t\t'// \"0\" means \"already loaded\"',\n\t\t\t\t\t\t\"var installedChunks = {\",\n\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\tchunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\"NodeMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// uncaught error handler for webpack runtime\",\n\t\t\t\t\t\t`${mainTemplate.requireFn}.oe = function(err) {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"process.nextTick(function() {\",\n\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\"throw err; // catch this error by using import().catch()\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireEnsure.tap(\n\t\t\t\"NodeMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst chunkFilename = mainTemplate.outputOptions.chunkFilename;\n\t\t\t\tconst chunkMaps = chunk.getChunkMaps();\n\t\t\t\tconst insertMoreModules = [\n\t\t\t\t\t\"var moreModules = chunk.modules, chunkIds = chunk.ids;\",\n\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\tmainTemplate.renderAddModule(\n\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\"moduleId\",\n\t\t\t\t\t\t\t\"moreModules[moduleId]\"\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t\"}\"\n\t\t\t\t];\n\t\t\t\tif (asyncChunkLoading) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// ReadFile + VM.run chunk loading for javascript\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"var installedChunkData = installedChunks[chunkId];\",\n\t\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t'// array of [resolve, reject, promise] means \"currently loading\"',\n\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\tTemplate.indent([\"promises.push(installedChunkData[2]);\"]),\n\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"// load the chunk and return promise to it\",\n\t\t\t\t\t\t\t\t\"var promise = new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\",\n\t\t\t\t\t\t\t\t\t\"var filename = require('path').join(__dirname, \" +\n\t\t\t\t\t\t\t\t\t\tmainTemplate.getAssetPath(\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(`/${chunkFilename}`),\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(\n\t\t\t\t\t\t\t\t\t\t\t\t\thash\n\t\t\t\t\t\t\t\t\t\t\t\t)} + \"`,\n\t\t\t\t\t\t\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t\t\t\t\t\t\t)} + \"`,\n\t\t\t\t\t\t\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: '\" + chunkId + \"',\n\t\t\t\t\t\t\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.hash\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`,\n\t\t\t\t\t\t\t\t\t\t\t\t\thashWithLength: length => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst shortChunkHashMap = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontentHash: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjavascript: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.contentHash.javascript\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontentHashWithLength: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjavascript: length => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst shortContentHashMap = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst contentHash =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.contentHash.javascript;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(contentHash)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (typeof contentHash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap[chunkId] = contentHash[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId]||chunkId) + \"`\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\t\t\t\");\",\n\t\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8',  function(err, content) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\"if(err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\t\t\"var chunk = {};\",\n\t\t\t\t\t\t\t\t\t\t\t\"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\"(chunk, require, require('path').dirname(filename), filename);\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t.concat(insertMoreModules)\n\t\t\t\t\t\t\t\t\t\t\t.concat([\n\t\t\t\t\t\t\t\t\t\t\t\t\"var callbacks = [];\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++) {\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunks[chunkIds[i]])\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"callbacks = callbacks.concat(installedChunks[chunkIds[i]][0]);\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunks[chunkIds[i]] = 0;\"\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"for(i = 0; i < callbacks.length; i++)\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent(\"callbacks[i]();\")\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\",\n\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2] = promise);\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tconst request = mainTemplate.getAssetPath(\n\t\t\t\t\t\tJSON.stringify(`./${chunkFilename}`),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\t\tid: '\" + chunkId + \"',\n\t\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\t\t\t\t\t\t\t\thashWithLength: length => {\n\t\t\t\t\t\t\t\t\tconst shortChunkHashMap = {};\n\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[\n\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcontentHash: {\n\t\t\t\t\t\t\t\t\tjavascript: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\tchunkMaps.contentHash.javascript\n\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcontentHashWithLength: {\n\t\t\t\t\t\t\t\t\tjavascript: length => {\n\t\t\t\t\t\t\t\t\t\tconst shortContentHashMap = {};\n\t\t\t\t\t\t\t\t\t\tconst contentHash = chunkMaps.contentHash.javascript;\n\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(contentHash)) {\n\t\t\t\t\t\t\t\t\t\t\tif (typeof contentHash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap[chunkId] = contentHash[\n\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap\n\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t\t\t\t)}[chunkId]||chunkId) + \"`\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// require() chunk loading for javascript\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t'// \"0\" is the signal for \"already loaded\"',\n\t\t\t\t\t\t\"if(installedChunks[chunkId] !== 0) {\",\n\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t[`var chunk = require(${request});`]\n\t\t\t\t\t\t\t\t.concat(insertMoreModules)\n\t\t\t\t\t\t\t\t.concat([\n\t\t\t\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++)\",\n\t\t\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkIds[i]] = 0;\")\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hotBootstrap.tap(\n\t\t\t\"NodeMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst hotUpdateChunkFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateChunkFilename;\n\t\t\t\tconst hotUpdateMainFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateMainFilename;\n\t\t\t\tconst chunkMaps = chunk.getChunkMaps();\n\t\t\t\tconst currentHotUpdateChunkFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateChunkFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\tid: '\" + chunkId + \"',\n\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\t\t\t\t\t\t\thashWithLength: length => {\n\t\t\t\t\t\t\t\tconst shortChunkHashMap = {};\n\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substr(\n\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(shortChunkHashMap)}[chunkId] + \"`;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t\t\t)}[chunkId]||chunkId) + \"`\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst currentHotUpdateMainFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateMainFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn Template.getFunctionContent(\n\t\t\t\t\tasyncChunkLoading\n\t\t\t\t\t\t? require(\"./NodeMainTemplateAsync.runtime\")\n\t\t\t\t\t\t: require(\"./NodeMainTemplate.runtime\")\n\t\t\t\t)\n\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t.replace(/\\$hotMainFilename\\$/g, currentHotUpdateMainFilename)\n\t\t\t\t\t.replace(/\\$hotChunkFilename\\$/g, currentHotUpdateChunkFilename);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hash.tap(\"NodeMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"node\");\n\t\t\thash.update(\"4\");\n\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\n\nclass NodeOutputFileSystem {\n\tconstructor() {\n\t\tthis.mkdirp = mkdirp;\n\t\tthis.mkdir = fs.mkdir.bind(fs);\n\t\tthis.rmdir = fs.rmdir.bind(fs);\n\t\tthis.unlink = fs.unlink.bind(fs);\n\t\tthis.writeFile = fs.writeFile.bind(fs);\n\t\tthis.join = path.join.bind(path);\n\t}\n}\n\nmodule.exports = NodeOutputFileSystem;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst AliasPlugin = require(\"enhanced-resolve/lib/AliasPlugin\");\nconst ParserHelpers = require(\"../ParserHelpers\");\nconst nodeLibsBrowser = require(\"node-libs-browser\");\n\nmodule.exports = class NodeSourcePlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tif (options === false) {\n\t\t\t// allow single kill switch to turn off this plugin\n\t\t\treturn;\n\t\t}\n\n\t\tconst getPathToModule = (module, type) => {\n\t\t\tif (type === true || (type === undefined && nodeLibsBrowser[module])) {\n\t\t\t\tif (!nodeLibsBrowser[module]) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`No browser version for node.js core module ${module} available`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn nodeLibsBrowser[module];\n\t\t\t} else if (type === \"mock\") {\n\t\t\t\treturn require.resolve(`node-libs-browser/mock/${module}`);\n\t\t\t} else if (type === \"empty\") {\n\t\t\t\treturn require.resolve(\"node-libs-browser/mock/empty\");\n\t\t\t} else {\n\t\t\t\treturn module;\n\t\t\t}\n\t\t};\n\n\t\tconst addExpression = (parser, name, module, type, suffix) => {\n\t\t\tsuffix = suffix || \"\";\n\t\t\tparser.hooks.expression.for(name).tap(\"NodeSourcePlugin\", () => {\n\t\t\t\tif (\n\t\t\t\t\tparser.state.module &&\n\t\t\t\t\tparser.state.module.resource === getPathToModule(module, type)\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\tconst mockModule = ParserHelpers.requireFileAsExpression(\n\t\t\t\t\tparser.state.module.context,\n\t\t\t\t\tgetPathToModule(module, type)\n\t\t\t\t);\n\t\t\t\treturn ParserHelpers.addParsedVariableToModule(\n\t\t\t\t\tparser,\n\t\t\t\t\tname,\n\t\t\t\t\tmockModule + suffix\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"NodeSourcePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.node === false) return;\n\n\t\t\t\t\tlet localOptions = options;\n\t\t\t\t\tif (parserOptions.node) {\n\t\t\t\t\t\tlocalOptions = Object.assign({}, localOptions, parserOptions.node);\n\t\t\t\t\t}\n\t\t\t\t\tif (localOptions.global) {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(\"global\")\n\t\t\t\t\t\t\t.tap(\"NodeSourcePlugin\", () => {\n\t\t\t\t\t\t\t\tconst retrieveGlobalModule = ParserHelpers.requireFileAsExpression(\n\t\t\t\t\t\t\t\t\tparser.state.module.context,\n\t\t\t\t\t\t\t\t\trequire.resolve(\"../../buildin/global\")\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn ParserHelpers.addParsedVariableToModule(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\"global\",\n\t\t\t\t\t\t\t\t\tretrieveGlobalModule\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (localOptions.process) {\n\t\t\t\t\t\tconst processType = localOptions.process;\n\t\t\t\t\t\taddExpression(parser, \"process\", \"process\", processType);\n\t\t\t\t\t}\n\t\t\t\t\tif (localOptions.console) {\n\t\t\t\t\t\tconst consoleType = localOptions.console;\n\t\t\t\t\t\taddExpression(parser, \"console\", \"console\", consoleType);\n\t\t\t\t\t}\n\t\t\t\t\tconst bufferType = localOptions.Buffer;\n\t\t\t\t\tif (bufferType) {\n\t\t\t\t\t\taddExpression(parser, \"Buffer\", \"buffer\", bufferType, \".Buffer\");\n\t\t\t\t\t}\n\t\t\t\t\tif (localOptions.setImmediate) {\n\t\t\t\t\t\tconst setImmediateType = localOptions.setImmediate;\n\t\t\t\t\t\taddExpression(\n\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\"setImmediate\",\n\t\t\t\t\t\t\t\"timers\",\n\t\t\t\t\t\t\tsetImmediateType,\n\t\t\t\t\t\t\t\".setImmediate\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\taddExpression(\n\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\"clearImmediate\",\n\t\t\t\t\t\t\t\"timers\",\n\t\t\t\t\t\t\tsetImmediateType,\n\t\t\t\t\t\t\t\".clearImmediate\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"NodeSourcePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"NodeSourcePlugin\", handler);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.afterResolvers.tap(\"NodeSourcePlugin\", compiler => {\n\t\t\tfor (const lib of Object.keys(nodeLibsBrowser)) {\n\t\t\t\tif (options[lib] !== false) {\n\t\t\t\t\tcompiler.resolverFactory.hooks.resolver\n\t\t\t\t\t\t.for(\"normal\")\n\t\t\t\t\t\t.tap(\"NodeSourcePlugin\", resolver => {\n\t\t\t\t\t\t\tnew AliasPlugin(\n\t\t\t\t\t\t\t\t\"described-resolve\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: lib,\n\t\t\t\t\t\t\t\t\tonlyModule: true,\n\t\t\t\t\t\t\t\t\talias: getPathToModule(lib, options[lib])\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"resolve\"\n\t\t\t\t\t\t\t).apply(resolver);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ExternalsPlugin = require(\"../ExternalsPlugin\");\n\nconst builtins =\n\t// eslint-disable-next-line node/no-unsupported-features/node-builtins,node/no-deprecated-api\n\trequire(\"module\").builtinModules || Object.keys(process.binding(\"natives\"));\n\nclass NodeTargetPlugin {\n\tapply(compiler) {\n\t\tnew ExternalsPlugin(\"commonjs\", builtins).apply(compiler);\n\t}\n}\n\nmodule.exports = NodeTargetPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst NodeMainTemplatePlugin = require(\"./NodeMainTemplatePlugin\");\nconst NodeChunkTemplatePlugin = require(\"./NodeChunkTemplatePlugin\");\nconst NodeHotUpdateChunkTemplatePlugin = require(\"./NodeHotUpdateChunkTemplatePlugin\");\n\nclass NodeTemplatePlugin {\n\tconstructor(options) {\n\t\toptions = options || {};\n\t\tthis.asyncChunkLoading = options.asyncChunkLoading;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"NodeTemplatePlugin\", compilation => {\n\t\t\tnew NodeMainTemplatePlugin(this.asyncChunkLoading).apply(\n\t\t\t\tcompilation.mainTemplate\n\t\t\t);\n\t\t\tnew NodeChunkTemplatePlugin().apply(compilation.chunkTemplate);\n\t\t\tnew NodeHotUpdateChunkTemplatePlugin().apply(\n\t\t\t\tcompilation.hotUpdateChunkTemplate\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = NodeTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Watchpack = require(\"watchpack\");\nconst objectToMap = require(\"../util/objectToMap\");\n\nclass NodeWatchFileSystem {\n\tconstructor(inputFileSystem) {\n\t\tthis.inputFileSystem = inputFileSystem;\n\t\tthis.watcherOptions = {\n\t\t\taggregateTimeout: 0\n\t\t};\n\t\tthis.watcher = new Watchpack(this.watcherOptions);\n\t}\n\n\twatch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n\t\tif (!Array.isArray(files)) {\n\t\t\tthrow new Error(\"Invalid arguments: 'files'\");\n\t\t}\n\t\tif (!Array.isArray(dirs)) {\n\t\t\tthrow new Error(\"Invalid arguments: 'dirs'\");\n\t\t}\n\t\tif (!Array.isArray(missing)) {\n\t\t\tthrow new Error(\"Invalid arguments: 'missing'\");\n\t\t}\n\t\tif (typeof callback !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'callback'\");\n\t\t}\n\t\tif (typeof startTime !== \"number\" && startTime) {\n\t\t\tthrow new Error(\"Invalid arguments: 'startTime'\");\n\t\t}\n\t\tif (typeof options !== \"object\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'options'\");\n\t\t}\n\t\tif (typeof callbackUndelayed !== \"function\" && callbackUndelayed) {\n\t\t\tthrow new Error(\"Invalid arguments: 'callbackUndelayed'\");\n\t\t}\n\t\tconst oldWatcher = this.watcher;\n\t\tthis.watcher = new Watchpack(options);\n\n\t\tif (callbackUndelayed) {\n\t\t\tthis.watcher.once(\"change\", callbackUndelayed);\n\t\t}\n\t\tconst cachedFiles = files;\n\t\tconst cachedDirs = dirs;\n\t\tthis.watcher.once(\"aggregated\", (changes, removals) => {\n\t\t\tchanges = changes.concat(removals);\n\t\t\tif (this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\tthis.inputFileSystem.purge(changes);\n\t\t\t}\n\t\t\tconst times = objectToMap(this.watcher.getTimes());\n\t\t\tfiles = new Set(files);\n\t\t\tdirs = new Set(dirs);\n\t\t\tmissing = new Set(missing);\n\t\t\tremovals = new Set(removals.filter(file => files.has(file)));\n\t\t\tcallback(\n\t\t\t\tnull,\n\t\t\t\tchanges.filter(file => files.has(file)).sort(),\n\t\t\t\tchanges.filter(file => dirs.has(file)).sort(),\n\t\t\t\tchanges.filter(file => missing.has(file)).sort(),\n\t\t\t\ttimes,\n\t\t\t\ttimes,\n\t\t\t\tremovals\n\t\t\t);\n\t\t});\n\n\t\tthis.watcher.watch(\n\t\t\tcachedFiles.concat(missing),\n\t\t\tcachedDirs.concat(missing),\n\t\t\tstartTime\n\t\t);\n\n\t\tif (oldWatcher) {\n\t\t\toldWatcher.close();\n\t\t}\n\t\treturn {\n\t\t\tclose: () => {\n\t\t\t\tif (this.watcher) {\n\t\t\t\t\tthis.watcher.close();\n\t\t\t\t\tthis.watcher = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tpause: () => {\n\t\t\t\tif (this.watcher) {\n\t\t\t\t\tthis.watcher.pause();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetFileTimestamps: () => {\n\t\t\t\tif (this.watcher) {\n\t\t\t\t\treturn objectToMap(this.watcher.getTimes());\n\t\t\t\t} else {\n\t\t\t\t\treturn new Map();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetContextTimestamps: () => {\n\t\t\t\tif (this.watcher) {\n\t\t\t\t\treturn objectToMap(this.watcher.getTimes());\n\t\t\t\t} else {\n\t\t\t\t\treturn new Map();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n\nmodule.exports = NodeWatchFileSystem;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst WasmMainTemplatePlugin = require(\"../wasm/WasmMainTemplatePlugin\");\n\nclass ReadFileCompileWasmTemplatePlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"ReadFileCompileWasmTemplatePlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst generateLoadBinaryCode = path =>\n\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\"new Promise(function (resolve, reject) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"var { readFile } = require('fs');\",\n\t\t\t\t\t\t\t\"var { join } = require('path');\",\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\"try {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`readFile(join(__dirname, ${path}), function(err, buffer){`,\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if (err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\"// Fake fetch response\",\n\t\t\t\t\t\t\t\t\t\"resolve({\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"arrayBuffer() { return Promise.resolve(buffer); }\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"} catch (err) { reject(err); }\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"})\"\n\t\t\t\t\t]);\n\n\t\t\t\tconst plugin = new WasmMainTemplatePlugin(\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgenerateLoadBinaryCode,\n\t\t\t\t\t\t\tsupportsStreaming: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.options\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tplugin.apply(compilation.mainTemplate);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ReadFileCompileWasmTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass AggressiveMergingPlugin {\n\tconstructor(options) {\n\t\tif (\n\t\t\t(options !== undefined && typeof options !== \"object\") ||\n\t\t\tArray.isArray(options)\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Argument should be an options object. To use defaults, pass in nothing.\\nFor more info on options, see https://webpack.js.org/plugins/\"\n\t\t\t);\n\t\t}\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst minSizeReduce = options.minSizeReduce || 1.5;\n\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"AggressiveMergingPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\t\"AggressiveMergingPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\tlet combinations = [];\n\t\t\t\t\t\tchunks.forEach((a, idx) => {\n\t\t\t\t\t\t\tif (a.canBeInitial()) return;\n\t\t\t\t\t\t\tfor (let i = 0; i < idx; i++) {\n\t\t\t\t\t\t\t\tconst b = chunks[i];\n\t\t\t\t\t\t\t\tif (b.canBeInitial()) continue;\n\t\t\t\t\t\t\t\tcombinations.push({\n\t\t\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\timprovement: undefined\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (const pair of combinations) {\n\t\t\t\t\t\t\tconst a = pair.b.size({\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst b = pair.a.size({\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst ab = pair.b.integratedSize(pair.a, {\n\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet newSize;\n\t\t\t\t\t\t\tif (ab === false) {\n\t\t\t\t\t\t\t\tpair.improvement = false;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnewSize = ab;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpair.improvement = (a + b) / newSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcombinations = combinations.filter(pair => {\n\t\t\t\t\t\t\treturn pair.improvement !== false;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcombinations.sort((a, b) => {\n\t\t\t\t\t\t\treturn b.improvement - a.improvement;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst pair = combinations[0];\n\n\t\t\t\t\t\tif (!pair) return;\n\t\t\t\t\t\tif (pair.improvement < minSizeReduce) return;\n\n\t\t\t\t\t\tif (pair.b.integrate(pair.a, \"aggressive-merge\")) {\n\t\t\t\t\t\t\tchunks.splice(chunks.indexOf(pair.a), 1);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = AggressiveMergingPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst identifierUtils = require(\"../util/identifier\");\nconst { intersect } = require(\"../util/SetHelpers\");\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/AggressiveSplittingPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/AggressiveSplittingPlugin\").AggressiveSplittingPluginOptions} AggressiveSplittingPluginOptions */\n\nconst moveModuleBetween = (oldChunk, newChunk) => {\n\treturn module => {\n\t\toldChunk.moveModule(module, newChunk);\n\t};\n};\n\nconst isNotAEntryModule = entryModule => {\n\treturn module => {\n\t\treturn entryModule !== module;\n\t};\n};\n\nclass AggressiveSplittingPlugin {\n\t/**\n\t * @param {AggressiveSplittingPluginOptions=} options options object\n\t */\n\tconstructor(options) {\n\t\tif (!options) options = {};\n\n\t\tvalidateOptions(schema, options, \"Aggressive Splitting Plugin\");\n\n\t\tthis.options = options;\n\t\tif (typeof this.options.minSize !== \"number\") {\n\t\t\tthis.options.minSize = 30 * 1024;\n\t\t}\n\t\tif (typeof this.options.maxSize !== \"number\") {\n\t\t\tthis.options.maxSize = 50 * 1024;\n\t\t}\n\t\tif (typeof this.options.chunkOverhead !== \"number\") {\n\t\t\tthis.options.chunkOverhead = 0;\n\t\t}\n\t\tif (typeof this.options.entryChunkMultiplicator !== \"number\") {\n\t\t\tthis.options.entryChunkMultiplicator = 1;\n\t\t}\n\t}\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"AggressiveSplittingPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tlet needAdditionalSeal = false;\n\t\t\t\tlet newSplits;\n\t\t\t\tlet fromAggressiveSplittingSet;\n\t\t\t\tlet chunkSplitDataMap;\n\t\t\t\tcompilation.hooks.optimize.tap(\"AggressiveSplittingPlugin\", () => {\n\t\t\t\t\tnewSplits = [];\n\t\t\t\t\tfromAggressiveSplittingSet = new Set();\n\t\t\t\t\tchunkSplitDataMap = new Map();\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\t\"AggressiveSplittingPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\t// Precompute stuff\n\t\t\t\t\t\tconst nameToModuleMap = new Map();\n\t\t\t\t\t\tconst moduleToNameMap = new Map();\n\t\t\t\t\t\tfor (const m of compilation.modules) {\n\t\t\t\t\t\t\tconst name = identifierUtils.makePathsRelative(\n\t\t\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\t\t\tm.identifier(),\n\t\t\t\t\t\t\t\tcompilation.cache\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tnameToModuleMap.set(name, m);\n\t\t\t\t\t\t\tmoduleToNameMap.set(m, name);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check used chunk ids\n\t\t\t\t\t\tconst usedIds = new Set();\n\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\tusedIds.add(chunk.id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst recordedSplits =\n\t\t\t\t\t\t\t(compilation.records && compilation.records.aggressiveSplits) ||\n\t\t\t\t\t\t\t[];\n\t\t\t\t\t\tconst usedSplits = newSplits\n\t\t\t\t\t\t\t? recordedSplits.concat(newSplits)\n\t\t\t\t\t\t\t: recordedSplits;\n\n\t\t\t\t\t\tconst minSize = this.options.minSize;\n\t\t\t\t\t\tconst maxSize = this.options.maxSize;\n\n\t\t\t\t\t\tconst applySplit = splitData => {\n\t\t\t\t\t\t\t// Cannot split if id is already taken\n\t\t\t\t\t\t\tif (splitData.id !== undefined && usedIds.has(splitData.id)) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Get module objects from names\n\t\t\t\t\t\t\tconst selectedModules = splitData.modules.map(name =>\n\t\t\t\t\t\t\t\tnameToModuleMap.get(name)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Does the modules exist at all?\n\t\t\t\t\t\t\tif (!selectedModules.every(Boolean)) return false;\n\n\t\t\t\t\t\t\t// Check if size matches (faster than waiting for hash)\n\t\t\t\t\t\t\tconst size = selectedModules.reduce(\n\t\t\t\t\t\t\t\t(sum, m) => sum + m.size(),\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (size !== splitData.size) return false;\n\n\t\t\t\t\t\t\t// get chunks with all modules\n\t\t\t\t\t\t\tconst selectedChunks = intersect(\n\t\t\t\t\t\t\t\tselectedModules.map(m => new Set(m.chunksIterable))\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// No relevant chunks found\n\t\t\t\t\t\t\tif (selectedChunks.size === 0) return false;\n\n\t\t\t\t\t\t\t// The found chunk is already the split or similar\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tselectedChunks.size === 1 &&\n\t\t\t\t\t\t\t\tArray.from(selectedChunks)[0].getNumberOfModules() ===\n\t\t\t\t\t\t\t\t\tselectedModules.length\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst chunk = Array.from(selectedChunks)[0];\n\t\t\t\t\t\t\t\tif (fromAggressiveSplittingSet.has(chunk)) return false;\n\t\t\t\t\t\t\t\tfromAggressiveSplittingSet.add(chunk);\n\t\t\t\t\t\t\t\tchunkSplitDataMap.set(chunk, splitData);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// split the chunk into two parts\n\t\t\t\t\t\t\tconst newChunk = compilation.addChunk();\n\t\t\t\t\t\t\tnewChunk.chunkReason = \"aggressive splitted\";\n\t\t\t\t\t\t\tfor (const chunk of selectedChunks) {\n\t\t\t\t\t\t\t\tselectedModules.forEach(moveModuleBetween(chunk, newChunk));\n\t\t\t\t\t\t\t\tchunk.split(newChunk);\n\t\t\t\t\t\t\t\tchunk.name = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfromAggressiveSplittingSet.add(newChunk);\n\t\t\t\t\t\t\tchunkSplitDataMap.set(newChunk, splitData);\n\n\t\t\t\t\t\t\tif (splitData.id !== null && splitData.id !== undefined) {\n\t\t\t\t\t\t\t\tnewChunk.id = splitData.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// try to restore to recorded splitting\n\t\t\t\t\t\tlet changed = false;\n\t\t\t\t\t\tfor (let j = 0; j < usedSplits.length; j++) {\n\t\t\t\t\t\t\tconst splitData = usedSplits[j];\n\t\t\t\t\t\t\tif (applySplit(splitData)) changed = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// for any chunk which isn't splitted yet, split it and create a new entry\n\t\t\t\t\t\t// start with the biggest chunk\n\t\t\t\t\t\tconst sortedChunks = chunks.slice().sort((a, b) => {\n\t\t\t\t\t\t\tconst diff1 = b.modulesSize() - a.modulesSize();\n\t\t\t\t\t\t\tif (diff1) return diff1;\n\t\t\t\t\t\t\tconst diff2 = a.getNumberOfModules() - b.getNumberOfModules();\n\t\t\t\t\t\t\tif (diff2) return diff2;\n\t\t\t\t\t\t\tconst modulesA = Array.from(a.modulesIterable);\n\t\t\t\t\t\t\tconst modulesB = Array.from(b.modulesIterable);\n\t\t\t\t\t\t\tmodulesA.sort();\n\t\t\t\t\t\t\tmodulesB.sort();\n\t\t\t\t\t\t\tconst aI = modulesA[Symbol.iterator]();\n\t\t\t\t\t\t\tconst bI = modulesB[Symbol.iterator]();\n\t\t\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\tconst aItem = aI.next();\n\t\t\t\t\t\t\t\tconst bItem = bI.next();\n\t\t\t\t\t\t\t\tif (aItem.done) return 0;\n\t\t\t\t\t\t\t\tconst aModuleIdentifier = aItem.value.identifier();\n\t\t\t\t\t\t\t\tconst bModuleIdentifier = bItem.value.identifier();\n\t\t\t\t\t\t\t\tif (aModuleIdentifier > bModuleIdentifier) return -1;\n\t\t\t\t\t\t\t\tif (aModuleIdentifier < bModuleIdentifier) return 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (const chunk of sortedChunks) {\n\t\t\t\t\t\t\tif (fromAggressiveSplittingSet.has(chunk)) continue;\n\t\t\t\t\t\t\tconst size = chunk.modulesSize();\n\t\t\t\t\t\t\tif (size > maxSize && chunk.getNumberOfModules() > 1) {\n\t\t\t\t\t\t\t\tconst modules = chunk\n\t\t\t\t\t\t\t\t\t.getModules()\n\t\t\t\t\t\t\t\t\t.filter(isNotAEntryModule(chunk.entryModule))\n\t\t\t\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\t\t\t\ta = a.identifier();\n\t\t\t\t\t\t\t\t\t\tb = b.identifier();\n\t\t\t\t\t\t\t\t\t\tif (a > b) return 1;\n\t\t\t\t\t\t\t\t\t\tif (a < b) return -1;\n\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst selectedModules = [];\n\t\t\t\t\t\t\t\tlet selectedModulesSize = 0;\n\t\t\t\t\t\t\t\tfor (let k = 0; k < modules.length; k++) {\n\t\t\t\t\t\t\t\t\tconst module = modules[k];\n\t\t\t\t\t\t\t\t\tconst newSize = selectedModulesSize + module.size();\n\t\t\t\t\t\t\t\t\tif (newSize > maxSize && selectedModulesSize >= minSize) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tselectedModulesSize = newSize;\n\t\t\t\t\t\t\t\t\tselectedModules.push(module);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (selectedModules.length === 0) continue;\n\t\t\t\t\t\t\t\tconst splitData = {\n\t\t\t\t\t\t\t\t\tmodules: selectedModules\n\t\t\t\t\t\t\t\t\t\t.map(m => moduleToNameMap.get(m))\n\t\t\t\t\t\t\t\t\t\t.sort(),\n\t\t\t\t\t\t\t\t\tsize: selectedModulesSize\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif (applySplit(splitData)) {\n\t\t\t\t\t\t\t\t\tnewSplits = (newSplits || []).concat(splitData);\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (changed) return true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.recordHash.tap(\n\t\t\t\t\t\"AggressiveSplittingPlugin\",\n\t\t\t\t\trecords => {\n\t\t\t\t\t\t// 4. save made splittings to records\n\t\t\t\t\t\tconst allSplits = new Set();\n\t\t\t\t\t\tconst invalidSplits = new Set();\n\n\t\t\t\t\t\t// Check if some splittings are invalid\n\t\t\t\t\t\t// We remove invalid splittings and try again\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\tconst splitData = chunkSplitDataMap.get(chunk);\n\t\t\t\t\t\t\tif (splitData !== undefined) {\n\t\t\t\t\t\t\t\tif (splitData.hash && chunk.hash !== splitData.hash) {\n\t\t\t\t\t\t\t\t\t// Split was successful, but hash doesn't equal\n\t\t\t\t\t\t\t\t\t// We can throw away the split since it's useless now\n\t\t\t\t\t\t\t\t\tinvalidSplits.add(splitData);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (invalidSplits.size > 0) {\n\t\t\t\t\t\t\trecords.aggressiveSplits = records.aggressiveSplits.filter(\n\t\t\t\t\t\t\t\tsplitData => !invalidSplits.has(splitData)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tneedAdditionalSeal = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// set hash and id values on all (new) splittings\n\t\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\t\tconst splitData = chunkSplitDataMap.get(chunk);\n\t\t\t\t\t\t\t\tif (splitData !== undefined) {\n\t\t\t\t\t\t\t\t\tsplitData.hash = chunk.hash;\n\t\t\t\t\t\t\t\t\tsplitData.id = chunk.id;\n\t\t\t\t\t\t\t\t\tallSplits.add(splitData);\n\t\t\t\t\t\t\t\t\t// set flag for stats\n\t\t\t\t\t\t\t\t\tchunk.recorded = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Also add all unused historial splits (after the used ones)\n\t\t\t\t\t\t\t// They can still be used in some future compilation\n\t\t\t\t\t\t\tconst recordedSplits =\n\t\t\t\t\t\t\t\tcompilation.records && compilation.records.aggressiveSplits;\n\t\t\t\t\t\t\tif (recordedSplits) {\n\t\t\t\t\t\t\t\tfor (const splitData of recordedSplits) {\n\t\t\t\t\t\t\t\t\tif (!invalidSplits.has(splitData)) allSplits.add(splitData);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// record all splits\n\t\t\t\t\t\t\trecords.aggressiveSplits = Array.from(allSplits);\n\n\t\t\t\t\t\t\tneedAdditionalSeal = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.needAdditionalSeal.tap(\n\t\t\t\t\t\"AggressiveSplittingPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (needAdditionalSeal) {\n\t\t\t\t\t\t\tneedAdditionalSeal = false;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = AggressiveSplittingPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst sortByIndex = (a, b) => {\n\treturn a.index - b.index;\n};\n\nconst sortByIndex2 = (a, b) => {\n\treturn a.index2 - b.index2;\n};\n\nclass ChunkModuleIdRangePlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"ChunkModuleIdRangePlugin\", compilation => {\n\t\t\tcompilation.hooks.moduleIds.tap(\"ChunkModuleIdRangePlugin\", modules => {\n\t\t\t\tconst chunk = compilation.chunks.find(\n\t\t\t\t\tchunk => chunk.name === options.name\n\t\t\t\t);\n\t\t\t\tif (!chunk) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`ChunkModuleIdRangePlugin: Chunk with name '${options.name}\"' was not found`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet chunkModules;\n\t\t\t\tif (options.order) {\n\t\t\t\t\tchunkModules = Array.from(chunk.modulesIterable);\n\t\t\t\t\tswitch (options.order) {\n\t\t\t\t\t\tcase \"index\":\n\t\t\t\t\t\t\tchunkModules.sort(sortByIndex);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"index2\":\n\t\t\t\t\t\t\tchunkModules.sort(sortByIndex2);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"ChunkModuleIdRangePlugin: unexpected value of order\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunkModules = modules.filter(m => {\n\t\t\t\t\t\treturn m.chunksIterable.has(chunk);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet currentId = options.start || 0;\n\t\t\t\tfor (let i = 0; i < chunkModules.length; i++) {\n\t\t\t\t\tconst m = chunkModules[i];\n\t\t\t\t\tif (m.id === null) {\n\t\t\t\t\t\tm.id = currentId++;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.end && currentId > options.end) break;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\nmodule.exports = ChunkModuleIdRangePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Module = require(\"../Module\");\nconst Template = require(\"../Template\");\nconst Parser = require(\"../Parser\");\nconst eslintScope = require(\"eslint-scope\");\nconst { ConcatSource, ReplaceSource } = require(\"webpack-sources\");\nconst DependencyReference = require(\"../dependencies/DependencyReference\");\nconst HarmonyImportDependency = require(\"../dependencies/HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"../dependencies/HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"../dependencies/HarmonyImportSpecifierDependency\");\nconst HarmonyExportSpecifierDependency = require(\"../dependencies/HarmonyExportSpecifierDependency\");\nconst HarmonyExportExpressionDependency = require(\"../dependencies/HarmonyExportExpressionDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"../dependencies/HarmonyExportImportedSpecifierDependency\");\nconst HarmonyCompatibilityDependency = require(\"../dependencies/HarmonyCompatibilityDependency\");\nconst createHash = require(\"../util/createHash\");\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../util/createHash\").Hash} Hash */\n\n/**\n * @typedef {Object} ConcatenationEntry\n * @property {\"concatenated\" | \"external\"} type\n * @property {Module} module\n */\n\nconst ensureNsObjSource = (\n\tinfo,\n\tmoduleToInfoMap,\n\trequestShortener,\n\tstrictHarmonyModule\n) => {\n\tif (!info.hasNamespaceObject) {\n\t\tinfo.hasNamespaceObject = true;\n\t\tconst name = info.exportMap.get(true);\n\t\tconst nsObj = [`var ${name} = {};`, `__webpack_require__.r(${name});`];\n\t\tfor (const exportName of info.module.buildMeta.providedExports) {\n\t\t\tconst finalName = getFinalName(\n\t\t\t\tinfo,\n\t\t\t\texportName,\n\t\t\t\tmoduleToInfoMap,\n\t\t\t\trequestShortener,\n\t\t\t\tfalse,\n\t\t\t\tstrictHarmonyModule\n\t\t\t);\n\t\t\tnsObj.push(\n\t\t\t\t`__webpack_require__.d(${name}, ${JSON.stringify(\n\t\t\t\t\texportName\n\t\t\t\t)}, function() { return ${finalName}; });`\n\t\t\t);\n\t\t}\n\t\tinfo.namespaceObjectSource = nsObj.join(\"\\n\") + \"\\n\";\n\t}\n};\n\nconst getExternalImport = (\n\timportedModule,\n\tinfo,\n\texportName,\n\tasCall,\n\tstrictHarmonyModule\n) => {\n\tconst used = importedModule.isUsed(exportName);\n\tif (!used) return \"/* unused reexport */undefined\";\n\tconst comment =\n\t\tused !== exportName ? ` ${Template.toNormalComment(exportName)}` : \"\";\n\tswitch (importedModule.buildMeta.exportsType) {\n\t\tcase \"named\":\n\t\t\tif (exportName === \"default\") {\n\t\t\t\treturn info.name;\n\t\t\t} else if (exportName === true) {\n\t\t\t\tinfo.interopNamespaceObjectUsed = true;\n\t\t\t\treturn info.interopNamespaceObjectName;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase \"namespace\":\n\t\t\tif (exportName === true) {\n\t\t\t\treturn info.name;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\tdefault:\n\t\t\tif (strictHarmonyModule) {\n\t\t\t\tif (exportName === \"default\") {\n\t\t\t\t\treturn info.name;\n\t\t\t\t} else if (exportName === true) {\n\t\t\t\t\tinfo.interopNamespaceObjectUsed = true;\n\t\t\t\t\treturn info.interopNamespaceObjectName;\n\t\t\t\t} else {\n\t\t\t\t\treturn \"/* non-default import from non-esm module */undefined\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (exportName === \"default\") {\n\t\t\t\t\tinfo.interopDefaultAccessUsed = true;\n\t\t\t\t\treturn asCall\n\t\t\t\t\t\t? `${info.interopDefaultAccessName}()`\n\t\t\t\t\t\t: `${info.interopDefaultAccessName}.a`;\n\t\t\t\t} else if (exportName === true) {\n\t\t\t\t\treturn info.name;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t}\n\tconst reference = `${info.name}[${JSON.stringify(used)}${comment}]`;\n\tif (asCall) return `Object(${reference})`;\n\treturn reference;\n};\n\nconst getFinalName = (\n\tinfo,\n\texportName,\n\tmoduleToInfoMap,\n\trequestShortener,\n\tasCall,\n\tstrictHarmonyModule,\n\talreadyVisited = new Set()\n) => {\n\tswitch (info.type) {\n\t\tcase \"concatenated\": {\n\t\t\tconst directExport = info.exportMap.get(exportName);\n\t\t\tif (directExport) {\n\t\t\t\tif (exportName === true) {\n\t\t\t\t\tensureNsObjSource(\n\t\t\t\t\t\tinfo,\n\t\t\t\t\t\tmoduleToInfoMap,\n\t\t\t\t\t\trequestShortener,\n\t\t\t\t\t\tstrictHarmonyModule\n\t\t\t\t\t);\n\t\t\t\t} else if (!info.module.isUsed(exportName)) {\n\t\t\t\t\treturn \"/* unused export */ undefined\";\n\t\t\t\t}\n\t\t\t\tif (info.globalExports.has(directExport)) {\n\t\t\t\t\treturn directExport;\n\t\t\t\t}\n\t\t\t\tconst name = info.internalNames.get(directExport);\n\t\t\t\tif (!name) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`The export \"${directExport}\" in \"${info.module.readableIdentifier(\n\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t)}\" has no internal name`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn name;\n\t\t\t}\n\t\t\tconst reexport = info.reexportMap.get(exportName);\n\t\t\tif (reexport) {\n\t\t\t\tif (alreadyVisited.has(reexport)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Circular reexports ${Array.from(\n\t\t\t\t\t\t\talreadyVisited,\n\t\t\t\t\t\t\te =>\n\t\t\t\t\t\t\t\t`\"${e.module.readableIdentifier(requestShortener)}\".${\n\t\t\t\t\t\t\t\t\te.exportName\n\t\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t).join(\n\t\t\t\t\t\t\t\" --> \"\n\t\t\t\t\t\t)} -(circular)-> \"${reexport.module.readableIdentifier(\n\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t)}\".${reexport.exportName}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\talreadyVisited.add(reexport);\n\t\t\t\tconst refInfo = moduleToInfoMap.get(reexport.module);\n\t\t\t\tif (refInfo) {\n\t\t\t\t\t// module is in the concatenation\n\t\t\t\t\treturn getFinalName(\n\t\t\t\t\t\trefInfo,\n\t\t\t\t\t\treexport.exportName,\n\t\t\t\t\t\tmoduleToInfoMap,\n\t\t\t\t\t\trequestShortener,\n\t\t\t\t\t\tasCall,\n\t\t\t\t\t\tstrictHarmonyModule,\n\t\t\t\t\t\talreadyVisited\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst problem =\n\t\t\t\t`Cannot get final name for export \"${exportName}\" in \"${info.module.readableIdentifier(\n\t\t\t\t\trequestShortener\n\t\t\t\t)}\"` +\n\t\t\t\t` (known exports: ${Array.from(info.exportMap.keys())\n\t\t\t\t\t.filter(name => name !== true)\n\t\t\t\t\t.join(\" \")}, ` +\n\t\t\t\t`known reexports: ${Array.from(info.reexportMap.keys()).join(\" \")})`;\n\t\t\treturn `${Template.toNormalComment(problem)} undefined`;\n\t\t}\n\t\tcase \"external\": {\n\t\t\tconst importedModule = info.module;\n\t\t\treturn getExternalImport(\n\t\t\t\timportedModule,\n\t\t\t\tinfo,\n\t\t\t\texportName,\n\t\t\t\tasCall,\n\t\t\t\tstrictHarmonyModule\n\t\t\t);\n\t\t}\n\t}\n};\n\nconst addScopeSymbols1 = (s, nameSet, scopeSet) => {\n\tlet scope = s;\n\twhile (scope) {\n\t\tif (scopeSet.has(scope)) break;\n\t\tscopeSet.add(scope);\n\t\tfor (const variable of scope.variables) {\n\t\t\tnameSet.add(variable.name);\n\t\t}\n\t\tscope = scope.upper;\n\t}\n};\n\nconst addScopeSymbols2 = (s, nameSet, scopeSet1, scopeSet2) => {\n\tlet scope = s;\n\twhile (scope) {\n\t\tif (scopeSet1.has(scope)) break;\n\t\tif (scopeSet2.has(scope)) break;\n\t\tscopeSet1.add(scope);\n\t\tfor (const variable of scope.variables) {\n\t\t\tnameSet.add(variable.name);\n\t\t}\n\t\tscope = scope.upper;\n\t}\n};\n\nconst getAllReferences = variable => {\n\tlet set = variable.references;\n\t// Look for inner scope variables too (like in class Foo { t() { Foo } })\n\tconst identifiers = new Set(variable.identifiers);\n\tfor (const scope of variable.scope.childScopes) {\n\t\tfor (const innerVar of scope.variables) {\n\t\t\tif (innerVar.identifiers.some(id => identifiers.has(id))) {\n\t\t\t\tset = set.concat(innerVar.references);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn set;\n};\n\nconst getPathInAst = (ast, node) => {\n\tif (ast === node) {\n\t\treturn [];\n\t}\n\n\tconst nr = node.range;\n\n\tconst enterNode = n => {\n\t\tif (!n) return undefined;\n\t\tconst r = n.range;\n\t\tif (r) {\n\t\t\tif (r[0] <= nr[0] && r[1] >= nr[1]) {\n\t\t\t\tconst path = getPathInAst(n, node);\n\t\t\t\tif (path) {\n\t\t\t\t\tpath.push(n);\n\t\t\t\t\treturn path;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t};\n\n\tvar i;\n\tif (Array.isArray(ast)) {\n\t\tfor (i = 0; i < ast.length; i++) {\n\t\t\tconst enterResult = enterNode(ast[i]);\n\t\t\tif (enterResult !== undefined) return enterResult;\n\t\t}\n\t} else if (ast && typeof ast === \"object\") {\n\t\tconst keys = Object.keys(ast);\n\t\tfor (i = 0; i < keys.length; i++) {\n\t\t\tconst value = ast[keys[i]];\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tconst pathResult = getPathInAst(value, node);\n\t\t\t\tif (pathResult !== undefined) return pathResult;\n\t\t\t} else if (value && typeof value === \"object\") {\n\t\t\t\tconst enterResult = enterNode(value);\n\t\t\t\tif (enterResult !== undefined) return enterResult;\n\t\t\t}\n\t\t}\n\t}\n};\n\nclass ConcatenatedModule extends Module {\n\tconstructor(rootModule, modules, concatenationList) {\n\t\tsuper(\"javascript/esm\", null);\n\t\tsuper.setChunks(rootModule._chunks);\n\n\t\t// Info from Factory\n\t\tthis.rootModule = rootModule;\n\t\tthis.factoryMeta = rootModule.factoryMeta;\n\n\t\t// Info from Compilation\n\t\tthis.index = rootModule.index;\n\t\tthis.index2 = rootModule.index2;\n\t\tthis.depth = rootModule.depth;\n\n\t\t// Info from Optimization\n\t\tthis.used = rootModule.used;\n\t\tthis.usedExports = rootModule.usedExports;\n\n\t\t// Info from Build\n\t\tthis.buildInfo = {\n\t\t\tstrict: true,\n\t\t\tcacheable: modules.every(m => m.buildInfo.cacheable),\n\t\t\tmoduleArgument: rootModule.buildInfo.moduleArgument,\n\t\t\texportsArgument: rootModule.buildInfo.exportsArgument,\n\t\t\tfileDependencies: new Set(),\n\t\t\tcontextDependencies: new Set(),\n\t\t\tassets: undefined\n\t\t};\n\t\tthis.built = modules.some(m => m.built);\n\t\tthis.buildMeta = rootModule.buildMeta;\n\n\t\t// Caching\n\t\tthis._numberOfConcatenatedModules = modules.length;\n\n\t\t// Graph\n\t\tconst modulesSet = new Set(modules);\n\t\tthis.reasons = rootModule.reasons.filter(\n\t\t\treason =>\n\t\t\t\t!(reason.dependency instanceof HarmonyImportDependency) ||\n\t\t\t\t!modulesSet.has(reason.module)\n\t\t);\n\n\t\tthis.dependencies = [];\n\n\t\tthis.warnings = [];\n\t\tthis.errors = [];\n\t\tthis._orderedConcatenationList =\n\t\t\tconcatenationList ||\n\t\t\tConcatenatedModule.createConcatenationList(rootModule, modulesSet, null);\n\t\tfor (const info of this._orderedConcatenationList) {\n\t\t\tif (info.type === \"concatenated\") {\n\t\t\t\tconst m = info.module;\n\n\t\t\t\t// populate dependencies\n\t\t\t\tfor (const d of m.dependencies.filter(\n\t\t\t\t\tdep =>\n\t\t\t\t\t\t!(dep instanceof HarmonyImportDependency) ||\n\t\t\t\t\t\t!modulesSet.has(dep._module)\n\t\t\t\t)) {\n\t\t\t\t\tthis.dependencies.push(d);\n\t\t\t\t}\n\t\t\t\t// populate file dependencies\n\t\t\t\tif (m.buildInfo.fileDependencies) {\n\t\t\t\t\tfor (const file of m.buildInfo.fileDependencies) {\n\t\t\t\t\t\tthis.buildInfo.fileDependencies.add(file);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// populate context dependencies\n\t\t\t\tif (m.buildInfo.contextDependencies) {\n\t\t\t\t\tfor (const context of m.buildInfo.contextDependencies) {\n\t\t\t\t\t\tthis.buildInfo.contextDependencies.add(context);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// populate warnings\n\t\t\t\tfor (const warning of m.warnings) {\n\t\t\t\t\tthis.warnings.push(warning);\n\t\t\t\t}\n\t\t\t\t// populate errors\n\t\t\t\tfor (const error of m.errors) {\n\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t}\n\n\t\t\t\tif (m.buildInfo.assets) {\n\t\t\t\t\tif (this.buildInfo.assets === undefined) {\n\t\t\t\t\t\tthis.buildInfo.assets = Object.create(null);\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(this.buildInfo.assets, m.buildInfo.assets);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._identifier = this._createIdentifier();\n\t}\n\n\tget modules() {\n\t\treturn this._orderedConcatenationList\n\t\t\t.filter(info => info.type === \"concatenated\")\n\t\t\t.map(info => info.module);\n\t}\n\n\tidentifier() {\n\t\treturn this._identifier;\n\t}\n\n\treadableIdentifier(requestShortener) {\n\t\treturn (\n\t\t\tthis.rootModule.readableIdentifier(requestShortener) +\n\t\t\t` + ${this._numberOfConcatenatedModules - 1} modules`\n\t\t);\n\t}\n\n\tlibIdent(options) {\n\t\treturn this.rootModule.libIdent(options);\n\t}\n\n\tnameForCondition() {\n\t\treturn this.rootModule.nameForCondition();\n\t}\n\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthrow new Error(\"Cannot build this module. It should be already built.\");\n\t}\n\n\tsize() {\n\t\t// Guess size from embedded modules\n\t\treturn this._orderedConcatenationList.reduce((sum, info) => {\n\t\t\tswitch (info.type) {\n\t\t\t\tcase \"concatenated\":\n\t\t\t\t\treturn sum + info.module.size();\n\t\t\t\tcase \"external\":\n\t\t\t\t\treturn sum + 5;\n\t\t\t}\n\t\t\treturn sum;\n\t\t}, 0);\n\t}\n\n\t/**\n\t * @param {Module} rootModule the root of the concatenation\n\t * @param {Set<Module>} modulesSet a set of modules which should be concatenated\n\t * @param {Compilation} compilation the compilation context\n\t * @returns {ConcatenationEntry[]} concatenation list\n\t */\n\tstatic createConcatenationList(rootModule, modulesSet, compilation) {\n\t\tconst list = [];\n\t\tconst set = new Set();\n\n\t\t/**\n\t\t * @param {Module} module a module\n\t\t * @returns {(function(): Module)[]} imported modules in order\n\t\t */\n\t\tconst getConcatenatedImports = module => {\n\t\t\t/** @type {WeakMap<DependencyReference, Dependency>} */\n\t\t\tconst map = new WeakMap();\n\t\t\tconst references = module.dependencies\n\t\t\t\t.filter(dep => dep instanceof HarmonyImportDependency)\n\t\t\t\t.map(dep => {\n\t\t\t\t\tconst ref = compilation.getDependencyReference(module, dep);\n\t\t\t\t\tif (ref) map.set(ref, dep);\n\t\t\t\t\treturn ref;\n\t\t\t\t})\n\t\t\t\t.filter(ref => ref);\n\t\t\tDependencyReference.sort(references);\n\t\t\t// TODO webpack 5: remove this hack, see also DependencyReference\n\t\t\treturn references.map(ref => {\n\t\t\t\tconst dep = map.get(ref);\n\t\t\t\treturn () => compilation.getDependencyReference(module, dep).module;\n\t\t\t});\n\t\t};\n\n\t\tconst enterModule = getModule => {\n\t\t\tconst module = getModule();\n\t\t\tif (!module) return;\n\t\t\tif (set.has(module)) return;\n\t\t\tset.add(module);\n\t\t\tif (modulesSet.has(module)) {\n\t\t\t\tconst imports = getConcatenatedImports(module);\n\t\t\t\timports.forEach(enterModule);\n\t\t\t\tlist.push({\n\t\t\t\t\ttype: \"concatenated\",\n\t\t\t\t\tmodule\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlist.push({\n\t\t\t\t\ttype: \"external\",\n\t\t\t\t\tget module() {\n\t\t\t\t\t\t// We need to use a getter here, because the module in the dependency\n\t\t\t\t\t\t// could be replaced by some other process (i. e. also replaced with a\n\t\t\t\t\t\t// concatenated module)\n\t\t\t\t\t\treturn getModule();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tenterModule(() => rootModule);\n\n\t\treturn list;\n\t}\n\n\t_createIdentifier() {\n\t\tlet orderedConcatenationListIdentifiers = \"\";\n\t\tfor (let i = 0; i < this._orderedConcatenationList.length; i++) {\n\t\t\tif (this._orderedConcatenationList[i].type === \"concatenated\") {\n\t\t\t\torderedConcatenationListIdentifiers += this._orderedConcatenationList[\n\t\t\t\t\ti\n\t\t\t\t].module.identifier();\n\t\t\t\torderedConcatenationListIdentifiers += \" \";\n\t\t\t}\n\t\t}\n\t\tconst hash = createHash(\"md4\");\n\t\thash.update(orderedConcatenationListIdentifiers);\n\t\treturn this.rootModule.identifier() + \" \" + hash.digest(\"hex\");\n\t}\n\n\tsource(dependencyTemplates, runtimeTemplate) {\n\t\tconst requestShortener = runtimeTemplate.requestShortener;\n\t\t// Metainfo for each module\n\t\tconst modulesWithInfo = this._orderedConcatenationList.map((info, idx) => {\n\t\t\tswitch (info.type) {\n\t\t\t\tcase \"concatenated\": {\n\t\t\t\t\tconst exportMap = new Map();\n\t\t\t\t\tconst reexportMap = new Map();\n\t\t\t\t\tfor (const dep of info.module.dependencies) {\n\t\t\t\t\t\tif (dep instanceof HarmonyExportSpecifierDependency) {\n\t\t\t\t\t\t\tif (!exportMap.has(dep.name)) {\n\t\t\t\t\t\t\t\texportMap.set(dep.name, dep.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dep instanceof HarmonyExportExpressionDependency) {\n\t\t\t\t\t\t\tif (!exportMap.has(\"default\")) {\n\t\t\t\t\t\t\t\texportMap.set(\"default\", \"__WEBPACK_MODULE_DEFAULT_EXPORT__\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tdep instanceof HarmonyExportImportedSpecifierDependency\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst exportName = dep.name;\n\t\t\t\t\t\t\tconst importName = dep._id;\n\t\t\t\t\t\t\tconst importedModule = dep._module;\n\t\t\t\t\t\t\tif (exportName && importName) {\n\t\t\t\t\t\t\t\tif (!reexportMap.has(exportName)) {\n\t\t\t\t\t\t\t\t\treexportMap.set(exportName, {\n\t\t\t\t\t\t\t\t\t\tmodule: importedModule,\n\t\t\t\t\t\t\t\t\t\texportName: importName,\n\t\t\t\t\t\t\t\t\t\tdependency: dep\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (exportName) {\n\t\t\t\t\t\t\t\tif (!reexportMap.has(exportName)) {\n\t\t\t\t\t\t\t\t\treexportMap.set(exportName, {\n\t\t\t\t\t\t\t\t\t\tmodule: importedModule,\n\t\t\t\t\t\t\t\t\t\texportName: true,\n\t\t\t\t\t\t\t\t\t\tdependency: dep\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (importedModule) {\n\t\t\t\t\t\t\t\tfor (const name of importedModule.buildMeta.providedExports) {\n\t\t\t\t\t\t\t\t\tif (dep.activeExports.has(name) || name === \"default\") {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!reexportMap.has(name)) {\n\t\t\t\t\t\t\t\t\t\treexportMap.set(name, {\n\t\t\t\t\t\t\t\t\t\t\tmodule: importedModule,\n\t\t\t\t\t\t\t\t\t\t\texportName: name,\n\t\t\t\t\t\t\t\t\t\t\tdependency: dep\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"concatenated\",\n\t\t\t\t\t\tmodule: info.module,\n\t\t\t\t\t\tindex: idx,\n\t\t\t\t\t\tast: undefined,\n\t\t\t\t\t\tinternalSource: undefined,\n\t\t\t\t\t\tsource: undefined,\n\t\t\t\t\t\tglobalScope: undefined,\n\t\t\t\t\t\tmoduleScope: undefined,\n\t\t\t\t\t\tinternalNames: new Map(),\n\t\t\t\t\t\tglobalExports: new Set(),\n\t\t\t\t\t\texportMap: exportMap,\n\t\t\t\t\t\treexportMap: reexportMap,\n\t\t\t\t\t\thasNamespaceObject: false,\n\t\t\t\t\t\tnamespaceObjectSource: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tcase \"external\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"external\",\n\t\t\t\t\t\tmodule: info.module,\n\t\t\t\t\t\tindex: idx,\n\t\t\t\t\t\tname: undefined,\n\t\t\t\t\t\tinteropNamespaceObjectUsed: false,\n\t\t\t\t\t\tinteropNamespaceObjectName: undefined,\n\t\t\t\t\t\tinteropDefaultAccessUsed: false,\n\t\t\t\t\t\tinteropDefaultAccessName: undefined\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported concatenation entry type ${info.type}`);\n\t\t\t}\n\t\t});\n\n\t\t// Create mapping from module to info\n\t\tconst moduleToInfoMap = new Map();\n\t\tfor (const m of modulesWithInfo) {\n\t\t\tmoduleToInfoMap.set(m.module, m);\n\t\t}\n\n\t\t// Configure template decorators for dependencies\n\t\tconst innerDependencyTemplates = new Map(dependencyTemplates);\n\n\t\tinnerDependencyTemplates.set(\n\t\t\tHarmonyImportSpecifierDependency,\n\t\t\tnew HarmonyImportSpecifierDependencyConcatenatedTemplate(\n\t\t\t\tdependencyTemplates.get(HarmonyImportSpecifierDependency),\n\t\t\t\tmoduleToInfoMap\n\t\t\t)\n\t\t);\n\t\tinnerDependencyTemplates.set(\n\t\t\tHarmonyImportSideEffectDependency,\n\t\t\tnew HarmonyImportSideEffectDependencyConcatenatedTemplate(\n\t\t\t\tdependencyTemplates.get(HarmonyImportSideEffectDependency),\n\t\t\t\tmoduleToInfoMap\n\t\t\t)\n\t\t);\n\t\tinnerDependencyTemplates.set(\n\t\t\tHarmonyExportSpecifierDependency,\n\t\t\tnew HarmonyExportSpecifierDependencyConcatenatedTemplate(\n\t\t\t\tdependencyTemplates.get(HarmonyExportSpecifierDependency),\n\t\t\t\tthis.rootModule\n\t\t\t)\n\t\t);\n\t\tinnerDependencyTemplates.set(\n\t\t\tHarmonyExportExpressionDependency,\n\t\t\tnew HarmonyExportExpressionDependencyConcatenatedTemplate(\n\t\t\t\tdependencyTemplates.get(HarmonyExportExpressionDependency),\n\t\t\t\tthis.rootModule\n\t\t\t)\n\t\t);\n\t\tinnerDependencyTemplates.set(\n\t\t\tHarmonyExportImportedSpecifierDependency,\n\t\t\tnew HarmonyExportImportedSpecifierDependencyConcatenatedTemplate(\n\t\t\t\tdependencyTemplates.get(HarmonyExportImportedSpecifierDependency),\n\t\t\t\tthis.rootModule,\n\t\t\t\tmoduleToInfoMap\n\t\t\t)\n\t\t);\n\t\tinnerDependencyTemplates.set(\n\t\t\tHarmonyCompatibilityDependency,\n\t\t\tnew HarmonyCompatibilityDependencyConcatenatedTemplate(\n\t\t\t\tdependencyTemplates.get(HarmonyCompatibilityDependency),\n\t\t\t\tthis.rootModule,\n\t\t\t\tmoduleToInfoMap\n\t\t\t)\n\t\t);\n\n\t\t// Must use full identifier in our cache here to ensure that the source\n\t\t// is updated should our dependencies list change.\n\t\t// TODO webpack 5 refactor\n\t\tinnerDependencyTemplates.set(\n\t\t\t\"hash\",\n\t\t\tinnerDependencyTemplates.get(\"hash\") + this.identifier()\n\t\t);\n\n\t\t// Generate source code and analyse scopes\n\t\t// Prepare a ReplaceSource for the final source\n\t\tfor (const info of modulesWithInfo) {\n\t\t\tif (info.type === \"concatenated\") {\n\t\t\t\tconst m = info.module;\n\t\t\t\tconst source = m.source(innerDependencyTemplates, runtimeTemplate);\n\t\t\t\tconst code = source.source();\n\t\t\t\tlet ast;\n\t\t\t\ttry {\n\t\t\t\t\tast = Parser.parse(code, {\n\t\t\t\t\t\tsourceType: \"module\"\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (\n\t\t\t\t\t\terr.loc &&\n\t\t\t\t\t\ttypeof err.loc === \"object\" &&\n\t\t\t\t\t\ttypeof err.loc.line === \"number\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst lineNumber = err.loc.line;\n\t\t\t\t\t\tconst lines = code.split(\"\\n\");\n\t\t\t\t\t\terr.message +=\n\t\t\t\t\t\t\t\"\\n| \" +\n\t\t\t\t\t\t\tlines\n\t\t\t\t\t\t\t\t.slice(Math.max(0, lineNumber - 3), lineNumber + 2)\n\t\t\t\t\t\t\t\t.join(\"\\n| \");\n\t\t\t\t\t}\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\tconst scopeManager = eslintScope.analyze(ast, {\n\t\t\t\t\tecmaVersion: 6,\n\t\t\t\t\tsourceType: \"module\",\n\t\t\t\t\toptimistic: true,\n\t\t\t\t\tignoreEval: true,\n\t\t\t\t\timpliedStrict: true\n\t\t\t\t});\n\t\t\t\tconst globalScope = scopeManager.acquire(ast);\n\t\t\t\tconst moduleScope = globalScope.childScopes[0];\n\t\t\t\tconst resultSource = new ReplaceSource(source);\n\t\t\t\tinfo.ast = ast;\n\t\t\t\tinfo.internalSource = source;\n\t\t\t\tinfo.source = resultSource;\n\t\t\t\tinfo.globalScope = globalScope;\n\t\t\t\tinfo.moduleScope = moduleScope;\n\t\t\t}\n\t\t}\n\n\t\t// List of all used names to avoid conflicts\n\t\tconst allUsedNames = new Set([\n\t\t\t\"__WEBPACK_MODULE_DEFAULT_EXPORT__\", // avoid using this internal name\n\n\t\t\t\"abstract\",\n\t\t\t\"arguments\",\n\t\t\t\"async\",\n\t\t\t\"await\",\n\t\t\t\"boolean\",\n\t\t\t\"break\",\n\t\t\t\"byte\",\n\t\t\t\"case\",\n\t\t\t\"catch\",\n\t\t\t\"char\",\n\t\t\t\"class\",\n\t\t\t\"const\",\n\t\t\t\"continue\",\n\t\t\t\"debugger\",\n\t\t\t\"default\",\n\t\t\t\"delete\",\n\t\t\t\"do\",\n\t\t\t\"double\",\n\t\t\t\"else\",\n\t\t\t\"enum\",\n\t\t\t\"eval\",\n\t\t\t\"export\",\n\t\t\t\"extends\",\n\t\t\t\"false\",\n\t\t\t\"final\",\n\t\t\t\"finally\",\n\t\t\t\"float\",\n\t\t\t\"for\",\n\t\t\t\"function\",\n\t\t\t\"goto\",\n\t\t\t\"if\",\n\t\t\t\"implements\",\n\t\t\t\"import\",\n\t\t\t\"in\",\n\t\t\t\"instanceof\",\n\t\t\t\"int\",\n\t\t\t\"interface\",\n\t\t\t\"let\",\n\t\t\t\"long\",\n\t\t\t\"native\",\n\t\t\t\"new\",\n\t\t\t\"null\",\n\t\t\t\"package\",\n\t\t\t\"private\",\n\t\t\t\"protected\",\n\t\t\t\"public\",\n\t\t\t\"return\",\n\t\t\t\"short\",\n\t\t\t\"static\",\n\t\t\t\"super\",\n\t\t\t\"switch\",\n\t\t\t\"synchronized\",\n\t\t\t\"this\",\n\t\t\t\"throw\",\n\t\t\t\"throws\",\n\t\t\t\"transient\",\n\t\t\t\"true\",\n\t\t\t\"try\",\n\t\t\t\"typeof\",\n\t\t\t\"var\",\n\t\t\t\"void\",\n\t\t\t\"volatile\",\n\t\t\t\"while\",\n\t\t\t\"with\",\n\t\t\t\"yield\",\n\n\t\t\t\"module\",\n\t\t\t\"__dirname\",\n\t\t\t\"__filename\",\n\t\t\t\"exports\",\n\n\t\t\t\"Array\",\n\t\t\t\"Date\",\n\t\t\t\"eval\",\n\t\t\t\"function\",\n\t\t\t\"hasOwnProperty\",\n\t\t\t\"Infinity\",\n\t\t\t\"isFinite\",\n\t\t\t\"isNaN\",\n\t\t\t\"isPrototypeOf\",\n\t\t\t\"length\",\n\t\t\t\"Math\",\n\t\t\t\"NaN\",\n\t\t\t\"name\",\n\t\t\t\"Number\",\n\t\t\t\"Object\",\n\t\t\t\"prototype\",\n\t\t\t\"String\",\n\t\t\t\"toString\",\n\t\t\t\"undefined\",\n\t\t\t\"valueOf\",\n\n\t\t\t\"alert\",\n\t\t\t\"all\",\n\t\t\t\"anchor\",\n\t\t\t\"anchors\",\n\t\t\t\"area\",\n\t\t\t\"assign\",\n\t\t\t\"blur\",\n\t\t\t\"button\",\n\t\t\t\"checkbox\",\n\t\t\t\"clearInterval\",\n\t\t\t\"clearTimeout\",\n\t\t\t\"clientInformation\",\n\t\t\t\"close\",\n\t\t\t\"closed\",\n\t\t\t\"confirm\",\n\t\t\t\"constructor\",\n\t\t\t\"crypto\",\n\t\t\t\"decodeURI\",\n\t\t\t\"decodeURIComponent\",\n\t\t\t\"defaultStatus\",\n\t\t\t\"document\",\n\t\t\t\"element\",\n\t\t\t\"elements\",\n\t\t\t\"embed\",\n\t\t\t\"embeds\",\n\t\t\t\"encodeURI\",\n\t\t\t\"encodeURIComponent\",\n\t\t\t\"escape\",\n\t\t\t\"event\",\n\t\t\t\"fileUpload\",\n\t\t\t\"focus\",\n\t\t\t\"form\",\n\t\t\t\"forms\",\n\t\t\t\"frame\",\n\t\t\t\"innerHeight\",\n\t\t\t\"innerWidth\",\n\t\t\t\"layer\",\n\t\t\t\"layers\",\n\t\t\t\"link\",\n\t\t\t\"location\",\n\t\t\t\"mimeTypes\",\n\t\t\t\"navigate\",\n\t\t\t\"navigator\",\n\t\t\t\"frames\",\n\t\t\t\"frameRate\",\n\t\t\t\"hidden\",\n\t\t\t\"history\",\n\t\t\t\"image\",\n\t\t\t\"images\",\n\t\t\t\"offscreenBuffering\",\n\t\t\t\"open\",\n\t\t\t\"opener\",\n\t\t\t\"option\",\n\t\t\t\"outerHeight\",\n\t\t\t\"outerWidth\",\n\t\t\t\"packages\",\n\t\t\t\"pageXOffset\",\n\t\t\t\"pageYOffset\",\n\t\t\t\"parent\",\n\t\t\t\"parseFloat\",\n\t\t\t\"parseInt\",\n\t\t\t\"password\",\n\t\t\t\"pkcs11\",\n\t\t\t\"plugin\",\n\t\t\t\"prompt\",\n\t\t\t\"propertyIsEnum\",\n\t\t\t\"radio\",\n\t\t\t\"reset\",\n\t\t\t\"screenX\",\n\t\t\t\"screenY\",\n\t\t\t\"scroll\",\n\t\t\t\"secure\",\n\t\t\t\"select\",\n\t\t\t\"self\",\n\t\t\t\"setInterval\",\n\t\t\t\"setTimeout\",\n\t\t\t\"status\",\n\t\t\t\"submit\",\n\t\t\t\"taint\",\n\t\t\t\"text\",\n\t\t\t\"textarea\",\n\t\t\t\"top\",\n\t\t\t\"unescape\",\n\t\t\t\"untaint\",\n\t\t\t\"window\",\n\n\t\t\t\"onblur\",\n\t\t\t\"onclick\",\n\t\t\t\"onerror\",\n\t\t\t\"onfocus\",\n\t\t\t\"onkeydown\",\n\t\t\t\"onkeypress\",\n\t\t\t\"onkeyup\",\n\t\t\t\"onmouseover\",\n\t\t\t\"onload\",\n\t\t\t\"onmouseup\",\n\t\t\t\"onmousedown\",\n\t\t\t\"onsubmit\"\n\t\t]);\n\n\t\t// Set of already checked scopes\n\t\tconst alreadyCheckedScopes = new Set();\n\n\t\t// get all global names\n\t\tfor (const info of modulesWithInfo) {\n\t\t\tconst superClassExpressions = [];\n\n\t\t\t// ignore symbols from moduleScope\n\t\t\tif (info.moduleScope) {\n\t\t\t\talreadyCheckedScopes.add(info.moduleScope);\n\n\t\t\t\t// The super class expression in class scopes behaves weird\n\t\t\t\t// We store ranges of all super class expressions to make\n\t\t\t\t// renaming to work correctly\n\t\t\t\tfor (const childScope of info.moduleScope.childScopes) {\n\t\t\t\t\tif (childScope.type !== \"class\") continue;\n\t\t\t\t\tif (!childScope.block.superClass) continue;\n\t\t\t\t\tsuperClassExpressions.push({\n\t\t\t\t\t\trange: childScope.block.superClass.range,\n\t\t\t\t\t\tvariables: childScope.variables\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add global symbols\n\t\t\tif (info.globalScope) {\n\t\t\t\tfor (const reference of info.globalScope.through) {\n\t\t\t\t\tconst name = reference.identifier.name;\n\t\t\t\t\tif (\n\t\t\t\t\t\t/^__WEBPACK_MODULE_REFERENCE__\\d+_([\\da-f]+|ns)(_call)?(_strict)?__$/.test(\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (const expr of superClassExpressions) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\texpr.range[0] <= reference.identifier.range[0] &&\n\t\t\t\t\t\t\t\texpr.range[1] >= reference.identifier.range[1]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tfor (const variable of expr.variables) {\n\t\t\t\t\t\t\t\t\tallUsedNames.add(variable.name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taddScopeSymbols1(\n\t\t\t\t\t\t\treference.from,\n\t\t\t\t\t\t\tallUsedNames,\n\t\t\t\t\t\t\talreadyCheckedScopes\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallUsedNames.add(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add exported globals\n\t\t\tif (info.type === \"concatenated\") {\n\t\t\t\tconst variables = new Set();\n\t\t\t\tfor (const variable of info.moduleScope.variables) {\n\t\t\t\t\tvariables.add(variable.name);\n\t\t\t\t}\n\t\t\t\tfor (const [, variable] of info.exportMap) {\n\t\t\t\t\tif (!variables.has(variable)) {\n\t\t\t\t\t\tinfo.globalExports.add(variable);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// generate names for symbols\n\t\tfor (const info of modulesWithInfo) {\n\t\t\tswitch (info.type) {\n\t\t\t\tcase \"concatenated\": {\n\t\t\t\t\tconst namespaceObjectName = this.findNewName(\n\t\t\t\t\t\t\"namespaceObject\",\n\t\t\t\t\t\tallUsedNames,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tinfo.module.readableIdentifier(requestShortener)\n\t\t\t\t\t);\n\t\t\t\t\tallUsedNames.add(namespaceObjectName);\n\t\t\t\t\tinfo.internalNames.set(namespaceObjectName, namespaceObjectName);\n\t\t\t\t\tinfo.exportMap.set(true, namespaceObjectName);\n\t\t\t\t\tfor (const variable of info.moduleScope.variables) {\n\t\t\t\t\t\tconst name = variable.name;\n\t\t\t\t\t\tif (allUsedNames.has(name)) {\n\t\t\t\t\t\t\tconst references = getAllReferences(variable);\n\t\t\t\t\t\t\tconst symbolsInReferences = new Set();\n\t\t\t\t\t\t\tconst alreadyCheckedInnerScopes = new Set();\n\t\t\t\t\t\t\tfor (const ref of references) {\n\t\t\t\t\t\t\t\taddScopeSymbols2(\n\t\t\t\t\t\t\t\t\tref.from,\n\t\t\t\t\t\t\t\t\tsymbolsInReferences,\n\t\t\t\t\t\t\t\t\talreadyCheckedInnerScopes,\n\t\t\t\t\t\t\t\t\talreadyCheckedScopes\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst newName = this.findNewName(\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tallUsedNames,\n\t\t\t\t\t\t\t\tsymbolsInReferences,\n\t\t\t\t\t\t\t\tinfo.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tallUsedNames.add(newName);\n\t\t\t\t\t\t\tinfo.internalNames.set(name, newName);\n\t\t\t\t\t\t\tconst source = info.source;\n\t\t\t\t\t\t\tconst allIdentifiers = new Set(\n\t\t\t\t\t\t\t\treferences.map(r => r.identifier).concat(variable.identifiers)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tfor (const identifier of allIdentifiers) {\n\t\t\t\t\t\t\t\tconst r = identifier.range;\n\t\t\t\t\t\t\t\tconst path = getPathInAst(info.ast, identifier);\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tpath &&\n\t\t\t\t\t\t\t\t\tpath.length > 1 &&\n\t\t\t\t\t\t\t\t\tpath[1].type === \"Property\" &&\n\t\t\t\t\t\t\t\t\tpath[1].shorthand\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tsource.insert(r[1], `: ${newName}`);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsource.replace(r[0], r[1] - 1, newName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tallUsedNames.add(name);\n\t\t\t\t\t\t\tinfo.internalNames.set(name, name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"external\": {\n\t\t\t\t\tconst externalName = this.findNewName(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tallUsedNames,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tinfo.module.readableIdentifier(requestShortener)\n\t\t\t\t\t);\n\t\t\t\t\tallUsedNames.add(externalName);\n\t\t\t\t\tinfo.name = externalName;\n\t\t\t\t\tif (\n\t\t\t\t\t\tinfo.module.buildMeta.exportsType === \"named\" ||\n\t\t\t\t\t\t!info.module.buildMeta.exportsType\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst externalNameInterop = this.findNewName(\n\t\t\t\t\t\t\t\"namespaceObject\",\n\t\t\t\t\t\t\tallUsedNames,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tinfo.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tallUsedNames.add(externalNameInterop);\n\t\t\t\t\t\tinfo.interopNamespaceObjectName = externalNameInterop;\n\t\t\t\t\t}\n\t\t\t\t\tif (!info.module.buildMeta.exportsType) {\n\t\t\t\t\t\tconst externalNameInterop = this.findNewName(\n\t\t\t\t\t\t\t\"default\",\n\t\t\t\t\t\t\tallUsedNames,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tinfo.module.readableIdentifier(requestShortener)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tallUsedNames.add(externalNameInterop);\n\t\t\t\t\t\tinfo.interopDefaultAccessName = externalNameInterop;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Find and replace referenced to modules\n\t\tfor (const info of modulesWithInfo) {\n\t\t\tif (info.type === \"concatenated\") {\n\t\t\t\tfor (const reference of info.globalScope.through) {\n\t\t\t\t\tconst name = reference.identifier.name;\n\t\t\t\t\tconst match = /^__WEBPACK_MODULE_REFERENCE__(\\d+)_([\\da-f]+|ns)(_call)?(_strict)?__$/.exec(\n\t\t\t\t\t\tname\n\t\t\t\t\t);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tconst referencedModule = modulesWithInfo[+match[1]];\n\t\t\t\t\t\tlet exportName;\n\t\t\t\t\t\tif (match[2] === \"ns\") {\n\t\t\t\t\t\t\texportName = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst exportData = match[2];\n\t\t\t\t\t\t\texportName = Buffer.from(exportData, \"hex\").toString(\"utf-8\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst asCall = !!match[3];\n\t\t\t\t\t\tconst strictHarmonyModule = !!match[4];\n\t\t\t\t\t\tconst finalName = getFinalName(\n\t\t\t\t\t\t\treferencedModule,\n\t\t\t\t\t\t\texportName,\n\t\t\t\t\t\t\tmoduleToInfoMap,\n\t\t\t\t\t\t\trequestShortener,\n\t\t\t\t\t\t\tasCall,\n\t\t\t\t\t\t\tstrictHarmonyModule\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst r = reference.identifier.range;\n\t\t\t\t\t\tconst source = info.source;\n\t\t\t\t\t\tsource.replace(r[0], r[1] - 1, finalName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst result = new ConcatSource();\n\n\t\t// add harmony compatibility flag (must be first because of possible circular dependencies)\n\t\tconst usedExports = this.rootModule.usedExports;\n\t\tif (usedExports === true || usedExports === null) {\n\t\t\tresult.add(\n\t\t\t\truntimeTemplate.defineEsModuleFlagStatement({\n\t\t\t\t\texportsArgument: this.exportsArgument\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\t// define required namespace objects (must be before evaluation modules)\n\t\tfor (const info of modulesWithInfo) {\n\t\t\tif (info.namespaceObjectSource) {\n\t\t\t\tresult.add(info.namespaceObjectSource);\n\t\t\t}\n\t\t}\n\n\t\t// evaluate modules in order\n\t\tfor (const info of modulesWithInfo) {\n\t\t\tswitch (info.type) {\n\t\t\t\tcase \"concatenated\":\n\t\t\t\t\tresult.add(\n\t\t\t\t\t\t`\\n// CONCATENATED MODULE: ${info.module.readableIdentifier(\n\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t)}\\n`\n\t\t\t\t\t);\n\t\t\t\t\tresult.add(info.source);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"external\":\n\t\t\t\t\tresult.add(\n\t\t\t\t\t\t`\\n// EXTERNAL MODULE: ${info.module.readableIdentifier(\n\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t)}\\n`\n\t\t\t\t\t);\n\t\t\t\t\tresult.add(\n\t\t\t\t\t\t`var ${info.name} = __webpack_require__(${JSON.stringify(\n\t\t\t\t\t\t\tinfo.module.id\n\t\t\t\t\t\t)});\\n`\n\t\t\t\t\t);\n\t\t\t\t\tif (info.interopNamespaceObjectUsed) {\n\t\t\t\t\t\tif (info.module.buildMeta.exportsType === \"named\") {\n\t\t\t\t\t\t\tresult.add(\n\t\t\t\t\t\t\t\t`var ${info.interopNamespaceObjectName} = /*#__PURE__*/__webpack_require__.t(${info.name}, 2);\\n`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (!info.module.buildMeta.exportsType) {\n\t\t\t\t\t\t\tresult.add(\n\t\t\t\t\t\t\t\t`var ${info.interopNamespaceObjectName} = /*#__PURE__*/__webpack_require__.t(${info.name});\\n`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (info.interopDefaultAccessUsed) {\n\t\t\t\t\t\tresult.add(\n\t\t\t\t\t\t\t`var ${info.interopDefaultAccessName} = /*#__PURE__*/__webpack_require__.n(${info.name});\\n`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported concatenation entry type ${info.type}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tfindNewName(oldName, usedNamed1, usedNamed2, extraInfo) {\n\t\tlet name = oldName;\n\n\t\tif (name === \"__WEBPACK_MODULE_DEFAULT_EXPORT__\") name = \"\";\n\n\t\t// Remove uncool stuff\n\t\textraInfo = extraInfo.replace(\n\t\t\t/\\.+\\/|(\\/index)?\\.([a-zA-Z0-9]{1,4})($|\\s|\\?)|\\s*\\+\\s*\\d+\\s*modules/g,\n\t\t\t\"\"\n\t\t);\n\n\t\tconst splittedInfo = extraInfo.split(\"/\");\n\t\twhile (splittedInfo.length) {\n\t\t\tname = splittedInfo.pop() + (name ? \"_\" + name : \"\");\n\t\t\tconst nameIdent = Template.toIdentifier(name);\n\t\t\tif (\n\t\t\t\t!usedNamed1.has(nameIdent) &&\n\t\t\t\t(!usedNamed2 || !usedNamed2.has(nameIdent))\n\t\t\t)\n\t\t\t\treturn nameIdent;\n\t\t}\n\n\t\tlet i = 0;\n\t\tlet nameWithNumber = Template.toIdentifier(`${name}_${i}`);\n\t\twhile (\n\t\t\tusedNamed1.has(nameWithNumber) ||\n\t\t\t(usedNamed2 && usedNamed2.has(nameWithNumber))\n\t\t) {\n\t\t\ti++;\n\t\t\tnameWithNumber = Template.toIdentifier(`${name}_${i}`);\n\t\t}\n\t\treturn nameWithNumber;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\tfor (const info of this._orderedConcatenationList) {\n\t\t\tswitch (info.type) {\n\t\t\t\tcase \"concatenated\":\n\t\t\t\t\tinfo.module.updateHash(hash);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"external\":\n\t\t\t\t\thash.update(`${info.module.id}`);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsuper.updateHash(hash);\n\t}\n}\n\nclass HarmonyImportSpecifierDependencyConcatenatedTemplate {\n\tconstructor(originalTemplate, modulesMap) {\n\t\tthis.originalTemplate = originalTemplate;\n\t\tthis.modulesMap = modulesMap;\n\t}\n\n\tgetHarmonyInitOrder(dep) {\n\t\tconst module = dep._module;\n\t\tconst info = this.modulesMap.get(module);\n\t\tif (!info) {\n\t\t\treturn this.originalTemplate.getHarmonyInitOrder(dep);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\tharmonyInit(dep, source, runtimeTemplate, dependencyTemplates) {\n\t\tconst module = dep._module;\n\t\tconst info = this.modulesMap.get(module);\n\t\tif (!info) {\n\t\t\tthis.originalTemplate.harmonyInit(\n\t\t\t\tdep,\n\t\t\t\tsource,\n\t\t\t\truntimeTemplate,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tapply(dep, source, runtime, dependencyTemplates) {\n\t\tconst module = dep._module;\n\t\tconst info = this.modulesMap.get(module);\n\t\tif (!info) {\n\t\t\tthis.originalTemplate.apply(dep, source, runtime, dependencyTemplates);\n\t\t\treturn;\n\t\t}\n\t\tlet content;\n\t\tconst callFlag = dep.call ? \"_call\" : \"\";\n\t\tconst strictFlag = dep.originModule.buildMeta.strictHarmonyModule\n\t\t\t? \"_strict\"\n\t\t\t: \"\";\n\t\tif (dep._id === null) {\n\t\t\tcontent = `__WEBPACK_MODULE_REFERENCE__${info.index}_ns${strictFlag}__`;\n\t\t} else if (dep.namespaceObjectAsContext) {\n\t\t\tcontent = `__WEBPACK_MODULE_REFERENCE__${\n\t\t\t\tinfo.index\n\t\t\t}_ns${strictFlag}__[${JSON.stringify(dep._id)}]`;\n\t\t} else {\n\t\t\tconst exportData = Buffer.from(dep._id, \"utf-8\").toString(\"hex\");\n\t\t\tcontent = `__WEBPACK_MODULE_REFERENCE__${info.index}_${exportData}${callFlag}${strictFlag}__`;\n\t\t}\n\t\tif (dep.shorthand) {\n\t\t\tcontent = dep.name + \": \" + content;\n\t\t}\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n}\n\nclass HarmonyImportSideEffectDependencyConcatenatedTemplate {\n\tconstructor(originalTemplate, modulesMap) {\n\t\tthis.originalTemplate = originalTemplate;\n\t\tthis.modulesMap = modulesMap;\n\t}\n\n\tgetHarmonyInitOrder(dep) {\n\t\tconst module = dep._module;\n\t\tconst info = this.modulesMap.get(module);\n\t\tif (!info) {\n\t\t\treturn this.originalTemplate.getHarmonyInitOrder(dep);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\tharmonyInit(dep, source, runtime, dependencyTemplates) {\n\t\tconst module = dep._module;\n\t\tconst info = this.modulesMap.get(module);\n\t\tif (!info) {\n\t\t\tthis.originalTemplate.harmonyInit(\n\t\t\t\tdep,\n\t\t\t\tsource,\n\t\t\t\truntime,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tapply(dep, source, runtime, dependencyTemplates) {\n\t\tconst module = dep._module;\n\t\tconst info = this.modulesMap.get(module);\n\t\tif (!info) {\n\t\t\tthis.originalTemplate.apply(dep, source, runtime, dependencyTemplates);\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nclass HarmonyExportSpecifierDependencyConcatenatedTemplate {\n\tconstructor(originalTemplate, rootModule) {\n\t\tthis.originalTemplate = originalTemplate;\n\t\tthis.rootModule = rootModule;\n\t}\n\n\tgetHarmonyInitOrder(dep) {\n\t\tif (dep.originModule === this.rootModule) {\n\t\t\treturn this.originalTemplate.getHarmonyInitOrder(dep);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\tharmonyInit(dep, source, runtime, dependencyTemplates) {\n\t\tif (dep.originModule === this.rootModule) {\n\t\t\tthis.originalTemplate.harmonyInit(\n\t\t\t\tdep,\n\t\t\t\tsource,\n\t\t\t\truntime,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tapply(dep, source, runtime, dependencyTemplates) {\n\t\tif (dep.originModule === this.rootModule) {\n\t\t\tthis.originalTemplate.apply(dep, source, runtime, dependencyTemplates);\n\t\t}\n\t}\n}\n\nclass HarmonyExportExpressionDependencyConcatenatedTemplate {\n\tconstructor(originalTemplate, rootModule) {\n\t\tthis.originalTemplate = originalTemplate;\n\t\tthis.rootModule = rootModule;\n\t}\n\n\tapply(dep, source, runtime, dependencyTemplates) {\n\t\tlet content =\n\t\t\t\"/* harmony default export */ var __WEBPACK_MODULE_DEFAULT_EXPORT__ = \";\n\t\tif (dep.originModule === this.rootModule) {\n\t\t\tconst used = dep.originModule.isUsed(\"default\");\n\t\t\tconst exportsName = dep.originModule.exportsArgument;\n\t\t\tif (used) content += `${exportsName}[${JSON.stringify(used)}] = `;\n\t\t}\n\n\t\tif (dep.range) {\n\t\t\tsource.replace(\n\t\t\t\tdep.rangeStatement[0],\n\t\t\t\tdep.range[0] - 1,\n\t\t\t\tcontent + \"(\" + dep.prefix\n\t\t\t);\n\t\t\tsource.replace(dep.range[1], dep.rangeStatement[1] - 1, \");\");\n\t\t\treturn;\n\t\t}\n\n\t\tsource.replace(\n\t\t\tdep.rangeStatement[0],\n\t\t\tdep.rangeStatement[1] - 1,\n\t\t\tcontent + dep.prefix\n\t\t);\n\t}\n}\n\nclass HarmonyExportImportedSpecifierDependencyConcatenatedTemplate {\n\tconstructor(originalTemplate, rootModule, modulesMap) {\n\t\tthis.originalTemplate = originalTemplate;\n\t\tthis.rootModule = rootModule;\n\t\tthis.modulesMap = modulesMap;\n\t}\n\n\tgetExports(dep) {\n\t\tconst importModule = dep._module;\n\t\tif (dep._id) {\n\t\t\t// export { named } from \"module\"\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tname: dep.name,\n\t\t\t\t\tid: dep._id,\n\t\t\t\t\tmodule: importModule\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t\tif (dep.name) {\n\t\t\t// export * as abc from \"module\"\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tname: dep.name,\n\t\t\t\t\tid: true,\n\t\t\t\t\tmodule: importModule\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t\t// export * from \"module\"\n\t\treturn importModule.buildMeta.providedExports\n\t\t\t.filter(exp => exp !== \"default\" && !dep.activeExports.has(exp))\n\t\t\t.map(exp => {\n\t\t\t\treturn {\n\t\t\t\t\tname: exp,\n\t\t\t\t\tid: exp,\n\t\t\t\t\tmodule: importModule\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tgetHarmonyInitOrder(dep) {\n\t\tconst module = dep._module;\n\t\tconst info = this.modulesMap.get(module);\n\t\tif (!info) {\n\t\t\treturn this.originalTemplate.getHarmonyInitOrder(dep);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\tharmonyInit(dep, source, runtime, dependencyTemplates) {\n\t\tconst module = dep._module;\n\t\tconst info = this.modulesMap.get(module);\n\t\tif (!info) {\n\t\t\tthis.originalTemplate.harmonyInit(\n\t\t\t\tdep,\n\t\t\t\tsource,\n\t\t\t\truntime,\n\t\t\t\tdependencyTemplates\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tapply(dep, source, runtime, dependencyTemplates) {\n\t\tif (dep.originModule === this.rootModule) {\n\t\t\tif (this.modulesMap.get(dep._module)) {\n\t\t\t\tconst exportDefs = this.getExports(dep);\n\t\t\t\tfor (const def of exportDefs) {\n\t\t\t\t\tconst info = this.modulesMap.get(def.module);\n\t\t\t\t\tconst used = dep.originModule.isUsed(def.name);\n\t\t\t\t\tif (!used) {\n\t\t\t\t\t\tsource.insert(\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t`/* unused concated harmony import ${def.name} */\\n`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet finalName;\n\t\t\t\t\tconst strictFlag = dep.originModule.buildMeta.strictHarmonyModule\n\t\t\t\t\t\t? \"_strict\"\n\t\t\t\t\t\t: \"\";\n\t\t\t\t\tif (def.id === true) {\n\t\t\t\t\t\tfinalName = `__WEBPACK_MODULE_REFERENCE__${info.index}_ns${strictFlag}__`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst exportData = Buffer.from(def.id, \"utf-8\").toString(\"hex\");\n\t\t\t\t\t\tfinalName = `__WEBPACK_MODULE_REFERENCE__${info.index}_${exportData}${strictFlag}__`;\n\t\t\t\t\t}\n\t\t\t\t\tconst exportsName = this.rootModule.exportsArgument;\n\t\t\t\t\tconst content =\n\t\t\t\t\t\t`/* concated harmony reexport ${def.name} */` +\n\t\t\t\t\t\t`__webpack_require__.d(${exportsName}, ` +\n\t\t\t\t\t\t`${JSON.stringify(used)}, ` +\n\t\t\t\t\t\t`function() { return ${finalName}; });\\n`;\n\t\t\t\t\tsource.insert(-1, content);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.originalTemplate.apply(dep, source, runtime, dependencyTemplates);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass HarmonyCompatibilityDependencyConcatenatedTemplate {\n\tconstructor(originalTemplate, rootModule, modulesMap) {\n\t\tthis.originalTemplate = originalTemplate;\n\t\tthis.rootModule = rootModule;\n\t\tthis.modulesMap = modulesMap;\n\t}\n\n\tapply(dep, source, runtime, dependencyTemplates) {\n\t\t// do nothing\n\t}\n}\n\nmodule.exports = ConcatenatedModule;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst GraphHelpers = require(\"../GraphHelpers\");\n\nclass EnsureChunkConditionsPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst handler = chunks => {\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tif (!module.chunkCondition) continue;\n\t\t\t\t\t\tconst sourceChunks = new Set();\n\t\t\t\t\t\tconst chunkGroups = new Set();\n\t\t\t\t\t\tfor (const chunk of module.chunksIterable) {\n\t\t\t\t\t\t\tif (!module.chunkCondition(chunk)) {\n\t\t\t\t\t\t\t\tsourceChunks.add(chunk);\n\t\t\t\t\t\t\t\tfor (const group of chunk.groupsIterable) {\n\t\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sourceChunks.size === 0) continue;\n\t\t\t\t\t\tconst targetChunks = new Set();\n\t\t\t\t\t\tchunkGroupLoop: for (const chunkGroup of chunkGroups) {\n\t\t\t\t\t\t\t// Can module be placed in a chunk of this group?\n\t\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\t\tif (module.chunkCondition(chunk)) {\n\t\t\t\t\t\t\t\t\ttargetChunks.add(chunk);\n\t\t\t\t\t\t\t\t\tcontinue chunkGroupLoop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// We reached the entrypoint: fail\n\t\t\t\t\t\t\tif (chunkGroup.isInitial()) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"Cannot fullfil chunk condition of \" + module.identifier()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Try placing in all parents\n\t\t\t\t\t\t\tfor (const group of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const sourceChunk of sourceChunks) {\n\t\t\t\t\t\t\tGraphHelpers.disconnectChunkAndModule(sourceChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const targetChunk of targetChunks) {\n\t\t\t\t\t\t\tGraphHelpers.connectChunkAndModule(targetChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (changed) return true;\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.optimizeChunksBasic.tap(\n\t\t\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\t\t\thandler\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.optimizeExtractedChunksBasic.tap(\n\t\t\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\t\t\thandler\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = EnsureChunkConditionsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass FlagIncludedChunksPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"FlagIncludedChunksPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunkIds.tap(\n\t\t\t\t\"FlagIncludedChunksPlugin\",\n\t\t\t\tchunks => {\n\t\t\t\t\t// prepare two bit integers for each module\n\t\t\t\t\t// 2^31 is the max number represented as SMI in v8\n\t\t\t\t\t// we want the bits distributed this way:\n\t\t\t\t\t// the bit 2^31 is pretty rar and only one module should get it\n\t\t\t\t\t// so it has a probability of 1 / modulesCount\n\t\t\t\t\t// the first bit (2^0) is the easiest and every module could get it\n\t\t\t\t\t// if it doesn't get a better bit\n\t\t\t\t\t// from bit 2^n to 2^(n+1) there is a probability of p\n\t\t\t\t\t// so 1 / modulesCount == p^31\n\t\t\t\t\t// <=> p = sqrt31(1 / modulesCount)\n\t\t\t\t\t// so we use a modulo of 1 / sqrt31(1 / modulesCount)\n\t\t\t\t\tconst moduleBits = new WeakMap();\n\t\t\t\t\tconst modulesCount = compilation.modules.length;\n\n\t\t\t\t\t// precalculate the modulo values for each bit\n\t\t\t\t\tconst modulo = 1 / Math.pow(1 / modulesCount, 1 / 31);\n\t\t\t\t\tconst modulos = Array.from(\n\t\t\t\t\t\t{ length: 31 },\n\t\t\t\t\t\t(x, i) => Math.pow(modulo, i) | 0\n\t\t\t\t\t);\n\n\t\t\t\t\t// iterate all modules to generate bit values\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tlet bit = 30;\n\t\t\t\t\t\twhile (i % modulos[bit] !== 0) {\n\t\t\t\t\t\t\tbit--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmoduleBits.set(module, 1 << bit);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\n\t\t\t\t\t// interate all chunks to generate bitmaps\n\t\t\t\t\tconst chunkModulesHash = new WeakMap();\n\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\tlet hash = 0;\n\t\t\t\t\t\tfor (const module of chunk.modulesIterable) {\n\t\t\t\t\t\t\thash |= moduleBits.get(module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchunkModulesHash.set(chunk, hash);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const chunkA of chunks) {\n\t\t\t\t\t\tconst chunkAHash = chunkModulesHash.get(chunkA);\n\t\t\t\t\t\tconst chunkAModulesCount = chunkA.getNumberOfModules();\n\t\t\t\t\t\tif (chunkAModulesCount === 0) continue;\n\t\t\t\t\t\tlet bestModule = undefined;\n\t\t\t\t\t\tfor (const module of chunkA.modulesIterable) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tbestModule === undefined ||\n\t\t\t\t\t\t\t\tbestModule.getNumberOfChunks() > module.getNumberOfChunks()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tbestModule = module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tloopB: for (const chunkB of bestModule.chunksIterable) {\n\t\t\t\t\t\t\t// as we iterate the same iterables twice\n\t\t\t\t\t\t\t// skip if we find ourselves\n\t\t\t\t\t\t\tif (chunkA === chunkB) continue;\n\n\t\t\t\t\t\t\tconst chunkBModulesCount = chunkB.getNumberOfModules();\n\n\t\t\t\t\t\t\t// ids for empty chunks are not included\n\t\t\t\t\t\t\tif (chunkBModulesCount === 0) continue;\n\n\t\t\t\t\t\t\t// instead of swapping A and B just bail\n\t\t\t\t\t\t\t// as we loop twice the current A will be B and B then A\n\t\t\t\t\t\t\tif (chunkAModulesCount > chunkBModulesCount) continue;\n\n\t\t\t\t\t\t\t// is chunkA in chunkB?\n\n\t\t\t\t\t\t\t// we do a cheap check for the hash value\n\t\t\t\t\t\t\tconst chunkBHash = chunkModulesHash.get(chunkB);\n\t\t\t\t\t\t\tif ((chunkBHash & chunkAHash) !== chunkAHash) continue;\n\n\t\t\t\t\t\t\t// compare all modules\n\t\t\t\t\t\t\tfor (const m of chunkA.modulesIterable) {\n\t\t\t\t\t\t\t\tif (!chunkB.containsModule(m)) continue loopB;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunkB.ids.push(chunkA.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = FlagIncludedChunksPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/LimitChunkCountPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/LimitChunkCountPlugin\").LimitChunkCountPluginOptions} LimitChunkCountPluginOptions */\n\nclass LimitChunkCountPlugin {\n\t/**\n\t * @param {LimitChunkCountPluginOptions=} options options object\n\t */\n\tconstructor(options) {\n\t\tif (!options) options = {};\n\n\t\tvalidateOptions(schema, options, \"Limit Chunk Count Plugin\");\n\t\tthis.options = options;\n\t}\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"LimitChunkCountPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\"LimitChunkCountPlugin\",\n\t\t\t\tchunks => {\n\t\t\t\t\tconst maxChunks = options.maxChunks;\n\t\t\t\t\tif (!maxChunks) return;\n\t\t\t\t\tif (maxChunks < 1) return;\n\t\t\t\t\tif (chunks.length <= maxChunks) return;\n\n\t\t\t\t\tconst orderedChunks = chunks.slice().sort((a, b) => a.compareTo(b));\n\n\t\t\t\t\tconst sortedExtendedPairCombinations = orderedChunks\n\t\t\t\t\t\t.reduce((combinations, a, idx) => {\n\t\t\t\t\t\t\t// create combination pairs\n\t\t\t\t\t\t\tfor (let i = 0; i < idx; i++) {\n\t\t\t\t\t\t\t\tconst b = orderedChunks[i];\n\t\t\t\t\t\t\t\tcombinations.push([b, a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn combinations;\n\t\t\t\t\t\t}, [])\n\t\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\t\t// extend combination pairs with size and integrated size\n\t\t\t\t\t\t\tconst a = pair[0].size(options);\n\t\t\t\t\t\t\tconst b = pair[1].size(options);\n\t\t\t\t\t\t\tconst ab = pair[0].integratedSize(pair[1], options);\n\t\t\t\t\t\t\treturn [a + b - ab, ab, pair[0], pair[1], a, b];\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(extendedPair => {\n\t\t\t\t\t\t\t// filter pairs that do not have an integratedSize\n\t\t\t\t\t\t\t// meaning they can NOT be integrated!\n\t\t\t\t\t\t\treturn extendedPair[1] !== false;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\t// sadly javascript does an inplace sort here\n\t\t\t\t\t\t\t// sort them by size\n\t\t\t\t\t\t\tconst diff1 = b[0] - a[0];\n\t\t\t\t\t\t\tif (diff1 !== 0) return diff1;\n\t\t\t\t\t\t\tconst diff2 = a[1] - b[1];\n\t\t\t\t\t\t\tif (diff2 !== 0) return diff2;\n\t\t\t\t\t\t\tconst diff3 = a[2].compareTo(b[2]);\n\t\t\t\t\t\t\tif (diff3 !== 0) return diff3;\n\t\t\t\t\t\t\treturn a[3].compareTo(b[3]);\n\t\t\t\t\t\t});\n\n\t\t\t\t\tconst pair = sortedExtendedPairCombinations[0];\n\n\t\t\t\t\tif (pair && pair[2].integrate(pair[3], \"limit\")) {\n\t\t\t\t\t\tchunks.splice(chunks.indexOf(pair[3]), 1);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = LimitChunkCountPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass MergeDuplicateChunksPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"MergeDuplicateChunksPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeChunksBasic.tap(\n\t\t\t\t\t\"MergeDuplicateChunksPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\t// remember already tested chunks for performance\n\t\t\t\t\t\tconst notDuplicates = new Set();\n\n\t\t\t\t\t\t// for each chunk\n\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t// track a Set of all chunk that could be duplicates\n\t\t\t\t\t\t\tlet possibleDuplicates;\n\t\t\t\t\t\t\tfor (const module of chunk.modulesIterable) {\n\t\t\t\t\t\t\t\tif (possibleDuplicates === undefined) {\n\t\t\t\t\t\t\t\t\t// when possibleDuplicates is not yet set,\n\t\t\t\t\t\t\t\t\t// create a new Set from chunks of the current module\n\t\t\t\t\t\t\t\t\t// including only chunks with the same number of modules\n\t\t\t\t\t\t\t\t\tfor (const dup of module.chunksIterable) {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tdup !== chunk &&\n\t\t\t\t\t\t\t\t\t\t\tchunk.getNumberOfModules() === dup.getNumberOfModules() &&\n\t\t\t\t\t\t\t\t\t\t\t!notDuplicates.has(dup)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t// delay allocating the new Set until here, reduce memory pressure\n\t\t\t\t\t\t\t\t\t\t\tif (possibleDuplicates === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\tpossibleDuplicates = new Set();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tpossibleDuplicates.add(dup);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// when no chunk is possible we can break here\n\t\t\t\t\t\t\t\t\tif (possibleDuplicates === undefined) break;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// validate existing possible duplicates\n\t\t\t\t\t\t\t\t\tfor (const dup of possibleDuplicates) {\n\t\t\t\t\t\t\t\t\t\t// remove possible duplicate when module is not contained\n\t\t\t\t\t\t\t\t\t\tif (!dup.containsModule(module)) {\n\t\t\t\t\t\t\t\t\t\t\tpossibleDuplicates.delete(dup);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// when all chunks has been removed we can break here\n\t\t\t\t\t\t\t\t\tif (possibleDuplicates.size === 0) break;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// when we found duplicates\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tpossibleDuplicates !== undefined &&\n\t\t\t\t\t\t\t\tpossibleDuplicates.size > 0\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tfor (const otherChunk of possibleDuplicates) {\n\t\t\t\t\t\t\t\t\tif (otherChunk.hasRuntime() !== chunk.hasRuntime()) continue;\n\t\t\t\t\t\t\t\t\t// merge them\n\t\t\t\t\t\t\t\t\tif (chunk.integrate(otherChunk, \"duplicate\")) {\n\t\t\t\t\t\t\t\t\t\tchunks.splice(chunks.indexOf(otherChunk), 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// don't check already processed chunks twice\n\t\t\t\t\t\t\tnotDuplicates.add(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = MergeDuplicateChunksPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/MinChunkSizePlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/MinChunkSizePlugin\").MinChunkSizePluginOptions} MinChunkSizePluginOptions */\n\nclass MinChunkSizePlugin {\n\t/**\n\t * @param {MinChunkSizePluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidateOptions(schema, options, \"Min Chunk Size Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst minChunkSize = options.minChunkSize;\n\t\tcompiler.hooks.compilation.tap(\"MinChunkSizePlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\"MinChunkSizePlugin\",\n\t\t\t\tchunks => {\n\t\t\t\t\tconst equalOptions = {\n\t\t\t\t\t\tchunkOverhead: 1,\n\t\t\t\t\t\tentryChunkMultiplicator: 1\n\t\t\t\t\t};\n\n\t\t\t\t\tconst sortedSizeFilteredExtendedPairCombinations = chunks\n\t\t\t\t\t\t.reduce((combinations, a, idx) => {\n\t\t\t\t\t\t\t// create combination pairs\n\t\t\t\t\t\t\tfor (let i = 0; i < idx; i++) {\n\t\t\t\t\t\t\t\tconst b = chunks[i];\n\t\t\t\t\t\t\t\tcombinations.push([b, a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn combinations;\n\t\t\t\t\t\t}, [])\n\t\t\t\t\t\t.filter(pair => {\n\t\t\t\t\t\t\t// check if one of the chunks sizes is smaller than the minChunkSize\n\t\t\t\t\t\t\tconst p0SmallerThanMinChunkSize =\n\t\t\t\t\t\t\t\tpair[0].size(equalOptions) < minChunkSize;\n\t\t\t\t\t\t\tconst p1SmallerThanMinChunkSize =\n\t\t\t\t\t\t\t\tpair[1].size(equalOptions) < minChunkSize;\n\t\t\t\t\t\t\treturn p0SmallerThanMinChunkSize || p1SmallerThanMinChunkSize;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\t\t// extend combination pairs with size and integrated size\n\t\t\t\t\t\t\tconst a = pair[0].size(options);\n\t\t\t\t\t\t\tconst b = pair[1].size(options);\n\t\t\t\t\t\t\tconst ab = pair[0].integratedSize(pair[1], options);\n\t\t\t\t\t\t\treturn [a + b - ab, ab, pair[0], pair[1]];\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(pair => {\n\t\t\t\t\t\t\t// filter pairs that do not have an integratedSize\n\t\t\t\t\t\t\t// meaning they can NOT be integrated!\n\t\t\t\t\t\t\treturn pair[1] !== false;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\t// sadly javascript does an inplace sort here\n\t\t\t\t\t\t\t// sort by size\n\t\t\t\t\t\t\tconst diff = b[0] - a[0];\n\t\t\t\t\t\t\tif (diff !== 0) return diff;\n\t\t\t\t\t\t\treturn a[1] - b[1];\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (sortedSizeFilteredExtendedPairCombinations.length === 0) return;\n\n\t\t\t\t\tconst pair = sortedSizeFilteredExtendedPairCombinations[0];\n\n\t\t\t\t\tpair[2].integrate(pair[3], \"min-size\");\n\t\t\t\t\tchunks.splice(chunks.indexOf(pair[3]), 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = MinChunkSizePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\nconst SizeFormatHelpers = require(\"../SizeFormatHelpers\");\n\nclass MinMaxSizeWarning extends WebpackError {\n\tconstructor(keys, minSize, maxSize) {\n\t\tlet keysMessage = \"Fallback cache group\";\n\t\tif (keys) {\n\t\t\tkeysMessage =\n\t\t\t\tkeys.length > 1\n\t\t\t\t\t? `Cache groups ${keys.sort().join(\", \")}`\n\t\t\t\t\t: `Cache group ${keys[0]}`;\n\t\t}\n\t\tsuper(\n\t\t\t`SplitChunksPlugin\\n` +\n\t\t\t\t`${keysMessage}\\n` +\n\t\t\t\t`Configured minSize (${SizeFormatHelpers.formatSize(minSize)}) is ` +\n\t\t\t\t`bigger than maxSize (${SizeFormatHelpers.formatSize(maxSize)}).\\n` +\n\t\t\t\t\"This seem to be a invalid optimiziation.splitChunks configuration.\"\n\t\t);\n\t}\n}\n\nmodule.exports = MinMaxSizeWarning;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyImportDependency = require(\"../dependencies/HarmonyImportDependency\");\nconst ModuleHotAcceptDependency = require(\"../dependencies/ModuleHotAcceptDependency\");\nconst ModuleHotDeclineDependency = require(\"../dependencies/ModuleHotDeclineDependency\");\nconst ConcatenatedModule = require(\"./ConcatenatedModule\");\nconst HarmonyCompatibilityDependency = require(\"../dependencies/HarmonyCompatibilityDependency\");\nconst StackedSetMap = require(\"../util/StackedSetMap\");\n\nconst formatBailoutReason = msg => {\n\treturn \"ModuleConcatenation bailout: \" + msg;\n};\n\nclass ModuleConcatenationPlugin {\n\tconstructor(options) {\n\t\tif (typeof options !== \"object\") options = {};\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ModuleConcatenationPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tparser.hooks.call.for(\"eval\").tap(\"ModuleConcatenationPlugin\", () => {\n\t\t\t\t\t\t// Because of variable renaming we can't use modules with eval.\n\t\t\t\t\t\tparser.state.module.buildMeta.moduleConcatenationBailout = \"eval()\";\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\n\t\t\t\tconst bailoutReasonMap = new Map();\n\n\t\t\t\tconst setBailoutReason = (module, reason) => {\n\t\t\t\t\tbailoutReasonMap.set(module, reason);\n\t\t\t\t\tmodule.optimizationBailout.push(\n\t\t\t\t\t\ttypeof reason === \"function\"\n\t\t\t\t\t\t\t? rs => formatBailoutReason(reason(rs))\n\t\t\t\t\t\t\t: formatBailoutReason(reason)\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst getBailoutReason = (module, requestShortener) => {\n\t\t\t\t\tconst reason = bailoutReasonMap.get(module);\n\t\t\t\t\tif (typeof reason === \"function\") return reason(requestShortener);\n\t\t\t\t\treturn reason;\n\t\t\t\t};\n\n\t\t\t\tcompilation.hooks.optimizeChunkModules.tap(\n\t\t\t\t\t\"ModuleConcatenationPlugin\",\n\t\t\t\t\t(allChunks, modules) => {\n\t\t\t\t\t\tconst relevantModules = [];\n\t\t\t\t\t\tconst possibleInners = new Set();\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t// Only harmony modules are valid for optimization\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!module.buildMeta ||\n\t\t\t\t\t\t\t\tmodule.buildMeta.exportsType !== \"namespace\" ||\n\t\t\t\t\t\t\t\t!module.dependencies.some(\n\t\t\t\t\t\t\t\t\td => d instanceof HarmonyCompatibilityDependency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is not an ECMAScript module\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Some expressions are not compatible with module concatenation\n\t\t\t\t\t\t\t// because they may produce unexpected results. The plugin bails out\n\t\t\t\t\t\t\t// if some were detected upfront.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodule.buildMeta &&\n\t\t\t\t\t\t\t\tmodule.buildMeta.moduleConcatenationBailout\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t`Module uses ${module.buildMeta.moduleConcatenationBailout}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Exports must be known (and not dynamic)\n\t\t\t\t\t\t\tif (!Array.isArray(module.buildMeta.providedExports)) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module exports are unknown\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Using dependency variables is not possible as this wraps the code in a function\n\t\t\t\t\t\t\tif (module.variables.length > 0) {\n\t\t\t\t\t\t\t\tsetBailoutReason(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t`Module uses injected variables (${module.variables\n\t\t\t\t\t\t\t\t\t\t.map(v => v.name)\n\t\t\t\t\t\t\t\t\t\t.join(\", \")})`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Hot Module Replacement need it's own module to work correctly\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodule.dependencies.some(\n\t\t\t\t\t\t\t\t\tdep =>\n\t\t\t\t\t\t\t\t\t\tdep instanceof ModuleHotAcceptDependency ||\n\t\t\t\t\t\t\t\t\t\tdep instanceof ModuleHotDeclineDependency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module uses Hot Module Replacement\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trelevantModules.push(module);\n\n\t\t\t\t\t\t\t// Module must not be the entry points\n\t\t\t\t\t\t\tif (module.isEntryModule()) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is an entry point\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Module must be in any chunk (we don't want to do useless work)\n\t\t\t\t\t\t\tif (module.getNumberOfChunks() === 0) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is not in any chunk\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Module must only be used by Harmony Imports\n\t\t\t\t\t\t\tconst nonHarmonyReasons = module.reasons.filter(\n\t\t\t\t\t\t\t\treason =>\n\t\t\t\t\t\t\t\t\t!reason.dependency ||\n\t\t\t\t\t\t\t\t\t!(reason.dependency instanceof HarmonyImportDependency)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (nonHarmonyReasons.length > 0) {\n\t\t\t\t\t\t\t\tconst importingModules = new Set(\n\t\t\t\t\t\t\t\t\tnonHarmonyReasons.map(r => r.module).filter(Boolean)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst importingExplanations = new Set(\n\t\t\t\t\t\t\t\t\tnonHarmonyReasons.map(r => r.explanation).filter(Boolean)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst importingModuleTypes = new Map(\n\t\t\t\t\t\t\t\t\tArray.from(importingModules).map(\n\t\t\t\t\t\t\t\t\t\tm => /** @type {[string, Set]} */ ([\n\t\t\t\t\t\t\t\t\t\t\tm,\n\t\t\t\t\t\t\t\t\t\t\tnew Set(\n\t\t\t\t\t\t\t\t\t\t\t\tnonHarmonyReasons\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(r => r.module === m)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map(r => r.dependency.type)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort()\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetBailoutReason(module, requestShortener => {\n\t\t\t\t\t\t\t\t\tconst names = Array.from(importingModules)\n\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\tm =>\n\t\t\t\t\t\t\t\t\t\t\t\t`${m.readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t\t)} (referenced with ${Array.from(\n\t\t\t\t\t\t\t\t\t\t\t\t\timportingModuleTypes.get(m)\n\t\t\t\t\t\t\t\t\t\t\t\t).join(\", \")})`\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t.sort();\n\t\t\t\t\t\t\t\t\tconst explanations = Array.from(importingExplanations).sort();\n\t\t\t\t\t\t\t\t\tif (names.length > 0 && explanations.length === 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced from these modules with unsupported syntax: ${names.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t\t\t} else if (names.length === 0 && explanations.length > 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced by: ${explanations.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t\t\t} else if (names.length > 0 && explanations.length > 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced from these modules with unsupported syntax: ${names.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)} and by: ${explanations.join(\", \")}`;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn \"Module is referenced in a unsupported way\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpossibleInners.add(module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// sort by depth\n\t\t\t\t\t\t// modules with lower depth are more likely suited as roots\n\t\t\t\t\t\t// this improves performance, because modules already selected as inner are skipped\n\t\t\t\t\t\trelevantModules.sort((a, b) => {\n\t\t\t\t\t\t\treturn a.depth - b.depth;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst concatConfigurations = [];\n\t\t\t\t\t\tconst usedAsInner = new Set();\n\t\t\t\t\t\tfor (const currentRoot of relevantModules) {\n\t\t\t\t\t\t\t// when used by another configuration as inner:\n\t\t\t\t\t\t\t// the other configuration is better and we can skip this one\n\t\t\t\t\t\t\tif (usedAsInner.has(currentRoot)) continue;\n\n\t\t\t\t\t\t\t// create a configuration with the root\n\t\t\t\t\t\t\tconst currentConfiguration = new ConcatConfiguration(currentRoot);\n\n\t\t\t\t\t\t\t// cache failures to add modules\n\t\t\t\t\t\t\tconst failureCache = new Map();\n\n\t\t\t\t\t\t\t// try to add all imports\n\t\t\t\t\t\t\tfor (const imp of this._getImports(compilation, currentRoot)) {\n\t\t\t\t\t\t\t\tconst problem = this._tryToAdd(\n\t\t\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\t\t\tcurrentConfiguration,\n\t\t\t\t\t\t\t\t\timp,\n\t\t\t\t\t\t\t\t\tpossibleInners,\n\t\t\t\t\t\t\t\t\tfailureCache\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (problem) {\n\t\t\t\t\t\t\t\t\tfailureCache.set(imp, problem);\n\t\t\t\t\t\t\t\t\tcurrentConfiguration.addWarning(imp, problem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!currentConfiguration.isEmpty()) {\n\t\t\t\t\t\t\t\tconcatConfigurations.push(currentConfiguration);\n\t\t\t\t\t\t\t\tfor (const module of currentConfiguration.getModules()) {\n\t\t\t\t\t\t\t\t\tif (module !== currentConfiguration.rootModule) {\n\t\t\t\t\t\t\t\t\t\tusedAsInner.add(module);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// HACK: Sort configurations by length and start with the longest one\n\t\t\t\t\t\t// to get the biggers groups possible. Used modules are marked with usedModules\n\t\t\t\t\t\t// TODO: Allow to reuse existing configuration while trying to add dependencies.\n\t\t\t\t\t\t// This would improve performance. O(n^2) -> O(n)\n\t\t\t\t\t\tconcatConfigurations.sort((a, b) => {\n\t\t\t\t\t\t\treturn b.modules.size - a.modules.size;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst usedModules = new Set();\n\t\t\t\t\t\tfor (const concatConfiguration of concatConfigurations) {\n\t\t\t\t\t\t\tif (usedModules.has(concatConfiguration.rootModule)) continue;\n\t\t\t\t\t\t\tconst modules = concatConfiguration.getModules();\n\t\t\t\t\t\t\tconst rootModule = concatConfiguration.rootModule;\n\t\t\t\t\t\t\tconst newModule = new ConcatenatedModule(\n\t\t\t\t\t\t\t\trootModule,\n\t\t\t\t\t\t\t\tArray.from(modules),\n\t\t\t\t\t\t\t\tConcatenatedModule.createConcatenationList(\n\t\t\t\t\t\t\t\t\trootModule,\n\t\t\t\t\t\t\t\t\tmodules,\n\t\t\t\t\t\t\t\t\tcompilation\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tfor (const warning of concatConfiguration.getWarningsSorted()) {\n\t\t\t\t\t\t\t\tnewModule.optimizationBailout.push(requestShortener => {\n\t\t\t\t\t\t\t\t\tconst reason = getBailoutReason(warning[0], requestShortener);\n\t\t\t\t\t\t\t\t\tconst reasonWithPrefix = reason ? ` (<- ${reason})` : \"\";\n\t\t\t\t\t\t\t\t\tif (warning[0] === warning[1]) {\n\t\t\t\t\t\t\t\t\t\treturn formatBailoutReason(\n\t\t\t\t\t\t\t\t\t\t\t`Cannot concat with ${warning[0].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)}${reasonWithPrefix}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn formatBailoutReason(\n\t\t\t\t\t\t\t\t\t\t\t`Cannot concat with ${warning[0].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)} because of ${warning[1].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)}${reasonWithPrefix}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst chunks = concatConfiguration.rootModule.getChunks();\n\t\t\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\t\t\tusedModules.add(m);\n\t\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\t\tchunk.removeModule(m);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\tchunk.addModule(newModule);\n\t\t\t\t\t\t\t\tnewModule.addChunk(chunk);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const chunk of allChunks) {\n\t\t\t\t\t\t\t\tif (chunk.entryModule === concatConfiguration.rootModule) {\n\t\t\t\t\t\t\t\t\tchunk.entryModule = newModule;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcompilation.modules.push(newModule);\n\t\t\t\t\t\t\tfor (const reason of newModule.reasons) {\n\t\t\t\t\t\t\t\tif (reason.dependency.module === concatConfiguration.rootModule)\n\t\t\t\t\t\t\t\t\treason.dependency.module = newModule;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\treason.dependency.redirectedModule ===\n\t\t\t\t\t\t\t\t\tconcatConfiguration.rootModule\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\treason.dependency.redirectedModule = newModule;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// TODO: remove when LTS node version contains fixed v8 version\n\t\t\t\t\t\t\t// @see https://github.com/webpack/webpack/pull/6613\n\t\t\t\t\t\t\t// Turbofan does not correctly inline for-of loops with polymorphic input arrays.\n\t\t\t\t\t\t\t// Work around issue by using a standard for loop and assigning dep.module.reasons\n\t\t\t\t\t\t\tfor (let i = 0; i < newModule.dependencies.length; i++) {\n\t\t\t\t\t\t\t\tlet dep = newModule.dependencies[i];\n\t\t\t\t\t\t\t\tif (dep.module) {\n\t\t\t\t\t\t\t\t\tlet reasons = dep.module.reasons;\n\t\t\t\t\t\t\t\t\tfor (let j = 0; j < reasons.length; j++) {\n\t\t\t\t\t\t\t\t\t\tlet reason = reasons[j];\n\t\t\t\t\t\t\t\t\t\tif (reason.dependency === dep) {\n\t\t\t\t\t\t\t\t\t\t\treason.module = newModule;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcompilation.modules = compilation.modules.filter(\n\t\t\t\t\t\t\tm => !usedModules.has(m)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\t_getImports(compilation, module) {\n\t\treturn new Set(\n\t\t\tmodule.dependencies\n\n\t\t\t\t// Get reference info only for harmony Dependencies\n\t\t\t\t.map(dep => {\n\t\t\t\t\tif (!(dep instanceof HarmonyImportDependency)) return null;\n\t\t\t\t\tif (!compilation) return dep.getReference();\n\t\t\t\t\treturn compilation.getDependencyReference(module, dep);\n\t\t\t\t})\n\n\t\t\t\t// Reference is valid and has a module\n\t\t\t\t// Dependencies are simple enough to concat them\n\t\t\t\t.filter(\n\t\t\t\t\tref =>\n\t\t\t\t\t\tref &&\n\t\t\t\t\t\tref.module &&\n\t\t\t\t\t\t(Array.isArray(ref.importedNames) ||\n\t\t\t\t\t\t\tArray.isArray(ref.module.buildMeta.providedExports))\n\t\t\t\t)\n\n\t\t\t\t// Take the imported module\n\t\t\t\t.map(ref => ref.module)\n\t\t);\n\t}\n\n\t_tryToAdd(compilation, config, module, possibleModules, failureCache) {\n\t\tconst cacheEntry = failureCache.get(module);\n\t\tif (cacheEntry) {\n\t\t\treturn cacheEntry;\n\t\t}\n\n\t\t// Already added?\n\t\tif (config.has(module)) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Not possible to add?\n\t\tif (!possibleModules.has(module)) {\n\t\t\tfailureCache.set(module, module); // cache failures for performance\n\t\t\treturn module;\n\t\t}\n\n\t\t// module must be in the same chunks\n\t\tif (!config.rootModule.hasEqualsChunks(module)) {\n\t\t\tfailureCache.set(module, module); // cache failures for performance\n\t\t\treturn module;\n\t\t}\n\n\t\t// Clone config to make experimental changes\n\t\tconst testConfig = config.clone();\n\n\t\t// Add the module\n\t\ttestConfig.add(module);\n\n\t\t// Every module which depends on the added module must be in the configuration too.\n\t\tfor (const reason of module.reasons) {\n\t\t\t// Modules that are not used can be ignored\n\t\t\tif (\n\t\t\t\treason.module.factoryMeta.sideEffectFree &&\n\t\t\t\treason.module.used === false\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tconst problem = this._tryToAdd(\n\t\t\t\tcompilation,\n\t\t\t\ttestConfig,\n\t\t\t\treason.module,\n\t\t\t\tpossibleModules,\n\t\t\t\tfailureCache\n\t\t\t);\n\t\t\tif (problem) {\n\t\t\t\tfailureCache.set(module, problem); // cache failures for performance\n\t\t\t\treturn problem;\n\t\t\t}\n\t\t}\n\n\t\t// Commit experimental changes\n\t\tconfig.set(testConfig);\n\n\t\t// Eagerly try to add imports too if possible\n\t\tfor (const imp of this._getImports(compilation, module)) {\n\t\t\tconst problem = this._tryToAdd(\n\t\t\t\tcompilation,\n\t\t\t\tconfig,\n\t\t\t\timp,\n\t\t\t\tpossibleModules,\n\t\t\t\tfailureCache\n\t\t\t);\n\t\t\tif (problem) {\n\t\t\t\tconfig.addWarning(imp, problem);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass ConcatConfiguration {\n\tconstructor(rootModule, cloneFrom) {\n\t\tthis.rootModule = rootModule;\n\t\tif (cloneFrom) {\n\t\t\tthis.modules = cloneFrom.modules.createChild(5);\n\t\t\tthis.warnings = cloneFrom.warnings.createChild(5);\n\t\t} else {\n\t\t\tthis.modules = new StackedSetMap();\n\t\t\tthis.modules.add(rootModule);\n\t\t\tthis.warnings = new StackedSetMap();\n\t\t}\n\t}\n\n\tadd(module) {\n\t\tthis.modules.add(module);\n\t}\n\n\thas(module) {\n\t\treturn this.modules.has(module);\n\t}\n\n\tisEmpty() {\n\t\treturn this.modules.size === 1;\n\t}\n\n\taddWarning(module, problem) {\n\t\tthis.warnings.set(module, problem);\n\t}\n\n\tgetWarningsSorted() {\n\t\treturn new Map(\n\t\t\tthis.warnings.asPairArray().sort((a, b) => {\n\t\t\t\tconst ai = a[0].identifier();\n\t\t\t\tconst bi = b[0].identifier();\n\t\t\t\tif (ai < bi) return -1;\n\t\t\t\tif (ai > bi) return 1;\n\t\t\t\treturn 0;\n\t\t\t})\n\t\t);\n\t}\n\n\tgetModules() {\n\t\treturn this.modules.asSet();\n\t}\n\n\tclone() {\n\t\treturn new ConcatConfiguration(this.rootModule, this);\n\t}\n\n\tset(config) {\n\t\tthis.rootModule = config.rootModule;\n\t\tthis.modules = config.modules;\n\t\tthis.warnings = config.warnings;\n\t}\n}\n\nmodule.exports = ModuleConcatenationPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass NaturalChunkOrderPlugin {\n\t/**\n\t * @param {Compiler} compiler webpack compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NaturalChunkOrderPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunkOrder.tap(\n\t\t\t\t\"NaturalChunkOrderPlugin\",\n\t\t\t\tchunks => {\n\t\t\t\t\tchunks.sort((chunkA, chunkB) => {\n\t\t\t\t\t\tconst a = chunkA.modulesIterable[Symbol.iterator]();\n\t\t\t\t\t\tconst b = chunkB.modulesIterable[Symbol.iterator]();\n\t\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tconst aItem = a.next();\n\t\t\t\t\t\t\tconst bItem = b.next();\n\t\t\t\t\t\t\tif (aItem.done && bItem.done) return 0;\n\t\t\t\t\t\t\tif (aItem.done) return -1;\n\t\t\t\t\t\t\tif (bItem.done) return 1;\n\t\t\t\t\t\t\tconst aModuleId = aItem.value.id;\n\t\t\t\t\t\t\tconst bModuleId = bItem.value.id;\n\t\t\t\t\t\t\tif (aModuleId < bModuleId) return -1;\n\t\t\t\t\t\t\tif (aModuleId > bModuleId) return 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = NaturalChunkOrderPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/OccurrenceOrderChunkIdsPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/OccurrenceOrderChunkIdsPlugin\").OccurrenceOrderChunkIdsPluginOptions} OccurrenceOrderChunkIdsPluginOptions */\n\nclass OccurrenceOrderChunkIdsPlugin {\n\t/**\n\t * @param {OccurrenceOrderChunkIdsPluginOptions=} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidateOptions(schema, options, \"Occurrence Order Chunk Ids Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst prioritiseInitial = this.options.prioritiseInitial;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"OccurrenceOrderChunkIdsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeChunkOrder.tap(\n\t\t\t\t\t\"OccurrenceOrderChunkIdsPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\tconst occursInInitialChunksMap = new Map();\n\t\t\t\t\t\tconst originalOrder = new Map();\n\n\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\tfor (const c of chunks) {\n\t\t\t\t\t\t\tlet occurs = 0;\n\t\t\t\t\t\t\tfor (const chunkGroup of c.groupsIterable) {\n\t\t\t\t\t\t\t\tfor (const parent of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\t\tif (parent.isInitial()) occurs++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toccursInInitialChunksMap.set(c, occurs);\n\t\t\t\t\t\t\toriginalOrder.set(c, i++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchunks.sort((a, b) => {\n\t\t\t\t\t\t\tif (prioritiseInitial) {\n\t\t\t\t\t\t\t\tconst aEntryOccurs = occursInInitialChunksMap.get(a);\n\t\t\t\t\t\t\t\tconst bEntryOccurs = occursInInitialChunksMap.get(b);\n\t\t\t\t\t\t\t\tif (aEntryOccurs > bEntryOccurs) return -1;\n\t\t\t\t\t\t\t\tif (aEntryOccurs < bEntryOccurs) return 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst aOccurs = a.getNumberOfGroups();\n\t\t\t\t\t\t\tconst bOccurs = b.getNumberOfGroups();\n\t\t\t\t\t\t\tif (aOccurs > bOccurs) return -1;\n\t\t\t\t\t\t\tif (aOccurs < bOccurs) return 1;\n\t\t\t\t\t\t\tconst orgA = originalOrder.get(a);\n\t\t\t\t\t\t\tconst orgB = originalOrder.get(b);\n\t\t\t\t\t\t\treturn orgA - orgB;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = OccurrenceOrderChunkIdsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/OccurrenceOrderModuleIdsPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/OccurrenceOrderModuleIdsPlugin\").OccurrenceOrderModuleIdsPluginOptions} OccurrenceOrderModuleIdsPluginOptions */\n\nclass OccurrenceOrderModuleIdsPlugin {\n\t/**\n\t * @param {OccurrenceOrderModuleIdsPluginOptions=} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidateOptions(schema, options, \"Occurrence Order Module Ids Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst prioritiseInitial = this.options.prioritiseInitial;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"OccurrenceOrderModuleIdsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeModuleOrder.tap(\n\t\t\t\t\t\"OccurrenceOrderModuleIdsPlugin\",\n\t\t\t\t\tmodules => {\n\t\t\t\t\t\tconst occursInInitialChunksMap = new Map();\n\t\t\t\t\t\tconst occursInAllChunksMap = new Map();\n\n\t\t\t\t\t\tconst initialChunkChunkMap = new Map();\n\t\t\t\t\t\tconst entryCountMap = new Map();\n\t\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\t\tlet initial = 0;\n\t\t\t\t\t\t\tlet entry = 0;\n\t\t\t\t\t\t\tfor (const c of m.chunksIterable) {\n\t\t\t\t\t\t\t\tif (c.canBeInitial()) initial++;\n\t\t\t\t\t\t\t\tif (c.entryModule === m) entry++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinitialChunkChunkMap.set(m, initial);\n\t\t\t\t\t\t\tentryCountMap.set(m, entry);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst countOccursInEntry = (sum, r) => {\n\t\t\t\t\t\t\tif (!r.module) {\n\t\t\t\t\t\t\t\treturn sum;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst count = initialChunkChunkMap.get(r.module);\n\t\t\t\t\t\t\tif (!count) {\n\t\t\t\t\t\t\t\treturn sum;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn sum + count;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst countOccurs = (sum, r) => {\n\t\t\t\t\t\t\tif (!r.module) {\n\t\t\t\t\t\t\t\treturn sum;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet factor = 1;\n\t\t\t\t\t\t\tif (typeof r.dependency.getNumberOfIdOccurrences === \"function\") {\n\t\t\t\t\t\t\t\tfactor = r.dependency.getNumberOfIdOccurrences();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (factor === 0) {\n\t\t\t\t\t\t\t\treturn sum;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn sum + factor * r.module.getNumberOfChunks();\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (prioritiseInitial) {\n\t\t\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\t\t\tconst result =\n\t\t\t\t\t\t\t\t\tm.reasons.reduce(countOccursInEntry, 0) +\n\t\t\t\t\t\t\t\t\tinitialChunkChunkMap.get(m) +\n\t\t\t\t\t\t\t\t\tentryCountMap.get(m);\n\t\t\t\t\t\t\t\toccursInInitialChunksMap.set(m, result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst originalOrder = new Map();\n\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\t\tconst result =\n\t\t\t\t\t\t\t\tm.reasons.reduce(countOccurs, 0) +\n\t\t\t\t\t\t\t\tm.getNumberOfChunks() +\n\t\t\t\t\t\t\t\tentryCountMap.get(m);\n\t\t\t\t\t\t\toccursInAllChunksMap.set(m, result);\n\t\t\t\t\t\t\toriginalOrder.set(m, i++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodules.sort((a, b) => {\n\t\t\t\t\t\t\tif (prioritiseInitial) {\n\t\t\t\t\t\t\t\tconst aEntryOccurs = occursInInitialChunksMap.get(a);\n\t\t\t\t\t\t\t\tconst bEntryOccurs = occursInInitialChunksMap.get(b);\n\t\t\t\t\t\t\t\tif (aEntryOccurs > bEntryOccurs) return -1;\n\t\t\t\t\t\t\t\tif (aEntryOccurs < bEntryOccurs) return 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst aOccurs = occursInAllChunksMap.get(a);\n\t\t\t\t\t\t\tconst bOccurs = occursInAllChunksMap.get(b);\n\t\t\t\t\t\t\tif (aOccurs > bOccurs) return -1;\n\t\t\t\t\t\t\tif (aOccurs < bOccurs) return 1;\n\t\t\t\t\t\t\tconst orgA = originalOrder.get(a);\n\t\t\t\t\t\t\tconst orgB = originalOrder.get(b);\n\t\t\t\t\t\t\treturn orgA - orgB;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = OccurrenceOrderModuleIdsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\n// TODO webpack 5 remove this plugin\n// It has been splitted into separate plugins for modules and chunks\nclass OccurrenceOrderPlugin {\n\tconstructor(preferEntry) {\n\t\tif (preferEntry !== undefined && typeof preferEntry !== \"boolean\") {\n\t\t\tthrow new Error(\n\t\t\t\t\"Argument should be a boolean.\\nFor more info on this plugin, see https://webpack.js.org/plugins/\"\n\t\t\t);\n\t\t}\n\t\tthis.preferEntry = preferEntry;\n\t}\n\tapply(compiler) {\n\t\tconst preferEntry = this.preferEntry;\n\t\tcompiler.hooks.compilation.tap(\"OccurrenceOrderPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeModuleOrder.tap(\n\t\t\t\t\"OccurrenceOrderPlugin\",\n\t\t\t\tmodules => {\n\t\t\t\t\tconst occursInInitialChunksMap = new Map();\n\t\t\t\t\tconst occursInAllChunksMap = new Map();\n\n\t\t\t\t\tconst initialChunkChunkMap = new Map();\n\t\t\t\t\tconst entryCountMap = new Map();\n\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\tlet initial = 0;\n\t\t\t\t\t\tlet entry = 0;\n\t\t\t\t\t\tfor (const c of m.chunksIterable) {\n\t\t\t\t\t\t\tif (c.canBeInitial()) initial++;\n\t\t\t\t\t\t\tif (c.entryModule === m) entry++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinitialChunkChunkMap.set(m, initial);\n\t\t\t\t\t\tentryCountMap.set(m, entry);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst countOccursInEntry = (sum, r) => {\n\t\t\t\t\t\tif (!r.module) {\n\t\t\t\t\t\t\treturn sum;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn sum + initialChunkChunkMap.get(r.module);\n\t\t\t\t\t};\n\t\t\t\t\tconst countOccurs = (sum, r) => {\n\t\t\t\t\t\tif (!r.module) {\n\t\t\t\t\t\t\treturn sum;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet factor = 1;\n\t\t\t\t\t\tif (typeof r.dependency.getNumberOfIdOccurrences === \"function\") {\n\t\t\t\t\t\t\tfactor = r.dependency.getNumberOfIdOccurrences();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (factor === 0) {\n\t\t\t\t\t\t\treturn sum;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn sum + factor * r.module.getNumberOfChunks();\n\t\t\t\t\t};\n\n\t\t\t\t\tif (preferEntry) {\n\t\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\t\tconst result =\n\t\t\t\t\t\t\t\tm.reasons.reduce(countOccursInEntry, 0) +\n\t\t\t\t\t\t\t\tinitialChunkChunkMap.get(m) +\n\t\t\t\t\t\t\t\tentryCountMap.get(m);\n\t\t\t\t\t\t\toccursInInitialChunksMap.set(m, result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst originalOrder = new Map();\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\tconst result =\n\t\t\t\t\t\t\tm.reasons.reduce(countOccurs, 0) +\n\t\t\t\t\t\t\tm.getNumberOfChunks() +\n\t\t\t\t\t\t\tentryCountMap.get(m);\n\t\t\t\t\t\toccursInAllChunksMap.set(m, result);\n\t\t\t\t\t\toriginalOrder.set(m, i++);\n\t\t\t\t\t}\n\n\t\t\t\t\tmodules.sort((a, b) => {\n\t\t\t\t\t\tif (preferEntry) {\n\t\t\t\t\t\t\tconst aEntryOccurs = occursInInitialChunksMap.get(a);\n\t\t\t\t\t\t\tconst bEntryOccurs = occursInInitialChunksMap.get(b);\n\t\t\t\t\t\t\tif (aEntryOccurs > bEntryOccurs) return -1;\n\t\t\t\t\t\t\tif (aEntryOccurs < bEntryOccurs) return 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst aOccurs = occursInAllChunksMap.get(a);\n\t\t\t\t\t\tconst bOccurs = occursInAllChunksMap.get(b);\n\t\t\t\t\t\tif (aOccurs > bOccurs) return -1;\n\t\t\t\t\t\tif (aOccurs < bOccurs) return 1;\n\t\t\t\t\t\tconst orgA = originalOrder.get(a);\n\t\t\t\t\t\tconst orgB = originalOrder.get(b);\n\t\t\t\t\t\treturn orgA - orgB;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t\tcompilation.hooks.optimizeChunkOrder.tap(\n\t\t\t\t\"OccurrenceOrderPlugin\",\n\t\t\t\tchunks => {\n\t\t\t\t\tconst occursInInitialChunksMap = new Map();\n\t\t\t\t\tconst originalOrder = new Map();\n\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tfor (const c of chunks) {\n\t\t\t\t\t\tlet occurs = 0;\n\t\t\t\t\t\tfor (const chunkGroup of c.groupsIterable) {\n\t\t\t\t\t\t\tfor (const parent of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\tif (parent.isInitial()) occurs++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\toccursInInitialChunksMap.set(c, occurs);\n\t\t\t\t\t\toriginalOrder.set(c, i++);\n\t\t\t\t\t}\n\n\t\t\t\t\tchunks.sort((a, b) => {\n\t\t\t\t\t\tconst aEntryOccurs = occursInInitialChunksMap.get(a);\n\t\t\t\t\t\tconst bEntryOccurs = occursInInitialChunksMap.get(b);\n\t\t\t\t\t\tif (aEntryOccurs > bEntryOccurs) return -1;\n\t\t\t\t\t\tif (aEntryOccurs < bEntryOccurs) return 1;\n\t\t\t\t\t\tconst aOccurs = a.getNumberOfGroups();\n\t\t\t\t\t\tconst bOccurs = b.getNumberOfGroups();\n\t\t\t\t\t\tif (aOccurs > bOccurs) return -1;\n\t\t\t\t\t\tif (aOccurs < bOccurs) return 1;\n\t\t\t\t\t\tconst orgA = originalOrder.get(a);\n\t\t\t\t\t\tconst orgB = originalOrder.get(b);\n\t\t\t\t\t\treturn orgA - orgB;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = OccurrenceOrderPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass RemoveEmptyChunksPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"RemoveEmptyChunksPlugin\", compilation => {\n\t\t\tconst handler = chunks => {\n\t\t\t\tfor (let i = chunks.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst chunk = chunks[i];\n\t\t\t\t\tif (\n\t\t\t\t\t\tchunk.isEmpty() &&\n\t\t\t\t\t\t!chunk.hasRuntime() &&\n\t\t\t\t\t\t!chunk.hasEntryModule()\n\t\t\t\t\t) {\n\t\t\t\t\t\tchunk.remove(\"empty\");\n\t\t\t\t\t\tchunks.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tcompilation.hooks.optimizeChunksBasic.tap(\n\t\t\t\t\"RemoveEmptyChunksPlugin\",\n\t\t\t\thandler\n\t\t\t);\n\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\"RemoveEmptyChunksPlugin\",\n\t\t\t\thandler\n\t\t\t);\n\t\t\tcompilation.hooks.optimizeExtractedChunksBasic.tap(\n\t\t\t\t\"RemoveEmptyChunksPlugin\",\n\t\t\t\thandler\n\t\t\t);\n\t\t\tcompilation.hooks.optimizeExtractedChunksAdvanced.tap(\n\t\t\t\t\"RemoveEmptyChunksPlugin\",\n\t\t\t\thandler\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = RemoveEmptyChunksPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Queue = require(\"../util/Queue\");\nconst { intersect } = require(\"../util/SetHelpers\");\n\nconst getParentChunksWithModule = (currentChunk, module) => {\n\tconst chunks = [];\n\tconst stack = new Set(currentChunk.parentsIterable);\n\n\tfor (const chunk of stack) {\n\t\tif (chunk.containsModule(module)) {\n\t\t\tchunks.push(chunk);\n\t\t} else {\n\t\t\tfor (const parent of chunk.parentsIterable) {\n\t\t\t\tstack.add(parent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chunks;\n};\n\nclass RemoveParentModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"RemoveParentModulesPlugin\", compilation => {\n\t\t\tconst handler = (chunks, chunkGroups) => {\n\t\t\t\tconst queue = new Queue();\n\t\t\t\tconst availableModulesMap = new WeakMap();\n\n\t\t\t\tfor (const chunkGroup of compilation.entrypoints.values()) {\n\t\t\t\t\t// initialize available modules for chunks without parents\n\t\t\t\t\tavailableModulesMap.set(chunkGroup, new Set());\n\t\t\t\t\tfor (const child of chunkGroup.childrenIterable) {\n\t\t\t\t\t\tqueue.enqueue(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (queue.length > 0) {\n\t\t\t\t\tconst chunkGroup = queue.dequeue();\n\t\t\t\t\tlet availableModules = availableModulesMap.get(chunkGroup);\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\tfor (const parent of chunkGroup.parentsIterable) {\n\t\t\t\t\t\tconst availableModulesInParent = availableModulesMap.get(parent);\n\t\t\t\t\t\tif (availableModulesInParent !== undefined) {\n\t\t\t\t\t\t\t// If we know the available modules in parent: process these\n\t\t\t\t\t\t\tif (availableModules === undefined) {\n\t\t\t\t\t\t\t\t// if we have not own info yet: create new entry\n\t\t\t\t\t\t\t\tavailableModules = new Set(availableModulesInParent);\n\t\t\t\t\t\t\t\tfor (const chunk of parent.chunks) {\n\t\t\t\t\t\t\t\t\tfor (const m of chunk.modulesIterable) {\n\t\t\t\t\t\t\t\t\t\tavailableModules.add(m);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tavailableModulesMap.set(chunkGroup, availableModules);\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfor (const m of availableModules) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!parent.containsModule(m) &&\n\t\t\t\t\t\t\t\t\t\t!availableModulesInParent.has(m)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tavailableModules.delete(m);\n\t\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t// if something changed: enqueue our children\n\t\t\t\t\t\tfor (const child of chunkGroup.childrenIterable) {\n\t\t\t\t\t\t\tqueue.enqueue(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// now we have available modules for every chunk\n\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\tconst availableModulesSets = Array.from(\n\t\t\t\t\t\tchunk.groupsIterable,\n\t\t\t\t\t\tchunkGroup => availableModulesMap.get(chunkGroup)\n\t\t\t\t\t);\n\t\t\t\t\tif (availableModulesSets.some(s => s === undefined)) continue; // No info about this chunk group\n\t\t\t\t\tconst availableModules =\n\t\t\t\t\t\tavailableModulesSets.length === 1\n\t\t\t\t\t\t\t? availableModulesSets[0]\n\t\t\t\t\t\t\t: intersect(availableModulesSets);\n\t\t\t\t\tconst numberOfModules = chunk.getNumberOfModules();\n\t\t\t\t\tconst toRemove = new Set();\n\t\t\t\t\tif (numberOfModules < availableModules.size) {\n\t\t\t\t\t\tfor (const m of chunk.modulesIterable) {\n\t\t\t\t\t\t\tif (availableModules.has(m)) {\n\t\t\t\t\t\t\t\ttoRemove.add(m);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const m of availableModules) {\n\t\t\t\t\t\t\tif (chunk.containsModule(m)) {\n\t\t\t\t\t\t\t\ttoRemove.add(m);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const module of toRemove) {\n\t\t\t\t\t\tmodule.rewriteChunkInReasons(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tgetParentChunksWithModule(chunk, module)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tchunk.removeModule(module);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tcompilation.hooks.optimizeChunksBasic.tap(\n\t\t\t\t\"RemoveParentModulesPlugin\",\n\t\t\t\thandler\n\t\t\t);\n\t\t\tcompilation.hooks.optimizeExtractedChunksBasic.tap(\n\t\t\t\t\"RemoveParentModulesPlugin\",\n\t\t\t\thandler\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = RemoveParentModulesPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class RuntimeChunkPlugin {\n\tconstructor(options) {\n\t\tthis.options = Object.assign(\n\t\t\t{\n\t\t\t\tname: entrypoint => `runtime~${entrypoint.name}`\n\t\t\t},\n\t\t\toptions\n\t\t);\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"RuntimeChunkPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\"RuntimeChunkPlugin\", () => {\n\t\t\t\tfor (const entrypoint of compilation.entrypoints.values()) {\n\t\t\t\t\tconst chunk = entrypoint.getRuntimeChunk();\n\t\t\t\t\tlet name = this.options.name;\n\t\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\t\tname = name(entrypoint);\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tchunk.getNumberOfModules() > 0 ||\n\t\t\t\t\t\t!chunk.preventIntegration ||\n\t\t\t\t\t\tchunk.name !== name\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst newChunk = compilation.addChunk(name);\n\t\t\t\t\t\tnewChunk.preventIntegration = true;\n\t\t\t\t\t\tentrypoint.unshiftChunk(newChunk);\n\t\t\t\t\t\tnewChunk.addGroup(entrypoint);\n\t\t\t\t\t\tentrypoint.setRuntimeChunk(newChunk);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst mm = require(\"micromatch\");\nconst HarmonyExportImportedSpecifierDependency = require(\"../dependencies/HarmonyExportImportedSpecifierDependency\");\nconst HarmonyImportSideEffectDependency = require(\"../dependencies/HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"../dependencies/HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/**\n * @typedef {Object} ExportInModule\n * @property {Module} module the module\n * @property {string} exportName the name of the export\n */\n\nclass SideEffectsFlagPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.normalModuleFactory.tap(\"SideEffectsFlagPlugin\", nmf => {\n\t\t\tnmf.hooks.module.tap(\"SideEffectsFlagPlugin\", (module, data) => {\n\t\t\t\tconst resolveData = data.resourceResolveData;\n\t\t\t\tif (\n\t\t\t\t\tresolveData &&\n\t\t\t\t\tresolveData.descriptionFileData &&\n\t\t\t\t\tresolveData.relativePath\n\t\t\t\t) {\n\t\t\t\t\tconst sideEffects = resolveData.descriptionFileData.sideEffects;\n\t\t\t\t\tconst hasSideEffects = SideEffectsFlagPlugin.moduleHasSideEffects(\n\t\t\t\t\t\tresolveData.relativePath,\n\t\t\t\t\t\tsideEffects\n\t\t\t\t\t);\n\t\t\t\t\tif (!hasSideEffects) {\n\t\t\t\t\t\tmodule.factoryMeta.sideEffectFree = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn module;\n\t\t\t});\n\t\t\tnmf.hooks.module.tap(\"SideEffectsFlagPlugin\", (module, data) => {\n\t\t\t\tif (data.settings.sideEffects === false) {\n\t\t\t\t\tmodule.factoryMeta.sideEffectFree = true;\n\t\t\t\t} else if (data.settings.sideEffects === true) {\n\t\t\t\t\tmodule.factoryMeta.sideEffectFree = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tcompiler.hooks.compilation.tap(\"SideEffectsFlagPlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeDependencies.tap(\n\t\t\t\t\"SideEffectsFlagPlugin\",\n\t\t\t\tmodules => {\n\t\t\t\t\t/** @type {Map<Module, Map<string, ExportInModule>>} */\n\t\t\t\t\tconst reexportMaps = new Map();\n\n\t\t\t\t\t// Capture reexports of sideEffectFree modules\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t/** @type {Dependency[]} */\n\t\t\t\t\t\tconst removeDependencies = [];\n\t\t\t\t\t\tfor (const dep of module.dependencies) {\n\t\t\t\t\t\t\tif (dep instanceof HarmonyImportSideEffectDependency) {\n\t\t\t\t\t\t\t\tif (dep.module && dep.module.factoryMeta.sideEffectFree) {\n\t\t\t\t\t\t\t\t\tremoveDependencies.push(dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tdep instanceof HarmonyExportImportedSpecifierDependency\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (module.factoryMeta.sideEffectFree) {\n\t\t\t\t\t\t\t\t\tconst mode = dep.getMode(true);\n\t\t\t\t\t\t\t\t\tif (mode.type === \"safe-reexport\") {\n\t\t\t\t\t\t\t\t\t\tlet map = reexportMaps.get(module);\n\t\t\t\t\t\t\t\t\t\tif (!map) {\n\t\t\t\t\t\t\t\t\t\t\treexportMaps.set(module, (map = new Map()));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfor (const pair of mode.map) {\n\t\t\t\t\t\t\t\t\t\t\tmap.set(pair[0], {\n\t\t\t\t\t\t\t\t\t\t\t\tmodule: mode.module,\n\t\t\t\t\t\t\t\t\t\t\t\texportName: pair[1]\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Flatten reexports\n\t\t\t\t\tfor (const map of reexportMaps.values()) {\n\t\t\t\t\t\tfor (const pair of map) {\n\t\t\t\t\t\t\tlet mapping = pair[1];\n\t\t\t\t\t\t\twhile (mapping) {\n\t\t\t\t\t\t\t\tconst innerMap = reexportMaps.get(mapping.module);\n\t\t\t\t\t\t\t\tif (!innerMap) break;\n\t\t\t\t\t\t\t\tconst newMapping = innerMap.get(mapping.exportName);\n\t\t\t\t\t\t\t\tif (newMapping) {\n\t\t\t\t\t\t\t\t\tmap.set(pair[0], newMapping);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmapping = newMapping;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update imports along the reexports from sideEffectFree modules\n\t\t\t\t\tfor (const pair of reexportMaps) {\n\t\t\t\t\t\tconst module = pair[0];\n\t\t\t\t\t\tconst map = pair[1];\n\t\t\t\t\t\tlet newReasons = undefined;\n\t\t\t\t\t\tfor (let i = 0; i < module.reasons.length; i++) {\n\t\t\t\t\t\t\tconst reason = module.reasons[i];\n\t\t\t\t\t\t\tconst dep = reason.dependency;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdep instanceof HarmonyExportImportedSpecifierDependency ||\n\t\t\t\t\t\t\t\t(dep instanceof HarmonyImportSpecifierDependency &&\n\t\t\t\t\t\t\t\t\t!dep.namespaceObjectAsContext)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst mapping = map.get(dep.id);\n\t\t\t\t\t\t\t\tif (mapping) {\n\t\t\t\t\t\t\t\t\tdep.redirectedModule = mapping.module;\n\t\t\t\t\t\t\t\t\tdep.redirectedId = mapping.exportName;\n\t\t\t\t\t\t\t\t\tmapping.module.addReason(\n\t\t\t\t\t\t\t\t\t\treason.module,\n\t\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\t\treason.explanation\n\t\t\t\t\t\t\t\t\t\t\t? reason.explanation +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\" (skipped side-effect-free modules)\"\n\t\t\t\t\t\t\t\t\t\t\t: \"(skipped side-effect-free modules)\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t// removing the currect reason, by not adding it to the newReasons array\n\t\t\t\t\t\t\t\t\t// lazily create the newReasons array\n\t\t\t\t\t\t\t\t\tif (newReasons === undefined) {\n\t\t\t\t\t\t\t\t\t\tnewReasons = i === 0 ? [] : module.reasons.slice(0, i);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (newReasons !== undefined) newReasons.push(reason);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (newReasons !== undefined) {\n\t\t\t\t\t\t\tmodule.reasons = newReasons;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tstatic moduleHasSideEffects(moduleName, flagValue) {\n\t\tswitch (typeof flagValue) {\n\t\t\tcase \"undefined\":\n\t\t\t\treturn true;\n\t\t\tcase \"boolean\":\n\t\t\t\treturn flagValue;\n\t\t\tcase \"string\":\n\t\t\t\tif (process.platform === \"win32\") {\n\t\t\t\t\tflagValue = flagValue.replace(/\\\\/g, \"/\");\n\t\t\t\t}\n\t\t\t\treturn mm.isMatch(moduleName, flagValue, {\n\t\t\t\t\tmatchBase: true\n\t\t\t\t});\n\t\t\tcase \"object\":\n\t\t\t\treturn flagValue.some(glob =>\n\t\t\t\t\tSideEffectsFlagPlugin.moduleHasSideEffects(moduleName, glob)\n\t\t\t\t);\n\t\t}\n\t}\n}\nmodule.exports = SideEffectsFlagPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst crypto = require(\"crypto\");\nconst SortableSet = require(\"../util/SortableSet\");\nconst GraphHelpers = require(\"../GraphHelpers\");\nconst { isSubset } = require(\"../util/SetHelpers\");\nconst deterministicGrouping = require(\"../util/deterministicGrouping\");\nconst MinMaxSizeWarning = require(\"./MinMaxSizeWarning\");\nconst contextify = require(\"../util/identifier\").contextify;\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../util/deterministicGrouping\").Options<Module>} DeterministicGroupingOptionsForModule */\n/** @typedef {import(\"../util/deterministicGrouping\").GroupedItems<Module>} DeterministicGroupingGroupedItemsForModule */\n\nconst deterministicGroupingForModules = /** @type {function(DeterministicGroupingOptionsForModule): DeterministicGroupingGroupedItemsForModule[]} */ (deterministicGrouping);\n\nconst hashFilename = name => {\n\treturn crypto\n\t\t.createHash(\"md4\")\n\t\t.update(name)\n\t\t.digest(\"hex\")\n\t\t.slice(0, 8);\n};\n\nconst sortByIdentifier = (a, b) => {\n\tif (a.identifier() > b.identifier()) return 1;\n\tif (a.identifier() < b.identifier()) return -1;\n\treturn 0;\n};\n\nconst getRequests = chunk => {\n\tlet requests = 0;\n\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\trequests = Math.max(requests, chunkGroup.chunks.length);\n\t}\n\treturn requests;\n};\n\nconst getModulesSize = modules => {\n\tlet sum = 0;\n\tfor (const m of modules) {\n\t\tsum += m.size();\n\t}\n\treturn sum;\n};\n\n/**\n * @template T\n * @param {Set<T>} a set\n * @param {Set<T>} b other set\n * @returns {boolean} true if at least one item of a is in b\n */\nconst isOverlap = (a, b) => {\n\tfor (const item of a) {\n\t\tif (b.has(item)) return true;\n\t}\n\treturn false;\n};\n\nconst compareEntries = (a, b) => {\n\t// 1. by priority\n\tconst diffPriority = a.cacheGroup.priority - b.cacheGroup.priority;\n\tif (diffPriority) return diffPriority;\n\t// 2. by number of chunks\n\tconst diffCount = a.chunks.size - b.chunks.size;\n\tif (diffCount) return diffCount;\n\t// 3. by size reduction\n\tconst aSizeReduce = a.size * (a.chunks.size - 1);\n\tconst bSizeReduce = b.size * (b.chunks.size - 1);\n\tconst diffSizeReduce = aSizeReduce - bSizeReduce;\n\tif (diffSizeReduce) return diffSizeReduce;\n\t// 4. by number of modules (to be able to compare by identifier)\n\tconst modulesA = a.modules;\n\tconst modulesB = b.modules;\n\tconst diff = modulesA.size - modulesB.size;\n\tif (diff) return diff;\n\t// 5. by module identifiers\n\tmodulesA.sort();\n\tmodulesB.sort();\n\tconst aI = modulesA[Symbol.iterator]();\n\tconst bI = modulesB[Symbol.iterator]();\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tconst aItem = aI.next();\n\t\tconst bItem = bI.next();\n\t\tif (aItem.done) return 0;\n\t\tconst aModuleIdentifier = aItem.value.identifier();\n\t\tconst bModuleIdentifier = bItem.value.identifier();\n\t\tif (aModuleIdentifier > bModuleIdentifier) return -1;\n\t\tif (aModuleIdentifier < bModuleIdentifier) return 1;\n\t}\n};\n\nconst compareNumbers = (a, b) => a - b;\n\nconst INITIAL_CHUNK_FILTER = chunk => chunk.canBeInitial();\nconst ASYNC_CHUNK_FILTER = chunk => !chunk.canBeInitial();\nconst ALL_CHUNK_FILTER = chunk => true;\n\nmodule.exports = class SplitChunksPlugin {\n\tconstructor(options) {\n\t\tthis.options = SplitChunksPlugin.normalizeOptions(options);\n\t}\n\n\tstatic normalizeOptions(options = {}) {\n\t\treturn {\n\t\t\tchunksFilter: SplitChunksPlugin.normalizeChunksFilter(\n\t\t\t\toptions.chunks || \"all\"\n\t\t\t),\n\t\t\tminSize: options.minSize || 0,\n\t\t\tmaxSize: options.maxSize || 0,\n\t\t\tminChunks: options.minChunks || 1,\n\t\t\tmaxAsyncRequests: options.maxAsyncRequests || 1,\n\t\t\tmaxInitialRequests: options.maxInitialRequests || 1,\n\t\t\thidePathInfo: options.hidePathInfo || false,\n\t\t\tfilename: options.filename || undefined,\n\t\t\tgetCacheGroups: SplitChunksPlugin.normalizeCacheGroups({\n\t\t\t\tcacheGroups: options.cacheGroups,\n\t\t\t\tname: options.name,\n\t\t\t\tautomaticNameDelimiter: options.automaticNameDelimiter,\n\t\t\t\tautomaticNameMaxLength: options.automaticNameMaxLength\n\t\t\t}),\n\t\t\tautomaticNameDelimiter: options.automaticNameDelimiter,\n\t\t\tautomaticNameMaxLength: options.automaticNameMaxLength || 109,\n\t\t\tfallbackCacheGroup: SplitChunksPlugin.normalizeFallbackCacheGroup(\n\t\t\t\toptions.fallbackCacheGroup || {},\n\t\t\t\toptions\n\t\t\t)\n\t\t};\n\t}\n\n\tstatic normalizeName({\n\t\tname,\n\t\tautomaticNameDelimiter,\n\t\tautomaticNamePrefix,\n\t\tautomaticNameMaxLength\n\t}) {\n\t\tif (name === true) {\n\t\t\t/** @type {WeakMap<Chunk[], Record<string, string>>} */\n\t\t\tconst cache = new WeakMap();\n\t\t\tconst fn = (module, chunks, cacheGroup) => {\n\t\t\t\tlet cacheEntry = cache.get(chunks);\n\t\t\t\tif (cacheEntry === undefined) {\n\t\t\t\t\tcacheEntry = {};\n\t\t\t\t\tcache.set(chunks, cacheEntry);\n\t\t\t\t} else if (cacheGroup in cacheEntry) {\n\t\t\t\t\treturn cacheEntry[cacheGroup];\n\t\t\t\t}\n\t\t\t\tconst names = chunks.map(c => c.name);\n\t\t\t\tif (!names.every(Boolean)) {\n\t\t\t\t\tcacheEntry[cacheGroup] = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tnames.sort();\n\t\t\t\tconst prefix =\n\t\t\t\t\ttypeof automaticNamePrefix === \"string\"\n\t\t\t\t\t\t? automaticNamePrefix\n\t\t\t\t\t\t: cacheGroup;\n\t\t\t\tconst namePrefix = prefix ? prefix + automaticNameDelimiter : \"\";\n\t\t\t\tlet name = namePrefix + names.join(automaticNameDelimiter);\n\t\t\t\t// Filenames and paths can't be too long otherwise an\n\t\t\t\t// ENAMETOOLONG error is raised. If the generated name if too\n\t\t\t\t// long, it is truncated and a hash is appended. The limit has\n\t\t\t\t// been set to 109 to prevent `[name].[chunkhash].[ext]` from\n\t\t\t\t// generating a 256+ character string.\n\t\t\t\tif (name.length > automaticNameMaxLength) {\n\t\t\t\t\tconst hashedFilename = hashFilename(name);\n\t\t\t\t\tconst sliceLength =\n\t\t\t\t\t\tautomaticNameMaxLength -\n\t\t\t\t\t\t(automaticNameDelimiter.length + hashedFilename.length);\n\t\t\t\t\tname =\n\t\t\t\t\t\tname.slice(0, sliceLength) +\n\t\t\t\t\t\tautomaticNameDelimiter +\n\t\t\t\t\t\thashFilename(name);\n\t\t\t\t}\n\t\t\t\tcacheEntry[cacheGroup] = name;\n\t\t\t\treturn name;\n\t\t\t};\n\t\t\treturn fn;\n\t\t}\n\t\tif (typeof name === \"string\") {\n\t\t\tconst fn = () => {\n\t\t\t\treturn name;\n\t\t\t};\n\t\t\treturn fn;\n\t\t}\n\t\tif (typeof name === \"function\") return name;\n\t}\n\n\tstatic normalizeChunksFilter(chunks) {\n\t\tif (chunks === \"initial\") {\n\t\t\treturn INITIAL_CHUNK_FILTER;\n\t\t}\n\t\tif (chunks === \"async\") {\n\t\t\treturn ASYNC_CHUNK_FILTER;\n\t\t}\n\t\tif (chunks === \"all\") {\n\t\t\treturn ALL_CHUNK_FILTER;\n\t\t}\n\t\tif (typeof chunks === \"function\") return chunks;\n\t}\n\n\tstatic normalizeFallbackCacheGroup(\n\t\t{\n\t\t\tminSize = undefined,\n\t\t\tmaxSize = undefined,\n\t\t\tautomaticNameDelimiter = undefined\n\t\t},\n\t\t{\n\t\t\tminSize: defaultMinSize = undefined,\n\t\t\tmaxSize: defaultMaxSize = undefined,\n\t\t\tautomaticNameDelimiter: defaultAutomaticNameDelimiter = undefined\n\t\t}\n\t) {\n\t\treturn {\n\t\t\tminSize: typeof minSize === \"number\" ? minSize : defaultMinSize || 0,\n\t\t\tmaxSize: typeof maxSize === \"number\" ? maxSize : defaultMaxSize || 0,\n\t\t\tautomaticNameDelimiter:\n\t\t\t\tautomaticNameDelimiter || defaultAutomaticNameDelimiter || \"~\"\n\t\t};\n\t}\n\n\tstatic normalizeCacheGroups({\n\t\tcacheGroups,\n\t\tname,\n\t\tautomaticNameDelimiter,\n\t\tautomaticNameMaxLength\n\t}) {\n\t\tif (typeof cacheGroups === \"function\") {\n\t\t\t// TODO webpack 5 remove this\n\t\t\tif (cacheGroups.length !== 1) {\n\t\t\t\treturn module => cacheGroups(module, module.getChunks());\n\t\t\t}\n\t\t\treturn cacheGroups;\n\t\t}\n\t\tif (cacheGroups && typeof cacheGroups === \"object\") {\n\t\t\tconst fn = module => {\n\t\t\t\tlet results;\n\t\t\t\tfor (const key of Object.keys(cacheGroups)) {\n\t\t\t\t\tlet option = cacheGroups[key];\n\t\t\t\t\tif (option === false) continue;\n\t\t\t\t\tif (option instanceof RegExp || typeof option === \"string\") {\n\t\t\t\t\t\toption = {\n\t\t\t\t\t\t\ttest: option\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof option === \"function\") {\n\t\t\t\t\t\tlet result = option(module);\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tif (results === undefined) results = [];\n\t\t\t\t\t\t\tfor (const r of Array.isArray(result) ? result : [result]) {\n\t\t\t\t\t\t\t\tconst result = Object.assign({ key }, r);\n\t\t\t\t\t\t\t\tif (result.name) result.getName = () => result.name;\n\t\t\t\t\t\t\t\tif (result.chunks) {\n\t\t\t\t\t\t\t\t\tresult.chunksFilter = SplitChunksPlugin.normalizeChunksFilter(\n\t\t\t\t\t\t\t\t\t\tresult.chunks\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresults.push(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (SplitChunksPlugin.checkTest(option.test, module)) {\n\t\t\t\t\t\tif (results === undefined) results = [];\n\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\t\tpriority: option.priority,\n\t\t\t\t\t\t\tgetName:\n\t\t\t\t\t\t\t\tSplitChunksPlugin.normalizeName({\n\t\t\t\t\t\t\t\t\tname: option.name || name,\n\t\t\t\t\t\t\t\t\tautomaticNameDelimiter:\n\t\t\t\t\t\t\t\t\t\ttypeof option.automaticNameDelimiter === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t? option.automaticNameDelimiter\n\t\t\t\t\t\t\t\t\t\t\t: automaticNameDelimiter,\n\t\t\t\t\t\t\t\t\tautomaticNamePrefix: option.automaticNamePrefix,\n\t\t\t\t\t\t\t\t\tautomaticNameMaxLength:\n\t\t\t\t\t\t\t\t\t\toption.automaticNameMaxLength || automaticNameMaxLength\n\t\t\t\t\t\t\t\t}) || (() => {}),\n\t\t\t\t\t\t\tchunksFilter: SplitChunksPlugin.normalizeChunksFilter(\n\t\t\t\t\t\t\t\toption.chunks\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tenforce: option.enforce,\n\t\t\t\t\t\t\tminSize: option.minSize,\n\t\t\t\t\t\t\tmaxSize: option.maxSize,\n\t\t\t\t\t\t\tminChunks: option.minChunks,\n\t\t\t\t\t\t\tmaxAsyncRequests: option.maxAsyncRequests,\n\t\t\t\t\t\t\tmaxInitialRequests: option.maxInitialRequests,\n\t\t\t\t\t\t\tfilename: option.filename,\n\t\t\t\t\t\t\treuseExistingChunk: option.reuseExistingChunk\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn results;\n\t\t\t};\n\t\t\treturn fn;\n\t\t}\n\t\tconst fn = () => {};\n\t\treturn fn;\n\t}\n\n\tstatic checkTest(test, module) {\n\t\tif (test === undefined) return true;\n\t\tif (typeof test === \"function\") {\n\t\t\tif (test.length !== 1) {\n\t\t\t\treturn test(module, module.getChunks());\n\t\t\t}\n\t\t\treturn test(module);\n\t\t}\n\t\tif (typeof test === \"boolean\") return test;\n\t\tif (typeof test === \"string\") {\n\t\t\tif (\n\t\t\t\tmodule.nameForCondition &&\n\t\t\t\tmodule.nameForCondition().startsWith(test)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor (const chunk of module.chunksIterable) {\n\t\t\t\tif (chunk.name && chunk.name.startsWith(test)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tif (test instanceof RegExp) {\n\t\t\tif (module.nameForCondition && test.test(module.nameForCondition())) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor (const chunk of module.chunksIterable) {\n\t\t\t\tif (chunk.name && test.test(chunk.name)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler webpack compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"SplitChunksPlugin\", compilation => {\n\t\t\tlet alreadyOptimized = false;\n\t\t\tcompilation.hooks.unseal.tap(\"SplitChunksPlugin\", () => {\n\t\t\t\talreadyOptimized = false;\n\t\t\t});\n\t\t\tcompilation.hooks.optimizeChunksAdvanced.tap(\n\t\t\t\t\"SplitChunksPlugin\",\n\t\t\t\tchunks => {\n\t\t\t\t\tif (alreadyOptimized) return;\n\t\t\t\t\talreadyOptimized = true;\n\t\t\t\t\t// Give each selected chunk an index (to create strings from chunks)\n\t\t\t\t\tconst indexMap = new Map();\n\t\t\t\t\tlet index = 1;\n\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\tindexMap.set(chunk, index++);\n\t\t\t\t\t}\n\t\t\t\t\tconst getKey = chunks => {\n\t\t\t\t\t\treturn Array.from(chunks, c => indexMap.get(c))\n\t\t\t\t\t\t\t.sort(compareNumbers)\n\t\t\t\t\t\t\t.join();\n\t\t\t\t\t};\n\t\t\t\t\t/** @type {Map<string, Set<Chunk>>} */\n\t\t\t\t\tconst chunkSetsInGraph = new Map();\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tconst chunksKey = getKey(module.chunksIterable);\n\t\t\t\t\t\tif (!chunkSetsInGraph.has(chunksKey)) {\n\t\t\t\t\t\t\tchunkSetsInGraph.set(chunksKey, new Set(module.chunksIterable));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// group these set of chunks by count\n\t\t\t\t\t// to allow to check less sets via isSubset\n\t\t\t\t\t// (only smaller sets can be subset)\n\t\t\t\t\t/** @type {Map<number, Array<Set<Chunk>>>} */\n\t\t\t\t\tconst chunkSetsByCount = new Map();\n\t\t\t\t\tfor (const chunksSet of chunkSetsInGraph.values()) {\n\t\t\t\t\t\tconst count = chunksSet.size;\n\t\t\t\t\t\tlet array = chunkSetsByCount.get(count);\n\t\t\t\t\t\tif (array === undefined) {\n\t\t\t\t\t\t\tarray = [];\n\t\t\t\t\t\t\tchunkSetsByCount.set(count, array);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tarray.push(chunksSet);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a list of possible combinations\n\t\t\t\t\tconst combinationsCache = new Map(); // Map<string, Set<Chunk>[]>\n\n\t\t\t\t\tconst getCombinations = key => {\n\t\t\t\t\t\tconst chunksSet = chunkSetsInGraph.get(key);\n\t\t\t\t\t\tvar array = [chunksSet];\n\t\t\t\t\t\tif (chunksSet.size > 1) {\n\t\t\t\t\t\t\tfor (const [count, setArray] of chunkSetsByCount) {\n\t\t\t\t\t\t\t\t// \"equal\" is not needed because they would have been merge in the first step\n\t\t\t\t\t\t\t\tif (count < chunksSet.size) {\n\t\t\t\t\t\t\t\t\tfor (const set of setArray) {\n\t\t\t\t\t\t\t\t\t\tif (isSubset(chunksSet, set)) {\n\t\t\t\t\t\t\t\t\t\t\tarray.push(set);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn array;\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @typedef {Object} SelectedChunksResult\n\t\t\t\t\t * @property {Chunk[]} chunks the list of chunks\n\t\t\t\t\t * @property {string} key a key of the list\n\t\t\t\t\t */\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @typedef {function(Chunk): boolean} ChunkFilterFunction\n\t\t\t\t\t */\n\n\t\t\t\t\t/** @type {WeakMap<Set<Chunk>, WeakMap<ChunkFilterFunction, SelectedChunksResult>>} */\n\t\t\t\t\tconst selectedChunksCacheByChunksSet = new WeakMap();\n\n\t\t\t\t\t/**\n\t\t\t\t\t * get list and key by applying the filter function to the list\n\t\t\t\t\t * It is cached for performance reasons\n\t\t\t\t\t * @param {Set<Chunk>} chunks list of chunks\n\t\t\t\t\t * @param {ChunkFilterFunction} chunkFilter filter function for chunks\n\t\t\t\t\t * @returns {SelectedChunksResult} list and key\n\t\t\t\t\t */\n\t\t\t\t\tconst getSelectedChunks = (chunks, chunkFilter) => {\n\t\t\t\t\t\tlet entry = selectedChunksCacheByChunksSet.get(chunks);\n\t\t\t\t\t\tif (entry === undefined) {\n\t\t\t\t\t\t\tentry = new WeakMap();\n\t\t\t\t\t\t\tselectedChunksCacheByChunksSet.set(chunks, entry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/** @type {SelectedChunksResult} */\n\t\t\t\t\t\tlet entry2 = entry.get(chunkFilter);\n\t\t\t\t\t\tif (entry2 === undefined) {\n\t\t\t\t\t\t\t/** @type {Chunk[]} */\n\t\t\t\t\t\t\tconst selectedChunks = [];\n\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\tif (chunkFilter(chunk)) selectedChunks.push(chunk);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tentry2 = {\n\t\t\t\t\t\t\t\tchunks: selectedChunks,\n\t\t\t\t\t\t\t\tkey: getKey(selectedChunks)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tentry.set(chunkFilter, entry2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn entry2;\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @typedef {Object} ChunksInfoItem\n\t\t\t\t\t * @property {SortableSet} modules\n\t\t\t\t\t * @property {TODO} cacheGroup\n\t\t\t\t\t * @property {string} name\n\t\t\t\t\t * @property {boolean} validateSize\n\t\t\t\t\t * @property {number} size\n\t\t\t\t\t * @property {Set<Chunk>} chunks\n\t\t\t\t\t * @property {Set<Chunk>} reuseableChunks\n\t\t\t\t\t * @property {Set<string>} chunksKeys\n\t\t\t\t\t */\n\n\t\t\t\t\t// Map a list of chunks to a list of modules\n\t\t\t\t\t// For the key the chunk \"index\" is used, the value is a SortableSet of modules\n\t\t\t\t\t/** @type {Map<string, ChunksInfoItem>} */\n\t\t\t\t\tconst chunksInfoMap = new Map();\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {TODO} cacheGroup the current cache group\n\t\t\t\t\t * @param {Chunk[]} selectedChunks chunks selected for this module\n\t\t\t\t\t * @param {string} selectedChunksKey a key of selectedChunks\n\t\t\t\t\t * @param {Module} module the current module\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst addModuleToChunksInfoMap = (\n\t\t\t\t\t\tcacheGroup,\n\t\t\t\t\t\tselectedChunks,\n\t\t\t\t\t\tselectedChunksKey,\n\t\t\t\t\t\tmodule\n\t\t\t\t\t) => {\n\t\t\t\t\t\t// Break if minimum number of chunks is not reached\n\t\t\t\t\t\tif (selectedChunks.length < cacheGroup.minChunks) return;\n\t\t\t\t\t\t// Determine name for split chunk\n\t\t\t\t\t\tconst name = cacheGroup.getName(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\tselectedChunks,\n\t\t\t\t\t\t\tcacheGroup.key\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// Create key for maps\n\t\t\t\t\t\t// When it has a name we use the name as key\n\t\t\t\t\t\t// Elsewise we create the key from chunks and cache group key\n\t\t\t\t\t\t// This automatically merges equal names\n\t\t\t\t\t\tconst key =\n\t\t\t\t\t\t\tcacheGroup.key +\n\t\t\t\t\t\t\t(name ? ` name:${name}` : ` chunks:${selectedChunksKey}`);\n\t\t\t\t\t\t// Add module to maps\n\t\t\t\t\t\tlet info = chunksInfoMap.get(key);\n\t\t\t\t\t\tif (info === undefined) {\n\t\t\t\t\t\t\tchunksInfoMap.set(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t(info = {\n\t\t\t\t\t\t\t\t\tmodules: new SortableSet(undefined, sortByIdentifier),\n\t\t\t\t\t\t\t\t\tcacheGroup,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\tvalidateSize: cacheGroup.minSize > 0,\n\t\t\t\t\t\t\t\t\tsize: 0,\n\t\t\t\t\t\t\t\t\tchunks: new Set(),\n\t\t\t\t\t\t\t\t\treuseableChunks: new Set(),\n\t\t\t\t\t\t\t\t\tchunksKeys: new Set()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinfo.modules.add(module);\n\t\t\t\t\t\tif (info.validateSize) {\n\t\t\t\t\t\t\tinfo.size += module.size();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!info.chunksKeys.has(selectedChunksKey)) {\n\t\t\t\t\t\t\tinfo.chunksKeys.add(selectedChunksKey);\n\t\t\t\t\t\t\tfor (const chunk of selectedChunks) {\n\t\t\t\t\t\t\t\tinfo.chunks.add(chunk);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// Walk through all modules\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t// Get cache group\n\t\t\t\t\t\tlet cacheGroups = this.options.getCacheGroups(module);\n\t\t\t\t\t\tif (!Array.isArray(cacheGroups) || cacheGroups.length === 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Prepare some values\n\t\t\t\t\t\tconst chunksKey = getKey(module.chunksIterable);\n\t\t\t\t\t\tlet combs = combinationsCache.get(chunksKey);\n\t\t\t\t\t\tif (combs === undefined) {\n\t\t\t\t\t\t\tcombs = getCombinations(chunksKey);\n\t\t\t\t\t\t\tcombinationsCache.set(chunksKey, combs);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (const cacheGroupSource of cacheGroups) {\n\t\t\t\t\t\t\tconst cacheGroup = {\n\t\t\t\t\t\t\t\tkey: cacheGroupSource.key,\n\t\t\t\t\t\t\t\tpriority: cacheGroupSource.priority || 0,\n\t\t\t\t\t\t\t\tchunksFilter:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.chunksFilter || this.options.chunksFilter,\n\t\t\t\t\t\t\t\tminSize:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.minSize !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.minSize\n\t\t\t\t\t\t\t\t\t\t: cacheGroupSource.enforce\n\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t: this.options.minSize,\n\t\t\t\t\t\t\t\tminSizeForMaxSize:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.minSize !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.minSize\n\t\t\t\t\t\t\t\t\t\t: this.options.minSize,\n\t\t\t\t\t\t\t\tmaxSize:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.maxSize !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.maxSize\n\t\t\t\t\t\t\t\t\t\t: cacheGroupSource.enforce\n\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t: this.options.maxSize,\n\t\t\t\t\t\t\t\tminChunks:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.minChunks !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.minChunks\n\t\t\t\t\t\t\t\t\t\t: cacheGroupSource.enforce\n\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t: this.options.minChunks,\n\t\t\t\t\t\t\t\tmaxAsyncRequests:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.maxAsyncRequests !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.maxAsyncRequests\n\t\t\t\t\t\t\t\t\t\t: cacheGroupSource.enforce\n\t\t\t\t\t\t\t\t\t\t? Infinity\n\t\t\t\t\t\t\t\t\t\t: this.options.maxAsyncRequests,\n\t\t\t\t\t\t\t\tmaxInitialRequests:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.maxInitialRequests !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.maxInitialRequests\n\t\t\t\t\t\t\t\t\t\t: cacheGroupSource.enforce\n\t\t\t\t\t\t\t\t\t\t? Infinity\n\t\t\t\t\t\t\t\t\t\t: this.options.maxInitialRequests,\n\t\t\t\t\t\t\t\tgetName:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.getName !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.getName\n\t\t\t\t\t\t\t\t\t\t: this.options.getName,\n\t\t\t\t\t\t\t\tfilename:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.filename !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.filename\n\t\t\t\t\t\t\t\t\t\t: this.options.filename,\n\t\t\t\t\t\t\t\tautomaticNameDelimiter:\n\t\t\t\t\t\t\t\t\tcacheGroupSource.automaticNameDelimiter !== undefined\n\t\t\t\t\t\t\t\t\t\t? cacheGroupSource.automaticNameDelimiter\n\t\t\t\t\t\t\t\t\t\t: this.options.automaticNameDelimiter,\n\t\t\t\t\t\t\t\treuseExistingChunk: cacheGroupSource.reuseExistingChunk\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t// For all combination of chunk selection\n\t\t\t\t\t\t\tfor (const chunkCombination of combs) {\n\t\t\t\t\t\t\t\t// Break if minimum number of chunks is not reached\n\t\t\t\t\t\t\t\tif (chunkCombination.size < cacheGroup.minChunks) continue;\n\t\t\t\t\t\t\t\t// Select chunks by configuration\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tchunks: selectedChunks,\n\t\t\t\t\t\t\t\t\tkey: selectedChunksKey\n\t\t\t\t\t\t\t\t} = getSelectedChunks(\n\t\t\t\t\t\t\t\t\tchunkCombination,\n\t\t\t\t\t\t\t\t\tcacheGroup.chunksFilter\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\taddModuleToChunksInfoMap(\n\t\t\t\t\t\t\t\t\tcacheGroup,\n\t\t\t\t\t\t\t\t\tselectedChunks,\n\t\t\t\t\t\t\t\t\tselectedChunksKey,\n\t\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Filter items were size < minSize\n\t\t\t\t\tfor (const pair of chunksInfoMap) {\n\t\t\t\t\t\tconst info = pair[1];\n\t\t\t\t\t\tif (info.validateSize && info.size < info.cacheGroup.minSize) {\n\t\t\t\t\t\t\tchunksInfoMap.delete(pair[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/** @type {Map<Chunk, {minSize: number, maxSize: number, automaticNameDelimiter: string, keys: string[]}>} */\n\t\t\t\t\tconst maxSizeQueueMap = new Map();\n\n\t\t\t\t\twhile (chunksInfoMap.size > 0) {\n\t\t\t\t\t\t// Find best matching entry\n\t\t\t\t\t\tlet bestEntryKey;\n\t\t\t\t\t\tlet bestEntry;\n\t\t\t\t\t\tfor (const pair of chunksInfoMap) {\n\t\t\t\t\t\t\tconst key = pair[0];\n\t\t\t\t\t\t\tconst info = pair[1];\n\t\t\t\t\t\t\tif (bestEntry === undefined) {\n\t\t\t\t\t\t\t\tbestEntry = info;\n\t\t\t\t\t\t\t\tbestEntryKey = key;\n\t\t\t\t\t\t\t} else if (compareEntries(bestEntry, info) < 0) {\n\t\t\t\t\t\t\t\tbestEntry = info;\n\t\t\t\t\t\t\t\tbestEntryKey = key;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst item = bestEntry;\n\t\t\t\t\t\tchunksInfoMap.delete(bestEntryKey);\n\n\t\t\t\t\t\tlet chunkName = item.name;\n\t\t\t\t\t\t// Variable for the new chunk (lazy created)\n\t\t\t\t\t\t/** @type {Chunk} */\n\t\t\t\t\t\tlet newChunk;\n\t\t\t\t\t\t// When no chunk name, check if we can reuse a chunk instead of creating a new one\n\t\t\t\t\t\tlet isReused = false;\n\t\t\t\t\t\tif (item.cacheGroup.reuseExistingChunk) {\n\t\t\t\t\t\t\touter: for (const chunk of item.chunks) {\n\t\t\t\t\t\t\t\tif (chunk.getNumberOfModules() !== item.modules.size) continue;\n\t\t\t\t\t\t\t\tif (chunk.hasEntryModule()) continue;\n\t\t\t\t\t\t\t\tfor (const module of item.modules) {\n\t\t\t\t\t\t\t\t\tif (!chunk.containsModule(module)) continue outer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!newChunk || !newChunk.name) {\n\t\t\t\t\t\t\t\t\tnewChunk = chunk;\n\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\tchunk.name &&\n\t\t\t\t\t\t\t\t\tchunk.name.length < newChunk.name.length\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tnewChunk = chunk;\n\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\tchunk.name &&\n\t\t\t\t\t\t\t\t\tchunk.name.length === newChunk.name.length &&\n\t\t\t\t\t\t\t\t\tchunk.name < newChunk.name\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tnewChunk = chunk;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchunkName = undefined;\n\t\t\t\t\t\t\t\tisReused = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Check if maxRequests condition can be fulfilled\n\n\t\t\t\t\t\tconst usedChunks = Array.from(item.chunks).filter(chunk => {\n\t\t\t\t\t\t\t// skip if we address ourself\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t(!chunkName || chunk.name !== chunkName) && chunk !== newChunk\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Skip when no chunk selected\n\t\t\t\t\t\tif (usedChunks.length === 0) continue;\n\n\t\t\t\t\t\tlet validChunks = usedChunks;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tNumber.isFinite(item.cacheGroup.maxInitialRequests) ||\n\t\t\t\t\t\t\tNumber.isFinite(item.cacheGroup.maxAsyncRequests)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tvalidChunks = validChunks.filter(chunk => {\n\t\t\t\t\t\t\t\t// respect max requests when not enforced\n\t\t\t\t\t\t\t\tconst maxRequests = chunk.isOnlyInitial()\n\t\t\t\t\t\t\t\t\t? item.cacheGroup.maxInitialRequests\n\t\t\t\t\t\t\t\t\t: chunk.canBeInitial()\n\t\t\t\t\t\t\t\t\t? Math.min(\n\t\t\t\t\t\t\t\t\t\t\titem.cacheGroup.maxInitialRequests,\n\t\t\t\t\t\t\t\t\t\t\titem.cacheGroup.maxAsyncRequests\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: item.cacheGroup.maxAsyncRequests;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t!isFinite(maxRequests) || getRequests(chunk) < maxRequests\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalidChunks = validChunks.filter(chunk => {\n\t\t\t\t\t\t\tfor (const module of item.modules) {\n\t\t\t\t\t\t\t\tif (chunk.containsModule(module)) return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (validChunks.length < usedChunks.length) {\n\t\t\t\t\t\t\tif (validChunks.length >= item.cacheGroup.minChunks) {\n\t\t\t\t\t\t\t\tfor (const module of item.modules) {\n\t\t\t\t\t\t\t\t\taddModuleToChunksInfoMap(\n\t\t\t\t\t\t\t\t\t\titem.cacheGroup,\n\t\t\t\t\t\t\t\t\t\tvalidChunks,\n\t\t\t\t\t\t\t\t\t\tgetKey(validChunks),\n\t\t\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create the new chunk if not reusing one\n\t\t\t\t\t\tif (!isReused) {\n\t\t\t\t\t\t\tnewChunk = compilation.addChunk(chunkName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Walk through all chunks\n\t\t\t\t\t\tfor (const chunk of usedChunks) {\n\t\t\t\t\t\t\t// Add graph connections for splitted chunk\n\t\t\t\t\t\t\tchunk.split(newChunk);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add a note to the chunk\n\t\t\t\t\t\tnewChunk.chunkReason = isReused\n\t\t\t\t\t\t\t? \"reused as split chunk\"\n\t\t\t\t\t\t\t: \"split chunk\";\n\t\t\t\t\t\tif (item.cacheGroup.key) {\n\t\t\t\t\t\t\tnewChunk.chunkReason += ` (cache group: ${item.cacheGroup.key})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (chunkName) {\n\t\t\t\t\t\t\tnewChunk.chunkReason += ` (name: ${chunkName})`;\n\t\t\t\t\t\t\t// If the chosen name is already an entry point we remove the entry point\n\t\t\t\t\t\t\tconst entrypoint = compilation.entrypoints.get(chunkName);\n\t\t\t\t\t\t\tif (entrypoint) {\n\t\t\t\t\t\t\t\tcompilation.entrypoints.delete(chunkName);\n\t\t\t\t\t\t\t\tentrypoint.remove();\n\t\t\t\t\t\t\t\tnewChunk.entryModule = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.cacheGroup.filename) {\n\t\t\t\t\t\t\tif (!newChunk.isOnlyInitial()) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"SplitChunksPlugin: You are trying to set a filename for a chunk which is (also) loaded on demand. \" +\n\t\t\t\t\t\t\t\t\t\t\"The runtime can only handle loading of chunks which match the chunkFilename schema. \" +\n\t\t\t\t\t\t\t\t\t\t\"Using a custom filename would fail at runtime. \" +\n\t\t\t\t\t\t\t\t\t\t`(cache group: ${item.cacheGroup.key})`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnewChunk.filenameTemplate = item.cacheGroup.filename;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isReused) {\n\t\t\t\t\t\t\t// Add all modules to the new chunk\n\t\t\t\t\t\t\tfor (const module of item.modules) {\n\t\t\t\t\t\t\t\tif (typeof module.chunkCondition === \"function\") {\n\t\t\t\t\t\t\t\t\tif (!module.chunkCondition(newChunk)) continue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Add module to new chunk\n\t\t\t\t\t\t\t\tGraphHelpers.connectChunkAndModule(newChunk, module);\n\t\t\t\t\t\t\t\t// Remove module from used chunks\n\t\t\t\t\t\t\t\tfor (const chunk of usedChunks) {\n\t\t\t\t\t\t\t\t\tchunk.removeModule(module);\n\t\t\t\t\t\t\t\t\tmodule.rewriteChunkInReasons(chunk, [newChunk]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Remove all modules from used chunks\n\t\t\t\t\t\t\tfor (const module of item.modules) {\n\t\t\t\t\t\t\t\tfor (const chunk of usedChunks) {\n\t\t\t\t\t\t\t\t\tchunk.removeModule(module);\n\t\t\t\t\t\t\t\t\tmodule.rewriteChunkInReasons(chunk, [newChunk]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (item.cacheGroup.maxSize > 0) {\n\t\t\t\t\t\t\tconst oldMaxSizeSettings = maxSizeQueueMap.get(newChunk);\n\t\t\t\t\t\t\tmaxSizeQueueMap.set(newChunk, {\n\t\t\t\t\t\t\t\tminSize: Math.max(\n\t\t\t\t\t\t\t\t\toldMaxSizeSettings ? oldMaxSizeSettings.minSize : 0,\n\t\t\t\t\t\t\t\t\titem.cacheGroup.minSizeForMaxSize\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tmaxSize: Math.min(\n\t\t\t\t\t\t\t\t\toldMaxSizeSettings ? oldMaxSizeSettings.maxSize : Infinity,\n\t\t\t\t\t\t\t\t\titem.cacheGroup.maxSize\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tautomaticNameDelimiter: item.cacheGroup.automaticNameDelimiter,\n\t\t\t\t\t\t\t\tkeys: oldMaxSizeSettings\n\t\t\t\t\t\t\t\t\t? oldMaxSizeSettings.keys.concat(item.cacheGroup.key)\n\t\t\t\t\t\t\t\t\t: [item.cacheGroup.key]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// remove all modules from other entries and update size\n\t\t\t\t\t\tfor (const [key, info] of chunksInfoMap) {\n\t\t\t\t\t\t\tif (isOverlap(info.chunks, item.chunks)) {\n\t\t\t\t\t\t\t\tif (info.validateSize) {\n\t\t\t\t\t\t\t\t\t// update modules and total size\n\t\t\t\t\t\t\t\t\t// may remove it from the map when < minSize\n\t\t\t\t\t\t\t\t\tconst oldSize = info.modules.size;\n\t\t\t\t\t\t\t\t\tfor (const module of item.modules) {\n\t\t\t\t\t\t\t\t\t\tinfo.modules.delete(module);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (info.modules.size === 0) {\n\t\t\t\t\t\t\t\t\t\tchunksInfoMap.delete(key);\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (info.modules.size !== oldSize) {\n\t\t\t\t\t\t\t\t\t\tinfo.size = getModulesSize(info.modules);\n\t\t\t\t\t\t\t\t\t\tif (info.size < info.cacheGroup.minSize) {\n\t\t\t\t\t\t\t\t\t\t\tchunksInfoMap.delete(key);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// only update the modules\n\t\t\t\t\t\t\t\t\tfor (const module of item.modules) {\n\t\t\t\t\t\t\t\t\t\tinfo.modules.delete(module);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (info.modules.size === 0) {\n\t\t\t\t\t\t\t\t\t\tchunksInfoMap.delete(key);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst incorrectMinMaxSizeSet = new Set();\n\n\t\t\t\t\t// Make sure that maxSize is fulfilled\n\t\t\t\t\tfor (const chunk of compilation.chunks.slice()) {\n\t\t\t\t\t\tconst { minSize, maxSize, automaticNameDelimiter, keys } =\n\t\t\t\t\t\t\tmaxSizeQueueMap.get(chunk) || this.options.fallbackCacheGroup;\n\t\t\t\t\t\tif (!maxSize) continue;\n\t\t\t\t\t\tif (minSize > maxSize) {\n\t\t\t\t\t\t\tconst warningKey = `${keys && keys.join()} ${minSize} ${maxSize}`;\n\t\t\t\t\t\t\tif (!incorrectMinMaxSizeSet.has(warningKey)) {\n\t\t\t\t\t\t\t\tincorrectMinMaxSizeSet.add(warningKey);\n\t\t\t\t\t\t\t\tcompilation.warnings.push(\n\t\t\t\t\t\t\t\t\tnew MinMaxSizeWarning(keys, minSize, maxSize)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst results = deterministicGroupingForModules({\n\t\t\t\t\t\t\tmaxSize: Math.max(minSize, maxSize),\n\t\t\t\t\t\t\tminSize,\n\t\t\t\t\t\t\titems: chunk.modulesIterable,\n\t\t\t\t\t\t\tgetKey(module) {\n\t\t\t\t\t\t\t\tconst ident = contextify(\n\t\t\t\t\t\t\t\t\tcompilation.options.context,\n\t\t\t\t\t\t\t\t\tmodule.identifier()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst name = module.nameForCondition\n\t\t\t\t\t\t\t\t\t? contextify(\n\t\t\t\t\t\t\t\t\t\t\tcompilation.options.context,\n\t\t\t\t\t\t\t\t\t\t\tmodule.nameForCondition()\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: ident.replace(/^.*!|\\?[^?!]*$/g, \"\");\n\t\t\t\t\t\t\t\tconst fullKey =\n\t\t\t\t\t\t\t\t\tname + automaticNameDelimiter + hashFilename(ident);\n\t\t\t\t\t\t\t\treturn fullKey.replace(/[\\\\/?]/g, \"_\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetSize(module) {\n\t\t\t\t\t\t\t\treturn module.size();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresults.sort((a, b) => {\n\t\t\t\t\t\t\tif (a.key < b.key) return -1;\n\t\t\t\t\t\t\tif (a.key > b.key) return 1;\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\tconst group = results[i];\n\t\t\t\t\t\t\tconst key = this.options.hidePathInfo\n\t\t\t\t\t\t\t\t? hashFilename(group.key)\n\t\t\t\t\t\t\t\t: group.key;\n\t\t\t\t\t\t\tlet name = chunk.name\n\t\t\t\t\t\t\t\t? chunk.name + automaticNameDelimiter + key\n\t\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\t\tif (name && name.length > 100) {\n\t\t\t\t\t\t\t\tname =\n\t\t\t\t\t\t\t\t\tname.slice(0, 100) +\n\t\t\t\t\t\t\t\t\tautomaticNameDelimiter +\n\t\t\t\t\t\t\t\t\thashFilename(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet newPart;\n\t\t\t\t\t\t\tif (i !== results.length - 1) {\n\t\t\t\t\t\t\t\tnewPart = compilation.addChunk(name);\n\t\t\t\t\t\t\t\tchunk.split(newPart);\n\t\t\t\t\t\t\t\tnewPart.chunkReason = chunk.chunkReason;\n\t\t\t\t\t\t\t\t// Add all modules to the new chunk\n\t\t\t\t\t\t\t\tfor (const module of group.items) {\n\t\t\t\t\t\t\t\t\tif (typeof module.chunkCondition === \"function\") {\n\t\t\t\t\t\t\t\t\t\tif (!module.chunkCondition(newPart)) continue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Add module to new chunk\n\t\t\t\t\t\t\t\t\tGraphHelpers.connectChunkAndModule(newPart, module);\n\t\t\t\t\t\t\t\t\t// Remove module from used chunks\n\t\t\t\t\t\t\t\t\tchunk.removeModule(module);\n\t\t\t\t\t\t\t\t\tmodule.rewriteChunkInReasons(chunk, [newPart]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// change the chunk to be a part\n\t\t\t\t\t\t\t\tnewPart = chunk;\n\t\t\t\t\t\t\t\tchunk.name = name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\nconst SizeFormatHelpers = require(\"../SizeFormatHelpers\");\n\nmodule.exports = class AssetsOverSizeLimitWarning extends WebpackError {\n\tconstructor(assetsOverSizeLimit, assetLimit) {\n\t\tconst assetLists = assetsOverSizeLimit\n\t\t\t.map(\n\t\t\t\tasset =>\n\t\t\t\t\t`\\n  ${asset.name} (${SizeFormatHelpers.formatSize(asset.size)})`\n\t\t\t)\n\t\t\t.join(\"\");\n\n\t\tsuper(`asset size limit: The following asset(s) exceed the recommended size limit (${SizeFormatHelpers.formatSize(\n\t\t\tassetLimit\n\t\t)}).\nThis can impact web performance.\nAssets: ${assetLists}`);\n\n\t\tthis.name = \"AssetsOverSizeLimitWarning\";\n\t\tthis.assets = assetsOverSizeLimit;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\nconst SizeFormatHelpers = require(\"../SizeFormatHelpers\");\n\nmodule.exports = class EntrypointsOverSizeLimitWarning extends WebpackError {\n\tconstructor(entrypoints, entrypointLimit) {\n\t\tconst entrypointList = entrypoints\n\t\t\t.map(\n\t\t\t\tentrypoint =>\n\t\t\t\t\t`\\n  ${entrypoint.name} (${SizeFormatHelpers.formatSize(\n\t\t\t\t\t\tentrypoint.size\n\t\t\t\t\t)})\\n${entrypoint.files.map(asset => `      ${asset}`).join(\"\\n\")}`\n\t\t\t)\n\t\t\t.join(\"\");\n\t\tsuper(`entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (${SizeFormatHelpers.formatSize(\n\t\t\tentrypointLimit\n\t\t)}). This can impact web performance.\nEntrypoints:${entrypointList}\\n`);\n\n\t\tthis.name = \"EntrypointsOverSizeLimitWarning\";\n\t\tthis.entrypoints = entrypoints;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\n\nmodule.exports = class NoAsyncChunksWarning extends WebpackError {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"webpack performance recommendations: \\n\" +\n\t\t\t\t\"You can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.\\n\" +\n\t\t\t\t\"For more info visit https://webpack.js.org/guides/code-splitting/\"\n\t\t);\n\n\t\tthis.name = \"NoAsyncChunksWarning\";\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\nconst EntrypointsOverSizeLimitWarning = require(\"./EntrypointsOverSizeLimitWarning\");\nconst AssetsOverSizeLimitWarning = require(\"./AssetsOverSizeLimitWarning\");\nconst NoAsyncChunksWarning = require(\"./NoAsyncChunksWarning\");\n\nmodule.exports = class SizeLimitsPlugin {\n\tconstructor(options) {\n\t\tthis.hints = options.hints;\n\t\tthis.maxAssetSize = options.maxAssetSize;\n\t\tthis.maxEntrypointSize = options.maxEntrypointSize;\n\t\tthis.assetFilter = options.assetFilter;\n\t}\n\tapply(compiler) {\n\t\tconst entrypointSizeLimit = this.maxEntrypointSize;\n\t\tconst assetSizeLimit = this.maxAssetSize;\n\t\tconst hints = this.hints;\n\t\tconst assetFilter = this.assetFilter || (asset => !asset.endsWith(\".map\"));\n\n\t\tcompiler.hooks.afterEmit.tap(\"SizeLimitsPlugin\", compilation => {\n\t\t\tconst warnings = [];\n\n\t\t\tconst getEntrypointSize = entrypoint =>\n\t\t\t\tentrypoint.getFiles().reduce((currentSize, file) => {\n\t\t\t\t\tif (assetFilter(file) && compilation.assets[file]) {\n\t\t\t\t\t\treturn currentSize + compilation.assets[file].size();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn currentSize;\n\t\t\t\t}, 0);\n\n\t\t\tconst assetsOverSizeLimit = [];\n\t\t\tfor (const assetName of Object.keys(compilation.assets)) {\n\t\t\t\tif (!assetFilter(assetName)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst asset = compilation.assets[assetName];\n\t\t\t\tconst size = asset.size();\n\t\t\t\tif (size > assetSizeLimit) {\n\t\t\t\t\tassetsOverSizeLimit.push({\n\t\t\t\t\t\tname: assetName,\n\t\t\t\t\t\tsize: size\n\t\t\t\t\t});\n\t\t\t\t\tasset.isOverSizeLimit = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst entrypointsOverLimit = [];\n\t\t\tfor (const pair of compilation.entrypoints) {\n\t\t\t\tconst name = pair[0];\n\t\t\t\tconst entry = pair[1];\n\t\t\t\tconst size = getEntrypointSize(entry);\n\n\t\t\t\tif (size > entrypointSizeLimit) {\n\t\t\t\t\tentrypointsOverLimit.push({\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tsize: size,\n\t\t\t\t\t\tfiles: entry.getFiles().filter(assetFilter)\n\t\t\t\t\t});\n\t\t\t\t\tentry.isOverSizeLimit = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hints) {\n\t\t\t\t// 1. Individual Chunk: Size < 250kb\n\t\t\t\t// 2. Collective Initial Chunks [entrypoint] (Each Set?): Size < 250kb\n\t\t\t\t// 3. No Async Chunks\n\t\t\t\t// if !1, then 2, if !2 return\n\t\t\t\tif (assetsOverSizeLimit.length > 0) {\n\t\t\t\t\twarnings.push(\n\t\t\t\t\t\tnew AssetsOverSizeLimitWarning(assetsOverSizeLimit, assetSizeLimit)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (entrypointsOverLimit.length > 0) {\n\t\t\t\t\twarnings.push(\n\t\t\t\t\t\tnew EntrypointsOverSizeLimitWarning(\n\t\t\t\t\t\t\tentrypointsOverLimit,\n\t\t\t\t\t\t\tentrypointSizeLimit\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (warnings.length > 0) {\n\t\t\t\t\tconst hasAsyncChunks =\n\t\t\t\t\t\tcompilation.chunks.filter(chunk => !chunk.canBeInitial()).length >\n\t\t\t\t\t\t0;\n\n\t\t\t\t\tif (!hasAsyncChunks) {\n\t\t\t\t\t\twarnings.push(new NoAsyncChunksWarning());\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hints === \"error\") {\n\t\t\t\t\t\tcompilation.errors.push(...warnings);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcompilation.warnings.push(...warnings);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n","\"use strict\";\n\n/**\n * @template T\n */\nclass Queue {\n\t/**\n\t * @param {Iterable<T>=} items The initial elements.\n\t */\n\tconstructor(items) {\n\t\t/** @private @type {Set<T>} */\n\t\tthis.set = new Set(items);\n\t\t/** @private @type {Iterator<T>} */\n\t\tthis.iterator = this.set[Symbol.iterator]();\n\t}\n\n\t/**\n\t * Returns the number of elements in this queue.\n\t * @returns {number} The number of elements in this queue.\n\t */\n\tget length() {\n\t\treturn this.set.size;\n\t}\n\n\t/**\n\t * Appends the specified element to this queue.\n\t * @param {T} item The element to add.\n\t * @returns {void}\n\t */\n\tenqueue(item) {\n\t\tthis.set.add(item);\n\t}\n\n\t/**\n\t * Retrieves and removes the head of this queue.\n\t * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n\t */\n\tdequeue() {\n\t\tconst result = this.iterator.next();\n\t\tif (result.done) return undefined;\n\t\tthis.set.delete(result.value);\n\t\treturn result.value;\n\t}\n}\n\nmodule.exports = Queue;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass Semaphore {\n\t/**\n\t * Creates an instance of Semaphore.\n\t *\n\t * @param {number} available the amount available number of \"tasks\"\n\t * in the Semaphore\n\t */\n\tconstructor(available) {\n\t\tthis.available = available;\n\t\t/** @type {(function(): void)[]} */\n\t\tthis.waiters = [];\n\t\t/** @private */\n\t\tthis._continue = this._continue.bind(this);\n\t}\n\n\t/**\n\t * @param {function(): void} callback function block to capture and run\n\t * @returns {void}\n\t */\n\tacquire(callback) {\n\t\tif (this.available > 0) {\n\t\t\tthis.available--;\n\t\t\tcallback();\n\t\t} else {\n\t\t\tthis.waiters.push(callback);\n\t\t}\n\t}\n\n\trelease() {\n\t\tthis.available++;\n\t\tif (this.waiters.length > 0) {\n\t\t\tprocess.nextTick(this._continue);\n\t\t}\n\t}\n\n\t_continue() {\n\t\tif (this.available > 0) {\n\t\t\tif (this.waiters.length > 0) {\n\t\t\t\tthis.available--;\n\t\t\t\tconst callback = this.waiters.pop();\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = Semaphore;\n","\"use strict\";\n\n/**\n * intersect creates Set containing the intersection of elements between all sets\n * @param {Set[]} sets an array of sets being checked for shared elements\n * @returns {Set<TODO>} returns a new Set containing the intersecting items\n */\nconst intersect = sets => {\n\tif (sets.length === 0) return new Set();\n\tif (sets.length === 1) return new Set(sets[0]);\n\tlet minSize = Infinity;\n\tlet minIndex = -1;\n\tfor (let i = 0; i < sets.length; i++) {\n\t\tconst size = sets[i].size;\n\t\tif (size < minSize) {\n\t\t\tminIndex = i;\n\t\t\tminSize = size;\n\t\t}\n\t}\n\tconst current = new Set(sets[minIndex]);\n\tfor (let i = 0; i < sets.length; i++) {\n\t\tif (i === minIndex) continue;\n\t\tconst set = sets[i];\n\t\tfor (const item of current) {\n\t\t\tif (!set.has(item)) {\n\t\t\t\tcurrent.delete(item);\n\t\t\t}\n\t\t}\n\t}\n\treturn current;\n};\n\n/**\n * Checks if a set is the subset of another set\n * @param {Set<TODO>} bigSet a Set which contains the original elements to compare against\n * @param {Set<TODO>} smallSet the set whos elements might be contained inside of bigSet\n * @returns {boolean} returns true if smallSet contains all elements inside of the bigSet\n */\nconst isSubset = (bigSet, smallSet) => {\n\tif (bigSet.size < smallSet.size) return false;\n\tfor (const item of smallSet) {\n\t\tif (!bigSet.has(item)) return false;\n\t}\n\treturn true;\n};\n\nexports.intersect = intersect;\nexports.isSubset = isSubset;\n","\"use strict\";\n\n/**\n * A subset of Set that offers sorting functionality\n * @template T item type in set\n * @extends {Set<T>}\n */\nclass SortableSet extends Set {\n\t/**\n\t * Create a new sortable set\n\t * @param {Iterable<T>=} initialIterable The initial iterable value\n\t * @typedef {function(T, T): number} SortFunction\n\t * @param {SortFunction=} defaultSort Default sorting function\n\t */\n\tconstructor(initialIterable, defaultSort) {\n\t\tsuper(initialIterable);\n\t\t/** @private @type {function(T, T): number}} */\n\t\tthis._sortFn = defaultSort;\n\t\t/** @private @type {function(T, T): number} | null} */\n\t\tthis._lastActiveSortFn = null;\n\t\t/** @private @type {Map<Function, T[]> | undefined} */\n\t\tthis._cache = undefined;\n\t\t/** @private @type {Map<Function, T[]|string|number> | undefined} */\n\t\tthis._cacheOrderIndependent = undefined;\n\t}\n\n\t/**\n\t * @param {T} value value to add to set\n\t * @returns {this} returns itself\n\t */\n\tadd(value) {\n\t\tthis._lastActiveSortFn = null;\n\t\tthis._invalidateCache();\n\t\tthis._invalidateOrderedCache();\n\t\tsuper.add(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {T} value value to delete\n\t * @returns {boolean} true if value existed in set, false otherwise\n\t */\n\tdelete(value) {\n\t\tthis._invalidateCache();\n\t\tthis._invalidateOrderedCache();\n\t\treturn super.delete(value);\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tclear() {\n\t\tthis._invalidateCache();\n\t\tthis._invalidateOrderedCache();\n\t\treturn super.clear();\n\t}\n\n\t/**\n\t * Sort with a comparer function\n\t * @param {SortFunction} sortFn Sorting comparer function\n\t * @returns {void}\n\t */\n\tsortWith(sortFn) {\n\t\tif (this.size <= 1 || sortFn === this._lastActiveSortFn) {\n\t\t\t// already sorted - nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst sortedArray = Array.from(this).sort(sortFn);\n\t\tsuper.clear();\n\t\tfor (let i = 0; i < sortedArray.length; i += 1) {\n\t\t\tsuper.add(sortedArray[i]);\n\t\t}\n\t\tthis._lastActiveSortFn = sortFn;\n\t\tthis._invalidateCache();\n\t}\n\n\tsort() {\n\t\tthis.sortWith(this._sortFn);\n\t}\n\n\t/**\n\t * Get data from cache\n\t * @param {function(SortableSet<T>): T[]} fn function to calculate value\n\t * @returns {T[]} returns result of fn(this), cached until set changes\n\t */\n\tgetFromCache(fn) {\n\t\tif (this._cache === undefined) {\n\t\t\tthis._cache = new Map();\n\t\t} else {\n\t\t\tconst data = this._cache.get(fn);\n\t\t\tif (data !== undefined) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t}\n\t\tconst newData = fn(this);\n\t\tthis._cache.set(fn, newData);\n\t\treturn newData;\n\t}\n\n\t/**\n\t * @param {function(SortableSet<T>): string|number|T[]} fn function to calculate value\n\t * @returns {any} returns result of fn(this), cached until set changes\n\t */\n\tgetFromUnorderedCache(fn) {\n\t\tif (this._cacheOrderIndependent === undefined) {\n\t\t\tthis._cacheOrderIndependent = new Map();\n\t\t} else {\n\t\t\tconst data = this._cacheOrderIndependent.get(fn);\n\t\t\tif (data !== undefined) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t}\n\t\tconst newData = fn(this);\n\t\tthis._cacheOrderIndependent.set(fn, newData);\n\t\treturn newData;\n\t}\n\n\t/**\n\t * @private\n\t * @returns {void}\n\t */\n\t_invalidateCache() {\n\t\tif (this._cache !== undefined) {\n\t\t\tthis._cache.clear();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @returns {void}\n\t */\n\t_invalidateOrderedCache() {\n\t\tif (this._cacheOrderIndependent !== undefined) {\n\t\t\tthis._cacheOrderIndependent.clear();\n\t\t}\n\t}\n}\n\nmodule.exports = SortableSet;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\n\nconst TOMBSTONE = {};\nconst UNDEFINED_MARKER = {};\n\nclass StackedSetMap {\n\tconstructor(parentStack) {\n\t\tthis.stack = parentStack === undefined ? [] : parentStack.slice();\n\t\tthis.map = new Map();\n\t\tthis.stack.push(this.map);\n\t}\n\n\tadd(item) {\n\t\tthis.map.set(item, true);\n\t}\n\n\tset(item, value) {\n\t\tthis.map.set(item, value === undefined ? UNDEFINED_MARKER : value);\n\t}\n\n\tdelete(item) {\n\t\tif (this.stack.length > 1) {\n\t\t\tthis.map.set(item, TOMBSTONE);\n\t\t} else {\n\t\t\tthis.map.delete(item);\n\t\t}\n\t}\n\n\thas(item) {\n\t\tconst topValue = this.map.get(item);\n\t\tif (topValue !== undefined) return topValue !== TOMBSTONE;\n\t\tif (this.stack.length > 1) {\n\t\t\tfor (var i = this.stack.length - 2; i >= 0; i--) {\n\t\t\t\tconst value = this.stack[i].get(item);\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tthis.map.set(item, value);\n\t\t\t\t\treturn value !== TOMBSTONE;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.map.set(item, TOMBSTONE);\n\t\t}\n\t\treturn false;\n\t}\n\n\tget(item) {\n\t\tconst topValue = this.map.get(item);\n\t\tif (topValue !== undefined) {\n\t\t\treturn topValue === TOMBSTONE || topValue === UNDEFINED_MARKER\n\t\t\t\t? undefined\n\t\t\t\t: topValue;\n\t\t}\n\t\tif (this.stack.length > 1) {\n\t\t\tfor (var i = this.stack.length - 2; i >= 0; i--) {\n\t\t\t\tconst value = this.stack[i].get(item);\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tthis.map.set(item, value);\n\t\t\t\t\treturn value === TOMBSTONE || value === UNDEFINED_MARKER\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.map.set(item, TOMBSTONE);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t_compress() {\n\t\tif (this.stack.length === 1) return;\n\t\tthis.map = new Map();\n\t\tfor (const data of this.stack) {\n\t\t\tfor (const pair of data) {\n\t\t\t\tif (pair[1] === TOMBSTONE) {\n\t\t\t\t\tthis.map.delete(pair[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.map.set(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.stack = [this.map];\n\t}\n\n\tasArray() {\n\t\tthis._compress();\n\t\treturn Array.from(this.map.entries(), pair => pair[0]);\n\t}\n\n\tasSet() {\n\t\treturn new Set(this.asArray());\n\t}\n\n\tasPairArray() {\n\t\tthis._compress();\n\t\treturn Array.from(this.map.entries(), pair =>\n\t\t\t/** @type {[TODO, TODO]} */ (pair[1] === UNDEFINED_MARKER\n\t\t\t\t? [pair[0], undefined]\n\t\t\t\t: pair)\n\t\t);\n\t}\n\n\tasMap() {\n\t\treturn new Map(this.asPairArray());\n\t}\n\n\tget size() {\n\t\tthis._compress();\n\t\treturn this.map.size;\n\t}\n\n\tcreateChild() {\n\t\treturn new StackedSetMap(this.stack);\n\t}\n\n\tget length() {\n\t\tthrow new Error(\"This is no longer an Array\");\n\t}\n\n\tset length(value) {\n\t\tthrow new Error(\"This is no longer an Array\");\n\t}\n}\n\n// TODO remove in webpack 5\nStackedSetMap.prototype.push = util.deprecate(\n\t/**\n\t * @deprecated\n\t * @this {StackedSetMap}\n\t * @param {any} item Item to add\n\t * @returns {void}\n\t */\n\tfunction(item) {\n\t\tthis.add(item);\n\t},\n\t\"This is no longer an Array: Use add instead.\"\n);\n\nmodule.exports = StackedSetMap;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst mergeCache = new WeakMap();\n\n/**\n * Merges two given objects and caches the result to avoid computation if same objects passed as arguments again.\n * @example\n * // performs cleverMerge(first, second), stores the result in WeakMap and returns result\n * cachedCleverMerge({a: 1}, {a: 2})\n * {a: 2}\n *  // when same arguments passed, gets the result from WeakMap and returns it.\n * cachedCleverMerge({a: 1}, {a: 2})\n * {a: 2}\n * @param {object} first first object\n * @param {object} second second object\n * @returns {object} merged object of first and second object\n */\nconst cachedCleverMerge = (first, second) => {\n\tlet innerCache = mergeCache.get(first);\n\tif (innerCache === undefined) {\n\t\tinnerCache = new WeakMap();\n\t\tmergeCache.set(first, innerCache);\n\t}\n\tconst prevMerge = innerCache.get(second);\n\tif (prevMerge !== undefined) return prevMerge;\n\tconst newMerge = cleverMerge(first, second);\n\tinnerCache.set(second, newMerge);\n\treturn newMerge;\n};\n\n/**\n * Merges two objects. Objects are not deeply merged.\n * TODO webpack 5: merge objects deeply clever.\n * Arrays might reference the old value with \"...\"\n * @param {object} first first object\n * @param {object} second second object\n * @returns {object} merged object of first and second object\n */\nconst cleverMerge = (first, second) => {\n\tconst newObject = Object.assign({}, first);\n\tfor (const key of Object.keys(second)) {\n\t\tif (!(key in newObject)) {\n\t\t\tnewObject[key] = second[key];\n\t\t\tcontinue;\n\t\t}\n\t\tconst secondValue = second[key];\n\t\tif (!Array.isArray(secondValue)) {\n\t\t\tnewObject[key] = secondValue;\n\t\t\tcontinue;\n\t\t}\n\t\tconst firstValue = newObject[key];\n\t\tif (Array.isArray(firstValue)) {\n\t\t\tconst newArray = [];\n\t\t\tfor (const item of secondValue) {\n\t\t\t\tif (item === \"...\") {\n\t\t\t\t\tfor (const item of firstValue) {\n\t\t\t\t\t\tnewArray.push(item);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnewArray.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewObject[key] = newArray;\n\t\t} else {\n\t\t\tnewObject[key] = secondValue;\n\t\t}\n\t}\n\treturn newObject;\n};\n\nexports.cachedCleverMerge = cachedCleverMerge;\nexports.cleverMerge = cleverMerge;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AbstractMethodError = require(\"../AbstractMethodError\");\n\nconst BULK_SIZE = 1000;\n\nclass Hash {\n\t/**\n\t * Update hash {@link https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}\n\t * @param {string|Buffer} data data\n\t * @param {string=} inputEncoding data encoding\n\t * @returns {this} updated hash\n\t */\n\tupdate(data, inputEncoding) {\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Calculates the digest {@link https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}\n\t * @param {string=} encoding encoding of the return value\n\t * @returns {string|Buffer} digest\n\t */\n\tdigest(encoding) {\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexports.Hash = Hash;\n/** @typedef {typeof Hash} HashConstructor */\n\nclass BulkUpdateDecorator extends Hash {\n\t/**\n\t * @param {Hash} hash hash\n\t */\n\tconstructor(hash) {\n\t\tsuper();\n\t\tthis.hash = hash;\n\t\tthis.buffer = \"\";\n\t}\n\n\t/**\n\t * Update hash {@link https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}\n\t * @param {string|Buffer} data data\n\t * @param {string=} inputEncoding data encoding\n\t * @returns {this} updated hash\n\t */\n\tupdate(data, inputEncoding) {\n\t\tif (\n\t\t\tinputEncoding !== undefined ||\n\t\t\ttypeof data !== \"string\" ||\n\t\t\tdata.length > BULK_SIZE\n\t\t) {\n\t\t\tif (this.buffer.length > 0) {\n\t\t\t\tthis.hash.update(this.buffer);\n\t\t\t\tthis.buffer = \"\";\n\t\t\t}\n\t\t\tthis.hash.update(data, inputEncoding);\n\t\t} else {\n\t\t\tthis.buffer += data;\n\t\t\tif (this.buffer.length > BULK_SIZE) {\n\t\t\t\tthis.hash.update(this.buffer);\n\t\t\t\tthis.buffer = \"\";\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calculates the digest {@link https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}\n\t * @param {string=} encoding encoding of the return value\n\t * @returns {string|Buffer} digest\n\t */\n\tdigest(encoding) {\n\t\tif (this.buffer.length > 0) {\n\t\t\tthis.hash.update(this.buffer);\n\t\t}\n\t\tvar digestResult = this.hash.digest(encoding);\n\t\treturn typeof digestResult === \"string\"\n\t\t\t? digestResult\n\t\t\t: digestResult.toString();\n\t}\n}\n\n/**\n * istanbul ignore next\n */\nclass DebugHash extends Hash {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.string = \"\";\n\t}\n\n\t/**\n\t * Update hash {@link https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}\n\t * @param {string|Buffer} data data\n\t * @param {string=} inputEncoding data encoding\n\t * @returns {this} updated hash\n\t */\n\tupdate(data, inputEncoding) {\n\t\tif (typeof data !== \"string\") data = data.toString(\"utf-8\");\n\t\tthis.string += data;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calculates the digest {@link https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}\n\t * @param {string=} encoding encoding of the return value\n\t * @returns {string|Buffer} digest\n\t */\n\tdigest(encoding) {\n\t\treturn this.string.replace(/[^a-z0-9]+/gi, m =>\n\t\t\tBuffer.from(m).toString(\"hex\")\n\t\t);\n\t}\n}\n\n/**\n * Creates a hash by name or function\n * @param {string | HashConstructor} algorithm the algorithm name or a constructor creating a hash\n * @returns {Hash} the hash\n */\nmodule.exports = algorithm => {\n\tif (typeof algorithm === \"function\") {\n\t\treturn new BulkUpdateDecorator(new algorithm());\n\t}\n\tswitch (algorithm) {\n\t\t// TODO add non-cryptographic algorithm here\n\t\tcase \"debug\":\n\t\t\treturn new DebugHash();\n\t\tdefault:\n\t\t\treturn new BulkUpdateDecorator(require(\"crypto\").createHash(algorithm));\n\t}\n};\n","\"use strict\";\n\n// Simulations show these probabilities for a single change\n// 93.1% that one group is invalidated\n// 4.8% that two groups are invalidated\n// 1.1% that 3 groups are invalidated\n// 0.1% that 4 or more groups are invalidated\n//\n// And these for removing/adding 10 lexically adjacent files\n// 64.5% that one group is invalidated\n// 24.8% that two groups are invalidated\n// 7.8% that 3 groups are invalidated\n// 2.7% that 4 or more groups are invalidated\n//\n// And these for removing/adding 3 random files\n// 0% that one group is invalidated\n// 3.7% that two groups are invalidated\n// 80.8% that 3 groups are invalidated\n// 12.3% that 4 groups are invalidated\n// 3.2% that 5 or more groups are invalidated\n\n/**\n *\n * @param {string} a key\n * @param {string} b key\n * @returns {number} the similarity as number\n */\nconst similarity = (a, b) => {\n\tconst l = Math.min(a.length, b.length);\n\tlet dist = 0;\n\tfor (let i = 0; i < l; i++) {\n\t\tconst ca = a.charCodeAt(i);\n\t\tconst cb = b.charCodeAt(i);\n\t\tdist += Math.max(0, 10 - Math.abs(ca - cb));\n\t}\n\treturn dist;\n};\n\n/**\n * @param {string} a key\n * @param {string} b key\n * @returns {string} the common part and a single char for the difference\n */\nconst getName = (a, b) => {\n\tconst l = Math.min(a.length, b.length);\n\tlet r = \"\";\n\tfor (let i = 0; i < l; i++) {\n\t\tconst ca = a.charAt(i);\n\t\tconst cb = b.charAt(i);\n\t\tr += ca;\n\t\tif (ca === cb) {\n\t\t\tcontinue;\n\t\t}\n\t\treturn r;\n\t}\n\treturn a;\n};\n\n/**\n * @template T\n */\nclass Node {\n\t/**\n\t * @param {T} item item\n\t * @param {string} key key\n\t * @param {number} size size\n\t */\n\tconstructor(item, key, size) {\n\t\tthis.item = item;\n\t\tthis.key = key;\n\t\tthis.size = size;\n\t}\n}\n\n/**\n * @template T\n */\nclass Group {\n\t/**\n\t * @param {Node<T>[]} nodes nodes\n\t * @param {number[]} similarities similarities between the nodes (length = nodes.length - 1)\n\t */\n\tconstructor(nodes, similarities) {\n\t\tthis.nodes = nodes;\n\t\tthis.similarities = similarities;\n\t\tthis.size = nodes.reduce((size, node) => size + node.size, 0);\n\t\t/** @type {string} */\n\t\tthis.key = undefined;\n\t}\n}\n\n/**\n * @template T\n * @typedef {Object} GroupedItems<T>\n * @property {string} key\n * @property {T[]} items\n * @property {number} size\n */\n\n/**\n * @template T\n * @typedef {Object} Options\n * @property {number} maxSize maximum size of a group\n * @property {number} minSize minimum size of a group (preferred over maximum size)\n * @property {Iterable<T>} items a list of items\n * @property {function(T): number} getSize function to get size of an item\n * @property {function(T): string} getKey function to get the key of an item\n */\n\n/**\n * @template T\n * @param {Options<T>} options options object\n * @returns {GroupedItems<T>[]} grouped items\n */\nmodule.exports = ({ maxSize, minSize, items, getSize, getKey }) => {\n\t/** @type {Group<T>[]} */\n\tconst result = [];\n\n\tconst nodes = Array.from(\n\t\titems,\n\t\titem => new Node(item, getKey(item), getSize(item))\n\t);\n\n\t/** @type {Node<T>[]} */\n\tconst initialNodes = [];\n\n\t// lexically ordering of keys\n\tnodes.sort((a, b) => {\n\t\tif (a.key < b.key) return -1;\n\t\tif (a.key > b.key) return 1;\n\t\treturn 0;\n\t});\n\n\t// return nodes bigger than maxSize directly as group\n\tfor (const node of nodes) {\n\t\tif (node.size >= maxSize) {\n\t\t\tresult.push(new Group([node], []));\n\t\t} else {\n\t\t\tinitialNodes.push(node);\n\t\t}\n\t}\n\n\tif (initialNodes.length > 0) {\n\t\t// calculate similarities between lexically adjacent nodes\n\t\t/** @type {number[]} */\n\t\tconst similarities = [];\n\t\tfor (let i = 1; i < initialNodes.length; i++) {\n\t\t\tconst a = initialNodes[i - 1];\n\t\t\tconst b = initialNodes[i];\n\t\t\tsimilarities.push(similarity(a.key, b.key));\n\t\t}\n\n\t\tconst initialGroup = new Group(initialNodes, similarities);\n\n\t\tif (initialGroup.size < minSize) {\n\t\t\t// We hit an edgecase where the working set is already smaller than minSize\n\t\t\t// We merge it with the smallest result node to keep minSize intact\n\t\t\tif (result.length > 0) {\n\t\t\t\tconst smallestGroup = result.reduce((min, group) =>\n\t\t\t\t\tmin.size > group.size ? group : min\n\t\t\t\t);\n\t\t\t\tfor (const node of initialGroup.nodes) smallestGroup.nodes.push(node);\n\t\t\t\tsmallestGroup.nodes.sort((a, b) => {\n\t\t\t\t\tif (a.key < b.key) return -1;\n\t\t\t\t\tif (a.key > b.key) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// There are no other nodes\n\t\t\t\t// We use all nodes and have to accept that it's smaller than minSize\n\t\t\t\tresult.push(initialGroup);\n\t\t\t}\n\t\t} else {\n\t\t\tconst queue = [initialGroup];\n\n\t\t\twhile (queue.length) {\n\t\t\t\tconst group = queue.pop();\n\t\t\t\t// only groups bigger than maxSize need to be splitted\n\t\t\t\tif (group.size < maxSize) {\n\t\t\t\t\tresult.push(group);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// find unsplittable area from left and right\n\t\t\t\t// going minSize from left and right\n\t\t\t\t// at least one node need to be included otherwise we get stuck\n\t\t\t\tlet left = 0;\n\t\t\t\tlet leftSize = 0;\n\t\t\t\twhile (leftSize <= minSize) {\n\t\t\t\t\tleftSize += group.nodes[left].size;\n\t\t\t\t\tleft++;\n\t\t\t\t}\n\t\t\t\tlet right = group.nodes.length - 1;\n\t\t\t\tlet rightSize = 0;\n\t\t\t\twhile (rightSize <= minSize) {\n\t\t\t\t\trightSize += group.nodes[right].size;\n\t\t\t\t\tright--;\n\t\t\t\t}\n\n\t\t\t\tif (left - 1 > right) {\n\t\t\t\t\t// can't split group while holding minSize\n\t\t\t\t\t// because minSize is preferred of maxSize we return\n\t\t\t\t\t// the group here even while it's too big\n\t\t\t\t\t// To avoid this make sure maxSize > minSize * 3\n\t\t\t\t\tresult.push(group);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (left <= right) {\n\t\t\t\t\t// when there is a area between left and right\n\t\t\t\t\t// we look for best split point\n\t\t\t\t\t// we split at the minimum similarity\n\t\t\t\t\t// here key space is separated the most\n\t\t\t\t\tlet best = left - 1;\n\t\t\t\t\tlet bestSimilarity = group.similarities[best];\n\t\t\t\t\tfor (let i = left; i <= right; i++) {\n\t\t\t\t\t\tconst similarity = group.similarities[i];\n\t\t\t\t\t\tif (similarity < bestSimilarity) {\n\t\t\t\t\t\t\tbest = i;\n\t\t\t\t\t\t\tbestSimilarity = similarity;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tleft = best + 1;\n\t\t\t\t\tright = best;\n\t\t\t\t}\n\n\t\t\t\t// create two new groups for left and right area\n\t\t\t\t// and queue them up\n\t\t\t\tconst rightNodes = [group.nodes[right + 1]];\n\t\t\t\t/** @type {number[]} */\n\t\t\t\tconst rightSimilaries = [];\n\t\t\t\tfor (let i = right + 2; i < group.nodes.length; i++) {\n\t\t\t\t\trightSimilaries.push(group.similarities[i - 1]);\n\t\t\t\t\trightNodes.push(group.nodes[i]);\n\t\t\t\t}\n\t\t\t\tqueue.push(new Group(rightNodes, rightSimilaries));\n\n\t\t\t\tconst leftNodes = [group.nodes[0]];\n\t\t\t\t/** @type {number[]} */\n\t\t\t\tconst leftSimilaries = [];\n\t\t\t\tfor (let i = 1; i < left; i++) {\n\t\t\t\t\tleftSimilaries.push(group.similarities[i - 1]);\n\t\t\t\t\tleftNodes.push(group.nodes[i]);\n\t\t\t\t}\n\t\t\t\tqueue.push(new Group(leftNodes, leftSimilaries));\n\t\t\t}\n\t\t}\n\t}\n\n\t// lexically ordering\n\tresult.sort((a, b) => {\n\t\tif (a.nodes[0].key < b.nodes[0].key) return -1;\n\t\tif (a.nodes[0].key > b.nodes[0].key) return 1;\n\t\treturn 0;\n\t});\n\n\t// give every group a name\n\tfor (let i = 0; i < result.length; i++) {\n\t\tconst group = result[i];\n\t\tconst first = group.nodes[0];\n\t\tconst last = group.nodes[group.nodes.length - 1];\n\t\tlet name = getName(first.key, last.key);\n\t\tgroup.key = name;\n\t}\n\n\t// return the results\n\treturn result.map(group => {\n\t\t/** @type {GroupedItems} */\n\t\treturn {\n\t\t\tkey: group.key,\n\t\t\titems: group.nodes.map(node => node.item),\n\t\t\tsize: group.size\n\t\t};\n\t});\n};\n","\"use strict\";\nconst path = require(\"path\");\n\n/**\n * @typedef {Object} MakeRelativePathsCache\n * @property {Map<string, Map<string, string>>=} relativePaths\n */\n\n/**\n *\n * @param {string} maybeAbsolutePath path to check\n * @returns {boolean} returns true if path is \"Absolute Path\"-like\n */\nconst looksLikeAbsolutePath = maybeAbsolutePath => {\n\tif (/^\\/.*\\/$/.test(maybeAbsolutePath)) {\n\t\t// this 'path' is actually a regexp generated by dynamic requires.\n\t\t// Don't treat it as an absolute path.\n\t\treturn false;\n\t}\n\treturn /^(?:[a-z]:\\\\|\\/)/i.test(maybeAbsolutePath);\n};\n\n/**\n *\n * @param {string} p path to normalize\n * @returns {string} normalized version of path\n */\nconst normalizePathSeparator = p => p.replace(/\\\\/g, \"/\");\n\n/**\n *\n * @param {string} context context for relative path\n * @param {string} identifier identifier for path\n * @returns {string} a converted relative path\n */\nconst _makePathsRelative = (context, identifier) => {\n\treturn identifier\n\t\t.split(/([|! ])/)\n\t\t.map(str =>\n\t\t\tlooksLikeAbsolutePath(str)\n\t\t\t\t? normalizePathSeparator(path.relative(context, str))\n\t\t\t\t: str\n\t\t)\n\t\t.join(\"\");\n};\n\n/**\n *\n * @param {string} context context used to create relative path\n * @param {string} identifier identifier used to create relative path\n * @param {MakeRelativePathsCache=} cache the cache object being set\n * @returns {string} the returned relative path\n */\nexports.makePathsRelative = (context, identifier, cache) => {\n\tif (!cache) return _makePathsRelative(context, identifier);\n\n\tconst relativePaths =\n\t\tcache.relativePaths || (cache.relativePaths = new Map());\n\n\tlet cachedResult;\n\tlet contextCache = relativePaths.get(context);\n\tif (contextCache === undefined) {\n\t\trelativePaths.set(context, (contextCache = new Map()));\n\t} else {\n\t\tcachedResult = contextCache.get(identifier);\n\t}\n\n\tif (cachedResult !== undefined) {\n\t\treturn cachedResult;\n\t} else {\n\t\tconst relativePath = _makePathsRelative(context, identifier);\n\t\tcontextCache.set(identifier, relativePath);\n\t\treturn relativePath;\n\t}\n};\n\n/**\n * @param {string} context absolute context path\n * @param {string} request any request string may containing absolute paths, query string, etc.\n * @returns {string} a new request string avoiding absolute paths when possible\n */\nexports.contextify = (context, request) => {\n\treturn request\n\t\t.split(\"!\")\n\t\t.map(r => {\n\t\t\tconst splitPath = r.split(\"?\", 2);\n\t\t\tif (/^[a-zA-Z]:\\\\/.test(splitPath[0])) {\n\t\t\t\tsplitPath[0] = path.win32.relative(context, splitPath[0]);\n\t\t\t\tif (!/^[a-zA-Z]:\\\\/.test(splitPath[0])) {\n\t\t\t\t\tsplitPath[0] = splitPath[0].replace(/\\\\/g, \"/\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (/^\\//.test(splitPath[0])) {\n\t\t\t\tsplitPath[0] = path.posix.relative(context, splitPath[0]);\n\t\t\t}\n\t\t\tif (!/^(\\.\\.\\/|\\/|[a-zA-Z]:\\\\)/.test(splitPath[0])) {\n\t\t\t\tsplitPath[0] = \"./\" + splitPath[0];\n\t\t\t}\n\t\t\treturn splitPath.join(\"?\");\n\t\t})\n\t\t.join(\"!\");\n};\n","/**\n * convert an object into its 2D array equivalent to be turned\n * into an ES6 map\n *\n * @param {object} obj any object type that works with Object.keys()\n * @returns {Map<TODO, TODO>} an ES6 Map of KV pairs\n */\nmodule.exports = function objectToMap(obj) {\n\treturn new Map(\n\t\tObject.keys(obj).map(key => {\n\t\t\t/** @type {[string, string]} */\n\t\t\tconst pair = [key, obj[key]];\n\t\t\treturn pair;\n\t\t})\n\t);\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Gajus Kuizinas @gajus\n*/\n\"use strict\";\n\nconst Ajv = require(\"ajv\");\nconst ajv = new Ajv({\n\terrorDataPath: \"configuration\",\n\tallErrors: true,\n\tverbose: true\n});\nrequire(\"ajv-keywords\")(ajv, [\"instanceof\"]);\nrequire(\"../schemas/ajv.absolutePath\")(ajv);\n\nconst validateSchema = (schema, options) => {\n\tif (Array.isArray(options)) {\n\t\tconst errors = options.map(options => validateObject(schema, options));\n\t\terrors.forEach((list, idx) => {\n\t\t\tconst applyPrefix = err => {\n\t\t\t\terr.dataPath = `[${idx}]${err.dataPath}`;\n\t\t\t\tif (err.children) {\n\t\t\t\t\terr.children.forEach(applyPrefix);\n\t\t\t\t}\n\t\t\t};\n\t\t\tlist.forEach(applyPrefix);\n\t\t});\n\t\treturn errors.reduce((arr, items) => {\n\t\t\treturn arr.concat(items);\n\t\t}, []);\n\t} else {\n\t\treturn validateObject(schema, options);\n\t}\n};\n\nconst validateObject = (schema, options) => {\n\tconst validate = ajv.compile(schema);\n\tconst valid = validate(options);\n\treturn valid ? [] : filterErrors(validate.errors);\n};\n\nconst filterErrors = errors => {\n\tlet newErrors = [];\n\tfor (const err of errors) {\n\t\tconst dataPath = err.dataPath;\n\t\tlet children = [];\n\t\tnewErrors = newErrors.filter(oldError => {\n\t\t\tif (oldError.dataPath.includes(dataPath)) {\n\t\t\t\tif (oldError.children) {\n\t\t\t\t\tchildren = children.concat(oldError.children.slice(0));\n\t\t\t\t}\n\t\t\t\toldError.children = undefined;\n\t\t\t\tchildren.push(oldError);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tif (children.length) {\n\t\t\terr.children = children;\n\t\t}\n\t\tnewErrors.push(err);\n\t}\n\n\treturn newErrors;\n};\n\nmodule.exports = validateSchema;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\n\nmodule.exports = class UnsupportedWebAssemblyFeatureError extends WebpackError {\n\t/** @param {string} message Error message */\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = \"UnsupportedWebAssemblyFeatureError\";\n\t\tthis.hideStack = true;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst UnsupportedWebAssemblyFeatureError = require(\"./UnsupportedWebAssemblyFeatureError\");\n\nclass WasmFinalizeExportsPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"WasmFinalizeExportsPlugin\", compilation => {\n\t\t\tcompilation.hooks.finishModules.tap(\n\t\t\t\t\"WasmFinalizeExportsPlugin\",\n\t\t\t\tmodules => {\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t// 1. if a WebAssembly module\n\t\t\t\t\t\tif (module.type.startsWith(\"webassembly\") === true) {\n\t\t\t\t\t\t\tconst jsIncompatibleExports =\n\t\t\t\t\t\t\t\tmodule.buildMeta.jsIncompatibleExports;\n\n\t\t\t\t\t\t\tif (jsIncompatibleExports === undefined) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor (const reason of module.reasons) {\n\t\t\t\t\t\t\t\t// 2. is referenced by a non-WebAssembly module\n\t\t\t\t\t\t\t\tif (reason.module.type.startsWith(\"webassembly\") === false) {\n\t\t\t\t\t\t\t\t\tconst ref = compilation.getDependencyReference(\n\t\t\t\t\t\t\t\t\t\treason.module,\n\t\t\t\t\t\t\t\t\t\treason.dependency\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tif (!ref) continue;\n\n\t\t\t\t\t\t\t\t\tconst importedNames = ref.importedNames;\n\n\t\t\t\t\t\t\t\t\tif (Array.isArray(importedNames)) {\n\t\t\t\t\t\t\t\t\t\timportedNames.forEach(name => {\n\t\t\t\t\t\t\t\t\t\t\t// 3. and uses a func with an incompatible JS signature\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\tjsIncompatibleExports,\n\t\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t// 4. error\n\t\t\t\t\t\t\t\t\t\t\t\t/** @type {any} */\n\t\t\t\t\t\t\t\t\t\t\t\tconst error = new UnsupportedWebAssemblyFeatureError(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`Export \"${name}\" with ${jsIncompatibleExports[name]} can only be used for direct wasm to wasm dependencies`\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\terror.module = module;\n\t\t\t\t\t\t\t\t\t\t\t\terror.origin = reason.module;\n\t\t\t\t\t\t\t\t\t\t\t\terror.originLoc = reason.dependency.loc;\n\t\t\t\t\t\t\t\t\t\t\t\terror.dependencies = [reason.dependency];\n\t\t\t\t\t\t\t\t\t\t\t\tcompilation.errors.push(error);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = WasmFinalizeExportsPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst WebAssemblyUtils = require(\"./WebAssemblyUtils\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../MainTemplate\")} MainTemplate */\n\n// Get all wasm modules\nconst getAllWasmModules = chunk => {\n\tconst wasmModules = chunk.getAllAsyncChunks();\n\tconst array = [];\n\tfor (const chunk of wasmModules) {\n\t\tfor (const m of chunk.modulesIterable) {\n\t\t\tif (m.type.startsWith(\"webassembly\")) {\n\t\t\t\tarray.push(m);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn array;\n};\n\n/**\n * generates the import object function for a module\n * @param {Module} module the module\n * @param {boolean} mangle mangle imports\n * @returns {string} source code\n */\nconst generateImportObject = (module, mangle) => {\n\tconst waitForInstances = new Map();\n\tconst properties = [];\n\tconst usedWasmDependencies = WebAssemblyUtils.getUsedDependencies(\n\t\tmodule,\n\t\tmangle\n\t);\n\tfor (const usedDep of usedWasmDependencies) {\n\t\tconst dep = usedDep.dependency;\n\t\tconst importedModule = dep.module;\n\t\tconst exportName = dep.name;\n\t\tconst usedName = importedModule && importedModule.isUsed(exportName);\n\t\tconst description = dep.description;\n\t\tconst direct = dep.onlyDirectImport;\n\n\t\tconst module = usedDep.module;\n\t\tconst name = usedDep.name;\n\n\t\tif (direct) {\n\t\t\tconst instanceVar = `m${waitForInstances.size}`;\n\t\t\twaitForInstances.set(instanceVar, importedModule.id);\n\t\t\tproperties.push({\n\t\t\t\tmodule,\n\t\t\t\tname,\n\t\t\t\tvalue: `${instanceVar}[${JSON.stringify(usedName)}]`\n\t\t\t});\n\t\t} else {\n\t\t\tconst params = description.signature.params.map(\n\t\t\t\t(param, k) => \"p\" + k + param.valtype\n\t\t\t);\n\n\t\t\tconst mod = `installedModules[${JSON.stringify(importedModule.id)}]`;\n\t\t\tconst func = `${mod}.exports[${JSON.stringify(usedName)}]`;\n\n\t\t\tproperties.push({\n\t\t\t\tmodule,\n\t\t\t\tname,\n\t\t\t\tvalue: Template.asString([\n\t\t\t\t\t(importedModule.type.startsWith(\"webassembly\")\n\t\t\t\t\t\t? `${mod} ? ${func} : `\n\t\t\t\t\t\t: \"\") + `function(${params}) {`,\n\t\t\t\t\tTemplate.indent([`return ${func}(${params});`]),\n\t\t\t\t\t\"}\"\n\t\t\t\t])\n\t\t\t});\n\t\t}\n\t}\n\n\tlet importObject;\n\tif (mangle) {\n\t\timportObject = [\n\t\t\t\"return {\",\n\t\t\tTemplate.indent([\n\t\t\t\tproperties.map(p => `${JSON.stringify(p.name)}: ${p.value}`).join(\",\\n\")\n\t\t\t]),\n\t\t\t\"};\"\n\t\t];\n\t} else {\n\t\tconst propertiesByModule = new Map();\n\t\tfor (const p of properties) {\n\t\t\tlet list = propertiesByModule.get(p.module);\n\t\t\tif (list === undefined) {\n\t\t\t\tpropertiesByModule.set(p.module, (list = []));\n\t\t\t}\n\t\t\tlist.push(p);\n\t\t}\n\t\timportObject = [\n\t\t\t\"return {\",\n\t\t\tTemplate.indent([\n\t\t\t\tArray.from(propertiesByModule, ([module, list]) => {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t`${JSON.stringify(module)}: {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\tlist.map(p => `${JSON.stringify(p.name)}: ${p.value}`).join(\",\\n\")\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]);\n\t\t\t\t}).join(\",\\n\")\n\t\t\t]),\n\t\t\t\"};\"\n\t\t];\n\t}\n\n\tif (waitForInstances.size === 1) {\n\t\tconst moduleId = Array.from(waitForInstances.values())[0];\n\t\tconst promise = `installedWasmModules[${JSON.stringify(moduleId)}]`;\n\t\tconst variable = Array.from(waitForInstances.keys())[0];\n\t\treturn Template.asString([\n\t\t\t`${JSON.stringify(module.id)}: function() {`,\n\t\t\tTemplate.indent([\n\t\t\t\t`return promiseResolve().then(function() { return ${promise}; }).then(function(${variable}) {`,\n\t\t\t\tTemplate.indent(importObject),\n\t\t\t\t\"});\"\n\t\t\t]),\n\t\t\t\"},\"\n\t\t]);\n\t} else if (waitForInstances.size > 0) {\n\t\tconst promises = Array.from(\n\t\t\twaitForInstances.values(),\n\t\t\tid => `installedWasmModules[${JSON.stringify(id)}]`\n\t\t).join(\", \");\n\t\tconst variables = Array.from(\n\t\t\twaitForInstances.keys(),\n\t\t\t(name, i) => `${name} = array[${i}]`\n\t\t).join(\", \");\n\t\treturn Template.asString([\n\t\t\t`${JSON.stringify(module.id)}: function() {`,\n\t\t\tTemplate.indent([\n\t\t\t\t`return promiseResolve().then(function() { return Promise.all([${promises}]); }).then(function(array) {`,\n\t\t\t\tTemplate.indent([`var ${variables};`, ...importObject]),\n\t\t\t\t\"});\"\n\t\t\t]),\n\t\t\t\"},\"\n\t\t]);\n\t} else {\n\t\treturn Template.asString([\n\t\t\t`${JSON.stringify(module.id)}: function() {`,\n\t\t\tTemplate.indent(importObject),\n\t\t\t\"},\"\n\t\t]);\n\t}\n};\n\nclass WasmMainTemplatePlugin {\n\tconstructor({ generateLoadBinaryCode, supportsStreaming, mangleImports }) {\n\t\tthis.generateLoadBinaryCode = generateLoadBinaryCode;\n\t\tthis.supportsStreaming = supportsStreaming;\n\t\tthis.mangleImports = mangleImports;\n\t}\n\n\t/**\n\t * @param {MainTemplate} mainTemplate main template\n\t * @returns {void}\n\t */\n\tapply(mainTemplate) {\n\t\tmainTemplate.hooks.localVars.tap(\n\t\t\t\"WasmMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tconst wasmModules = getAllWasmModules(chunk);\n\t\t\t\tif (wasmModules.length === 0) return source;\n\t\t\t\tconst importObjects = wasmModules.map(module => {\n\t\t\t\t\treturn generateImportObject(module, this.mangleImports);\n\t\t\t\t});\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// object to store loaded and loading wasm modules\",\n\t\t\t\t\t\"var installedWasmModules = {};\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t// This function is used to delay reading the installed wasm module promises\n\t\t\t\t\t// by a microtask. Sorting them doesn't help because there are egdecases where\n\t\t\t\t\t// sorting is not possible (modules splitted into different chunks).\n\t\t\t\t\t// So we not even trying and solve this by a microtask delay.\n\t\t\t\t\t\"function promiseResolve() { return Promise.resolve(); }\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"var wasmImportObjects = {\",\n\t\t\t\t\tTemplate.indent(importObjects),\n\t\t\t\t\t\"};\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireEnsure.tap(\n\t\t\t\"WasmMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst webassemblyModuleFilename =\n\t\t\t\t\tmainTemplate.outputOptions.webassemblyModuleFilename;\n\n\t\t\t\tconst chunkModuleMaps = chunk.getChunkModuleMaps(m =>\n\t\t\t\t\tm.type.startsWith(\"webassembly\")\n\t\t\t\t);\n\t\t\t\tif (Object.keys(chunkModuleMaps.id).length === 0) return source;\n\t\t\t\tconst wasmModuleSrcPath = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(webassemblyModuleFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\tmodule: {\n\t\t\t\t\t\t\tid: '\" + wasmModuleId + \"',\n\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\tchunkModuleMaps.hash\n\t\t\t\t\t\t\t)}[wasmModuleId] + \"`,\n\t\t\t\t\t\t\thashWithLength(length) {\n\t\t\t\t\t\t\t\tconst shortChunkHashMap = Object.create(null);\n\t\t\t\t\t\t\t\tfor (const wasmModuleId of Object.keys(chunkModuleMaps.hash)) {\n\t\t\t\t\t\t\t\t\tif (typeof chunkModuleMaps.hash[wasmModuleId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[wasmModuleId] = chunkModuleMaps.hash[\n\t\t\t\t\t\t\t\t\t\t\twasmModuleId\n\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t\t\t)}[wasmModuleId] + \"`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst createImportObject = content =>\n\t\t\t\t\tthis.mangleImports\n\t\t\t\t\t\t? `{ ${JSON.stringify(\n\t\t\t\t\t\t\t\tWebAssemblyUtils.MANGLED_MODULE\n\t\t\t\t\t\t  )}: ${content} }`\n\t\t\t\t\t\t: content;\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// Fetch + compile chunk loading for webassembly\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t`var wasmModules = ${JSON.stringify(\n\t\t\t\t\t\tchunkModuleMaps.id\n\t\t\t\t\t)}[chunkId] || [];`,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"wasmModules.forEach(function(wasmModuleId) {\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"var installedWasmModuleData = installedWasmModules[wasmModuleId];\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t'// a Promise means \"currently loading\" or \"already loaded\".',\n\t\t\t\t\t\t\"if(installedWasmModuleData)\",\n\t\t\t\t\t\tTemplate.indent([\"promises.push(installedWasmModuleData);\"]),\n\t\t\t\t\t\t\"else {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`var importObject = wasmImportObjects[wasmModuleId]();`,\n\t\t\t\t\t\t\t`var req = ${this.generateLoadBinaryCode(wasmModuleSrcPath)};`,\n\t\t\t\t\t\t\t\"var promise;\",\n\t\t\t\t\t\t\tthis.supportsStreaming\n\t\t\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\t\t\"if(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"promise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(items[0], ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items[1]\"\n\t\t\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"} else if(typeof WebAssembly.instantiateStreaming === 'function') {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t`promise = WebAssembly.instantiateStreaming(req, ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t: Template.asString([\n\t\t\t\t\t\t\t\t\t\t\"if(importObject instanceof Promise) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\",\n\t\t\t\t\t\t\t\t\t\t\t\"promise = Promise.all([\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"bytesPromise.then(function(bytes) { return WebAssembly.compile(bytes); }),\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"]).then(function(items) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(items[0], ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items[1]\"\n\t\t\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t  ]),\n\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\",\n\t\t\t\t\t\t\t\t\"promise = bytesPromise.then(function(bytes) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(bytes, ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"promises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`return ${mainTemplate.requireFn}.w[wasmModuleId] = (res.instance || res).exports;`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}));\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"});\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\"WasmMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (!chunk.hasModuleInGraph(m => m.type.startsWith(\"webassembly\"))) {\n\t\t\t\t\treturn source;\n\t\t\t\t}\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// object with all WebAssembly.instance exports\",\n\t\t\t\t\t`${mainTemplate.requireFn}.w = {};`\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hash.tap(\"WasmMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"WasmMainTemplatePlugin\");\n\t\t\thash.update(\"2\");\n\t\t});\n\t}\n}\n\nmodule.exports = WasmMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Generator = require(\"../Generator\");\nconst Template = require(\"../Template\");\nconst WebAssemblyUtils = require(\"./WebAssemblyUtils\");\nconst { RawSource } = require(\"webpack-sources\");\n\nconst { editWithAST, addWithAST } = require(\"@webassemblyjs/wasm-edit\");\nconst { decode } = require(\"@webassemblyjs/wasm-parser\");\nconst t = require(\"@webassemblyjs/ast\");\nconst {\n\tmoduleContextFromModuleAST\n} = require(\"@webassemblyjs/helper-module-context\");\n\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"./WebAssemblyUtils\").UsedWasmDependency} UsedWasmDependency */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\").DependencyTemplate} DependencyTemplate */\n\n/**\n * @typedef {(ArrayBuffer) => ArrayBuffer} ArrayBufferTransform\n */\n\n/**\n * @template T\n * @param {Function[]} fns transforms\n * @returns {Function} composed transform\n */\nconst compose = (...fns) => {\n\treturn fns.reduce(\n\t\t(prevFn, nextFn) => {\n\t\t\treturn value => nextFn(prevFn(value));\n\t\t},\n\t\tvalue => value\n\t);\n};\n\n// TODO replace with @callback\n\n/**\n * Removes the start instruction\n *\n * @param {Object} state unused state\n * @returns {ArrayBufferTransform} transform\n */\nconst removeStartFunc = state => bin => {\n\treturn editWithAST(state.ast, bin, {\n\t\tStart(path) {\n\t\t\tpath.remove();\n\t\t}\n\t});\n};\n\n/**\n * Get imported globals\n *\n * @param {Object} ast Module's AST\n * @returns {Array<t.ModuleImport>} - nodes\n */\nconst getImportedGlobals = ast => {\n\tconst importedGlobals = [];\n\n\tt.traverse(ast, {\n\t\tModuleImport({ node }) {\n\t\t\tif (t.isGlobalType(node.descr) === true) {\n\t\t\t\timportedGlobals.push(node);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn importedGlobals;\n};\n\nconst getCountImportedFunc = ast => {\n\tlet count = 0;\n\n\tt.traverse(ast, {\n\t\tModuleImport({ node }) {\n\t\t\tif (t.isFuncImportDescr(node.descr) === true) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn count;\n};\n\n/**\n * Get next type index\n *\n * @param {Object} ast Module's AST\n * @returns {t.Index} - index\n */\nconst getNextTypeIndex = ast => {\n\tconst typeSectionMetadata = t.getSectionMetadata(ast, \"type\");\n\n\tif (typeSectionMetadata === undefined) {\n\t\treturn t.indexLiteral(0);\n\t}\n\n\treturn t.indexLiteral(typeSectionMetadata.vectorOfSize.value);\n};\n\n/**\n * Get next func index\n *\n * The Func section metadata provide informations for implemented funcs\n * in order to have the correct index we shift the index by number of external\n * functions.\n *\n * @param {Object} ast Module's AST\n * @param {Number} countImportedFunc number of imported funcs\n * @returns {t.Index} - index\n */\nconst getNextFuncIndex = (ast, countImportedFunc) => {\n\tconst funcSectionMetadata = t.getSectionMetadata(ast, \"func\");\n\n\tif (funcSectionMetadata === undefined) {\n\t\treturn t.indexLiteral(0 + countImportedFunc);\n\t}\n\n\tconst vectorOfSize = funcSectionMetadata.vectorOfSize.value;\n\n\treturn t.indexLiteral(vectorOfSize + countImportedFunc);\n};\n\n/**\n * Create a init instruction for a global\n * @param {t.GlobalType} globalType the global type\n * @returns {t.Instruction} init expression\n */\nconst createDefaultInitForGlobal = globalType => {\n\tif (globalType.valtype[0] === \"i\") {\n\t\t// create NumberLiteral global initializer\n\t\treturn t.objectInstruction(\"const\", globalType.valtype, [\n\t\t\tt.numberLiteralFromRaw(66)\n\t\t]);\n\t} else if (globalType.valtype[0] === \"f\") {\n\t\t// create FloatLiteral global initializer\n\t\treturn t.objectInstruction(\"const\", globalType.valtype, [\n\t\t\tt.floatLiteral(66, false, false, \"66\")\n\t\t]);\n\t} else {\n\t\tthrow new Error(\"unknown type: \" + globalType.valtype);\n\t}\n};\n\n/**\n * Rewrite the import globals:\n * - removes the ModuleImport instruction\n * - injects at the same offset a mutable global of the same time\n *\n * Since the imported globals are before the other global declarations, our\n * indices will be preserved.\n *\n * Note that globals will become mutable.\n *\n * @param {Object} state unused state\n * @returns {ArrayBufferTransform} transform\n */\nconst rewriteImportedGlobals = state => bin => {\n\tconst additionalInitCode = state.additionalInitCode;\n\tconst newGlobals = [];\n\n\tbin = editWithAST(state.ast, bin, {\n\t\tModuleImport(path) {\n\t\t\tif (t.isGlobalType(path.node.descr) === true) {\n\t\t\t\tconst globalType = path.node.descr;\n\n\t\t\t\tglobalType.mutability = \"var\";\n\n\t\t\t\tconst init = [\n\t\t\t\t\tcreateDefaultInitForGlobal(globalType),\n\t\t\t\t\tt.instruction(\"end\")\n\t\t\t\t];\n\n\t\t\t\tnewGlobals.push(t.global(globalType, init));\n\n\t\t\t\tpath.remove();\n\t\t\t}\n\t\t},\n\n\t\t// in order to preserve non-imported global's order we need to re-inject\n\t\t// those as well\n\t\tGlobal(path) {\n\t\t\tconst { node } = path;\n\t\t\tconst [init] = node.init;\n\n\t\t\tif (init.id === \"get_global\") {\n\t\t\t\tnode.globalType.mutability = \"var\";\n\n\t\t\t\tconst initialGlobalidx = init.args[0];\n\n\t\t\t\tnode.init = [\n\t\t\t\t\tcreateDefaultInitForGlobal(node.globalType),\n\t\t\t\t\tt.instruction(\"end\")\n\t\t\t\t];\n\n\t\t\t\tadditionalInitCode.push(\n\t\t\t\t\t/**\n\t\t\t\t\t * get_global in global initilizer only work for imported globals.\n\t\t\t\t\t * They have the same indices than the init params, so use the\n\t\t\t\t\t * same index.\n\t\t\t\t\t */\n\t\t\t\t\tt.instruction(\"get_local\", [initialGlobalidx]),\n\t\t\t\t\tt.instruction(\"set_global\", [t.indexLiteral(newGlobals.length)])\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tnewGlobals.push(node);\n\n\t\t\tpath.remove();\n\t\t}\n\t});\n\n\t// Add global declaration instructions\n\treturn addWithAST(state.ast, bin, newGlobals);\n};\n\n/**\n * Rewrite the export names\n * @param {Object} state state\n * @param {Object} state.ast Module's ast\n * @param {Module} state.module Module\n * @param {Set<string>} state.externalExports Module\n * @returns {ArrayBufferTransform} transform\n */\nconst rewriteExportNames = ({ ast, module, externalExports }) => bin => {\n\treturn editWithAST(ast, bin, {\n\t\tModuleExport(path) {\n\t\t\tconst isExternal = externalExports.has(path.node.name);\n\t\t\tif (isExternal) {\n\t\t\t\tpath.remove();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst usedName = module.isUsed(path.node.name);\n\t\t\tif (!usedName) {\n\t\t\t\tpath.remove();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpath.node.name = usedName;\n\t\t}\n\t});\n};\n\n/**\n * Mangle import names and modules\n * @param {Object} state state\n * @param {Object} state.ast Module's ast\n * @param {Map<string, UsedWasmDependency>} state.usedDependencyMap mappings to mangle names\n * @returns {ArrayBufferTransform} transform\n */\nconst rewriteImports = ({ ast, usedDependencyMap }) => bin => {\n\treturn editWithAST(ast, bin, {\n\t\tModuleImport(path) {\n\t\t\tconst result = usedDependencyMap.get(\n\t\t\t\tpath.node.module + \":\" + path.node.name\n\t\t\t);\n\n\t\t\tif (result !== undefined) {\n\t\t\t\tpath.node.module = result.module;\n\t\t\t\tpath.node.name = result.name;\n\t\t\t}\n\t\t}\n\t});\n};\n\n/**\n * Add an init function.\n *\n * The init function fills the globals given input arguments.\n *\n * @param {Object} state transformation state\n * @param {Object} state.ast Module's ast\n * @param {t.Identifier} state.initFuncId identifier of the init function\n * @param {t.Index} state.startAtFuncOffset index of the start function\n * @param {t.ModuleImport[]} state.importedGlobals list of imported globals\n * @param {t.Instruction[]} state.additionalInitCode list of addition instructions for the init function\n * @param {t.Index} state.nextFuncIndex index of the next function\n * @param {t.Index} state.nextTypeIndex index of the next type\n * @returns {ArrayBufferTransform} transform\n */\nconst addInitFunction = ({\n\tast,\n\tinitFuncId,\n\tstartAtFuncOffset,\n\timportedGlobals,\n\tadditionalInitCode,\n\tnextFuncIndex,\n\tnextTypeIndex\n}) => bin => {\n\tconst funcParams = importedGlobals.map(importedGlobal => {\n\t\t// used for debugging\n\t\tconst id = t.identifier(`${importedGlobal.module}.${importedGlobal.name}`);\n\n\t\treturn t.funcParam(importedGlobal.descr.valtype, id);\n\t});\n\n\tconst funcBody = importedGlobals.reduce((acc, importedGlobal, index) => {\n\t\tconst args = [t.indexLiteral(index)];\n\t\tconst body = [\n\t\t\tt.instruction(\"get_local\", args),\n\t\t\tt.instruction(\"set_global\", args)\n\t\t];\n\n\t\treturn [...acc, ...body];\n\t}, []);\n\n\tif (typeof startAtFuncOffset === \"number\") {\n\t\tfuncBody.push(t.callInstruction(t.numberLiteralFromRaw(startAtFuncOffset)));\n\t}\n\n\tfor (const instr of additionalInitCode) {\n\t\tfuncBody.push(instr);\n\t}\n\n\tfuncBody.push(t.instruction(\"end\"));\n\n\tconst funcResults = [];\n\n\t// Code section\n\tconst funcSignature = t.signature(funcParams, funcResults);\n\tconst func = t.func(initFuncId, funcSignature, funcBody);\n\n\t// Type section\n\tconst functype = t.typeInstruction(undefined, funcSignature);\n\n\t// Func section\n\tconst funcindex = t.indexInFuncSection(nextTypeIndex);\n\n\t// Export section\n\tconst moduleExport = t.moduleExport(\n\t\tinitFuncId.value,\n\t\tt.moduleExportDescr(\"Func\", nextFuncIndex)\n\t);\n\n\treturn addWithAST(ast, bin, [func, moduleExport, funcindex, functype]);\n};\n\n/**\n * Extract mangle mappings from module\n * @param {Module} module current module\n * @param {boolean} mangle mangle imports\n * @returns {Map<string, UsedWasmDependency>} mappings to mangled names\n */\nconst getUsedDependencyMap = (module, mangle) => {\n\t/** @type {Map<string, UsedWasmDependency>} */\n\tconst map = new Map();\n\tfor (const usedDep of WebAssemblyUtils.getUsedDependencies(module, mangle)) {\n\t\tconst dep = usedDep.dependency;\n\t\tconst request = dep.request;\n\t\tconst exportName = dep.name;\n\t\tmap.set(request + \":\" + exportName, usedDep);\n\t}\n\treturn map;\n};\n\nclass WebAssemblyGenerator extends Generator {\n\tconstructor(options) {\n\t\tsuper();\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\n\t * @param {string} type which kind of code should be generated\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, dependencyTemplates, runtimeTemplate, type) {\n\t\tlet bin = module.originalSource().source();\n\n\t\tconst initFuncId = t.identifier(\n\t\t\tArray.isArray(module.usedExports)\n\t\t\t\t? Template.numberToIdentifer(module.usedExports.length)\n\t\t\t\t: \"__webpack_init__\"\n\t\t);\n\n\t\t// parse it\n\t\tconst ast = decode(bin, {\n\t\t\tignoreDataSection: true,\n\t\t\tignoreCodeSection: true,\n\t\t\tignoreCustomNameSection: true\n\t\t});\n\n\t\tconst moduleContext = moduleContextFromModuleAST(ast.body[0]);\n\n\t\tconst importedGlobals = getImportedGlobals(ast);\n\t\tconst countImportedFunc = getCountImportedFunc(ast);\n\t\tconst startAtFuncOffset = moduleContext.getStart();\n\t\tconst nextFuncIndex = getNextFuncIndex(ast, countImportedFunc);\n\t\tconst nextTypeIndex = getNextTypeIndex(ast);\n\n\t\tconst usedDependencyMap = getUsedDependencyMap(\n\t\t\tmodule,\n\t\t\tthis.options.mangleImports\n\t\t);\n\t\tconst externalExports = new Set(\n\t\t\tmodule.dependencies\n\t\t\t\t.filter(d => d instanceof WebAssemblyExportImportedDependency)\n\t\t\t\t.map(d => {\n\t\t\t\t\tconst wasmDep = /** @type {WebAssemblyExportImportedDependency} */ (d);\n\t\t\t\t\treturn wasmDep.exportName;\n\t\t\t\t})\n\t\t);\n\n\t\t/** @type {t.Instruction[]} */\n\t\tconst additionalInitCode = [];\n\n\t\tconst transform = compose(\n\t\t\trewriteExportNames({\n\t\t\t\tast,\n\t\t\t\tmodule,\n\t\t\t\texternalExports\n\t\t\t}),\n\n\t\t\tremoveStartFunc({ ast }),\n\n\t\t\trewriteImportedGlobals({ ast, additionalInitCode }),\n\n\t\t\trewriteImports({\n\t\t\t\tast,\n\t\t\t\tusedDependencyMap\n\t\t\t}),\n\n\t\t\taddInitFunction({\n\t\t\t\tast,\n\t\t\t\tinitFuncId,\n\t\t\t\timportedGlobals,\n\t\t\t\tadditionalInitCode,\n\t\t\t\tstartAtFuncOffset,\n\t\t\t\tnextFuncIndex,\n\t\t\t\tnextTypeIndex\n\t\t\t})\n\t\t);\n\n\t\tconst newBin = transform(bin);\n\n\t\treturn new RawSource(newBin);\n\t}\n}\n\nmodule.exports = WebAssemblyGenerator;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n\n/**\n * @param {Module} module module to get chains from\n * @param {RequestShortener} requestShortener to make readable identifiers\n * @returns {string[]} all chains to the module\n */\nconst getInitialModuleChains = (module, requestShortener) => {\n\tconst queue = [\n\t\t{ head: module, message: module.readableIdentifier(requestShortener) }\n\t];\n\t/** @type {Set<string>} */\n\tconst results = new Set();\n\t/** @type {Set<string>} */\n\tconst incompleteResults = new Set();\n\t/** @type {Set<Module>} */\n\tconst visitedModules = new Set();\n\n\tfor (const chain of queue) {\n\t\tconst { head, message } = chain;\n\t\tlet final = true;\n\t\t/** @type {Set<Module>} */\n\t\tconst alreadyReferencedModules = new Set();\n\t\tfor (const reason of head.reasons) {\n\t\t\tconst newHead = reason.module;\n\t\t\tif (newHead) {\n\t\t\t\tif (!newHead.getChunks().some(c => c.canBeInitial())) continue;\n\t\t\t\tfinal = false;\n\t\t\t\tif (alreadyReferencedModules.has(newHead)) continue;\n\t\t\t\talreadyReferencedModules.add(newHead);\n\t\t\t\tconst moduleName = newHead.readableIdentifier(requestShortener);\n\t\t\t\tconst detail = reason.explanation ? ` (${reason.explanation})` : \"\";\n\t\t\t\tconst newMessage = `${moduleName}${detail} --> ${message}`;\n\t\t\t\tif (visitedModules.has(newHead)) {\n\t\t\t\t\tincompleteResults.add(`... --> ${newMessage}`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvisitedModules.add(newHead);\n\t\t\t\tqueue.push({\n\t\t\t\t\thead: newHead,\n\t\t\t\t\tmessage: newMessage\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfinal = false;\n\t\t\t\tconst newMessage = reason.explanation\n\t\t\t\t\t? `(${reason.explanation}) --> ${message}`\n\t\t\t\t\t: message;\n\t\t\t\tresults.add(newMessage);\n\t\t\t}\n\t\t}\n\t\tif (final) {\n\t\t\tresults.add(message);\n\t\t}\n\t}\n\tfor (const result of incompleteResults) {\n\t\tresults.add(result);\n\t}\n\treturn Array.from(results);\n};\n\nmodule.exports = class WebAssemblyInInitialChunkError extends WebpackError {\n\t/**\n\t * @param {Module} module WASM module\n\t * @param {RequestShortener} requestShortener request shortener\n\t */\n\tconstructor(module, requestShortener) {\n\t\tconst moduleChains = getInitialModuleChains(module, requestShortener);\n\t\tconst message = `WebAssembly module is included in initial chunk.\nThis is not allowed, because WebAssembly download and compilation must happen asynchronous.\nAdd an async splitpoint (i. e. import()) somewhere between your entrypoint and the WebAssembly module:\n${moduleChains.map(s => `* ${s}`).join(\"\\n\")}`;\n\n\t\tsuper(message);\n\t\tthis.name = \"WebAssemblyInInitialChunkError\";\n\t\tthis.hideStack = true;\n\t\tthis.module = module;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Generator = require(\"../Generator\");\nconst Template = require(\"../Template\");\nconst { RawSource } = require(\"webpack-sources\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\").DependencyTemplate} DependencyTemplate */\n\nclass WebAssemblyJavascriptGenerator extends Generator {\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {Map<Function, DependencyTemplate>} dependencyTemplates mapping from dependencies to templates\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\n\t * @param {string} type which kind of code should be generated\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, dependencyTemplates, runtimeTemplate, type) {\n\t\tconst initIdentifer = Array.isArray(module.usedExports)\n\t\t\t? Template.numberToIdentifer(module.usedExports.length)\n\t\t\t: \"__webpack_init__\";\n\n\t\tlet needExportsCopy = false;\n\t\tconst importedModules = new Map();\n\t\tconst initParams = [];\n\t\tlet index = 0;\n\t\tfor (const dep of module.dependencies) {\n\t\t\tconst depAsAny = /** @type {any} */ (dep);\n\t\t\tif (dep.module) {\n\t\t\t\tlet importData = importedModules.get(dep.module);\n\t\t\t\tif (importData === undefined) {\n\t\t\t\t\timportedModules.set(\n\t\t\t\t\t\tdep.module,\n\t\t\t\t\t\t(importData = {\n\t\t\t\t\t\t\timportVar: `m${index}`,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\trequest:\n\t\t\t\t\t\t\t\t\"userRequest\" in depAsAny ? depAsAny.userRequest : undefined,\n\t\t\t\t\t\t\tnames: new Set(),\n\t\t\t\t\t\t\treexports: []\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tif (dep.description.type === \"GlobalType\") {\n\t\t\t\t\t\tconst exportName = dep.name;\n\t\t\t\t\t\tconst usedName = dep.module && dep.module.isUsed(exportName);\n\n\t\t\t\t\t\tif (dep.module) {\n\t\t\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\t\t\tinitParams.push(\n\t\t\t\t\t\t\t\t\truntimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\t\t\tmodule: dep.module,\n\t\t\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\t\t\tcallContext: null\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyExportImportedDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tconst usedName = module.isUsed(dep.exportName);\n\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\tconst exportProp = `${module.exportsArgument}[${JSON.stringify(\n\t\t\t\t\t\t\tusedName\n\t\t\t\t\t\t)}]`;\n\t\t\t\t\t\tconst defineStatement = Template.asString([\n\t\t\t\t\t\t\t`${exportProp} = ${runtimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\tmodule: dep.module,\n\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\tcallContext: null\n\t\t\t\t\t\t\t})};`,\n\t\t\t\t\t\t\t`if(WebAssembly.Global) ${exportProp} = ` +\n\t\t\t\t\t\t\t\t`new WebAssembly.Global({ value: ${JSON.stringify(\n\t\t\t\t\t\t\t\t\tdep.valueType\n\t\t\t\t\t\t\t\t)} }, ${exportProp});`\n\t\t\t\t\t\t]);\n\t\t\t\t\t\timportData.reexports.push(defineStatement);\n\t\t\t\t\t\tneedExportsCopy = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst importsCode = Template.asString(\n\t\t\tArray.from(\n\t\t\t\timportedModules,\n\t\t\t\t([module, { importVar, request, reexports }]) => {\n\t\t\t\t\tconst importStatement = runtimeTemplate.importStatement({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\toriginModule: module\n\t\t\t\t\t});\n\t\t\t\t\treturn importStatement + reexports.join(\"\\n\");\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\t// create source\n\t\tconst source = new RawSource(\n\t\t\t[\n\t\t\t\t'\"use strict\";',\n\t\t\t\t\"// Instantiate WebAssembly module\",\n\t\t\t\t\"var wasmExports = __webpack_require__.w[module.i];\",\n\n\t\t\t\t!Array.isArray(module.usedExports)\n\t\t\t\t\t? `__webpack_require__.r(${module.exportsArgument});`\n\t\t\t\t\t: \"\",\n\n\t\t\t\t// this must be before import for circular dependencies\n\t\t\t\t\"// export exports from WebAssembly module\",\n\t\t\t\tArray.isArray(module.usedExports) && !needExportsCopy\n\t\t\t\t\t? `${module.moduleArgument}.exports = wasmExports;`\n\t\t\t\t\t: \"for(var name in wasmExports) \" +\n\t\t\t\t\t  `if(name != ${JSON.stringify(initIdentifer)}) ` +\n\t\t\t\t\t  `${module.exportsArgument}[name] = wasmExports[name];`,\n\t\t\t\t\"// exec imports from WebAssembly module (for esm order)\",\n\t\t\t\timportsCode,\n\t\t\t\t\"\",\n\t\t\t\t\"// exec wasm module\",\n\t\t\t\t`wasmExports[${JSON.stringify(initIdentifer)}](${initParams.join(\n\t\t\t\t\t\", \"\n\t\t\t\t)})`\n\t\t\t].join(\"\\n\")\n\t\t);\n\t\treturn source;\n\t}\n}\n\nmodule.exports = WebAssemblyJavascriptGenerator;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Generator = require(\"../Generator\");\nconst WebAssemblyParser = require(\"./WebAssemblyParser\");\nconst WebAssemblyGenerator = require(\"./WebAssemblyGenerator\");\nconst WebAssemblyJavascriptGenerator = require(\"./WebAssemblyJavascriptGenerator\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\nconst WebAssemblyInInitialChunkError = require(\"./WebAssemblyInInitialChunkError\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass WebAssemblyModulesPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"WebAssemblyModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tWebAssemblyImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tWebAssemblyExportImportedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"webassembly/experimental\")\n\t\t\t\t\t.tap(\"WebAssemblyModulesPlugin\", () => {\n\t\t\t\t\t\treturn new WebAssemblyParser();\n\t\t\t\t\t});\n\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"webassembly/experimental\")\n\t\t\t\t\t.tap(\"WebAssemblyModulesPlugin\", () => {\n\t\t\t\t\t\treturn Generator.byType({\n\t\t\t\t\t\t\tjavascript: new WebAssemblyJavascriptGenerator(),\n\t\t\t\t\t\t\twebassembly: new WebAssemblyGenerator(this.options)\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.chunkTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"WebAssemblyModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\n\t\t\t\t\t\tfor (const module of chunk.modulesIterable) {\n\t\t\t\t\t\t\tif (module.type && module.type.startsWith(\"webassembly\")) {\n\t\t\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\t\t\toutputOptions.webassemblyModuleFilename;\n\n\t\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\t\t\tthis.renderWebAssembly(\n\t\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\t\tmoduleTemplates.webassembly,\n\t\t\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tidentifier: `webassemblyModule${module.id}`,\n\t\t\t\t\t\t\t\t\thash: module.hash\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.afterChunks.tap(\"WebAssemblyModulesPlugin\", () => {\n\t\t\t\t\tconst initialWasmModules = new Set();\n\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\tif (chunk.canBeInitial()) {\n\t\t\t\t\t\t\tfor (const module of chunk.modulesIterable) {\n\t\t\t\t\t\t\t\tif (module.type.startsWith(\"webassembly\")) {\n\t\t\t\t\t\t\t\t\tinitialWasmModules.add(module);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const module of initialWasmModules) {\n\t\t\t\t\t\tcompilation.errors.push(\n\t\t\t\t\t\t\tnew WebAssemblyInInitialChunkError(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tcompilation.requestShortener\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\trenderWebAssembly(module, moduleTemplate, dependencyTemplates) {\n\t\treturn moduleTemplate.render(module, dependencyTemplates, {});\n\t}\n}\n\nmodule.exports = WebAssemblyModulesPlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst t = require(\"@webassemblyjs/ast\");\nconst { decode } = require(\"@webassemblyjs/wasm-parser\");\nconst {\n\tmoduleContextFromModuleAST\n} = require(\"@webassemblyjs/helper-module-context\");\n\nconst { Tapable } = require(\"tapable\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n\nconst JS_COMPAT_TYPES = new Set([\"i32\", \"f32\", \"f64\"]);\n\n/**\n * @param {t.Signature} signature the func signature\n * @returns {null | string} the type incompatible with js types\n */\nconst getJsIncompatibleType = signature => {\n\tfor (const param of signature.params) {\n\t\tif (!JS_COMPAT_TYPES.has(param.valtype)) {\n\t\t\treturn `${param.valtype} as parameter`;\n\t\t}\n\t}\n\tfor (const type of signature.results) {\n\t\tif (!JS_COMPAT_TYPES.has(type)) return `${type} as result`;\n\t}\n\treturn null;\n};\n\n/**\n * TODO why are there two different Signature types?\n * @param {t.FuncSignature} signature the func signature\n * @returns {null | string} the type incompatible with js types\n */\nconst getJsIncompatibleTypeOfFuncSignature = signature => {\n\tfor (const param of signature.args) {\n\t\tif (!JS_COMPAT_TYPES.has(param)) {\n\t\t\treturn `${param} as parameter`;\n\t\t}\n\t}\n\tfor (const type of signature.result) {\n\t\tif (!JS_COMPAT_TYPES.has(type)) return `${type} as result`;\n\t}\n\treturn null;\n};\n\nconst decoderOpts = {\n\tignoreCodeSection: true,\n\tignoreDataSection: true,\n\n\t// this will avoid having to lookup with identifiers in the ModuleContext\n\tignoreCustomNameSection: true\n};\n\nclass WebAssemblyParser extends Tapable {\n\tconstructor(options) {\n\t\tsuper();\n\t\tthis.hooks = {};\n\t\tthis.options = options;\n\t}\n\n\tparse(binary, state) {\n\t\t// flag it as ESM\n\t\tstate.module.buildMeta.exportsType = \"namespace\";\n\n\t\t// parse it\n\t\tconst program = decode(binary, decoderOpts);\n\t\tconst module = program.body[0];\n\n\t\tconst moduleContext = moduleContextFromModuleAST(module);\n\n\t\t// extract imports and exports\n\t\tconst exports = (state.module.buildMeta.providedExports = []);\n\t\tconst jsIncompatibleExports = (state.module.buildMeta.jsIncompatibleExports = []);\n\n\t\tconst importedGlobals = [];\n\t\tt.traverse(module, {\n\t\t\tModuleExport({ node }) {\n\t\t\t\tconst descriptor = node.descr;\n\n\t\t\t\tif (descriptor.exportType === \"Func\") {\n\t\t\t\t\tconst funcidx = descriptor.id.value;\n\n\t\t\t\t\t/** @type {t.FuncSignature} */\n\t\t\t\t\tconst funcSignature = moduleContext.getFunction(funcidx);\n\n\t\t\t\t\tconst incompatibleType = getJsIncompatibleTypeOfFuncSignature(\n\t\t\t\t\t\tfuncSignature\n\t\t\t\t\t);\n\n\t\t\t\t\tif (incompatibleType) {\n\t\t\t\t\t\tjsIncompatibleExports[node.name] = incompatibleType;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\texports.push(node.name);\n\n\t\t\t\tif (node.descr && node.descr.exportType === \"Global\") {\n\t\t\t\t\tconst refNode = importedGlobals[node.descr.id.value];\n\t\t\t\t\tif (refNode) {\n\t\t\t\t\t\tconst dep = new WebAssemblyExportImportedDependency(\n\t\t\t\t\t\t\tnode.name,\n\t\t\t\t\t\t\trefNode.module,\n\t\t\t\t\t\t\trefNode.name,\n\t\t\t\t\t\t\trefNode.descr.valtype\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tstate.module.addDependency(dep);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tGlobal({ node }) {\n\t\t\t\tconst init = node.init[0];\n\n\t\t\t\tlet importNode = null;\n\n\t\t\t\tif (init.id === \"get_global\") {\n\t\t\t\t\tconst globalIdx = init.args[0].value;\n\n\t\t\t\t\tif (globalIdx < importedGlobals.length) {\n\t\t\t\t\t\timportNode = importedGlobals[globalIdx];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\timportedGlobals.push(importNode);\n\t\t\t},\n\n\t\t\tModuleImport({ node }) {\n\t\t\t\t/** @type {false | string} */\n\t\t\t\tlet onlyDirectImport = false;\n\n\t\t\t\tif (t.isMemory(node.descr) === true) {\n\t\t\t\t\tonlyDirectImport = \"Memory\";\n\t\t\t\t} else if (t.isTable(node.descr) === true) {\n\t\t\t\t\tonlyDirectImport = \"Table\";\n\t\t\t\t} else if (t.isFuncImportDescr(node.descr) === true) {\n\t\t\t\t\tconst incompatibleType = getJsIncompatibleType(node.descr.signature);\n\t\t\t\t\tif (incompatibleType) {\n\t\t\t\t\t\tonlyDirectImport = `Non-JS-compatible Func Sigurature (${incompatibleType})`;\n\t\t\t\t\t}\n\t\t\t\t} else if (t.isGlobalType(node.descr) === true) {\n\t\t\t\t\tconst type = node.descr.valtype;\n\t\t\t\t\tif (!JS_COMPAT_TYPES.has(type)) {\n\t\t\t\t\t\tonlyDirectImport = `Non-JS-compatible Global Type (${type})`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst dep = new WebAssemblyImportDependency(\n\t\t\t\t\tnode.module,\n\t\t\t\t\tnode.name,\n\t\t\t\t\tnode.descr,\n\t\t\t\t\tonlyDirectImport\n\t\t\t\t);\n\n\t\t\t\tstate.module.addDependency(dep);\n\n\t\t\t\tif (t.isGlobalType(node.descr)) {\n\t\t\t\t\timportedGlobals.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn state;\n\t}\n}\n\nmodule.exports = WebAssemblyParser;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {Object} UsedWasmDependency\n * @property {WebAssemblyImportDependency} dependency the dependency\n * @property {string} name the export name\n * @property {string} module the module name\n */\n\nconst MANGLED_MODULE = \"a\";\n\n/**\n * @param {Module} module the module\n * @param {boolean} mangle mangle module and export names\n * @returns {UsedWasmDependency[]} used dependencies and (mangled) name\n */\nconst getUsedDependencies = (module, mangle) => {\n\t/** @type {UsedWasmDependency[]} */\n\tconst array = [];\n\tlet importIndex = 0;\n\tfor (const dep of module.dependencies) {\n\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\tif (dep.description.type === \"GlobalType\" || dep.module === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst exportName = dep.name;\n\t\t\t// TODO add the following 3 lines when removing of ModuleExport is possible\n\t\t\t// const importedModule = dep.module;\n\t\t\t// const usedName = importedModule && importedModule.isUsed(exportName);\n\t\t\t// if (usedName !== false) {\n\t\t\tif (mangle) {\n\t\t\t\tarray.push({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tname: Template.numberToIdentifer(importIndex++),\n\t\t\t\t\tmodule: MANGLED_MODULE\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tarray.push({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tname: exportName,\n\t\t\t\t\tmodule: dep.request\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn array;\n};\n\nexports.getUsedDependencies = getUsedDependencies;\nexports.MANGLED_MODULE = MANGLED_MODULE;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WasmMainTemplatePlugin = require(\"../wasm/WasmMainTemplatePlugin\");\n\nclass FetchCompileWasmTemplatePlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"FetchCompileWasmTemplatePlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\t\t\t\tconst generateLoadBinaryCode = path =>\n\t\t\t\t\t`fetch(${mainTemplate.requireFn}.p + ${path})`;\n\n\t\t\t\tconst plugin = new WasmMainTemplatePlugin(\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgenerateLoadBinaryCode,\n\t\t\t\t\t\t\tsupportsStreaming: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.options\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tplugin.apply(mainTemplate);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = FetchCompileWasmTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"../ChunkTemplate\")} ChunkTemplate */\n\nconst getEntryInfo = chunk => {\n\treturn [chunk.entryModule].filter(Boolean).map(m =>\n\t\t[m.id].concat(\n\t\t\tArray.from(chunk.groupsIterable)[0]\n\t\t\t\t.chunks.filter(c => c !== chunk)\n\t\t\t\t.map(c => c.id)\n\t\t)\n\t);\n};\n\nclass JsonpChunkTemplatePlugin {\n\t/**\n\t * @param {ChunkTemplate} chunkTemplate the chunk template\n\t * @returns {void}\n\t */\n\tapply(chunkTemplate) {\n\t\tchunkTemplate.hooks.render.tap(\n\t\t\t\"JsonpChunkTemplatePlugin\",\n\t\t\t(modules, chunk) => {\n\t\t\t\tconst jsonpFunction = chunkTemplate.outputOptions.jsonpFunction;\n\t\t\t\tconst globalObject = chunkTemplate.outputOptions.globalObject;\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tconst prefetchChunks = chunk.getChildIdsByOrders().prefetch;\n\t\t\t\tsource.add(\n\t\t\t\t\t`(${globalObject}[${JSON.stringify(\n\t\t\t\t\t\tjsonpFunction\n\t\t\t\t\t)}] = ${globalObject}[${JSON.stringify(\n\t\t\t\t\t\tjsonpFunction\n\t\t\t\t\t)}] || []).push([${JSON.stringify(chunk.ids)},`\n\t\t\t\t);\n\t\t\t\tsource.add(modules);\n\t\t\t\tconst entries = getEntryInfo(chunk);\n\t\t\t\tif (entries.length > 0) {\n\t\t\t\t\tsource.add(`,${JSON.stringify(entries)}`);\n\t\t\t\t} else if (prefetchChunks && prefetchChunks.length) {\n\t\t\t\t\tsource.add(`,0`);\n\t\t\t\t}\n\n\t\t\t\tif (prefetchChunks && prefetchChunks.length) {\n\t\t\t\t\tsource.add(`,${JSON.stringify(prefetchChunks)}`);\n\t\t\t\t}\n\t\t\t\tsource.add(\"])\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tchunkTemplate.hooks.hash.tap(\"JsonpChunkTemplatePlugin\", hash => {\n\t\t\thash.update(\"JsonpChunkTemplatePlugin\");\n\t\t\thash.update(\"4\");\n\t\t\thash.update(`${chunkTemplate.outputOptions.jsonpFunction}`);\n\t\t\thash.update(`${chunkTemplate.outputOptions.globalObject}`);\n\t\t});\n\t\tchunkTemplate.hooks.hashForChunk.tap(\n\t\t\t\"JsonpChunkTemplatePlugin\",\n\t\t\t(hash, chunk) => {\n\t\t\t\thash.update(JSON.stringify(getEntryInfo(chunk)));\n\t\t\t\thash.update(JSON.stringify(chunk.getChildIdsByOrders().prefetch) || \"\");\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = JsonpChunkTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass JsonpExportMainTemplatePlugin {\n\t/**\n\t * @param {string} name jsonp function name\n\t */\n\tconstructor(name) {\n\t\tthis.name = name;\n\t}\n\n\tapply(compilation) {\n\t\tconst { mainTemplate, chunkTemplate } = compilation;\n\n\t\tconst onRenderWithEntry = (source, chunk, hash) => {\n\t\t\tconst name = mainTemplate.getAssetPath(this.name || \"\", {\n\t\t\t\thash,\n\t\t\t\tchunk\n\t\t\t});\n\t\t\treturn new ConcatSource(`${name}(`, source, \");\");\n\t\t};\n\n\t\tfor (const template of [mainTemplate, chunkTemplate]) {\n\t\t\ttemplate.hooks.renderWithEntry.tap(\n\t\t\t\t\"JsonpExportMainTemplatePlugin\",\n\t\t\t\tonRenderWithEntry\n\t\t\t);\n\t\t}\n\n\t\tmainTemplate.hooks.globalHashPaths.tap(\n\t\t\t\"JsonpExportMainTemplatePlugin\",\n\t\t\tpaths => {\n\t\t\t\tif (this.name) paths.push(this.name);\n\t\t\t\treturn paths;\n\t\t\t}\n\t\t);\n\n\t\tmainTemplate.hooks.hash.tap(\"JsonpExportMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"jsonp export\");\n\t\t\thash.update(`${this.name}`);\n\t\t});\n\t}\n}\n\nmodule.exports = JsonpExportMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass JsonpHotUpdateChunkTemplatePlugin {\n\tapply(hotUpdateChunkTemplate) {\n\t\thotUpdateChunkTemplate.hooks.render.tap(\n\t\t\t\"JsonpHotUpdateChunkTemplatePlugin\",\n\t\t\t(modulesSource, modules, removedModules, hash, id) => {\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tsource.add(\n\t\t\t\t\t`${\n\t\t\t\t\t\thotUpdateChunkTemplate.outputOptions.hotUpdateFunction\n\t\t\t\t\t}(${JSON.stringify(id)},`\n\t\t\t\t);\n\t\t\t\tsource.add(modulesSource);\n\t\t\t\tsource.add(\")\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\thotUpdateChunkTemplate.hooks.hash.tap(\n\t\t\t\"JsonpHotUpdateChunkTemplatePlugin\",\n\t\t\thash => {\n\t\t\t\thash.update(\"JsonpHotUpdateChunkTemplatePlugin\");\n\t\t\t\thash.update(\"3\");\n\t\t\t\thash.update(\n\t\t\t\t\t`${hotUpdateChunkTemplate.outputOptions.hotUpdateFunction}`\n\t\t\t\t);\n\t\t\t\thash.update(`${hotUpdateChunkTemplate.outputOptions.library}`);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = JsonpHotUpdateChunkTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals hotAddUpdateChunk parentHotUpdateCallback document XMLHttpRequest $require$ $hotChunkFilename$ $hotMainFilename$ $crossOriginLoading$ */\nmodule.exports = function() {\n\t// eslint-disable-next-line no-unused-vars\n\tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n\t\thotAddUpdateChunk(chunkId, moreModules);\n\t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n\t} //$semicolon\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadUpdateChunk(chunkId) {\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.charset = \"utf-8\";\n\t\tscript.src = $require$.p + $hotChunkFilename$;\n\t\tif ($crossOriginLoading$) script.crossOrigin = $crossOriginLoading$;\n\t\tdocument.head.appendChild(script);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadManifest(requestTimeout) {\n\t\trequestTimeout = requestTimeout || 10000;\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n\t\t\t\treturn reject(new Error(\"No browser support\"));\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\tvar requestPath = $require$.p + $hotMainFilename$;\n\t\t\t\trequest.open(\"GET\", requestPath, true);\n\t\t\t\trequest.timeout = requestTimeout;\n\t\t\t\trequest.send(null);\n\t\t\t} catch (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t\trequest.onreadystatechange = function() {\n\t\t\t\tif (request.readyState !== 4) return;\n\t\t\t\tif (request.status === 0) {\n\t\t\t\t\t// timeout\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n\t\t\t\t\t);\n\t\t\t\t} else if (request.status === 404) {\n\t\t\t\t\t// no update available\n\t\t\t\t\tresolve();\n\t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n\t\t\t\t\t// other failure\n\t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n\t\t\t\t} else {\n\t\t\t\t\t// success\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(update);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { SyncWaterfallHook } = require(\"tapable\");\nconst Template = require(\"../Template\");\n\nclass JsonpMainTemplatePlugin {\n\tapply(mainTemplate) {\n\t\tconst needChunkOnDemandLoadingCode = chunk => {\n\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst needChunkLoadingCode = chunk => {\n\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\tif (chunkGroup.chunks.length > 1) return true;\n\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst needEntryDeferringCode = chunk => {\n\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\tif (chunkGroup.chunks.length > 1) return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst needPrefetchingCode = chunk => {\n\t\t\tconst allPrefetchChunks = chunk.getChildIdsByOrdersMap(true).prefetch;\n\t\t\treturn allPrefetchChunks && Object.keys(allPrefetchChunks).length;\n\t\t};\n\n\t\t// TODO webpack 5, no adding to .hooks, use WeakMap and static methods\n\t\t[\"jsonpScript\", \"linkPreload\", \"linkPrefetch\"].forEach(hook => {\n\t\t\tif (!mainTemplate.hooks[hook]) {\n\t\t\t\tmainTemplate.hooks[hook] = new SyncWaterfallHook([\n\t\t\t\t\t\"source\",\n\t\t\t\t\t\"chunk\",\n\t\t\t\t\t\"hash\"\n\t\t\t\t]);\n\t\t\t}\n\t\t});\n\n\t\tconst getScriptSrcPath = (hash, chunk, chunkIdExpression) => {\n\t\t\tconst chunkFilename = mainTemplate.outputOptions.chunkFilename;\n\t\t\tconst chunkMaps = chunk.getChunkMaps();\n\t\t\treturn mainTemplate.getAssetPath(JSON.stringify(chunkFilename), {\n\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\thashWithLength: length =>\n\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\tchunk: {\n\t\t\t\t\tid: `\" + ${chunkIdExpression} + \"`,\n\t\t\t\t\thash: `\" + ${JSON.stringify(\n\t\t\t\t\t\tchunkMaps.hash\n\t\t\t\t\t)}[${chunkIdExpression}] + \"`,\n\t\t\t\t\thashWithLength(length) {\n\t\t\t\t\t\tconst shortChunkHashMap = Object.create(null);\n\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[chunkId].substr(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t)}[${chunkIdExpression}] + \"`;\n\t\t\t\t\t},\n\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t)}[${chunkIdExpression}]||${chunkIdExpression}) + \"`,\n\t\t\t\t\tcontentHash: {\n\t\t\t\t\t\tjavascript: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\tchunkMaps.contentHash.javascript\n\t\t\t\t\t\t)}[${chunkIdExpression}] + \"`\n\t\t\t\t\t},\n\t\t\t\t\tcontentHashWithLength: {\n\t\t\t\t\t\tjavascript: length => {\n\t\t\t\t\t\t\tconst shortContentHashMap = {};\n\t\t\t\t\t\t\tconst contentHash = chunkMaps.contentHash.javascript;\n\t\t\t\t\t\t\tfor (const chunkId of Object.keys(contentHash)) {\n\t\t\t\t\t\t\t\tif (typeof contentHash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\tshortContentHashMap[chunkId] = contentHash[chunkId].substr(\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\tshortContentHashMap\n\t\t\t\t\t\t\t)}[${chunkIdExpression}] + \"`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t});\n\t\t};\n\t\tmainTemplate.hooks.localVars.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst extraCode = [];\n\t\t\t\tif (needChunkLoadingCode(chunk)) {\n\t\t\t\t\textraCode.push(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// object to store loaded and loading chunks\",\n\t\t\t\t\t\t\"// undefined = chunk not loaded, null = chunk preloaded/prefetched\",\n\t\t\t\t\t\t\"// Promise = chunk loading, 0 = chunk loaded\",\n\t\t\t\t\t\t\"var installedChunks = {\",\n\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\tchunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"};\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tneedEntryDeferringCode(chunk)\n\t\t\t\t\t\t\t? needPrefetchingCode(chunk)\n\t\t\t\t\t\t\t\t? \"var deferredModules = [], deferredPrefetch = [];\"\n\t\t\t\t\t\t\t\t: \"var deferredModules = [];\"\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\textraCode.push(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// script path function\",\n\t\t\t\t\t\t\"function jsonpScriptSrc(chunkId) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`return ${mainTemplate.requireFn}.p + ${getScriptSrcPath(\n\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (extraCode.length === 0) return source;\n\t\t\t\treturn Template.asString([source, ...extraCode]);\n\t\t\t}\n\t\t);\n\n\t\tmainTemplate.hooks.jsonpScript.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(_, chunk, hash) => {\n\t\t\t\tconst crossOriginLoading =\n\t\t\t\t\tmainTemplate.outputOptions.crossOriginLoading;\n\t\t\t\tconst chunkLoadTimeout = mainTemplate.outputOptions.chunkLoadTimeout;\n\t\t\t\tconst jsonpScriptType = mainTemplate.outputOptions.jsonpScriptType;\n\n\t\t\t\treturn Template.asString([\n\t\t\t\t\t\"var script = document.createElement('script');\",\n\t\t\t\t\t\"var onScriptComplete;\",\n\t\t\t\t\tjsonpScriptType\n\t\t\t\t\t\t? `script.type = ${JSON.stringify(jsonpScriptType)};`\n\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\"script.charset = 'utf-8';\",\n\t\t\t\t\t`script.timeout = ${chunkLoadTimeout / 1000};`,\n\t\t\t\t\t`if (${mainTemplate.requireFn}.nc) {`,\n\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t`script.setAttribute(\"nonce\", ${mainTemplate.requireFn}.nc);`\n\t\t\t\t\t),\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"script.src = jsonpScriptSrc(chunkId);\",\n\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\"if (script.src.indexOf(window.location.origin + '/') !== 0) {\",\n\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t`script.crossOrigin = ${JSON.stringify(crossOriginLoading)};`\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t  ])\n\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\"// create error before stack unwound to get useful stacktrace later\",\n\t\t\t\t\t\"var error = new Error();\",\n\t\t\t\t\t\"onScriptComplete = function (event) {\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"// avoid mem leaks in IE.\",\n\t\t\t\t\t\t\"script.onerror = script.onload = null;\",\n\t\t\t\t\t\t\"clearTimeout(timeout);\",\n\t\t\t\t\t\t\"var chunk = installedChunks[chunkId];\",\n\t\t\t\t\t\t\"if(chunk !== 0) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"if(chunk) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\t\t\t\"error.message = 'Loading chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\t\t\t\"error.name = 'ChunkLoadError';\",\n\t\t\t\t\t\t\t\t\"error.type = errorType;\",\n\t\t\t\t\t\t\t\t\"error.request = realSrc;\",\n\t\t\t\t\t\t\t\t\"chunk[1](error);\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"installedChunks[chunkId] = undefined;\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"};\",\n\t\t\t\t\t\"var timeout = setTimeout(function(){\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"onScriptComplete({ type: 'timeout', target: script });\"\n\t\t\t\t\t]),\n\t\t\t\t\t`}, ${chunkLoadTimeout});`,\n\t\t\t\t\t\"script.onerror = script.onload = onScriptComplete;\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.linkPreload.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(_, chunk, hash) => {\n\t\t\t\tconst crossOriginLoading =\n\t\t\t\t\tmainTemplate.outputOptions.crossOriginLoading;\n\t\t\t\tconst jsonpScriptType = mainTemplate.outputOptions.jsonpScriptType;\n\n\t\t\t\treturn Template.asString([\n\t\t\t\t\t\"var link = document.createElement('link');\",\n\t\t\t\t\tjsonpScriptType\n\t\t\t\t\t\t? `link.type = ${JSON.stringify(jsonpScriptType)};`\n\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\"link.charset = 'utf-8';\",\n\t\t\t\t\t`if (${mainTemplate.requireFn}.nc) {`,\n\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t`link.setAttribute(\"nonce\", ${mainTemplate.requireFn}.nc);`\n\t\t\t\t\t),\n\t\t\t\t\t\"}\",\n\t\t\t\t\t'link.rel = \"preload\";',\n\t\t\t\t\t'link.as = \"script\";',\n\t\t\t\t\t\"link.href = jsonpScriptSrc(chunkId);\",\n\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\"if (link.href.indexOf(window.location.origin + '/') !== 0) {\",\n\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t`link.crossOrigin = ${JSON.stringify(crossOriginLoading)};`\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t  ])\n\t\t\t\t\t\t: \"\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.linkPrefetch.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(_, chunk, hash) => {\n\t\t\t\tconst crossOriginLoading =\n\t\t\t\t\tmainTemplate.outputOptions.crossOriginLoading;\n\n\t\t\t\treturn Template.asString([\n\t\t\t\t\t\"var link = document.createElement('link');\",\n\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t? `link.crossOrigin = ${JSON.stringify(crossOriginLoading)};`\n\t\t\t\t\t\t: \"\",\n\t\t\t\t\t`if (${mainTemplate.requireFn}.nc) {`,\n\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t`link.setAttribute(\"nonce\", ${mainTemplate.requireFn}.nc);`\n\t\t\t\t\t),\n\t\t\t\t\t\"}\",\n\t\t\t\t\t'link.rel = \"prefetch\";',\n\t\t\t\t\t'link.as = \"script\";',\n\t\t\t\t\t\"link.href = jsonpScriptSrc(chunkId);\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireEnsure.tap(\n\t\t\t\"JsonpMainTemplatePlugin load\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// JSONP chunk loading for javascript\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"var installedChunkData = installedChunks[chunkId];\",\n\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t'// a Promise means \"currently loading\".',\n\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\tTemplate.indent([\"promises.push(installedChunkData[2]);\"]),\n\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"// setup Promise in chunk cache\",\n\t\t\t\t\t\t\t\"var promise = new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"});\",\n\t\t\t\t\t\t\t\"promises.push(installedChunkData[2] = promise);\",\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\"// start chunk loading\",\n\t\t\t\t\t\t\tmainTemplate.hooks.jsonpScript.call(\"\", chunk, hash),\n\t\t\t\t\t\t\t\"document.head.appendChild(script);\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"}\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireEnsure.tap(\n\t\t\t{\n\t\t\t\tname: \"JsonpMainTemplatePlugin preload\",\n\t\t\t\tstage: 10\n\t\t\t},\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst chunkMap = chunk.getChildIdsByOrdersMap().preload;\n\t\t\t\tif (!chunkMap || Object.keys(chunkMap).length === 0) return source;\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// chunk preloadng for javascript\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t`var chunkPreloadMap = ${JSON.stringify(chunkMap, null, \"\\t\")};`,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"var chunkPreloadData = chunkPreloadMap[chunkId];\",\n\t\t\t\t\t\"if(chunkPreloadData) {\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"chunkPreloadData.forEach(function(chunkId) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"if(installedChunks[chunkId] === undefined) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"installedChunks[chunkId] = null;\",\n\t\t\t\t\t\t\t\tmainTemplate.hooks.linkPreload.call(\"\", chunk, hash),\n\t\t\t\t\t\t\t\t\"document.head.appendChild(link);\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"});\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"}\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (!needChunkOnDemandLoadingCode(chunk)) return source;\n\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// on error function for async loading\",\n\t\t\t\t\t`${mainTemplate.requireFn}.oe = function(err) { console.error(err); throw err; };`\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.bootstrap.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tif (needChunkLoadingCode(chunk)) {\n\t\t\t\t\tconst withDefer = needEntryDeferringCode(chunk);\n\t\t\t\t\tconst withPrefetch = needPrefetchingCode(chunk);\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// install a JSONP callback for chunk loading\",\n\t\t\t\t\t\t\"function webpackJsonpCallback(data) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"var chunkIds = data[0];\",\n\t\t\t\t\t\t\t\"var moreModules = data[1];\",\n\t\t\t\t\t\t\twithDefer ? \"var executeModules = data[2];\" : \"\",\n\t\t\t\t\t\t\twithPrefetch ? \"var prefetchChunks = data[3] || [];\" : \"\",\n\t\t\t\t\t\t\t'// add \"moreModules\" to the modules object,',\n\t\t\t\t\t\t\t'// then flag all \"chunkIds\" as loaded and fire callback',\n\t\t\t\t\t\t\t\"var moduleId, chunkId, i = 0, resolves = [];\",\n\t\t\t\t\t\t\t\"for(;i < chunkIds.length; i++) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"chunkId = chunkIds[i];\",\n\t\t\t\t\t\t\t\t\"if(installedChunks[chunkId]) {\",\n\t\t\t\t\t\t\t\tTemplate.indent(\"resolves.push(installedChunks[chunkId][0]);\"),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\"installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"for(moduleId in moreModules) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\",\n\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\tmainTemplate.renderAddModule(\n\t\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\"moduleId\",\n\t\t\t\t\t\t\t\t\t\t\"moreModules[moduleId]\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"if(parentJsonpFunction) parentJsonpFunction(data);\",\n\t\t\t\t\t\t\twithPrefetch\n\t\t\t\t\t\t\t\t? withDefer\n\t\t\t\t\t\t\t\t\t? \"deferredPrefetch.push.apply(deferredPrefetch, prefetchChunks);\"\n\t\t\t\t\t\t\t\t\t: Template.asString([\n\t\t\t\t\t\t\t\t\t\t\t\"// chunk prefetching for javascript\",\n\t\t\t\t\t\t\t\t\t\t\t\"prefetchChunks.forEach(function(chunkId) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunks[chunkId] === undefined) {\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunks[chunkId] = null;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tmainTemplate.hooks.linkPrefetch.call(\"\", chunk, hash),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"document.head.appendChild(link);\"\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\t\"while(resolves.length) {\",\n\t\t\t\t\t\t\tTemplate.indent(\"resolves.shift()();\"),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\twithDefer\n\t\t\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\"// add entry modules from loaded chunk to deferred list\",\n\t\t\t\t\t\t\t\t\t\t\"deferredModules.push.apply(deferredModules, executeModules || []);\",\n\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\"// run deferred modules when all chunks ready\",\n\t\t\t\t\t\t\t\t\t\t\"return checkDeferredModules();\"\n\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"};\",\n\t\t\t\t\t\twithDefer\n\t\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\t\"function checkDeferredModules() {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"var result;\",\n\t\t\t\t\t\t\t\t\t\t\"for(var i = 0; i < deferredModules.length; i++) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"var deferredModule = deferredModules[i];\",\n\t\t\t\t\t\t\t\t\t\t\t\"var fulfilled = true;\",\n\t\t\t\t\t\t\t\t\t\t\t\"for(var j = 1; j < deferredModule.length; j++) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"var depId = deferredModule[j];\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunks[depId] !== 0) fulfilled = false;\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\t\t\"if(fulfilled) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"deferredModules.splice(i--, 1);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"result = \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\tmainTemplate.requireFn +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"(\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\tmainTemplate.requireFn +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\".s = deferredModule[0]);\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\twithPrefetch\n\t\t\t\t\t\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(deferredModules.length === 0) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"// chunk prefetching for javascript\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"deferredPrefetch.forEach(function(chunkId) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunks[chunkId] === undefined) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunks[chunkId] = null;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmainTemplate.hooks.linkPrefetch.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thash\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"document.head.appendChild(link);\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"});\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"deferredPrefetch.length = 0;\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\t\t\t\t\"return result;\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.beforeStartup.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tif (needChunkLoadingCode(chunk)) {\n\t\t\t\t\tvar jsonpFunction = mainTemplate.outputOptions.jsonpFunction;\n\t\t\t\t\tvar globalObject = mainTemplate.outputOptions.globalObject;\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t`var jsonpArray = ${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\tjsonpFunction\n\t\t\t\t\t\t)}] = ${globalObject}[${JSON.stringify(jsonpFunction)}] || [];`,\n\t\t\t\t\t\t\"var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\",\n\t\t\t\t\t\t\"jsonpArray.push = webpackJsonpCallback;\",\n\t\t\t\t\t\t\"jsonpArray = jsonpArray.slice();\",\n\t\t\t\t\t\t\"for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\",\n\t\t\t\t\t\t\"var parentJsonpFunction = oldJsonpFunction;\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tsource\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.afterStartup.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst prefetchChunks = chunk.getChildIdsByOrders().prefetch;\n\t\t\t\tif (\n\t\t\t\t\tneedChunkLoadingCode(chunk) &&\n\t\t\t\t\tprefetchChunks &&\n\t\t\t\t\tprefetchChunks.length\n\t\t\t\t) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t`webpackJsonpCallback([[], {}, 0, ${JSON.stringify(\n\t\t\t\t\t\t\tprefetchChunks\n\t\t\t\t\t\t)}]);`\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.startup.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tif (needEntryDeferringCode(chunk)) {\n\t\t\t\t\tif (chunk.hasEntryModule()) {\n\t\t\t\t\t\tconst entries = [chunk.entryModule].filter(Boolean).map(m =>\n\t\t\t\t\t\t\t[m.id].concat(\n\t\t\t\t\t\t\t\tArray.from(chunk.groupsIterable)[0]\n\t\t\t\t\t\t\t\t\t.chunks.filter(c => c !== chunk)\n\t\t\t\t\t\t\t\t\t.map(c => c.id)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\t\"// add entry module to deferred list\",\n\t\t\t\t\t\t\t`deferredModules.push(${entries\n\t\t\t\t\t\t\t\t.map(e => JSON.stringify(e))\n\t\t\t\t\t\t\t\t.join(\", \")});`,\n\t\t\t\t\t\t\t\"// run deferred modules when ready\",\n\t\t\t\t\t\t\t\"return checkDeferredModules();\"\n\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\t\"// run deferred modules from other chunks\",\n\t\t\t\t\t\t\t\"checkDeferredModules();\"\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hotBootstrap.tap(\n\t\t\t\"JsonpMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst globalObject = mainTemplate.outputOptions.globalObject;\n\t\t\t\tconst hotUpdateChunkFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateChunkFilename;\n\t\t\t\tconst hotUpdateMainFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateMainFilename;\n\t\t\t\tconst crossOriginLoading =\n\t\t\t\t\tmainTemplate.outputOptions.crossOriginLoading;\n\t\t\t\tconst hotUpdateFunction = mainTemplate.outputOptions.hotUpdateFunction;\n\t\t\t\tconst currentHotUpdateChunkFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateChunkFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\tid: '\" + chunkId + \"'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst currentHotUpdateMainFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateMainFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst runtimeSource = Template.getFunctionContent(\n\t\t\t\t\trequire(\"./JsonpMainTemplate.runtime\")\n\t\t\t\t)\n\t\t\t\t\t.replace(/\\/\\/\\$semicolon/g, \";\")\n\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t.replace(\n\t\t\t\t\t\t/\\$crossOriginLoading\\$/g,\n\t\t\t\t\t\tcrossOriginLoading ? JSON.stringify(crossOriginLoading) : \"null\"\n\t\t\t\t\t)\n\t\t\t\t\t.replace(/\\$hotMainFilename\\$/g, currentHotUpdateMainFilename)\n\t\t\t\t\t.replace(/\\$hotChunkFilename\\$/g, currentHotUpdateChunkFilename)\n\t\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash));\n\t\t\t\treturn `${source}\nfunction hotDisposeChunk(chunkId) {\n\tdelete installedChunks[chunkId];\n}\nvar parentHotUpdateCallback = ${globalObject}[${JSON.stringify(\n\t\t\t\t\thotUpdateFunction\n\t\t\t\t)}];\n${globalObject}[${JSON.stringify(hotUpdateFunction)}] = ${runtimeSource}`;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hash.tap(\"JsonpMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"jsonp\");\n\t\t\thash.update(\"6\");\n\t\t});\n\t}\n}\nmodule.exports = JsonpMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst JsonpMainTemplatePlugin = require(\"./JsonpMainTemplatePlugin\");\nconst JsonpChunkTemplatePlugin = require(\"./JsonpChunkTemplatePlugin\");\nconst JsonpHotUpdateChunkTemplatePlugin = require(\"./JsonpHotUpdateChunkTemplatePlugin\");\n\nclass JsonpTemplatePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"JsonpTemplatePlugin\", compilation => {\n\t\t\tnew JsonpMainTemplatePlugin().apply(compilation.mainTemplate);\n\t\t\tnew JsonpChunkTemplatePlugin().apply(compilation.chunkTemplate);\n\t\t\tnew JsonpHotUpdateChunkTemplatePlugin().apply(\n\t\t\t\tcompilation.hotUpdateChunkTemplate\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = JsonpTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Compiler = require(\"./Compiler\");\nconst MultiCompiler = require(\"./MultiCompiler\");\nconst NodeEnvironmentPlugin = require(\"./node/NodeEnvironmentPlugin\");\nconst WebpackOptionsApply = require(\"./WebpackOptionsApply\");\nconst WebpackOptionsDefaulter = require(\"./WebpackOptionsDefaulter\");\nconst validateSchema = require(\"./validateSchema\");\nconst WebpackOptionsValidationError = require(\"./WebpackOptionsValidationError\");\nconst webpackOptionsSchema = require(\"../schemas/WebpackOptions.json\");\nconst RemovedPluginError = require(\"./RemovedPluginError\");\nconst version = require(\"../package.json\").version;\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptions} WebpackOptions */\n\n/**\n * @param {WebpackOptions} options options object\n * @param {function(Error=, Stats=): void=} callback callback\n * @returns {Compiler | MultiCompiler} the compiler object\n */\nconst webpack = (options, callback) => {\n\tconst webpackOptionsValidationErrors = validateSchema(\n\t\twebpackOptionsSchema,\n\t\toptions\n\t);\n\tif (webpackOptionsValidationErrors.length) {\n\t\tthrow new WebpackOptionsValidationError(webpackOptionsValidationErrors);\n\t}\n\tlet compiler;\n\tif (Array.isArray(options)) {\n\t\tcompiler = new MultiCompiler(\n\t\t\tArray.from(options).map(options => webpack(options))\n\t\t);\n\t} else if (typeof options === \"object\") {\n\t\toptions = new WebpackOptionsDefaulter().process(options);\n\n\t\tcompiler = new Compiler(options.context);\n\t\tcompiler.options = options;\n\t\tnew NodeEnvironmentPlugin({\n\t\t\tinfrastructureLogging: options.infrastructureLogging\n\t\t}).apply(compiler);\n\t\tif (options.plugins && Array.isArray(options.plugins)) {\n\t\t\tfor (const plugin of options.plugins) {\n\t\t\t\tif (typeof plugin === \"function\") {\n\t\t\t\t\tplugin.call(compiler, compiler);\n\t\t\t\t} else {\n\t\t\t\t\tplugin.apply(compiler);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcompiler.hooks.environment.call();\n\t\tcompiler.hooks.afterEnvironment.call();\n\t\tcompiler.options = new WebpackOptionsApply().process(options, compiler);\n\t} else {\n\t\tthrow new Error(\"Invalid argument: options\");\n\t}\n\tif (callback) {\n\t\tif (typeof callback !== \"function\") {\n\t\t\tthrow new Error(\"Invalid argument: callback\");\n\t\t}\n\t\tif (\n\t\t\toptions.watch === true ||\n\t\t\t(Array.isArray(options) && options.some(o => o.watch))\n\t\t) {\n\t\t\tconst watchOptions = Array.isArray(options)\n\t\t\t\t? options.map(o => o.watchOptions || {})\n\t\t\t\t: options.watchOptions || {};\n\t\t\treturn compiler.watch(watchOptions, callback);\n\t\t}\n\t\tcompiler.run(callback);\n\t}\n\treturn compiler;\n};\n\nexports = module.exports = webpack;\nexports.version = version;\n\nwebpack.WebpackOptionsDefaulter = WebpackOptionsDefaulter;\nwebpack.WebpackOptionsApply = WebpackOptionsApply;\nwebpack.Compiler = Compiler;\nwebpack.MultiCompiler = MultiCompiler;\nwebpack.NodeEnvironmentPlugin = NodeEnvironmentPlugin;\n// @ts-ignore Global @this directive is not supported\nwebpack.validate = validateSchema.bind(this, webpackOptionsSchema);\nwebpack.validateSchema = validateSchema;\nwebpack.WebpackOptionsValidationError = WebpackOptionsValidationError;\n\nconst exportPlugins = (obj, mappings) => {\n\tfor (const name of Object.keys(mappings)) {\n\t\tObject.defineProperty(obj, name, {\n\t\t\tconfigurable: false,\n\t\t\tenumerable: true,\n\t\t\tget: mappings[name]\n\t\t});\n\t}\n};\n\nexportPlugins(exports, {\n\tAutomaticPrefetchPlugin: () => require(\"./AutomaticPrefetchPlugin\"),\n\tBannerPlugin: () => require(\"./BannerPlugin\"),\n\tCachePlugin: () => require(\"./CachePlugin\"),\n\tContextExclusionPlugin: () => require(\"./ContextExclusionPlugin\"),\n\tContextReplacementPlugin: () => require(\"./ContextReplacementPlugin\"),\n\tDefinePlugin: () => require(\"./DefinePlugin\"),\n\tDependency: () => require(\"./Dependency\"),\n\tDllPlugin: () => require(\"./DllPlugin\"),\n\tDllReferencePlugin: () => require(\"./DllReferencePlugin\"),\n\tEnvironmentPlugin: () => require(\"./EnvironmentPlugin\"),\n\tEvalDevToolModulePlugin: () => require(\"./EvalDevToolModulePlugin\"),\n\tEvalSourceMapDevToolPlugin: () => require(\"./EvalSourceMapDevToolPlugin\"),\n\tExtendedAPIPlugin: () => require(\"./ExtendedAPIPlugin\"),\n\tExternalsPlugin: () => require(\"./ExternalsPlugin\"),\n\tHashedModuleIdsPlugin: () => require(\"./HashedModuleIdsPlugin\"),\n\tHotModuleReplacementPlugin: () => require(\"./HotModuleReplacementPlugin\"),\n\tIgnorePlugin: () => require(\"./IgnorePlugin\"),\n\tLibraryTemplatePlugin: () => require(\"./LibraryTemplatePlugin\"),\n\tLoaderOptionsPlugin: () => require(\"./LoaderOptionsPlugin\"),\n\tLoaderTargetPlugin: () => require(\"./LoaderTargetPlugin\"),\n\tMemoryOutputFileSystem: () => require(\"./MemoryOutputFileSystem\"),\n\tModule: () => require(\"./Module\"),\n\tModuleFilenameHelpers: () => require(\"./ModuleFilenameHelpers\"),\n\tNamedChunksPlugin: () => require(\"./NamedChunksPlugin\"),\n\tNamedModulesPlugin: () => require(\"./NamedModulesPlugin\"),\n\tNoEmitOnErrorsPlugin: () => require(\"./NoEmitOnErrorsPlugin\"),\n\tNormalModuleReplacementPlugin: () =>\n\t\trequire(\"./NormalModuleReplacementPlugin\"),\n\tPrefetchPlugin: () => require(\"./PrefetchPlugin\"),\n\tProgressPlugin: () => require(\"./ProgressPlugin\"),\n\tProvidePlugin: () => require(\"./ProvidePlugin\"),\n\tSetVarMainTemplatePlugin: () => require(\"./SetVarMainTemplatePlugin\"),\n\tSingleEntryPlugin: () => require(\"./SingleEntryPlugin\"),\n\tSourceMapDevToolPlugin: () => require(\"./SourceMapDevToolPlugin\"),\n\tStats: () => require(\"./Stats\"),\n\tTemplate: () => require(\"./Template\"),\n\tUmdMainTemplatePlugin: () => require(\"./UmdMainTemplatePlugin\"),\n\tWatchIgnorePlugin: () => require(\"./WatchIgnorePlugin\")\n});\nexportPlugins((exports.dependencies = {}), {\n\tDependencyReference: () => require(\"./dependencies/DependencyReference\")\n});\nexportPlugins((exports.optimize = {}), {\n\tAggressiveMergingPlugin: () => require(\"./optimize/AggressiveMergingPlugin\"),\n\tAggressiveSplittingPlugin: () =>\n\t\trequire(\"./optimize/AggressiveSplittingPlugin\"),\n\tChunkModuleIdRangePlugin: () =>\n\t\trequire(\"./optimize/ChunkModuleIdRangePlugin\"),\n\tLimitChunkCountPlugin: () => require(\"./optimize/LimitChunkCountPlugin\"),\n\tMinChunkSizePlugin: () => require(\"./optimize/MinChunkSizePlugin\"),\n\tModuleConcatenationPlugin: () =>\n\t\trequire(\"./optimize/ModuleConcatenationPlugin\"),\n\tOccurrenceOrderPlugin: () => require(\"./optimize/OccurrenceOrderPlugin\"),\n\tOccurrenceModuleOrderPlugin: () =>\n\t\trequire(\"./optimize/OccurrenceModuleOrderPlugin\"),\n\tOccurrenceChunkOrderPlugin: () =>\n\t\trequire(\"./optimize/OccurrenceChunkOrderPlugin\"),\n\tRuntimeChunkPlugin: () => require(\"./optimize/RuntimeChunkPlugin\"),\n\tSideEffectsFlagPlugin: () => require(\"./optimize/SideEffectsFlagPlugin\"),\n\tSplitChunksPlugin: () => require(\"./optimize/SplitChunksPlugin\")\n});\nexportPlugins((exports.web = {}), {\n\tFetchCompileWasmTemplatePlugin: () =>\n\t\trequire(\"./web/FetchCompileWasmTemplatePlugin\"),\n\tJsonpTemplatePlugin: () => require(\"./web/JsonpTemplatePlugin\")\n});\nexportPlugins((exports.webworker = {}), {\n\tWebWorkerTemplatePlugin: () => require(\"./webworker/WebWorkerTemplatePlugin\")\n});\nexportPlugins((exports.node = {}), {\n\tNodeTemplatePlugin: () => require(\"./node/NodeTemplatePlugin\"),\n\tReadFileCompileWasmTemplatePlugin: () =>\n\t\trequire(\"./node/ReadFileCompileWasmTemplatePlugin\")\n});\nexportPlugins((exports.debug = {}), {\n\tProfilingPlugin: () => require(\"./debug/ProfilingPlugin\")\n});\nexportPlugins((exports.util = {}), {\n\tcreateHash: () => require(\"./util/createHash\")\n});\n\nconst defineMissingPluginError = (namespace, pluginName, errorMessage) => {\n\tObject.defineProperty(namespace, pluginName, {\n\t\tconfigurable: false,\n\t\tenumerable: true,\n\t\tget() {\n\t\t\tthrow new RemovedPluginError(errorMessage);\n\t\t}\n\t});\n};\n\n// TODO remove in webpack 5\ndefineMissingPluginError(\n\texports.optimize,\n\t\"UglifyJsPlugin\",\n\t\"webpack.optimize.UglifyJsPlugin has been removed, please use config.optimization.minimize instead.\"\n);\n\n// TODO remove in webpack 5\ndefineMissingPluginError(\n\texports.optimize,\n\t\"CommonsChunkPlugin\",\n\t\"webpack.optimize.CommonsChunkPlugin has been removed, please use config.optimization.splitChunks instead.\"\n);\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass WebWorkerChunkTemplatePlugin {\n\tapply(chunkTemplate) {\n\t\tchunkTemplate.hooks.render.tap(\n\t\t\t\"WebWorkerChunkTemplatePlugin\",\n\t\t\t(modules, chunk) => {\n\t\t\t\tconst chunkCallbackName = chunkTemplate.outputOptions.chunkCallbackName;\n\t\t\t\tconst globalObject = chunkTemplate.outputOptions.globalObject;\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tsource.add(\n\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\tchunkCallbackName\n\t\t\t\t\t)}](${JSON.stringify(chunk.ids)},`\n\t\t\t\t);\n\t\t\t\tsource.add(modules);\n\t\t\t\tsource.add(\")\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tchunkTemplate.hooks.hash.tap(\"WebWorkerChunkTemplatePlugin\", hash => {\n\t\t\thash.update(\"webworker\");\n\t\t\thash.update(\"3\");\n\t\t\thash.update(`${chunkTemplate.outputOptions.chunkCallbackName}`);\n\t\t\thash.update(`${chunkTemplate.outputOptions.globalObject}`);\n\t\t});\n\t}\n}\nmodule.exports = WebWorkerChunkTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass WebWorkerHotUpdateChunkTemplatePlugin {\n\tapply(hotUpdateChunkTemplate) {\n\t\thotUpdateChunkTemplate.hooks.render.tap(\n\t\t\t\"WebWorkerHotUpdateChunkTemplatePlugin\",\n\t\t\t(modulesSource, modules, removedModules, hash, id) => {\n\t\t\t\tconst hotUpdateFunction =\n\t\t\t\t\thotUpdateChunkTemplate.outputOptions.hotUpdateFunction;\n\t\t\t\tconst globalObject = hotUpdateChunkTemplate.outputOptions.globalObject;\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tsource.add(\n\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\thotUpdateFunction\n\t\t\t\t\t)}](${JSON.stringify(id)},`\n\t\t\t\t);\n\t\t\t\tsource.add(modulesSource);\n\t\t\t\tsource.add(\")\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\thotUpdateChunkTemplate.hooks.hash.tap(\n\t\t\t\"WebWorkerHotUpdateChunkTemplatePlugin\",\n\t\t\thash => {\n\t\t\t\thash.update(\"WebWorkerHotUpdateChunkTemplatePlugin\");\n\t\t\t\thash.update(\"3\");\n\t\t\t\thash.update(\n\t\t\t\t\thotUpdateChunkTemplate.outputOptions.hotUpdateFunction + \"\"\n\t\t\t\t);\n\t\t\t\thash.update(hotUpdateChunkTemplate.outputOptions.globalObject + \"\");\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = WebWorkerHotUpdateChunkTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals installedChunks hotAddUpdateChunk parentHotUpdateCallback importScripts XMLHttpRequest $require$ $hotChunkFilename$ $hotMainFilename$ */\nmodule.exports = function() {\n\t// eslint-disable-next-line no-unused-vars\n\tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n\t\thotAddUpdateChunk(chunkId, moreModules);\n\t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n\t} //$semicolon\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadUpdateChunk(chunkId) {\n\t\timportScripts($require$.p + $hotChunkFilename$);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadManifest(requestTimeout) {\n\t\trequestTimeout = requestTimeout || 10000;\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n\t\t\t\treturn reject(new Error(\"No browser support\"));\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\tvar requestPath = $require$.p + $hotMainFilename$;\n\t\t\t\trequest.open(\"GET\", requestPath, true);\n\t\t\t\trequest.timeout = requestTimeout;\n\t\t\t\trequest.send(null);\n\t\t\t} catch (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t\trequest.onreadystatechange = function() {\n\t\t\t\tif (request.readyState !== 4) return;\n\t\t\t\tif (request.status === 0) {\n\t\t\t\t\t// timeout\n\t\t\t\t\treject(\n\t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n\t\t\t\t\t);\n\t\t\t\t} else if (request.status === 404) {\n\t\t\t\t\t// no update available\n\t\t\t\t\tresolve();\n\t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n\t\t\t\t\t// other failure\n\t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n\t\t\t\t} else {\n\t\t\t\t\t// success\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(update);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n\t//eslint-disable-next-line no-unused-vars\n\tfunction hotDisposeChunk(chunkId) {\n\t\tdelete installedChunks[chunkId];\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\nclass WebWorkerMainTemplatePlugin {\n\tapply(mainTemplate) {\n\t\tconst needChunkOnDemandLoadingCode = chunk => {\n\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tmainTemplate.hooks.localVars.tap(\n\t\t\t\"WebWorkerMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"// object to store loaded chunks\",\n\t\t\t\t\t\t'// \"1\" means \"already loaded\"',\n\t\t\t\t\t\t\"var installedChunks = {\",\n\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\tchunk.ids.map(id => `${JSON.stringify(id)}: 1`).join(\",\\n\")\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireEnsure.tap(\n\t\t\t\"WebWorkerMainTemplatePlugin\",\n\t\t\t(_, chunk, hash) => {\n\t\t\t\tconst chunkFilename = mainTemplate.outputOptions.chunkFilename;\n\t\t\t\tconst chunkMaps = chunk.getChunkMaps();\n\t\t\t\treturn Template.asString([\n\t\t\t\t\t\"promises.push(Promise.resolve().then(function() {\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t'// \"1\" is the signal for \"already loaded\"',\n\t\t\t\t\t\t\"if(!installedChunks[chunkId]) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"importScripts(\" +\n\t\t\t\t\t\t\t\t\"__webpack_require__.p + \" +\n\t\t\t\t\t\t\t\tmainTemplate.getAssetPath(JSON.stringify(chunkFilename), {\n\t\t\t\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(\n\t\t\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t\t\t\t)} + \"`,\n\t\t\t\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\t\t\t\tid: '\" + chunkId + \"',\n\t\t\t\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(chunkMaps.hash)}[chunkId] + \"`,\n\t\t\t\t\t\t\t\t\t\thashWithLength(length) {\n\t\t\t\t\t\t\t\t\t\t\tconst shortChunkHashMap = Object.create(null);\n\t\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(chunkMaps.hash)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (typeof chunkMaps.hash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[chunkId] = chunkMaps.hash[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tcontentHash: {\n\t\t\t\t\t\t\t\t\t\t\tjavascript: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tchunkMaps.contentHash.javascript\n\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tcontentHashWithLength: {\n\t\t\t\t\t\t\t\t\t\t\tjavascript: length => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst shortContentHashMap = {};\n\t\t\t\t\t\t\t\t\t\t\t\tconst contentHash = chunkMaps.contentHash.javascript;\n\t\t\t\t\t\t\t\t\t\t\t\tfor (const chunkId of Object.keys(contentHash)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (typeof contentHash[chunkId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap[chunkId] = contentHash[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchunkId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\tshortContentHashMap\n\t\t\t\t\t\t\t\t\t\t\t\t)}[chunkId] + \"`;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tname: `\" + (${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\tchunkMaps.name\n\t\t\t\t\t\t\t\t\t\t)}[chunkId]||chunkId) + \"`\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t}) +\n\t\t\t\t\t\t\t\t\");\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"}));\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.bootstrap.tap(\n\t\t\t\"WebWorkerMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tif (needChunkOnDemandLoadingCode(chunk)) {\n\t\t\t\t\tconst chunkCallbackName =\n\t\t\t\t\t\tmainTemplate.outputOptions.chunkCallbackName;\n\t\t\t\t\tconst globalObject = mainTemplate.outputOptions.globalObject;\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\tchunkCallbackName\n\t\t\t\t\t\t)}] = function webpackChunkCallback(chunkIds, moreModules) {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\tmainTemplate.renderAddModule(\n\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\"moduleId\",\n\t\t\t\t\t\t\t\t\t\"moreModules[moduleId]\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"while(chunkIds.length)\",\n\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkIds.pop()] = 1;\")\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hotBootstrap.tap(\n\t\t\t\"WebWorkerMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst hotUpdateChunkFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateChunkFilename;\n\t\t\t\tconst hotUpdateMainFilename =\n\t\t\t\t\tmainTemplate.outputOptions.hotUpdateMainFilename;\n\t\t\t\tconst hotUpdateFunction = mainTemplate.outputOptions.hotUpdateFunction;\n\t\t\t\tconst globalObject = mainTemplate.outputOptions.globalObject;\n\t\t\t\tconst currentHotUpdateChunkFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateChunkFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\tchunk: {\n\t\t\t\t\t\t\tid: '\" + chunkId + \"'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst currentHotUpdateMainFilename = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(hotUpdateMainFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\treturn (\n\t\t\t\t\tsource +\n\t\t\t\t\t\"\\n\" +\n\t\t\t\t\t`var parentHotUpdateCallback = ${globalObject}[${JSON.stringify(\n\t\t\t\t\t\thotUpdateFunction\n\t\t\t\t\t)}];\\n` +\n\t\t\t\t\t`${globalObject}[${JSON.stringify(hotUpdateFunction)}] = ` +\n\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\trequire(\"./WebWorkerMainTemplate.runtime\")\n\t\t\t\t\t)\n\t\t\t\t\t\t.replace(/\\/\\/\\$semicolon/g, \";\")\n\t\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t\t.replace(/\\$hotMainFilename\\$/g, currentHotUpdateMainFilename)\n\t\t\t\t\t\t.replace(/\\$hotChunkFilename\\$/g, currentHotUpdateChunkFilename)\n\t\t\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash))\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hash.tap(\"WebWorkerMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"webworker\");\n\t\t\thash.update(\"4\");\n\t\t});\n\t}\n}\nmodule.exports = WebWorkerMainTemplatePlugin;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebWorkerMainTemplatePlugin = require(\"./WebWorkerMainTemplatePlugin\");\nconst WebWorkerChunkTemplatePlugin = require(\"./WebWorkerChunkTemplatePlugin\");\nconst WebWorkerHotUpdateChunkTemplatePlugin = require(\"./WebWorkerHotUpdateChunkTemplatePlugin\");\n\nclass WebWorkerTemplatePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"WebWorkerTemplatePlugin\",\n\t\t\tcompilation => {\n\t\t\t\tnew WebWorkerMainTemplatePlugin().apply(compilation.mainTemplate);\n\t\t\t\tnew WebWorkerChunkTemplatePlugin().apply(compilation.chunkTemplate);\n\t\t\t\tnew WebWorkerHotUpdateChunkTemplatePlugin().apply(\n\t\t\t\t\tcompilation.hotUpdateChunkTemplate\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = WebWorkerTemplatePlugin;\n","\"use strict\";\n\nconst errorMessage = (schema, data, message) => ({\n\tkeyword: \"absolutePath\",\n\tparams: { absolutePath: data },\n\tmessage: message,\n\tparentSchema: schema\n});\n\nconst getErrorFor = (shouldBeAbsolute, data, schema) => {\n\tconst message = shouldBeAbsolute\n\t\t? `The provided value ${JSON.stringify(data)} is not an absolute path!`\n\t\t: `A relative path is expected. However, the provided value ${JSON.stringify(\n\t\t\t\tdata\n\t\t  )} is an absolute path!`;\n\n\treturn errorMessage(schema, data, message);\n};\n\nmodule.exports = ajv =>\n\tajv.addKeyword(\"absolutePath\", {\n\t\terrors: true,\n\t\ttype: \"string\",\n\t\tcompile(expected, schema) {\n\t\t\tfunction callback(data) {\n\t\t\t\tlet passes = true;\n\t\t\t\tconst isExclamationMarkPresent = data.includes(\"!\");\n\t\t\t\tconst isCorrectAbsoluteOrRelativePath =\n\t\t\t\t\texpected === /^(?:[A-Za-z]:\\\\|\\/)/.test(data);\n\n\t\t\t\tif (isExclamationMarkPresent) {\n\t\t\t\t\tcallback.errors = [\n\t\t\t\t\t\terrorMessage(\n\t\t\t\t\t\t\tschema,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t`The provided value ${JSON.stringify(\n\t\t\t\t\t\t\t\tdata\n\t\t\t\t\t\t\t)} contains exclamation mark (!) which is not allowed because it's reserved for loader syntax.`\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t\t\tpasses = false;\n\t\t\t\t}\n\n\t\t\t\tif (!isCorrectAbsoluteOrRelativePath) {\n\t\t\t\t\tcallback.errors = [getErrorFor(expected, data, schema)];\n\t\t\t\t\tpasses = false;\n\t\t\t\t}\n\n\t\t\t\treturn passes;\n\t\t\t}\n\t\t\tcallback.errors = [];\n\n\t\t\treturn callback;\n\t\t}\n\t});\n","// import { useAmp } from 'next/amp'\n// import AmpPage from '../components/amp'\n// import NonAmpPage from '../components/non-amp'\n\n// export const config = { amp: 'hybrid' }\n\n// export default () => (\n//   useAmp() ? <AmpPage /> : <NonAmpPage />\n// )\nconst { createServer } = require('http');\nconst { parse } = require('url');\nconst next = require('next');\n\nconst dev = process.env.NODE_ENV !== 'production';\nconst app = next({ dev });\nconst handle = app.getRequestHandler();\n\napp.prepare().then(() => {\n  createServer((req, res) => {\n    // Be sure to pass `true` as the second argument to `url.parse`.\n    // This tells it to parse the query portion of the URL.\n    const parsedUrl = parse(req.url, true);\n    const { pathname, query } = parsedUrl;\n\n    if (pathname === '/a') {\n      app.render(req, res, '/b', query);\n    } else if (pathname === '/b') {\n      app.render(req, res, '/a', query);\n    } else {\n      handle(req, res, parsedUrl);\n    }\n  }).listen(3000, err => {\n    if (err) throw err;\n    console.log('> Ready on http://localhost:3000');\n  });\n});","module.exports = require(\"@webassemblyjs/ast\");","module.exports = require(\"@webassemblyjs/helper-module-context\");","module.exports = require(\"@webassemblyjs/wasm-edit\");","module.exports = require(\"@webassemblyjs/wasm-parser\");","module.exports = require(\"acorn\");","module.exports = require(\"ajv\");","module.exports = require(\"ajv-keywords\");","module.exports = require(\"amphtml-validator\");","module.exports = require(\"ansi-colors\");","module.exports = require(\"async-sema\");","module.exports = require(\"autodll-webpack-plugin\");","module.exports = require(\"chalk\");","module.exports = require(\"chrome-trace-event\");","module.exports = require(\"crypto\");","module.exports = require(\"enhanced-resolve\");","module.exports = require(\"enhanced-resolve/lib/AliasPlugin\");","module.exports = require(\"enhanced-resolve/lib/CachedInputFileSystem\");","module.exports = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");","module.exports = require(\"eslint-scope\");","module.exports = require(\"events\");","module.exports = require(\"fork-ts-checker-webpack-plugin\");","module.exports = require(\"fork-ts-checker-webpack-plugin/lib/formatter/codeframeFormatter\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"inspector\");","module.exports = require(\"json-parse-better-errors\");","module.exports = require(\"launch-editor\");","module.exports = require(\"loader-runner\");","module.exports = require(\"memory-fs\");","module.exports = require(\"micromatch\");","module.exports = require(\"mime\");","module.exports = require(\"mkdirp\");","module.exports = require(\"module\");","module.exports = require(\"neo-async\");","module.exports = require(\"next-server\");","module.exports = require(\"next-server/constants\");","module.exports = require(\"next-server/dist/lib/router/utils\");","module.exports = require(\"next-server/dist/server/next-server\");","module.exports = require(\"next-server/dist/server/normalize-page-path\");","module.exports = require(\"next-server/dist/server/require\");","module.exports = require(\"next-server/dist/server/router\");","module.exports = require(\"next-server/head\");","module.exports = require(\"node-libs-browser\");","module.exports = require(\"node-libs-browser/mock/empty\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"range-parser\");","module.exports = require(\"react\");","module.exports = require(\"schema-utils\");","module.exports = require(\"serialize-javascript\");","module.exports = require(\"source-list-map\");","module.exports = require(\"source-map\");","module.exports = require(\"strip-ansi\");","module.exports = require(\"tapable\");","module.exports = require(\"terser\");","module.exports = require(\"terser-webpack-plugin\");","module.exports = require(\"typescript\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"uuid/v4\");","module.exports = require(\"vm\");","module.exports = require(\"watchpack\");","module.exports = require(\"worker-farm\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;ACDA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AACA;;;;;;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;;AAsuzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5BA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AACA;AACA;AACA,oBAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChzviBAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrrrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnzxvrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClrhgtjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrjpsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACltvrpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChpvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvltnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClrhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChvotZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChpxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChjlbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACntFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtrjgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClx4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACppFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvrOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACztjpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChjnllhTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACljijYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnzbxxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnjtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrlzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjvjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACplHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvhnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrltrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjl9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrlGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjpeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzxxz6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpxpxjrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACppncA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvrpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACttmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}